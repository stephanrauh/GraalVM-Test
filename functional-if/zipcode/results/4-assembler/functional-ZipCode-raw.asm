Compiled method (c2)      52    1             java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x0000000110dc7e90,0x0000000110dc8430] = 1440
 relocation     [0x0000000110dc8008,0x0000000110dc8018] = 16
 main code      [0x0000000110dc8020,0x0000000110dc81e0] = 448
 stub code      [0x0000000110dc81e0,0x0000000110dc81f8] = 24
 metadata       [0x0000000110dc81f8,0x0000000110dc8200] = 8
 scopes data    [0x0000000110dc8200,0x0000000110dc8288] = 136
 scopes pcs     [0x0000000110dc8288,0x0000000110dc8418] = 400
 dependencies   [0x0000000110dc8418,0x0000000110dc8420] = 8
 nul chk table  [0x0000000110dc8420,0x0000000110dc8430] = 16
Loaded disassembler from /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib/server/hsdis-amd64.dylib
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x0000000110dc8020, 0x0000000110dc81f8]  472 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec2a98} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x30]  (sp of caller)
  0x0000000110dc8020: mov    %eax,-0x14000(%rsp)
  0x0000000110dc8027: push   %rbp
  0x0000000110dc8028: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)

  0x0000000110dc802c: mov    0xc(%rsi),%r10d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x0000000110dc81c2
  0x0000000110dc8030: test   %r10d,%r10d
  0x0000000110dc8033: jbe    0x0000000110dc81a9  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000110dc8039: mov    %r10d,%r8d
  0x0000000110dc803c: dec    %r8d
  0x0000000110dc803f: cmp    %r10d,%r8d
  0x0000000110dc8042: jae    0x0000000110dc81ad
  0x0000000110dc8048: movzbl 0x10(%rsi),%r9d    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)

  0x0000000110dc804d: mov    %r10d,%edx
  0x0000000110dc8050: add    $0xfffffff9,%edx
  0x0000000110dc8053: mov    $0x80000000,%ecx
  0x0000000110dc8058: cmp    %edx,%r8d
  0x0000000110dc805b: cmovl  %ecx,%edx
  0x0000000110dc805e: mov    $0x1,%ecx
  0x0000000110dc8063: cmp    $0x1,%edx
  0x0000000110dc8066: jle    0x0000000110dc818d
  0x0000000110dc806c: mov    %r9d,%r11d
  0x0000000110dc806f: shl    $0x5,%r11d
  0x0000000110dc8073: sub    %r9d,%r11d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000110dc8076: mov    $0x1f40,%edi       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x0000000110dc807b: jmp    0x0000000110dc80a9  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)

  0x0000000110dc807d: movzbl 0x10(%rsi,%rcx,1),%r8d
  0x0000000110dc8083: mov    %r9d,%eax
  0x0000000110dc8086: shl    $0x5,%eax
  0x0000000110dc8089: sub    %r9d,%eax
  0x0000000110dc808c: add    %r8d,%eax          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x0000000110dc808f: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x0000000110dc8091: cmp    %r10d,%ecx
  0x0000000110dc8094: jge    0x0000000110dc8199  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000110dc809a: mov    %eax,%r9d
  0x0000000110dc809d: jmp    0x0000000110dc807d
  0x0000000110dc809f: vmovq  %xmm0,%rsi
  0x0000000110dc80a4: vmovd  %xmm2,%r10d
  0x0000000110dc80a9: mov    %edx,%ebp
  0x0000000110dc80ab: sub    %ecx,%ebp
  0x0000000110dc80ad: cmp    %edi,%ebp
  0x0000000110dc80af: cmovg  %edi,%ebp
  0x0000000110dc80b2: add    %ecx,%ebp
  0x0000000110dc80b4: vmovq  %rsi,%xmm0
  0x0000000110dc80b9: vmovd  %r10d,%xmm2
  0x0000000110dc80be: xchg   %ax,%ax            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000110dc80c0: movslq %ecx,%rsi          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x0000000110dc80c3: vmovq  %xmm0,%r8
  0x0000000110dc80c8: movzbl 0x10(%r8,%rsi,1),%r14d
  0x0000000110dc80ce: movzbl 0x17(%r8,%rsi,1),%eax
  0x0000000110dc80d4: movzbl 0x11(%r8,%rsi,1),%r13d
  0x0000000110dc80da: movzbl 0x16(%r8,%rsi,1),%r10d
  0x0000000110dc80e0: movzbl 0x15(%r8,%rsi,1),%r9d
  0x0000000110dc80e6: movzbl 0x14(%r8,%rsi,1),%r8d
  0x0000000110dc80ec: add    %r14d,%r11d
  0x0000000110dc80ef: vmovq  %xmm0,%rbx
  0x0000000110dc80f4: movzbl 0x12(%rbx,%rsi,1),%ebx
  0x0000000110dc80f9: vmovq  %xmm0,%r14
  0x0000000110dc80fe: movzbl 0x13(%r14,%rsi,1),%esi
  0x0000000110dc8104: mov    %r11d,%r14d
  0x0000000110dc8107: shl    $0x5,%r14d
  0x0000000110dc810b: sub    %r11d,%r14d
  0x0000000110dc810e: add    %r13d,%r14d
  0x0000000110dc8111: mov    %r14d,%r11d
  0x0000000110dc8114: shl    $0x5,%r11d
  0x0000000110dc8118: sub    %r14d,%r11d
  0x0000000110dc811b: add    %ebx,%r11d
  0x0000000110dc811e: mov    %r11d,%ebx
  0x0000000110dc8121: shl    $0x5,%ebx
  0x0000000110dc8124: sub    %r11d,%ebx
  0x0000000110dc8127: add    %esi,%ebx
  0x0000000110dc8129: mov    %ebx,%r11d
  0x0000000110dc812c: shl    $0x5,%r11d
  0x0000000110dc8130: sub    %ebx,%r11d
  0x0000000110dc8133: add    %r8d,%r11d
  0x0000000110dc8136: mov    %r11d,%ebx
  0x0000000110dc8139: shl    $0x5,%ebx
  0x0000000110dc813c: sub    %r11d,%ebx
  0x0000000110dc813f: add    %r9d,%ebx
  0x0000000110dc8142: mov    %ebx,%r8d
  0x0000000110dc8145: shl    $0x5,%r8d
  0x0000000110dc8149: sub    %ebx,%r8d
  0x0000000110dc814c: add    %r10d,%r8d
  0x0000000110dc814f: mov    %r8d,%r9d
  0x0000000110dc8152: shl    $0x5,%r9d
  0x0000000110dc8156: sub    %r8d,%r9d
  0x0000000110dc8159: add    %eax,%r9d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x0000000110dc815c: mov    %r9d,%r11d
  0x0000000110dc815f: shl    $0x5,%r11d
  0x0000000110dc8163: sub    %r9d,%r11d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000110dc8166: add    $0x8,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x0000000110dc8169: cmp    %ebp,%ecx
  0x0000000110dc816b: jl     0x0000000110dc80c0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000110dc8171: mov    0x108(%r15),%r10   ; ImmutableOopMap{xmm0=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x0000000110dc8178: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {poll}
  0x0000000110dc817b: cmp    %edx,%ecx
  0x0000000110dc817d: jl     0x0000000110dc809f
  0x0000000110dc8183: vmovq  %xmm0,%rsi
  0x0000000110dc8188: vmovd  %xmm2,%r10d
  0x0000000110dc818d: cmp    %r10d,%ecx
  0x0000000110dc8190: jl     0x0000000110dc807d
  0x0000000110dc8196: mov    %r9d,%eax          ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000110dc8199: add    $0x20,%rsp
  0x0000000110dc819d: pop    %rbp
  0x0000000110dc819e: mov    0x108(%r15),%r10
  0x0000000110dc81a5: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dc81a8: retq   
  0x0000000110dc81a9: xor    %eax,%eax
  0x0000000110dc81ab: jmp    0x0000000110dc8199
  0x0000000110dc81ad: mov    %rsi,%rbp
  0x0000000110dc81b0: mov    %r10d,0x4(%rsp)
  0x0000000110dc81b5: mov    $0xffffff7e,%esi
  0x0000000110dc81ba: nop
  0x0000000110dc81bb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dc81c0: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000110dc81c2: mov    $0xfffffff6,%esi
  0x0000000110dc81c7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dc81cc: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)

  0x0000000110dc81ce: hlt    
  0x0000000110dc81cf: hlt    
  0x0000000110dc81d0: hlt    
  0x0000000110dc81d1: hlt    
  0x0000000110dc81d2: hlt    
  0x0000000110dc81d3: hlt    
  0x0000000110dc81d4: hlt    
  0x0000000110dc81d5: hlt    
  0x0000000110dc81d6: hlt    
  0x0000000110dc81d7: hlt    
  0x0000000110dc81d8: hlt    
  0x0000000110dc81d9: hlt    
  0x0000000110dc81da: hlt    
  0x0000000110dc81db: hlt    
  0x0000000110dc81dc: hlt    
  0x0000000110dc81dd: hlt    
  0x0000000110dc81de: hlt    
  0x0000000110dc81df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dc81e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dc81e5: callq  0x0000000110dc81ea
  0x0000000110dc81ea: subq   $0x5,(%rsp)
  0x0000000110dc81ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dc81f4: hlt    
  0x0000000110dc81f5: hlt    
  0x0000000110dc81f6: hlt    
  0x0000000110dc81f7: hlt    

ImmutableOopMap{xmm0=Oop }pc offsets: 344 
ImmutableOopMap{rbp=Oop }pc offsets: 416 
ImmutableOopMap{}pc offsets: 428 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd0d20, 0x0000000110dd0d40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f0c1b40} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd0d20: mov    0x24(%rdi),%ebx
  0x0000000110dd0d23: shl    $0x3,%rbx
  0x0000000110dd0d27: mov    0x10(%rbx),%rbx
  0x0000000110dd0d2b: test   %rbx,%rbx
  0x0000000110dd0d2e: je     0x0000000110dd0d37
  0x0000000110dd0d34: jmpq   *0x38(%rbx)
  0x0000000110dd0d37: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd0d3c: hlt    
  0x0000000110dd0d3d: hlt    
  0x0000000110dd0d3e: hlt    
  0x0000000110dd0d3f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dd1920, 0x0000000110dd1950]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f0f41d0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd1920: mov    0x14(%rsi),%ebx
  0x0000000110dd1923: shl    $0x3,%rbx
  0x0000000110dd1927: mov    0x28(%rbx),%ebx
  0x0000000110dd192a: shl    $0x3,%rbx
  0x0000000110dd192e: mov    0x24(%rbx),%ebx
  0x0000000110dd1931: shl    $0x3,%rbx
  0x0000000110dd1935: mov    0x10(%rbx),%rbx
  0x0000000110dd1939: test   %rbx,%rbx
  0x0000000110dd193c: je     0x0000000110dd1945
  0x0000000110dd1942: jmpq   *0x38(%rbx)
  0x0000000110dd1945: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd194a: hlt    
  0x0000000110dd194b: hlt    
  0x0000000110dd194c: hlt    
  0x0000000110dd194d: hlt    
  0x0000000110dd194e: hlt    
  0x0000000110dd194f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd1b20, 0x0000000110dd1b48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f0f4388} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000000110dd1b20: mov    0x8(%rsp),%rbx
  0x0000000110dd1b25: cmp    (%rsi),%rax
  0x0000000110dd1b28: mov    0x24(%rbx),%ebx
  0x0000000110dd1b2b: shl    $0x3,%rbx
  0x0000000110dd1b2f: mov    0x10(%rbx),%rbx
  0x0000000110dd1b33: test   %rbx,%rbx
  0x0000000110dd1b36: je     0x0000000110dd1b3f
  0x0000000110dd1b3c: jmpq   *0x38(%rbx)
  0x0000000110dd1b3f: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd1b44: hlt    
  0x0000000110dd1b45: hlt    
  0x0000000110dd1b46: hlt    
  0x0000000110dd1b47: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/invoke/MemberName;)I  [0x0000000110dd2320, 0x0000000110dd2340]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f100740} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2320: mov    0x24(%rsi),%ebx
  0x0000000110dd2323: shl    $0x3,%rbx
  0x0000000110dd2327: mov    0x10(%rbx),%rbx
  0x0000000110dd232b: test   %rbx,%rbx
  0x0000000110dd232e: je     0x0000000110dd2337
  0x0000000110dd2334: jmpq   *0x38(%rbx)
  0x0000000110dd2337: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd233c: hlt    
  0x0000000110dd233d: hlt    
  0x0000000110dd233e: hlt    
  0x0000000110dd233f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()I  [0x0000000110dd2520, 0x0000000110dd2550]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f100858} 'invokeBasic' '()I' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2520: mov    0x14(%rsi),%ebx
  0x0000000110dd2523: shl    $0x3,%rbx
  0x0000000110dd2527: mov    0x28(%rbx),%ebx
  0x0000000110dd252a: shl    $0x3,%rbx
  0x0000000110dd252e: mov    0x24(%rbx),%ebx
  0x0000000110dd2531: shl    $0x3,%rbx
  0x0000000110dd2535: mov    0x10(%rbx),%rbx
  0x0000000110dd2539: test   %rbx,%rbx
  0x0000000110dd253c: je     0x0000000110dd2545
  0x0000000110dd2542: jmpq   *0x38(%rbx)
  0x0000000110dd2545: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd254a: hlt    
  0x0000000110dd254b: hlt    
  0x0000000110dd254c: hlt    
  0x0000000110dd254d: hlt    
  0x0000000110dd254e: hlt    
  0x0000000110dd254f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dd2720, 0x0000000110dd2740]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f100970} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2720: cmp    (%rsi),%rax
  0x0000000110dd2723: mov    0x24(%rdx),%ebx
  0x0000000110dd2726: shl    $0x3,%rbx
  0x0000000110dd272a: mov    0x10(%rbx),%rbx
  0x0000000110dd272e: test   %rbx,%rbx
  0x0000000110dd2731: je     0x0000000110dd273a
  0x0000000110dd2737: jmpq   *0x38(%rbx)
  0x0000000110dd273a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd273f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd2920, 0x0000000110dd2940]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f100d08} 'linkToStatic' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2920: mov    0x24(%r8),%ebx
  0x0000000110dd2924: shl    $0x3,%rbx
  0x0000000110dd2928: mov    0x10(%rbx),%rbx
  0x0000000110dd292c: test   %rbx,%rbx
  0x0000000110dd292f: je     0x0000000110dd2938
  0x0000000110dd2935: jmpq   *0x38(%rbx)
  0x0000000110dd2938: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd293d: hlt    
  0x0000000110dd293e: hlt    
  0x0000000110dd293f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd2b20, 0x0000000110dd2b40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f100e20} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2b20: mov    0x24(%rcx),%ebx
  0x0000000110dd2b23: shl    $0x3,%rbx
  0x0000000110dd2b27: mov    0x10(%rbx),%rbx
  0x0000000110dd2b2b: test   %rbx,%rbx
  0x0000000110dd2b2e: je     0x0000000110dd2b37
  0x0000000110dd2b34: jmpq   *0x38(%rbx)
  0x0000000110dd2b37: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd2b3c: hlt    
  0x0000000110dd2b3d: hlt    
  0x0000000110dd2b3e: hlt    
  0x0000000110dd2b3f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd2d20, 0x0000000110dd2d40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f108bf8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd2d20: mov    0x24(%rdx),%ebx
  0x0000000110dd2d23: shl    $0x3,%rbx
  0x0000000110dd2d27: mov    0x10(%rbx),%rbx
  0x0000000110dd2d2b: test   %rbx,%rbx
  0x0000000110dd2d2e: je     0x0000000110dd2d37
  0x0000000110dd2d34: jmpq   *0x38(%rbx)
  0x0000000110dd2d37: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd2d3c: hlt    
  0x0000000110dd2d3d: hlt    
  0x0000000110dd2d3e: hlt    
  0x0000000110dd2d3f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd36a0, 0x0000000110dd36c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f11ac70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd36a0: mov    0x24(%rcx),%ebx
  0x0000000110dd36a3: shl    $0x3,%rbx
  0x0000000110dd36a7: mov    0x10(%rbx),%rbx
  0x0000000110dd36ab: test   %rbx,%rbx
  0x0000000110dd36ae: je     0x0000000110dd36b7
  0x0000000110dd36b4: jmpq   *0x38(%rbx)
  0x0000000110dd36b7: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd36bc: hlt    
  0x0000000110dd36bd: hlt    
  0x0000000110dd36be: hlt    
  0x0000000110dd36bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd38a0, 0x0000000110dd38c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f11c570} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd38a0: mov    0x24(%r8),%ebx
  0x0000000110dd38a4: shl    $0x3,%rbx
  0x0000000110dd38a8: mov    0x10(%rbx),%rbx
  0x0000000110dd38ac: test   %rbx,%rbx
  0x0000000110dd38af: je     0x0000000110dd38b8
  0x0000000110dd38b5: jmpq   *0x38(%rbx)
  0x0000000110dd38b8: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd38bd: hlt    
  0x0000000110dd38be: hlt    
  0x0000000110dd38bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;II)Ljava/lang/Object;  [0x0000000110dd3aa0, 0x0000000110dd3ad0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f11f0d8} 'invokeBasic' '(Ljava/lang/Object;II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd3aa0: mov    0x14(%rsi),%ebx
  0x0000000110dd3aa3: shl    $0x3,%rbx
  0x0000000110dd3aa7: mov    0x28(%rbx),%ebx
  0x0000000110dd3aaa: shl    $0x3,%rbx
  0x0000000110dd3aae: mov    0x24(%rbx),%ebx
  0x0000000110dd3ab1: shl    $0x3,%rbx
  0x0000000110dd3ab5: mov    0x10(%rbx),%rbx
  0x0000000110dd3ab9: test   %rbx,%rbx
  0x0000000110dd3abc: je     0x0000000110dd3ac5
  0x0000000110dd3ac2: jmpq   *0x38(%rbx)
  0x0000000110dd3ac5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd3aca: hlt    
  0x0000000110dd3acb: hlt    
  0x0000000110dd3acc: hlt    
  0x0000000110dd3acd: hlt    
  0x0000000110dd3ace: hlt    
  0x0000000110dd3acf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd3ca0, 0x0000000110dd3cc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f11f1f0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd3ca0: cmp    (%rsi),%rax
  0x0000000110dd3ca3: mov    0x24(%r9),%ebx
  0x0000000110dd3ca7: shl    $0x3,%rbx
  0x0000000110dd3cab: mov    0x10(%rbx),%rbx
  0x0000000110dd3caf: test   %rbx,%rbx
  0x0000000110dd3cb2: je     0x0000000110dd3cbb
  0x0000000110dd3cb8: jmpq   *0x38(%rbx)
  0x0000000110dd3cbb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(ILjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dd57a0, 0x0000000110dd57c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f152d00} 'linkToStatic' '(ILjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd57a0: mov    0x24(%r9),%ebx
  0x0000000110dd57a4: shl    $0x3,%rbx
  0x0000000110dd57a8: mov    0x10(%rbx),%rbx
  0x0000000110dd57ac: test   %rbx,%rbx
  0x0000000110dd57af: je     0x0000000110dd57b8
  0x0000000110dd57b5: jmpq   *0x38(%rbx)
  0x0000000110dd57b8: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd57bd: hlt    
  0x0000000110dd57be: hlt    
  0x0000000110dd57bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd59a0, 0x0000000110dd59c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f153e00} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd59a0: mov    0x24(%r9),%ebx
  0x0000000110dd59a4: shl    $0x3,%rbx
  0x0000000110dd59a8: mov    0x10(%rbx),%rbx
  0x0000000110dd59ac: test   %rbx,%rbx
  0x0000000110dd59af: je     0x0000000110dd59b8
  0x0000000110dd59b5: jmpq   *0x38(%rbx)
  0x0000000110dd59b8: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd59bd: hlt    
  0x0000000110dd59be: hlt    
  0x0000000110dd59bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(ILjava/lang/Object;ILjava/lang/Object;)I  [0x0000000110dd5ba0, 0x0000000110dd5bd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1540a8} 'invokeBasic' '(ILjava/lang/Object;ILjava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = int
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd5ba0: mov    0x14(%rsi),%ebx
  0x0000000110dd5ba3: shl    $0x3,%rbx
  0x0000000110dd5ba7: mov    0x28(%rbx),%ebx
  0x0000000110dd5baa: shl    $0x3,%rbx
  0x0000000110dd5bae: mov    0x24(%rbx),%ebx
  0x0000000110dd5bb1: shl    $0x3,%rbx
  0x0000000110dd5bb5: mov    0x10(%rbx),%rbx
  0x0000000110dd5bb9: test   %rbx,%rbx
  0x0000000110dd5bbc: je     0x0000000110dd5bc5
  0x0000000110dd5bc2: jmpq   *0x38(%rbx)
  0x0000000110dd5bc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd5bca: hlt    
  0x0000000110dd5bcb: hlt    
  0x0000000110dd5bcc: hlt    
  0x0000000110dd5bcd: hlt    
  0x0000000110dd5bce: hlt    
  0x0000000110dd5bcf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dd5da0, 0x0000000110dd5dc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1541c0} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd5da0: cmp    (%rsi),%rax
  0x0000000110dd5da3: mov    0x24(%rdi),%ebx
  0x0000000110dd5da6: shl    $0x3,%rbx
  0x0000000110dd5daa: mov    0x10(%rbx),%rbx
  0x0000000110dd5dae: test   %rbx,%rbx
  0x0000000110dd5db1: je     0x0000000110dd5dba
  0x0000000110dd5db7: jmpq   *0x38(%rbx)
  0x0000000110dd5dba: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd5dbf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dd5fa0, 0x0000000110dd5fd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1545a8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd5fa0: mov    0x14(%rsi),%ebx
  0x0000000110dd5fa3: shl    $0x3,%rbx
  0x0000000110dd5fa7: mov    0x28(%rbx),%ebx
  0x0000000110dd5faa: shl    $0x3,%rbx
  0x0000000110dd5fae: mov    0x24(%rbx),%ebx
  0x0000000110dd5fb1: shl    $0x3,%rbx
  0x0000000110dd5fb5: mov    0x10(%rbx),%rbx
  0x0000000110dd5fb9: test   %rbx,%rbx
  0x0000000110dd5fbc: je     0x0000000110dd5fc5
  0x0000000110dd5fc2: jmpq   *0x38(%rbx)
  0x0000000110dd5fc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd5fca: hlt    
  0x0000000110dd5fcb: hlt    
  0x0000000110dd5fcc: hlt    
  0x0000000110dd5fcd: hlt    
  0x0000000110dd5fce: hlt    
  0x0000000110dd5fcf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(ILjava/lang/Object;I)I  [0x0000000110dd61a0, 0x0000000110dd61d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f155fe8} 'invokeBasic' '(ILjava/lang/Object;I)I' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd61a0: mov    0x14(%rsi),%ebx
  0x0000000110dd61a3: shl    $0x3,%rbx
  0x0000000110dd61a7: mov    0x28(%rbx),%ebx
  0x0000000110dd61aa: shl    $0x3,%rbx
  0x0000000110dd61ae: mov    0x24(%rbx),%ebx
  0x0000000110dd61b1: shl    $0x3,%rbx
  0x0000000110dd61b5: mov    0x10(%rbx),%rbx
  0x0000000110dd61b9: test   %rbx,%rbx
  0x0000000110dd61bc: je     0x0000000110dd61c5
  0x0000000110dd61c2: jmpq   *0x38(%rbx)
  0x0000000110dd61c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd61ca: hlt    
  0x0000000110dd61cb: hlt    
  0x0000000110dd61cc: hlt    
  0x0000000110dd61cd: hlt    
  0x0000000110dd61ce: hlt    
  0x0000000110dd61cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/invoke/MemberName;)I  [0x0000000110dd63a0, 0x0000000110dd63c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f156100} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd63a0: cmp    (%rsi),%rax
  0x0000000110dd63a3: mov    0x24(%r9),%ebx
  0x0000000110dd63a7: shl    $0x3,%rbx
  0x0000000110dd63ab: mov    0x10(%rbx),%rbx
  0x0000000110dd63af: test   %rbx,%rbx
  0x0000000110dd63b2: je     0x0000000110dd63bb
  0x0000000110dd63b8: jmpq   *0x38(%rbx)
  0x0000000110dd63bb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd65a0, 0x0000000110dd65c8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f157358} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x0000000110dd65a0: mov    0x8(%rsp),%rbx
  0x0000000110dd65a5: mov    0x24(%rbx),%ebx
  0x0000000110dd65a8: shl    $0x3,%rbx
  0x0000000110dd65ac: mov    0x10(%rbx),%rbx
  0x0000000110dd65b0: test   %rbx,%rbx
  0x0000000110dd65b3: je     0x0000000110dd65bc
  0x0000000110dd65b9: jmpq   *0x38(%rbx)
  0x0000000110dd65bc: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd65c1: hlt    
  0x0000000110dd65c2: hlt    
  0x0000000110dd65c3: hlt    
  0x0000000110dd65c4: hlt    
  0x0000000110dd65c5: hlt    
  0x0000000110dd65c6: hlt    
  0x0000000110dd65c7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(II)Ljava/lang/Object;  [0x0000000110dd67a0, 0x0000000110dd67d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f157470} 'invokeBasic' '(II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd67a0: mov    0x14(%rsi),%ebx
  0x0000000110dd67a3: shl    $0x3,%rbx
  0x0000000110dd67a7: mov    0x28(%rbx),%ebx
  0x0000000110dd67aa: shl    $0x3,%rbx
  0x0000000110dd67ae: mov    0x24(%rbx),%ebx
  0x0000000110dd67b1: shl    $0x3,%rbx
  0x0000000110dd67b5: mov    0x10(%rbx),%rbx
  0x0000000110dd67b9: test   %rbx,%rbx
  0x0000000110dd67bc: je     0x0000000110dd67c5
  0x0000000110dd67c2: jmpq   *0x38(%rbx)
  0x0000000110dd67c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd67ca: hlt    
  0x0000000110dd67cb: hlt    
  0x0000000110dd67cc: hlt    
  0x0000000110dd67cd: hlt    
  0x0000000110dd67ce: hlt    
  0x0000000110dd67cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd69a0, 0x0000000110dd69c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f157588} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd69a0: cmp    (%rsi),%rax
  0x0000000110dd69a3: mov    0x24(%r8),%ebx
  0x0000000110dd69a7: shl    $0x3,%rbx
  0x0000000110dd69ab: mov    0x10(%rbx),%rbx
  0x0000000110dd69af: test   %rbx,%rbx
  0x0000000110dd69b2: je     0x0000000110dd69bb
  0x0000000110dd69b8: jmpq   *0x38(%rbx)
  0x0000000110dd69bb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dd6ba0, 0x0000000110dd6bd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1576f0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  0x0000000110dd6ba0: mov    0x14(%rsi),%ebx
  0x0000000110dd6ba3: shl    $0x3,%rbx
  0x0000000110dd6ba7: mov    0x28(%rbx),%ebx
  0x0000000110dd6baa: shl    $0x3,%rbx
  0x0000000110dd6bae: mov    0x24(%rbx),%ebx
  0x0000000110dd6bb1: shl    $0x3,%rbx
  0x0000000110dd6bb5: mov    0x10(%rbx),%rbx
  0x0000000110dd6bb9: test   %rbx,%rbx
  0x0000000110dd6bbc: je     0x0000000110dd6bc5
  0x0000000110dd6bc2: jmpq   *0x38(%rbx)
  0x0000000110dd6bc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd6bca: hlt    
  0x0000000110dd6bcb: hlt    
  0x0000000110dd6bcc: hlt    
  0x0000000110dd6bcd: hlt    
  0x0000000110dd6bce: hlt    
  0x0000000110dd6bcf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dd6da0, 0x0000000110dd6dc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f157d30} 'linkToStatic' '(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd6da0: mov    0x24(%rcx),%ebx
  0x0000000110dd6da3: shl    $0x3,%rbx
  0x0000000110dd6da7: mov    0x10(%rbx),%rbx
  0x0000000110dd6dab: test   %rbx,%rbx
  0x0000000110dd6dae: je     0x0000000110dd6db7
  0x0000000110dd6db4: jmpq   *0x38(%rbx)
  0x0000000110dd6db7: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd6dbc: hlt    
  0x0000000110dd6dbd: hlt    
  0x0000000110dd6dbe: hlt    
  0x0000000110dd6dbf: hlt    
Compiled method (c2)     127   27             java.lang.Object::<init> (1 bytes)
 total in heap  [0x0000000110dd9c10,0x0000000110dd9e48] = 568
 relocation     [0x0000000110dd9d88,0x0000000110dd9d98] = 16
 main code      [0x0000000110dd9da0,0x0000000110dd9de0] = 64
 stub code      [0x0000000110dd9de0,0x0000000110dd9df8] = 24
 metadata       [0x0000000110dd9df8,0x0000000110dd9e08] = 16
 scopes data    [0x0000000110dd9e08,0x0000000110dd9e10] = 8
 scopes pcs     [0x0000000110dd9e10,0x0000000110dd9e40] = 48
 dependencies   [0x0000000110dd9e40,0x0000000110dd9e48] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x0000000110dd9da0, 0x0000000110dd9df8]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed69610} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110dd9da0: mov    0x8(%rsi),%r10d
  0x0000000110dd9da4: movabs $0x800000000,%r12
  0x0000000110dd9dae: add    %r12,%r10
  0x0000000110dd9db1: xor    %r12,%r12
  0x0000000110dd9db4: cmp    %r10,%rax
  0x0000000110dd9db7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dd9dbd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dd9dc0: sub    $0x18,%rsp
  0x0000000110dd9dc7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)

  0x0000000110dd9dcc: add    $0x10,%rsp
  0x0000000110dd9dd0: pop    %rbp
  0x0000000110dd9dd1: mov    0x108(%r15),%r10
  0x0000000110dd9dd8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dd9ddb: retq   
  0x0000000110dd9ddc: hlt    
  0x0000000110dd9ddd: hlt    
  0x0000000110dd9dde: hlt    
  0x0000000110dd9ddf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dd9de0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dd9de5: callq  0x0000000110dd9dea
  0x0000000110dd9dea: subq   $0x5,(%rsp)
  0x0000000110dd9def: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dd9df4: hlt    
  0x0000000110dd9df5: hlt    
  0x0000000110dd9df6: hlt    
  0x0000000110dd9df7: hlt    
Compiled method (c2)     129   28             java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x0000000110dd8290,0x0000000110dd8538] = 680
 relocation     [0x0000000110dd8408,0x0000000110dd8418] = 16
 main code      [0x0000000110dd8420,0x0000000110dd8480] = 96
 stub code      [0x0000000110dd8480,0x0000000110dd8498] = 24
 metadata       [0x0000000110dd8498,0x0000000110dd84a0] = 8
 scopes data    [0x0000000110dd84a0,0x0000000110dd84c0] = 32
 scopes pcs     [0x0000000110dd84c0,0x0000000110dd8530] = 112
 dependencies   [0x0000000110dd8530,0x0000000110dd8538] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x0000000110dd8420, 0x0000000110dd8498]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed73300} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110dd8420: mov    0x8(%rsi),%r10d
  0x0000000110dd8424: movabs $0x800000000,%r12
  0x0000000110dd842e: add    %r12,%r10
  0x0000000110dd8431: xor    %r12,%r12
  0x0000000110dd8434: cmp    %r10,%rax
  0x0000000110dd8437: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dd843d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dd8440: mov    %eax,-0x14000(%rsp)
  0x0000000110dd8447: push   %rbp
  0x0000000110dd8448: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)

  0x0000000110dd844c: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x0000000110dd8451: test   %r11d,%r11d
  0x0000000110dd8454: jne    0x0000000110dd846b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x0000000110dd8456: mov    $0x1,%eax
  0x0000000110dd845b: add    $0x10,%rsp
  0x0000000110dd845f: pop    %rbp
  0x0000000110dd8460: mov    0x108(%r15),%r10
  0x0000000110dd8467: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dd846a: retq   
  0x0000000110dd846b: mov    $0xffffff4d,%esi
  0x0000000110dd8470: mov    %r11d,%ebp
  0x0000000110dd8473: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd8478: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x0000000110dd847a: hlt    
  0x0000000110dd847b: hlt    
  0x0000000110dd847c: hlt    
  0x0000000110dd847d: hlt    
  0x0000000110dd847e: hlt    
  0x0000000110dd847f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dd8480: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dd8485: callq  0x0000000110dd848a
  0x0000000110dd848a: subq   $0x5,(%rsp)
  0x0000000110dd848f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dd8494: hlt    
  0x0000000110dd8495: hlt    
  0x0000000110dd8496: hlt    
  0x0000000110dd8497: hlt    

ImmutableOopMap{}pc offsets: 88 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd7fa0, 0x0000000110dd7fc8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f158f30} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000000110dd7fa0: mov    0x10(%rsp),%rbx
  0x0000000110dd7fa5: mov    0x24(%rbx),%ebx
  0x0000000110dd7fa8: shl    $0x3,%rbx
  0x0000000110dd7fac: mov    0x10(%rbx),%rbx
  0x0000000110dd7fb0: test   %rbx,%rbx
  0x0000000110dd7fb3: je     0x0000000110dd7fbc
  0x0000000110dd7fb9: jmpq   *0x38(%rbx)
  0x0000000110dd7fbc: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd7fc1: hlt    
  0x0000000110dd7fc2: hlt    
  0x0000000110dd7fc3: hlt    
  0x0000000110dd7fc4: hlt    
  0x0000000110dd7fc5: hlt    
  0x0000000110dd7fc6: hlt    
  0x0000000110dd7fc7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(ILjava/lang/Object;)I  [0x0000000110dd7da0, 0x0000000110dd7dd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f159048} 'invokeBasic' '(ILjava/lang/Object;)I' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd7da0: mov    0x14(%rsi),%ebx
  0x0000000110dd7da3: shl    $0x3,%rbx
  0x0000000110dd7da7: mov    0x28(%rbx),%ebx
  0x0000000110dd7daa: shl    $0x3,%rbx
  0x0000000110dd7dae: mov    0x24(%rbx),%ebx
  0x0000000110dd7db1: shl    $0x3,%rbx
  0x0000000110dd7db5: mov    0x10(%rbx),%rbx
  0x0000000110dd7db9: test   %rbx,%rbx
  0x0000000110dd7dbc: je     0x0000000110dd7dc5
  0x0000000110dd7dc2: jmpq   *0x38(%rbx)
  0x0000000110dd7dc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd7dca: hlt    
  0x0000000110dd7dcb: hlt    
  0x0000000110dd7dcc: hlt    
  0x0000000110dd7dcd: hlt    
  0x0000000110dd7dce: hlt    
  0x0000000110dd7dcf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dd7ba0, 0x0000000110dd7bc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f159160} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dd7ba0: cmp    (%rsi),%rax
  0x0000000110dd7ba3: mov    0x24(%r8),%ebx
  0x0000000110dd7ba7: shl    $0x3,%rbx
  0x0000000110dd7bab: mov    0x10(%rbx),%rbx
  0x0000000110dd7baf: test   %rbx,%rbx
  0x0000000110dd7bb2: je     0x0000000110dd7bbb
  0x0000000110dd7bb8: jmpq   *0x38(%rbx)
  0x0000000110dd7bbb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dd79a0, 0x0000000110dd79d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1592c8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  0x0000000110dd79a0: mov    0x14(%rsi),%ebx
  0x0000000110dd79a3: shl    $0x3,%rbx
  0x0000000110dd79a7: mov    0x28(%rbx),%ebx
  0x0000000110dd79aa: shl    $0x3,%rbx
  0x0000000110dd79ae: mov    0x24(%rbx),%ebx
  0x0000000110dd79b1: shl    $0x3,%rbx
  0x0000000110dd79b5: mov    0x10(%rbx),%rbx
  0x0000000110dd79b9: test   %rbx,%rbx
  0x0000000110dd79bc: je     0x0000000110dd79c5
  0x0000000110dd79c2: jmpq   *0x38(%rbx)
  0x0000000110dd79c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd79ca: hlt    
  0x0000000110dd79cb: hlt    
  0x0000000110dd79cc: hlt    
  0x0000000110dd79cd: hlt    
  0x0000000110dd79ce: hlt    
  0x0000000110dd79cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd7520, 0x0000000110dd7548]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15a268} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/invoke/MemberName'
  0x0000000110dd7520: mov    0x18(%rsp),%rbx
  0x0000000110dd7525: mov    0x24(%rbx),%ebx
  0x0000000110dd7528: shl    $0x3,%rbx
  0x0000000110dd752c: mov    0x10(%rbx),%rbx
  0x0000000110dd7530: test   %rbx,%rbx
  0x0000000110dd7533: je     0x0000000110dd753c
  0x0000000110dd7539: jmpq   *0x38(%rbx)
  0x0000000110dd753c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd7541: hlt    
  0x0000000110dd7542: hlt    
  0x0000000110dd7543: hlt    
  0x0000000110dd7544: hlt    
  0x0000000110dd7545: hlt    
  0x0000000110dd7546: hlt    
  0x0000000110dd7547: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dd7320, 0x0000000110dd7350]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15a3d0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  0x0000000110dd7320: mov    0x14(%rsi),%ebx
  0x0000000110dd7323: shl    $0x3,%rbx
  0x0000000110dd7327: mov    0x28(%rbx),%ebx
  0x0000000110dd732a: shl    $0x3,%rbx
  0x0000000110dd732e: mov    0x24(%rbx),%ebx
  0x0000000110dd7331: shl    $0x3,%rbx
  0x0000000110dd7335: mov    0x10(%rbx),%rbx
  0x0000000110dd7339: test   %rbx,%rbx
  0x0000000110dd733c: je     0x0000000110dd7345
  0x0000000110dd7342: jmpq   *0x38(%rbx)
  0x0000000110dd7345: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd734a: hlt    
  0x0000000110dd734b: hlt    
  0x0000000110dd734c: hlt    
  0x0000000110dd734d: hlt    
  0x0000000110dd734e: hlt    
  0x0000000110dd734f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd9920, 0x0000000110dd9948]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15c0b8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = int
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x0000000110dd9920: mov    0x20(%rsp),%rbx
  0x0000000110dd9925: mov    0x24(%rbx),%ebx
  0x0000000110dd9928: shl    $0x3,%rbx
  0x0000000110dd992c: mov    0x10(%rbx),%rbx
  0x0000000110dd9930: test   %rbx,%rbx
  0x0000000110dd9933: je     0x0000000110dd993c
  0x0000000110dd9939: jmpq   *0x38(%rbx)
  0x0000000110dd993c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd9941: hlt    
  0x0000000110dd9942: hlt    
  0x0000000110dd9943: hlt    
  0x0000000110dd9944: hlt    
  0x0000000110dd9945: hlt    
  0x0000000110dd9946: hlt    
  0x0000000110dd9947: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;  [0x0000000110dd9720, 0x0000000110dd9750]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15c220} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = int
  0x0000000110dd9720: mov    0x14(%rsi),%ebx
  0x0000000110dd9723: shl    $0x3,%rbx
  0x0000000110dd9727: mov    0x28(%rbx),%ebx
  0x0000000110dd972a: shl    $0x3,%rbx
  0x0000000110dd972e: mov    0x24(%rbx),%ebx
  0x0000000110dd9731: shl    $0x3,%rbx
  0x0000000110dd9735: mov    0x10(%rbx),%rbx
  0x0000000110dd9739: test   %rbx,%rbx
  0x0000000110dd973c: je     0x0000000110dd9745
  0x0000000110dd9742: jmpq   *0x38(%rbx)
  0x0000000110dd9745: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd974a: hlt    
  0x0000000110dd974b: hlt    
  0x0000000110dd974c: hlt    
  0x0000000110dd974d: hlt    
  0x0000000110dd974e: hlt    
  0x0000000110dd974f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dd9020, 0x0000000110dd9048]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15e668} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = int
  # parm9:    [sp+0x18]   = int
  # parm10:   [sp+0x20]   = 'java/lang/invoke/MemberName'
  0x0000000110dd9020: mov    0x28(%rsp),%rbx
  0x0000000110dd9025: mov    0x24(%rbx),%ebx
  0x0000000110dd9028: shl    $0x3,%rbx
  0x0000000110dd902c: mov    0x10(%rbx),%rbx
  0x0000000110dd9030: test   %rbx,%rbx
  0x0000000110dd9033: je     0x0000000110dd903c
  0x0000000110dd9039: jmpq   *0x38(%rbx)
  0x0000000110dd903c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd9041: hlt    
  0x0000000110dd9042: hlt    
  0x0000000110dd9043: hlt    
  0x0000000110dd9044: hlt    
  0x0000000110dd9045: hlt    
  0x0000000110dd9046: hlt    
  0x0000000110dd9047: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Object;  [0x0000000110dd8e20, 0x0000000110dd8e50]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15e7d0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = int
  # parm9:    [sp+0x20]   = int
  0x0000000110dd8e20: mov    0x14(%rsi),%ebx
  0x0000000110dd8e23: shl    $0x3,%rbx
  0x0000000110dd8e27: mov    0x28(%rbx),%ebx
  0x0000000110dd8e2a: shl    $0x3,%rbx
  0x0000000110dd8e2e: mov    0x24(%rbx),%ebx
  0x0000000110dd8e31: shl    $0x3,%rbx
  0x0000000110dd8e35: mov    0x10(%rbx),%rbx
  0x0000000110dd8e39: test   %rbx,%rbx
  0x0000000110dd8e3c: je     0x0000000110dd8e45
  0x0000000110dd8e42: jmpq   *0x38(%rbx)
  0x0000000110dd8e45: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dd8e4a: hlt    
  0x0000000110dd8e4b: hlt    
  0x0000000110dd8e4c: hlt    
  0x0000000110dd8e4d: hlt    
  0x0000000110dd8e4e: hlt    
  0x0000000110dd8e4f: hlt    
Compiled method (c2)     150   39             java.lang.String::charAt (25 bytes)
 total in heap  [0x0000000110dd8890,0x0000000110dd8c38] = 936
 relocation     [0x0000000110dd8a08,0x0000000110dd8a18] = 16
 main code      [0x0000000110dd8a20,0x0000000110dd8ac0] = 160
 stub code      [0x0000000110dd8ac0,0x0000000110dd8ad8] = 24
 metadata       [0x0000000110dd8ad8,0x0000000110dd8af0] = 24
 scopes data    [0x0000000110dd8af0,0x0000000110dd8b50] = 96
 scopes pcs     [0x0000000110dd8b50,0x0000000110dd8c20] = 208
 dependencies   [0x0000000110dd8c20,0x0000000110dd8c28] = 8
 nul chk table  [0x0000000110dd8c28,0x0000000110dd8c38] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x0000000110dd8a20, 0x0000000110dd8ad8]  184 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed6e4b8} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110dd8a20: mov    0x8(%rsi),%r10d
  0x0000000110dd8a24: movabs $0x800000000,%r12
  0x0000000110dd8a2e: add    %r12,%r10
  0x0000000110dd8a31: xor    %r12,%r12
  0x0000000110dd8a34: cmp    %r10,%rax
  0x0000000110dd8a37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dd8a3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dd8a40: mov    %eax,-0x14000(%rsp)
  0x0000000110dd8a47: push   %rbp
  0x0000000110dd8a48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)

  0x0000000110dd8a4c: movsbl 0x14(%rsi),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000110dd8a51: test   %r10d,%r10d
  0x0000000110dd8a54: jne    0x0000000110dd8a7d  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000110dd8a56: mov    0xc(%rsi),%ebp     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x0000000110dd8a59: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x0000000110dd8aa6
  0x0000000110dd8a5e: cmp    %r10d,%edx
  0x0000000110dd8a61: jae    0x0000000110dd8a96
  0x0000000110dd8a63: lea    (%r12,%rbp,8),%r10
  0x0000000110dd8a67: movzbl 0x10(%r10,%rdx,1),%eax  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000110dd8a6d: add    $0x20,%rsp
  0x0000000110dd8a71: pop    %rbp
  0x0000000110dd8a72: mov    0x108(%r15),%r10
  0x0000000110dd8a79: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dd8a7c: retq   
  0x0000000110dd8a7d: mov    %rsi,%rbp
  0x0000000110dd8a80: mov    %edx,(%rsp)
  0x0000000110dd8a83: mov    %r10d,0x4(%rsp)
  0x0000000110dd8a88: mov    $0xffffff4d,%esi
  0x0000000110dd8a8d: xchg   %ax,%ax
  0x0000000110dd8a8f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd8a94: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000110dd8a96: mov    $0xffffffe5,%esi
  0x0000000110dd8a9b: mov    %edx,0x4(%rsp)
  0x0000000110dd8a9f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd8aa4: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000110dd8aa6: mov    $0xfffffff6,%esi
  0x0000000110dd8aab: mov    %edx,0x4(%rsp)
  0x0000000110dd8aaf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd8ab4: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000110dd8ab6: hlt    
  0x0000000110dd8ab7: hlt    
  0x0000000110dd8ab8: hlt    
  0x0000000110dd8ab9: hlt    
  0x0000000110dd8aba: hlt    
  0x0000000110dd8abb: hlt    
  0x0000000110dd8abc: hlt    
  0x0000000110dd8abd: hlt    
  0x0000000110dd8abe: hlt    
  0x0000000110dd8abf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dd8ac0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dd8ac5: callq  0x0000000110dd8aca
  0x0000000110dd8aca: subq   $0x5,(%rsp)
  0x0000000110dd8acf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dd8ad4: hlt    
  0x0000000110dd8ad5: hlt    
  0x0000000110dd8ad6: hlt    
  0x0000000110dd8ad7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 116 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 132 148 Compiled method (c2)     153   40             java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x0000000110dd8590,0x0000000110dd8860] = 720
 relocation     [0x0000000110dd8708,0x0000000110dd8718] = 16
 main code      [0x0000000110dd8720,0x0000000110dd8780] = 96
 stub code      [0x0000000110dd8780,0x0000000110dd8798] = 24
 metadata       [0x0000000110dd8798,0x0000000110dd87a0] = 8
 scopes data    [0x0000000110dd87a0,0x0000000110dd87c8] = 40
 scopes pcs     [0x0000000110dd87c8,0x0000000110dd8848] = 128
 dependencies   [0x0000000110dd8848,0x0000000110dd8850] = 8
 nul chk table  [0x0000000110dd8850,0x0000000110dd8860] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x0000000110dd8720, 0x0000000110dd8798]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec1988} 'charAt' '([BI)C' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110dd8720: mov    %eax,-0x14000(%rsp)
  0x0000000110dd8727: push   %rbp
  0x0000000110dd8728: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)

  0x0000000110dd872c: mov    0xc(%rsi),%r10d    ; implicit exception: dispatches to 0x0000000110dd875e
  0x0000000110dd8730: cmp    %r10d,%edx
  0x0000000110dd8733: jae    0x0000000110dd874a
  0x0000000110dd8735: movzbl 0x10(%rsi,%rdx,1),%eax  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)

  0x0000000110dd873a: add    $0x20,%rsp
  0x0000000110dd873e: pop    %rbp
  0x0000000110dd873f: mov    0x108(%r15),%r10
  0x0000000110dd8746: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dd8749: retq   
  0x0000000110dd874a: mov    %rsi,%rbp
  0x0000000110dd874d: mov    %edx,0x4(%rsp)
  0x0000000110dd8751: mov    $0xffffffe5,%esi
  0x0000000110dd8756: nop
  0x0000000110dd8757: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd875c: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)

  0x0000000110dd875e: mov    %rsi,%rbp
  0x0000000110dd8761: mov    %edx,0x4(%rsp)
  0x0000000110dd8765: mov    $0xfffffff6,%esi
  0x0000000110dd876a: nop
  0x0000000110dd876b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dd8770: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)

  0x0000000110dd8772: hlt    
  0x0000000110dd8773: hlt    
  0x0000000110dd8774: hlt    
  0x0000000110dd8775: hlt    
  0x0000000110dd8776: hlt    
  0x0000000110dd8777: hlt    
  0x0000000110dd8778: hlt    
  0x0000000110dd8779: hlt    
  0x0000000110dd877a: hlt    
  0x0000000110dd877b: hlt    
  0x0000000110dd877c: hlt    
  0x0000000110dd877d: hlt    
  0x0000000110dd877e: hlt    
  0x0000000110dd877f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dd8780: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dd8785: callq  0x0000000110dd878a
  0x0000000110dd878a: subq   $0x5,(%rsp)
  0x0000000110dd878f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dd8794: hlt    
  0x0000000110dd8795: hlt    
  0x0000000110dd8796: hlt    
  0x0000000110dd8797: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 60 80 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110ddcb20, 0x0000000110ddcb48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15fab0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = int
  # parm9:    [sp+0x18]   = int
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x0000000110ddcb20: mov    0x30(%rsp),%rbx
  0x0000000110ddcb25: mov    0x24(%rbx),%ebx
  0x0000000110ddcb28: shl    $0x3,%rbx
  0x0000000110ddcb2c: mov    0x10(%rbx),%rbx
  0x0000000110ddcb30: test   %rbx,%rbx
  0x0000000110ddcb33: je     0x0000000110ddcb3c
  0x0000000110ddcb39: jmpq   *0x38(%rbx)
  0x0000000110ddcb3c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddcb41: hlt    
  0x0000000110ddcb42: hlt    
  0x0000000110ddcb43: hlt    
  0x0000000110ddcb44: hlt    
  0x0000000110ddcb45: hlt    
  0x0000000110ddcb46: hlt    
  0x0000000110ddcb47: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110ddc920, 0x0000000110ddc950]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15fbc8} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddc920: mov    0x14(%rsi),%ebx
  0x0000000110ddc923: shl    $0x3,%rbx
  0x0000000110ddc927: mov    0x28(%rbx),%ebx
  0x0000000110ddc92a: shl    $0x3,%rbx
  0x0000000110ddc92e: mov    0x24(%rbx),%ebx
  0x0000000110ddc931: shl    $0x3,%rbx
  0x0000000110ddc935: mov    0x10(%rbx),%rbx
  0x0000000110ddc939: test   %rbx,%rbx
  0x0000000110ddc93c: je     0x0000000110ddc945
  0x0000000110ddc942: jmpq   *0x38(%rbx)
  0x0000000110ddc945: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddc94a: hlt    
  0x0000000110ddc94b: hlt    
  0x0000000110ddc94c: hlt    
  0x0000000110ddc94d: hlt    
  0x0000000110ddc94e: hlt    
  0x0000000110ddc94f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110ddc720, 0x0000000110ddc740]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15fce0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddc720: cmp    (%rsi),%rax
  0x0000000110ddc723: mov    0x24(%rcx),%ebx
  0x0000000110ddc726: shl    $0x3,%rbx
  0x0000000110ddc72a: mov    0x10(%rbx),%rbx
  0x0000000110ddc72e: test   %rbx,%rbx
  0x0000000110ddc731: je     0x0000000110ddc73a
  0x0000000110ddc737: jmpq   *0x38(%rbx)
  0x0000000110ddc73a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddc73f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;  [0x0000000110ddc520, 0x0000000110ddc550]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f15fe98} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = int
  # parm9:    [sp+0x20]   = int
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  0x0000000110ddc520: mov    0x14(%rsi),%ebx
  0x0000000110ddc523: shl    $0x3,%rbx
  0x0000000110ddc527: mov    0x28(%rbx),%ebx
  0x0000000110ddc52a: shl    $0x3,%rbx
  0x0000000110ddc52e: mov    0x24(%rbx),%ebx
  0x0000000110ddc531: shl    $0x3,%rbx
  0x0000000110ddc535: mov    0x10(%rbx),%rbx
  0x0000000110ddc539: test   %rbx,%rbx
  0x0000000110ddc53c: je     0x0000000110ddc545
  0x0000000110ddc542: jmpq   *0x38(%rbx)
  0x0000000110ddc545: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddc54a: hlt    
  0x0000000110ddc54b: hlt    
  0x0000000110ddc54c: hlt    
  0x0000000110ddc54d: hlt    
  0x0000000110ddc54e: hlt    
  0x0000000110ddc54f: hlt    
Compiled method (c2)     164   45             java.lang.String::coder (15 bytes)
 total in heap  [0x0000000110ddaa90,0x0000000110ddacd8] = 584
 relocation     [0x0000000110ddac08,0x0000000110ddac18] = 16
 main code      [0x0000000110ddac20,0x0000000110ddac60] = 64
 stub code      [0x0000000110ddac60,0x0000000110ddac78] = 24
 metadata       [0x0000000110ddac78,0x0000000110ddac80] = 8
 scopes data    [0x0000000110ddac80,0x0000000110ddac90] = 16
 scopes pcs     [0x0000000110ddac90,0x0000000110ddacd0] = 64
 dependencies   [0x0000000110ddacd0,0x0000000110ddacd8] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x0000000110ddac20, 0x0000000110ddac78]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed731a0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110ddac20: mov    0x8(%rsi),%r10d
  0x0000000110ddac24: movabs $0x800000000,%r12
  0x0000000110ddac2e: add    %r12,%r10
  0x0000000110ddac31: xor    %r12,%r12
  0x0000000110ddac34: cmp    %r10,%rax
  0x0000000110ddac37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddac3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110ddac40: sub    $0x18,%rsp
  0x0000000110ddac47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)

  0x0000000110ddac4c: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x0000000110ddac50: add    $0x10,%rsp
  0x0000000110ddac54: pop    %rbp
  0x0000000110ddac55: mov    0x108(%r15),%r10
  0x0000000110ddac5c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddac5f: retq   
[Exception Handler]
[Stub Code]
  0x0000000110ddac60: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddac65: callq  0x0000000110ddac6a
  0x0000000110ddac6a: subq   $0x5,(%rsp)
  0x0000000110ddac6f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddac74: hlt    
  0x0000000110ddac75: hlt    
  0x0000000110ddac76: hlt    
  0x0000000110ddac77: hlt    
Compiled method (c2)     171   46             java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)
 total in heap  [0x0000000110dda790,0x0000000110ddaa70] = 736
 relocation     [0x0000000110dda908,0x0000000110dda918] = 16
 main code      [0x0000000110dda920,0x0000000110dda980] = 96
 stub code      [0x0000000110dda980,0x0000000110dda998] = 24
 metadata       [0x0000000110dda998,0x0000000110dda9a8] = 16
 scopes data    [0x0000000110dda9a8,0x0000000110dda9d8] = 48
 scopes pcs     [0x0000000110dda9d8,0x0000000110ddaa58] = 128
 dependencies   [0x0000000110ddaa58,0x0000000110ddaa60] = 8
 nul chk table  [0x0000000110ddaa60,0x0000000110ddaa70] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle.internalMemberName(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110dda920, 0x0000000110dda998]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eddc3f8} 'internalMemberName' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/DirectMethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110dda920: mov    %eax,-0x14000(%rsp)
  0x0000000110dda927: push   %rbp
  0x0000000110dda928: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@-1 (line 310)

  0x0000000110dda92c: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x0000000110dda966
  0x0000000110dda930: cmp    $0xc0e0,%r11d      ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110dda937: jne    0x0000000110dda954  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)

  0x0000000110dda939: mov    0x1c(%rsi),%r11d
  0x0000000110dda93d: mov    %r11,%rax
  0x0000000110dda940: shl    $0x3,%rax          ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)

  0x0000000110dda944: add    $0x10,%rsp
  0x0000000110dda948: pop    %rbp
  0x0000000110dda949: mov    0x108(%r15),%r10
  0x0000000110dda950: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dda953: retq   
  0x0000000110dda954: mov    %rsi,%rbp
  0x0000000110dda957: mov    $0xffffffde,%esi
  0x0000000110dda95c: data16 xchg %ax,%ax
  0x0000000110dda95f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dda964: ud2    
  0x0000000110dda966: mov    $0xfffffff4,%esi
  0x0000000110dda96b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dda970: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)

  0x0000000110dda972: hlt    
  0x0000000110dda973: hlt    
  0x0000000110dda974: hlt    
  0x0000000110dda975: hlt    
  0x0000000110dda976: hlt    
  0x0000000110dda977: hlt    
  0x0000000110dda978: hlt    
  0x0000000110dda979: hlt    
  0x0000000110dda97a: hlt    
  0x0000000110dda97b: hlt    
  0x0000000110dda97c: hlt    
  0x0000000110dda97d: hlt    
  0x0000000110dda97e: hlt    
  0x0000000110dda97f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dda980: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dda985: callq  0x0000000110dda98a
  0x0000000110dda98a: subq   $0x5,(%rsp)
  0x0000000110dda98f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dda994: hlt    
  0x0000000110dda995: hlt    
  0x0000000110dda996: hlt    
  0x0000000110dda997: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 68 
ImmutableOopMap{}pc offsets: 80 Compiled method (c2)     176   47             java.lang.String::length (11 bytes)
 total in heap  [0x0000000110dda490,0x0000000110dda750] = 704
 relocation     [0x0000000110dda608,0x0000000110dda618] = 16
 main code      [0x0000000110dda620,0x0000000110dda680] = 96
 stub code      [0x0000000110dda680,0x0000000110dda698] = 24
 metadata       [0x0000000110dda698,0x0000000110dda6a0] = 8
 scopes data    [0x0000000110dda6a0,0x0000000110dda6c8] = 40
 scopes pcs     [0x0000000110dda6c8,0x0000000110dda738] = 112
 dependencies   [0x0000000110dda738,0x0000000110dda740] = 8
 nul chk table  [0x0000000110dda740,0x0000000110dda750] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x0000000110dda620, 0x0000000110dda698]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed6e330} 'length' '()I' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110dda620: mov    0x8(%rsi),%r10d
  0x0000000110dda624: movabs $0x800000000,%r12
  0x0000000110dda62e: add    %r12,%r10
  0x0000000110dda631: xor    %r12,%r12
  0x0000000110dda634: cmp    %r10,%rax
  0x0000000110dda637: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dda63d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dda640: mov    %eax,-0x14000(%rsp)
  0x0000000110dda647: push   %rbp
  0x0000000110dda648: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)

  0x0000000110dda64c: mov    0xc(%rsi),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)

  0x0000000110dda650: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000110dda66b
  0x0000000110dda655: movsbl 0x14(%rsi),%ecx
  0x0000000110dda659: sar    %cl,%eax           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)

  0x0000000110dda65b: add    $0x10,%rsp
  0x0000000110dda65f: pop    %rbp
  0x0000000110dda660: mov    0x108(%r15),%r10
  0x0000000110dda667: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dda66a: retq   
  0x0000000110dda66b: mov    $0xfffffff6,%esi
  0x0000000110dda670: data16 xchg %ax,%ax
  0x0000000110dda673: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dda678: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)

  0x0000000110dda67a: hlt    
  0x0000000110dda67b: hlt    
  0x0000000110dda67c: hlt    
  0x0000000110dda67d: hlt    
  0x0000000110dda67e: hlt    
  0x0000000110dda67f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dda680: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dda685: callq  0x0000000110dda68a
  0x0000000110dda68a: subq   $0x5,(%rsp)
  0x0000000110dda68f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dda694: hlt    
  0x0000000110dda695: hlt    
  0x0000000110dda696: hlt    
  0x0000000110dda697: hlt    

ImmutableOopMap{}pc offsets: 88 Compiled method (c2)     179   48             java.lang.Integer::stringSize (47 bytes)
 total in heap  [0x0000000110dda090,0x0000000110dda408] = 888
 relocation     [0x0000000110dda208,0x0000000110dda218] = 16
 main code      [0x0000000110dda220,0x0000000110dda2e0] = 192
 stub code      [0x0000000110dda2e0,0x0000000110dda2f8] = 24
 metadata       [0x0000000110dda2f8,0x0000000110dda300] = 8
 scopes data    [0x0000000110dda300,0x0000000110dda350] = 80
 scopes pcs     [0x0000000110dda350,0x0000000110dda400] = 176
 dependencies   [0x0000000110dda400,0x0000000110dda408] = 8
----------------------------------------------------------------------
java/lang/Integer.stringSize(I)I  [0x0000000110dda220, 0x0000000110dda2f8]  216 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ee61ea8} 'stringSize' '(I)I' in 'java/lang/Integer'
  # parm0:    rsi       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110dda220: mov    %eax,-0x14000(%rsp)
  0x0000000110dda227: push   %rbp
  0x0000000110dda228: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Integer::stringSize@-1 (line 535)

  0x0000000110dda22c: test   %esi,%esi
  0x0000000110dda22e: jl     0x0000000110dda2a1  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@3 (line 536)

  0x0000000110dda230: neg    %esi               ;*ineg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@9 (line 538)

  0x0000000110dda232: cmp    $0xfffffff6,%esi
  0x0000000110dda235: jle    0x0000000110dda23e
  0x0000000110dda237: mov    $0x1,%eax
  0x0000000110dda23c: jmp    0x0000000110dda291
  0x0000000110dda23e: mov    $0x2,%eax
  0x0000000110dda243: cmp    $0xffffff9c,%esi
  0x0000000110dda246: jg     0x0000000110dda291
  0x0000000110dda248: cmp    $0xfffffc18,%esi
  0x0000000110dda24e: jg     0x0000000110dda28f
  0x0000000110dda250: mov    $0x4,%eax
  0x0000000110dda255: cmp    $0xffffd8f0,%esi
  0x0000000110dda25b: jg     0x0000000110dda291
  0x0000000110dda25d: cmp    $0xfffe7960,%esi
  0x0000000110dda263: jg     0x0000000110dda28f
  0x0000000110dda265: mov    $0x6,%eax
  0x0000000110dda26a: cmp    $0xfff0bdc0,%esi
  0x0000000110dda270: jg     0x0000000110dda291
  0x0000000110dda272: cmp    $0xff676980,%esi
  0x0000000110dda278: jg     0x0000000110dda28f
  0x0000000110dda27a: mov    $0x8,%eax
  0x0000000110dda27f: cmp    $0xfa0a1f00,%esi
  0x0000000110dda285: jg     0x0000000110dda291
  0x0000000110dda287: cmp    $0xc4653600,%esi
  0x0000000110dda28d: jle    0x0000000110dda2b2  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@24 (line 542)

  0x0000000110dda28f: inc    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@36 (line 541)

  0x0000000110dda291: add    $0x20,%rsp
  0x0000000110dda295: pop    %rbp
  0x0000000110dda296: mov    0x108(%r15),%r10
  0x0000000110dda29d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dda2a0: retq   
  0x0000000110dda2a1: mov    %esi,(%rsp)
  0x0000000110dda2a4: mov    $0xffffff4d,%esi
  0x0000000110dda2a9: xchg   %ax,%ax
  0x0000000110dda2ab: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@3 (line 536)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dda2b0: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@3 (line 536)

  0x0000000110dda2b2: mov    %esi,%ebp
  0x0000000110dda2b4: mov    $0xffffff4d,%esi
  0x0000000110dda2b9: xchg   %ax,%ax
  0x0000000110dda2bb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@19 (line 541)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dda2c0: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::stringSize@19 (line 541)

  0x0000000110dda2c2: hlt    
  0x0000000110dda2c3: hlt    
  0x0000000110dda2c4: hlt    
  0x0000000110dda2c5: hlt    
  0x0000000110dda2c6: hlt    
  0x0000000110dda2c7: hlt    
  0x0000000110dda2c8: hlt    
  0x0000000110dda2c9: hlt    
  0x0000000110dda2ca: hlt    
  0x0000000110dda2cb: hlt    
  0x0000000110dda2cc: hlt    
  0x0000000110dda2cd: hlt    
  0x0000000110dda2ce: hlt    
  0x0000000110dda2cf: hlt    
  0x0000000110dda2d0: hlt    
  0x0000000110dda2d1: hlt    
  0x0000000110dda2d2: hlt    
  0x0000000110dda2d3: hlt    
  0x0000000110dda2d4: hlt    
  0x0000000110dda2d5: hlt    
  0x0000000110dda2d6: hlt    
  0x0000000110dda2d7: hlt    
  0x0000000110dda2d8: hlt    
  0x0000000110dda2d9: hlt    
  0x0000000110dda2da: hlt    
  0x0000000110dda2db: hlt    
  0x0000000110dda2dc: hlt    
  0x0000000110dda2dd: hlt    
  0x0000000110dda2de: hlt    
  0x0000000110dda2df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dda2e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dda2e5: callq  0x0000000110dda2ea
  0x0000000110dda2ea: subq   $0x5,(%rsp)
  0x0000000110dda2ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dda2f4: hlt    
  0x0000000110dda2f5: hlt    
  0x0000000110dda2f6: hlt    
  0x0000000110dda2f7: hlt    

ImmutableOopMap{}pc offsets: 144 160 ----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x0000000110ddc140, 0x0000000110ddc350]  528 bytes
[Entry Point]
  # {method} {0x000000011ed8c1c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000110ddc140: mov    0x8(%rsi),%r10d
  0x0000000110ddc144: movabs $0x800000000,%r12
  0x0000000110ddc14e: add    %r12,%r10
  0x0000000110ddc151: xor    %r12,%r12
  0x0000000110ddc154: cmp    %r10,%rax
  0x0000000110ddc157: je     0x0000000110ddc168
  0x0000000110ddc15d: jmpq   0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddc162: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000110ddc168: mov    %eax,-0x14000(%rsp)
  0x0000000110ddc16f: push   %rbp
  0x0000000110ddc170: mov    %rsp,%rbp
  0x0000000110ddc173: sub    $0x50,%rsp
  0x0000000110ddc177: mov    %r9,(%rsp)
  0x0000000110ddc17b: mov    %r8,%r9
  0x0000000110ddc17e: mov    %rcx,0x18(%rsp)
  0x0000000110ddc183: cmp    $0x0,%rcx
  0x0000000110ddc187: lea    0x18(%rsp),%r8
  0x0000000110ddc18c: cmove  0x18(%rsp),%r8
  0x0000000110ddc192: mov    %rdx,%rcx
  0x0000000110ddc195: mov    %rsi,0x8(%rsp)
  0x0000000110ddc19a: cmp    $0x0,%rsi
  0x0000000110ddc19e: lea    0x8(%rsp),%rdx
  0x0000000110ddc1a3: cmove  0x8(%rsp),%rdx
  0x0000000110ddc1a9: movabs $0x70ff00d60,%r14  ;   {oop(a 'java/lang/Class'{0x000000070ff00d60} = 'java/lang/System')}
  0x0000000110ddc1b3: mov    %r14,0x38(%rsp)
  0x0000000110ddc1b8: lea    0x38(%rsp),%r14
  0x0000000110ddc1bd: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x0000000110ddc1c0: vzeroupper 
  0x0000000110ddc1c3: movabs $0x110ddc1c0,%r10  ;   {internal_word}
  0x0000000110ddc1cd: mov    %r10,0x328(%r15)
  0x0000000110ddc1d4: mov    %rsp,0x320(%r15)
  0x0000000110ddc1db: cmpb   $0x0,-0x8aa1a90(%rip)        # 0x000000010833a752
                                                ;   {external_word}
  0x0000000110ddc1e2: je     0x0000000110ddc226
  0x0000000110ddc1e8: push   %rsi
  0x0000000110ddc1e9: push   %rdx
  0x0000000110ddc1ea: push   %rcx
  0x0000000110ddc1eb: push   %r8
  0x0000000110ddc1ed: push   %r9
  0x0000000110ddc1ef: movabs $0x11ed8c1c8,%rsi  ;   {metadata({method} {0x000000011ed8c1c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x0000000110ddc1f9: mov    %r15,%rdi
  0x0000000110ddc1fc: test   $0xf,%esp
  0x0000000110ddc202: je     0x0000000110ddc21a
  0x0000000110ddc208: sub    $0x8,%rsp
  0x0000000110ddc20c: callq  0x0000000107e77a6a  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000110ddc211: add    $0x8,%rsp
  0x0000000110ddc215: jmpq   0x0000000110ddc21f
  0x0000000110ddc21a: callq  0x0000000107e77a6a  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000110ddc21f: pop    %r9
  0x0000000110ddc221: pop    %r8
  0x0000000110ddc223: pop    %rcx
  0x0000000110ddc224: pop    %rdx
  0x0000000110ddc225: pop    %rsi
  0x0000000110ddc226: lea    0x340(%r15),%rdi
  0x0000000110ddc22d: movl   $0x4,0x3b8(%r15)
  0x0000000110ddc238: callq  0x0000000107c164cf  ;   {runtime_call JVM_ArrayCopy}
  0x0000000110ddc23d: vzeroupper 
  0x0000000110ddc240: movl   $0x5,0x3b8(%r15)
  0x0000000110ddc24b: lock addl $0x0,-0x40(%rsp)
  0x0000000110ddc251: testb  $0x8,0x108(%r15)
  0x0000000110ddc259: jne    0x0000000110ddc270
  0x0000000110ddc25f: cmpl   $0x0,0xd8(%r15)
  0x0000000110ddc26a: je     0x0000000110ddc28c
  0x0000000110ddc270: vzeroupper 
  0x0000000110ddc273: mov    %r15,%rdi
  0x0000000110ddc276: mov    %rsp,%r12
  0x0000000110ddc279: sub    $0x0,%rsp
  0x0000000110ddc27d: and    $0xfffffffffffffff0,%rsp
  0x0000000110ddc281: callq  0x0000000107f07f18  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000110ddc286: mov    %r12,%rsp
  0x0000000110ddc289: xor    %r12,%r12
  0x0000000110ddc28c: movl   $0x8,0x3b8(%r15)
  0x0000000110ddc297: cmpl   $0x2,0x408(%r15)
  0x0000000110ddc2a2: je     0x0000000110ddc330
  0x0000000110ddc2a8: cmpb   $0x0,-0x8aa1b5d(%rip)        # 0x000000010833a752
                                                ;   {external_word}
  0x0000000110ddc2af: je     0x0000000110ddc2e5
  0x0000000110ddc2b5: movabs $0x11ed8c1c8,%rsi  ;   {metadata({method} {0x000000011ed8c1c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x0000000110ddc2bf: mov    %r15,%rdi
  0x0000000110ddc2c2: test   $0xf,%esp
  0x0000000110ddc2c8: je     0x0000000110ddc2e0
  0x0000000110ddc2ce: sub    $0x8,%rsp
  0x0000000110ddc2d2: callq  0x0000000107e77ae4  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000110ddc2d7: add    $0x8,%rsp
  0x0000000110ddc2db: jmpq   0x0000000110ddc2e5
  0x0000000110ddc2e0: callq  0x0000000107e77ae4  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000110ddc2e5: movabs $0x0,%r10
  0x0000000110ddc2ef: mov    %r10,0x320(%r15)
  0x0000000110ddc2f6: movabs $0x0,%r10
  0x0000000110ddc300: mov    %r10,0x328(%r15)
  0x0000000110ddc307: vzeroupper 
  0x0000000110ddc30a: mov    0xe0(%r15),%rcx
  0x0000000110ddc311: movl   $0x0,0x100(%rcx)
  0x0000000110ddc31b: leaveq 
  0x0000000110ddc31c: cmpq   $0x0,0x8(%r15)
  0x0000000110ddc324: jne    0x0000000110ddc32b
  0x0000000110ddc32a: retq   
  0x0000000110ddc32b: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000110ddc330: vzeroupper 
  0x0000000110ddc333: mov    %rsp,%r12
  0x0000000110ddc336: sub    $0x0,%rsp
  0x0000000110ddc33a: and    $0xfffffffffffffff0,%rsp
  0x0000000110ddc33e: callq  0x0000000107e7998a  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000110ddc343: mov    %r12,%rsp
  0x0000000110ddc346: xor    %r12,%r12
  0x0000000110ddc349: jmpq   0x0000000110ddc2a8
  0x0000000110ddc34e: hlt    
  0x0000000110ddc34f: hlt    
Compiled method (c2)     189   50             java.lang.String::<init> (15 bytes)
 total in heap  [0x0000000110ddbc10,0x0000000110ddbf38] = 808
 relocation     [0x0000000110ddbd88,0x0000000110ddbd98] = 16
 main code      [0x0000000110ddbda0,0x0000000110ddbec0] = 288
 stub code      [0x0000000110ddbec0,0x0000000110ddbed8] = 24
 metadata       [0x0000000110ddbed8,0x0000000110ddbee0] = 8
 scopes data    [0x0000000110ddbee0,0x0000000110ddbef0] = 16
 scopes pcs     [0x0000000110ddbef0,0x0000000110ddbf30] = 64
 dependencies   [0x0000000110ddbf30,0x0000000110ddbf38] = 8
----------------------------------------------------------------------
java/lang/String.<init>([BB)V  [0x0000000110ddbda0, 0x0000000110ddbed8]  312 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed730e8} '<init>' '([BB)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = byte
  #           [sp+0x20]  (sp of caller)
  0x0000000110ddbda0: mov    0x8(%rsi),%r10d
  0x0000000110ddbda4: movabs $0x800000000,%r12
  0x0000000110ddbdae: add    %r12,%r10
  0x0000000110ddbdb1: xor    %r12,%r12
  0x0000000110ddbdb4: cmp    %r10,%rax
  0x0000000110ddbdb7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddbdbd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110ddbdc0: sub    $0x18,%rsp
  0x0000000110ddbdc7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 3252)

  0x0000000110ddbdcc: mov    %ecx,%ebp
  0x0000000110ddbdce: mov    %rdx,%rbx
  0x0000000110ddbdd1: cmpb   $0x0,0x30(%r15)
  0x0000000110ddbdd6: jne    0x0000000110ddbe68
  0x0000000110ddbddc: mov    %rsi,%r13
  0x0000000110ddbddf: mov    %r13,%r10
  0x0000000110ddbde2: mov    %rbx,%r8
  0x0000000110ddbde5: shr    $0x3,%r8
  0x0000000110ddbde9: mov    %r8d,0xc(%r13)
  0x0000000110ddbded: mov    %rbx,%r11
  0x0000000110ddbdf0: xor    %r10,%r11
  0x0000000110ddbdf3: shr    $0x14,%r11
  0x0000000110ddbdf7: test   %r11,%r11
  0x0000000110ddbdfa: je     0x0000000110ddbe54
  0x0000000110ddbdfc: test   %rbx,%rbx
  0x0000000110ddbdff: je     0x0000000110ddbe54
  0x0000000110ddbe01: shr    $0x9,%r10
  0x0000000110ddbe05: movabs $0x110569000,%rdi
  0x0000000110ddbe0f: add    %r10,%rdi
  0x0000000110ddbe12: cmpb   $0x20,(%rdi)
  0x0000000110ddbe15: je     0x0000000110ddbe54
  0x0000000110ddbe17: mov    0x70(%r15),%r10
  0x0000000110ddbe1b: mov    0x80(%r15),%r11
  0x0000000110ddbe22: lock addl $0x0,-0x40(%rsp)
  0x0000000110ddbe28: cmpb   $0x0,(%rdi)
  0x0000000110ddbe2b: je     0x0000000110ddbe54
  0x0000000110ddbe2d: movb   $0x0,(%rdi)
  0x0000000110ddbe30: test   %r10,%r10
  0x0000000110ddbe33: jne    0x0000000110ddbe47
  0x0000000110ddbe35: mov    %r15,%rsi
  0x0000000110ddbe38: movabs $0x107aec8ce,%r10
  0x0000000110ddbe42: callq  *%r10
  0x0000000110ddbe45: jmp    0x0000000110ddbe54
  0x0000000110ddbe47: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110ddbe4c: add    $0xfffffffffffffff8,%r10
  0x0000000110ddbe50: mov    %r10,0x70(%r15)
  0x0000000110ddbe54: mov    %bpl,0x14(%r13)
  0x0000000110ddbe58: add    $0x10,%rsp
  0x0000000110ddbe5c: pop    %rbp
  0x0000000110ddbe5d: mov    0x108(%r15),%r10
  0x0000000110ddbe64: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddbe67: retq   
  0x0000000110ddbe68: mov    %rsi,%r13
  0x0000000110ddbe6b: mov    0xc(%rsi),%r10d
  0x0000000110ddbe6f: test   %r10d,%r10d
  0x0000000110ddbe72: je     0x0000000110ddbddf
  0x0000000110ddbe78: mov    0x38(%r15),%r11
  0x0000000110ddbe7c: mov    %r10,%rdi
  0x0000000110ddbe7f: shl    $0x3,%rdi
  0x0000000110ddbe83: test   %r11,%r11
  0x0000000110ddbe86: je     0x0000000110ddbe9e
  0x0000000110ddbe88: mov    0x48(%r15),%r10
  0x0000000110ddbe8c: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110ddbe91: add    $0xfffffffffffffff8,%r11
  0x0000000110ddbe95: mov    %r11,0x38(%r15)
  0x0000000110ddbe99: jmpq   0x0000000110ddbddf
  0x0000000110ddbe9e: mov    %r15,%rsi
  0x0000000110ddbea1: movabs $0x107aec8aa,%r10
  0x0000000110ddbeab: callq  *%r10
  0x0000000110ddbeae: jmpq   0x0000000110ddbddf  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)

  0x0000000110ddbeb3: hlt    
  0x0000000110ddbeb4: hlt    
  0x0000000110ddbeb5: hlt    
  0x0000000110ddbeb6: hlt    
  0x0000000110ddbeb7: hlt    
  0x0000000110ddbeb8: hlt    
  0x0000000110ddbeb9: hlt    
  0x0000000110ddbeba: hlt    
  0x0000000110ddbebb: hlt    
  0x0000000110ddbebc: hlt    
  0x0000000110ddbebd: hlt    
  0x0000000110ddbebe: hlt    
  0x0000000110ddbebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddbec0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddbec5: callq  0x0000000110ddbeca
  0x0000000110ddbeca: subq   $0x5,(%rsp)
  0x0000000110ddbecf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddbed4: hlt    
  0x0000000110ddbed5: hlt    
  0x0000000110ddbed6: hlt    
  0x0000000110ddbed7: hlt    
Compiled method (c2)     199   51             java.lang.Integer::getChars (131 bytes)
 total in heap  [0x0000000110ddb010,0x0000000110ddbbd8] = 3016
 relocation     [0x0000000110ddb188,0x0000000110ddb1a8] = 32
 main code      [0x0000000110ddb1c0,0x0000000110ddb560] = 928
 stub code      [0x0000000110ddb560,0x0000000110ddb578] = 24
 oops           [0x0000000110ddb578,0x0000000110ddb580] = 8
 metadata       [0x0000000110ddb580,0x0000000110ddb588] = 8
 scopes data    [0x0000000110ddb588,0x0000000110ddb708] = 384
 scopes pcs     [0x0000000110ddb708,0x0000000110ddbbb8] = 1200
 dependencies   [0x0000000110ddbbb8,0x0000000110ddbbc0] = 8
 nul chk table  [0x0000000110ddbbc0,0x0000000110ddbbd8] = 24
----------------------------------------------------------------------
java/lang/Integer.getChars(II[B)I  [0x0000000110ddb1c0, 0x0000000110ddb578]  952 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ee61da0} 'getChars' '(II[B)I' in 'java/lang/Integer'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x0000000110ddb1c0: mov    %eax,-0x14000(%rsp)
  0x0000000110ddb1c7: push   %rbp
  0x0000000110ddb1c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.Integer::getChars@-1 (line 487)

  0x0000000110ddb1cc: mov    %edx,%eax
  0x0000000110ddb1ce: mov    %rcx,%r10
  0x0000000110ddb1d1: mov    %esi,%edx
  0x0000000110ddb1d3: test   %esi,%esi
  0x0000000110ddb1d5: jl     0x0000000110ddb4fa  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@4 (line 489)

  0x0000000110ddb1db: mov    %eax,%ebx
  0x0000000110ddb1dd: dec    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@44 (line 499)

  0x0000000110ddb1df: neg    %edx               ;*ineg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@20 (line 491)

  0x0000000110ddb1e1: mov    %edx,%ecx
  0x0000000110ddb1e3: sar    $0x1f,%ecx         ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb1e6: cmp    $0xffffff9c,%edx
  0x0000000110ddb1e9: jle    0x0000000110ddb1f3  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@25 (line 495)

  0x0000000110ddb1eb: mov    %r10,%r9
  0x0000000110ddb1ee: jmpq   0x0000000110ddb29f
  0x0000000110ddb1f3: mov    %r10,%r9
  0x0000000110ddb1f6: mov    0xc(%r10),%r10d    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)
                                                ; implicit exception: dispatches to 0x0000000110ddb52e
  0x0000000110ddb1fa: movslq %edx,%r11
  0x0000000110ddb1fd: imul   $0x51eb851f,%r11,%r11
  0x0000000110ddb204: sar    $0x25,%r11
  0x0000000110ddb208: mov    %r11d,%edi
  0x0000000110ddb20b: sub    %ecx,%edi          ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb20d: imul   $0x64,%edi,%r8d
  0x0000000110ddb211: sub    %edx,%r8d          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@38 (line 497)

  0x0000000110ddb214: cmp    $0x64,%r8d
  0x0000000110ddb218: jae    0x0000000110ddb4b8
  0x0000000110ddb21e: movslq %r8d,%rdx
  0x0000000110ddb221: movabs $0x70ff08080,%r13  ;   {oop([B{0x000000070ff08080})}
  0x0000000110ddb22b: movsbl 0x10(%r13,%rdx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)

  0x0000000110ddb231: cmp    %r10d,%ebx
  0x0000000110ddb234: jae    0x0000000110ddb4d8
  0x0000000110ddb23a: mov    %eax,%r11d
  0x0000000110ddb23d: mov    %cl,0xf(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)

  0x0000000110ddb242: mov    %r11d,%ebp
  0x0000000110ddb245: add    $0xfffffffe,%ebp   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@57 (line 500)

  0x0000000110ddb248: movabs $0x70ff08008,%rsi  ;   {oop([B{0x000000070ff08008})}
  0x0000000110ddb252: movsbl 0x10(%rsi,%rdx,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@67 (line 500)

  0x0000000110ddb258: test   %ebp,%ebp
  0x0000000110ddb25a: jl     0x0000000110ddb45d
  0x0000000110ddb260: add    $0xfffffffc,%r11d
  0x0000000110ddb264: mov    %r10d,%ebx
  0x0000000110ddb267: dec    %ebx
  0x0000000110ddb269: cmp    %ebx,%r11d
  0x0000000110ddb26c: cmovg  %ebx,%r11d
  0x0000000110ddb270: mov    $0xffffffff,%ecx
  0x0000000110ddb275: cmp    %ecx,%r11d
  0x0000000110ddb278: cmovl  %ecx,%r11d         ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb27c: cmp    %r10d,%ebp
  0x0000000110ddb27f: jae    0x0000000110ddb461
  0x0000000110ddb285: movslq %ebp,%rax
  0x0000000110ddb288: mov    %r8b,0x10(%r9,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@68 (line 500)

  0x0000000110ddb28d: mov    %edi,%ecx
  0x0000000110ddb28f: sar    $0x1f,%ecx         ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb292: mov    %ebp,%ebx
  0x0000000110ddb294: dec    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@44 (line 499)

  0x0000000110ddb296: cmp    $0xffffff9c,%edi
  0x0000000110ddb299: jle    0x0000000110ddb311
  0x0000000110ddb29b: mov    %edi,%edx
  0x0000000110ddb29d: mov    %ebp,%eax          ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@25 (line 495)

  0x0000000110ddb29f: movslq %edx,%r10
  0x0000000110ddb2a2: imul   $0x66666667,%r10,%r10
  0x0000000110ddb2a9: sar    $0x22,%r10
  0x0000000110ddb2ad: mov    %r10d,%edi
  0x0000000110ddb2b0: sub    %ecx,%edi          ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@75 (line 504)

  0x0000000110ddb2b2: mov    %edi,%r11d
  0x0000000110ddb2b5: shl    $0x3,%r11d
  0x0000000110ddb2b9: mov    %edi,%r8d
  0x0000000110ddb2bc: shl    %r8d
  0x0000000110ddb2bf: add    %r11d,%r8d
  0x0000000110ddb2c2: sub    %edx,%r8d
  0x0000000110ddb2c5: add    $0x30,%r8d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@95 (line 506)

  0x0000000110ddb2c9: movsbl %r8b,%ebp          ;*i2b {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@96 (line 506)

  0x0000000110ddb2cd: mov    0xc(%r9),%r10d     ; implicit exception: dispatches to 0x0000000110ddb51e
  0x0000000110ddb2d1: cmp    %r10d,%ebx
  0x0000000110ddb2d4: jae    0x0000000110ddb47a
  0x0000000110ddb2da: mov    %r8b,0x10(%r9,%rbx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@97 (line 506)

  0x0000000110ddb2df: test   %edi,%edi
  0x0000000110ddb2e1: jl     0x0000000110ddb2e7  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@99 (line 509)

  0x0000000110ddb2e3: mov    %ebx,%eax
  0x0000000110ddb2e5: jmp    0x0000000110ddb301
  0x0000000110ddb2e7: add    $0xfffffffe,%eax   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@103 (line 510)

  0x0000000110ddb2ea: mov    $0x30,%r8d
  0x0000000110ddb2f0: sub    %edi,%r8d          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@111 (line 510)

  0x0000000110ddb2f3: cmp    %r10d,%eax
  0x0000000110ddb2f6: jae    0x0000000110ddb496
  0x0000000110ddb2fc: mov    %r8b,0x10(%r9,%rax,1)  ;*synchronization entry
                                                ; - java.lang.Integer::getChars@-1 (line 487)

  0x0000000110ddb301: add    $0x30,%rsp
  0x0000000110ddb305: pop    %rbp
  0x0000000110ddb306: mov    0x108(%r15),%r10
  0x0000000110ddb30d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddb310: retq                      ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb311: movslq %edi,%r8
  0x0000000110ddb314: imul   $0x51eb851f,%r8,%r8
  0x0000000110ddb31b: sar    $0x25,%r8
  0x0000000110ddb31f: mov    %r8d,%edx
  0x0000000110ddb322: sub    %ecx,%edx          ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb324: imul   $0x64,%edx,%r8d
  0x0000000110ddb328: sub    %edi,%r8d          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@38 (line 497)

  0x0000000110ddb32b: cmp    $0x64,%r8d
  0x0000000110ddb32f: jae    0x0000000110ddb4b2
  0x0000000110ddb335: movslq %r8d,%rdi
  0x0000000110ddb338: movsbl 0x10(%r13,%rdi,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)

  0x0000000110ddb33e: cmp    %r10d,%ebx
  0x0000000110ddb341: jae    0x0000000110ddb4d6
  0x0000000110ddb347: mov    %cl,0xf(%r9,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)

  0x0000000110ddb34c: movsbl 0x10(%rsi,%rdi,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@67 (line 500)

  0x0000000110ddb352: mov    %ebp,%eax
  0x0000000110ddb354: add    $0xfffffffe,%eax   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@57 (line 500)

  0x0000000110ddb357: cmp    %r11d,%eax
  0x0000000110ddb35a: jle    0x0000000110ddb376
  0x0000000110ddb35c: mov    %edx,%edi
  0x0000000110ddb35e: mov    %eax,%ebp
  0x0000000110ddb360: jmpq   0x0000000110ddb27c
  0x0000000110ddb365: data16 xchg %ax,%ax
  0x0000000110ddb368: mov    %edx,%edi
  0x0000000110ddb36a: jmpq   0x0000000110ddb3ea
  0x0000000110ddb36f: nop
  0x0000000110ddb370: mov    %edi,%edx
  0x0000000110ddb372: mov    %ebp,%eax
  0x0000000110ddb374: jmp    0x0000000110ddb37a
  0x0000000110ddb376: test   %eax,%eax
  0x0000000110ddb378: jle    0x0000000110ddb3d7  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb37a: mov    %eax,%ebx
  0x0000000110ddb37c: dec    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@44 (line 499)

  0x0000000110ddb37e: mov    %edx,%ecx
  0x0000000110ddb380: sar    $0x1f,%ecx         ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb383: movslq %eax,%rbp
  0x0000000110ddb386: mov    %r8b,0x10(%r9,%rbp,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@68 (line 500)

  0x0000000110ddb38b: cmp    $0xffffff9c,%edx
  0x0000000110ddb38e: jg     0x0000000110ddb29f  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb394: movslq %edx,%r11
  0x0000000110ddb397: imul   $0x51eb851f,%r11,%r11
  0x0000000110ddb39e: sar    $0x25,%r11
  0x0000000110ddb3a2: mov    %r11d,%edi
  0x0000000110ddb3a5: sub    %ecx,%edi          ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb3a7: imul   $0x64,%edi,%r8d
  0x0000000110ddb3ab: sub    %edx,%r8d          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@38 (line 497)

  0x0000000110ddb3ae: cmp    $0x64,%r8d
  0x0000000110ddb3b2: jae    0x0000000110ddb4b4
  0x0000000110ddb3b8: movslq %r8d,%r8           ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)

  0x0000000110ddb3bb: movsbl 0x10(%r13,%r8,1),%r11d
  0x0000000110ddb3c1: mov    %r11b,0xf(%r9,%rbp,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)

  0x0000000110ddb3c6: movsbl 0x10(%rsi,%r8,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@67 (line 500)

  0x0000000110ddb3cc: mov    %eax,%ebp
  0x0000000110ddb3ce: add    $0xfffffffe,%ebp   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@57 (line 500)

  0x0000000110ddb3d1: test   %ebp,%ebp
  0x0000000110ddb3d3: jg     0x0000000110ddb370
  0x0000000110ddb3d5: jmp    0x0000000110ddb3e1
  0x0000000110ddb3d7: mov    %edx,%ebx
  0x0000000110ddb3d9: mov    %ebp,%edx
  0x0000000110ddb3db: mov    %ebx,%edi
  0x0000000110ddb3dd: mov    %eax,%ebp
  0x0000000110ddb3df: mov    %edx,%eax
  0x0000000110ddb3e1: cmp    $0xffffffff,%ebp
  0x0000000110ddb3e4: jle    0x0000000110ddb512  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb3ea: cmp    %r10d,%ebp
  0x0000000110ddb3ed: jae    0x0000000110ddb461
  0x0000000110ddb3ef: movslq %ebp,%r11
  0x0000000110ddb3f2: mov    %r8b,0x10(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@68 (line 500)

  0x0000000110ddb3f7: mov    %edi,%ecx
  0x0000000110ddb3f9: sar    $0x1f,%ecx         ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb3fc: mov    %ebp,%ebx
  0x0000000110ddb3fe: dec    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@44 (line 499)

  0x0000000110ddb400: cmp    $0xffffff9c,%edi
  0x0000000110ddb403: jle    0x0000000110ddb40e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@25 (line 495)

  0x0000000110ddb405: mov    %edi,%edx
  0x0000000110ddb407: mov    %ebp,%eax
  0x0000000110ddb409: jmpq   0x0000000110ddb29f  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@28 (line 496)

  0x0000000110ddb40e: movslq %edi,%r8
  0x0000000110ddb411: imul   $0x51eb851f,%r8,%r8
  0x0000000110ddb418: sar    $0x25,%r8
  0x0000000110ddb41c: mov    %r8d,%edx
  0x0000000110ddb41f: sub    %ecx,%edx          ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@31 (line 496)

  0x0000000110ddb421: imul   $0x64,%edx,%r8d
  0x0000000110ddb425: sub    %edi,%r8d          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@38 (line 497)

  0x0000000110ddb428: cmp    $0x64,%r8d
  0x0000000110ddb42c: jae    0x0000000110ddb4b6
  0x0000000110ddb432: movslq %r8d,%rdi
  0x0000000110ddb435: movsbl 0x10(%r13,%rdi,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)

  0x0000000110ddb43b: cmp    %r10d,%ebx
  0x0000000110ddb43e: jae    0x0000000110ddb4d6
  0x0000000110ddb444: mov    %cl,0xf(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)

  0x0000000110ddb449: movsbl 0x10(%rsi,%rdi,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@67 (line 500)

  0x0000000110ddb44f: add    $0xfffffffe,%ebp   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@57 (line 500)

  0x0000000110ddb452: cmp    $0xffffffff,%ebp
  0x0000000110ddb455: jg     0x0000000110ddb368
  0x0000000110ddb45b: jmp    0x0000000110ddb45f
  0x0000000110ddb45d: mov    %edi,%edx
  0x0000000110ddb45f: mov    %edx,%edi
  0x0000000110ddb461: mov    $0xffffffe4,%esi
  0x0000000110ddb466: mov    %edi,(%rsp)
  0x0000000110ddb469: mov    %r9,0x10(%rsp)
  0x0000000110ddb46e: mov    %r8d,0x18(%rsp)
  0x0000000110ddb473: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@68 (line 500)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb478: ud2    
  0x0000000110ddb47a: mov    $0xffffffe4,%esi
  0x0000000110ddb47f: mov    %edi,0x8(%rsp)
  0x0000000110ddb483: mov    %r9,0x10(%rsp)
  0x0000000110ddb488: mov    %ebx,0x18(%rsp)
  0x0000000110ddb48c: data16 xchg %ax,%ax
  0x0000000110ddb48f: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@97 (line 506)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb494: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@113 (line 510)

  0x0000000110ddb496: movsbl %r8b,%ebp          ;*i2b {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@112 (line 510)

  0x0000000110ddb49a: mov    $0xffffffe4,%esi
  0x0000000110ddb49f: mov    %r9,0x10(%rsp)
  0x0000000110ddb4a4: mov    %eax,0xc(%rsp)
  0x0000000110ddb4a8: data16 xchg %ax,%ax
  0x0000000110ddb4ab: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@113 (line 510)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb4b0: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@113 (line 510)

  0x0000000110ddb4b2: mov    %edx,%edi
  0x0000000110ddb4b4: mov    %edi,%edx
  0x0000000110ddb4b6: mov    %edx,%edi
  0x0000000110ddb4b8: mov    $0xffffffe4,%esi
  0x0000000110ddb4bd: mov    %edi,%ebp
  0x0000000110ddb4bf: mov    %r9,0x10(%rsp)
  0x0000000110ddb4c4: mov    %ebx,0x18(%rsp)
  0x0000000110ddb4c8: mov    %r8d,0x1c(%rsp)
  0x0000000110ddb4cd: xchg   %ax,%ax
  0x0000000110ddb4cf: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb4d4: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@54 (line 499)

  0x0000000110ddb4d6: mov    %edx,%edi
  0x0000000110ddb4d8: mov    $0xffffffe4,%esi
  0x0000000110ddb4dd: mov    %edi,%ebp
  0x0000000110ddb4df: mov    %r8d,0x8(%rsp)
  0x0000000110ddb4e4: mov    %r9,0x10(%rsp)
  0x0000000110ddb4e9: mov    %ebx,0x18(%rsp)
  0x0000000110ddb4ed: mov    %ecx,0x1c(%rsp)
  0x0000000110ddb4f1: xchg   %ax,%ax
  0x0000000110ddb4f3: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb4f8: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@55 (line 499)

  0x0000000110ddb4fa: mov    $0xffffff4d,%esi
  0x0000000110ddb4ff: mov    %rcx,(%rsp)
  0x0000000110ddb503: mov    %eax,0x8(%rsp)
  0x0000000110ddb507: mov    %edx,0xc(%rsp)
  0x0000000110ddb50b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@4 (line 489)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb510: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@4 (line 489)

  0x0000000110ddb512: mov    %eax,%ebp
  0x0000000110ddb514: add    $0xfffffffe,%ebp   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@57 (line 500)

  0x0000000110ddb517: mov    %edi,%edx
  0x0000000110ddb519: jmpq   0x0000000110ddb45f
  0x0000000110ddb51e: mov    $0xfffffff6,%esi
  0x0000000110ddb523: mov    %ebx,(%rsp)
  0x0000000110ddb526: nop
  0x0000000110ddb527: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@97 (line 506)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb52c: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@97 (line 506)

  0x0000000110ddb52e: mov    $0xffffff7e,%esi
  0x0000000110ddb533: mov    %r9,(%rsp)
  0x0000000110ddb537: mov    %eax,0x8(%rsp)
  0x0000000110ddb53b: mov    %edx,0xc(%rsp)
  0x0000000110ddb53f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@25 (line 495)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddb544: ud2                       ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::getChars@75 (line 504)

  0x0000000110ddb546: hlt    
  0x0000000110ddb547: hlt    
  0x0000000110ddb548: hlt    
  0x0000000110ddb549: hlt    
  0x0000000110ddb54a: hlt    
  0x0000000110ddb54b: hlt    
  0x0000000110ddb54c: hlt    
  0x0000000110ddb54d: hlt    
  0x0000000110ddb54e: hlt    
  0x0000000110ddb54f: hlt    
  0x0000000110ddb550: hlt    
  0x0000000110ddb551: hlt    
  0x0000000110ddb552: hlt    
  0x0000000110ddb553: hlt    
  0x0000000110ddb554: hlt    
  0x0000000110ddb555: hlt    
  0x0000000110ddb556: hlt    
  0x0000000110ddb557: hlt    
  0x0000000110ddb558: hlt    
  0x0000000110ddb559: hlt    
  0x0000000110ddb55a: hlt    
  0x0000000110ddb55b: hlt    
  0x0000000110ddb55c: hlt    
  0x0000000110ddb55d: hlt    
  0x0000000110ddb55e: hlt    
  0x0000000110ddb55f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddb560: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddb565: callq  0x0000000110ddb56a
  0x0000000110ddb56a: subq   $0x5,(%rsp)
  0x0000000110ddb56f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddb574: hlt    
  0x0000000110ddb575: hlt    
  0x0000000110ddb576: hlt    
  0x0000000110ddb577: hlt    

ImmutableOopMap{[16]=Oop }pc offsets: 696 724 752 788 824 
ImmutableOopMap{[0]=Oop }pc offsets: 848 
ImmutableOopMap{}pc offsets: 876 
ImmutableOopMap{[0]=Oop }pc offsets: 900 Compiled method (c2)     213   52             java.lang.String::getBytes (44 bytes)
 total in heap  [0x0000000110dde510,0x0000000110dde990] = 1152
 relocation     [0x0000000110dde688,0x0000000110dde6a0] = 24
 main code      [0x0000000110dde6a0,0x0000000110dde7a0] = 256
 stub code      [0x0000000110dde7a0,0x0000000110dde7b8] = 24
 metadata       [0x0000000110dde7b8,0x0000000110dde7c8] = 16
 scopes data    [0x0000000110dde7c8,0x0000000110dde850] = 136
 scopes pcs     [0x0000000110dde850,0x0000000110dde970] = 288
 dependencies   [0x0000000110dde970,0x0000000110dde978] = 8
 nul chk table  [0x0000000110dde978,0x0000000110dde990] = 24
----------------------------------------------------------------------
java/lang/String.getBytes([BIB)V  [0x0000000110dde6a0, 0x0000000110dde7b8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed72d90} 'getBytes' '([BIB)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = byte
  #           [sp+0x40]  (sp of caller)
  0x0000000110dde6a0: mov    0x8(%rsi),%r10d
  0x0000000110dde6a4: movabs $0x800000000,%r12
  0x0000000110dde6ae: add    %r12,%r10
  0x0000000110dde6b1: xor    %r12,%r12
  0x0000000110dde6b4: cmp    %r10,%rax
  0x0000000110dde6b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dde6bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dde6c0: mov    %eax,-0x14000(%rsp)
  0x0000000110dde6c7: push   %rbp
  0x0000000110dde6c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::getBytes@-1 (line 3191)

  0x0000000110dde6cc: mov    %ecx,%r10d
  0x0000000110dde6cf: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::getBytes@1 (line 3191)

  0x0000000110dde6d4: cmp    %r8d,%r11d
  0x0000000110dde6d7: jne    0x0000000110dde752  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)

  0x0000000110dde6d9: mov    0xc(%rsi),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)

  0x0000000110dde6dc: mov    0xc(%r12,%rbx,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; implicit exception: dispatches to 0x0000000110dde776
  0x0000000110dde6e1: mov    %r8d,%ecx
  0x0000000110dde6e4: shl    %cl,%r10d          ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@16 (line 3192)

  0x0000000110dde6e7: mov    0xc(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110dde786
  0x0000000110dde6eb: test   %r10d,%r10d
  0x0000000110dde6ee: jl     0x0000000110dde733
  0x0000000110dde6f0: mov    %r10d,%r8d
  0x0000000110dde6f3: add    %ebp,%r8d
  0x0000000110dde6f6: cmp    %r8d,%r11d
  0x0000000110dde6f9: jb     0x0000000110dde733  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)

  0x0000000110dde6fb: test   %ebp,%ebp
  0x0000000110dde6fd: jbe    0x0000000110dde720
  0x0000000110dde6ff: lea    0x10(%rdx,%r10,1),%rsi
  0x0000000110dde704: lea    (%r12,%rbx,8),%r10  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)

  0x0000000110dde708: lea    0x10(%r12,%rbx,8),%rdi
  0x0000000110dde70d: movslq %ebp,%rdx
  0x0000000110dde710: vzeroupper 
  0x0000000110dde713: movabs $0x110d9ecc0,%r10
  0x0000000110dde71d: callq  *%r10
  0x0000000110dde720: vzeroupper 
  0x0000000110dde723: add    $0x30,%rsp
  0x0000000110dde727: pop    %rbp
  0x0000000110dde728: mov    0x108(%r15),%r10
  0x0000000110dde72f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dde732: retq   
  0x0000000110dde733: mov    $0xffffffcc,%esi
  0x0000000110dde738: mov    %rdx,(%rsp)
  0x0000000110dde73c: mov    %r10d,0x8(%rsp)
  0x0000000110dde741: mov    %ebx,0xc(%rsp)
  0x0000000110dde745: data16 xchg %ax,%ax
  0x0000000110dde748: vzeroupper 
  0x0000000110dde74b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [12]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dde750: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)

  0x0000000110dde752: mov    %rsi,%rbp
  0x0000000110dde755: mov    %rdx,(%rsp)
  0x0000000110dde759: mov    %ecx,0x8(%rsp)
  0x0000000110dde75d: mov    %r11d,0x10(%rsp)
  0x0000000110dde762: mov    %r8d,0x14(%rsp)
  0x0000000110dde767: mov    $0xffffff4d,%esi
  0x0000000110dde76c: vzeroupper 
  0x0000000110dde76f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dde774: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)

  0x0000000110dde776: mov    $0xfffffff6,%esi
  0x0000000110dde77b: nop
  0x0000000110dde77c: vzeroupper 
  0x0000000110dde77f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dde784: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)

  0x0000000110dde786: mov    $0xfffffff6,%esi
  0x0000000110dde78b: mov    %r10d,(%rsp)
  0x0000000110dde78f: mov    %ebx,0x4(%rsp)
  0x0000000110dde793: nop
  0x0000000110dde794: vzeroupper 
  0x0000000110dde797: callq  0x0000000110d91900  ; ImmutableOopMap{[4]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dde79c: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)

  0x0000000110dde79e: hlt    
  0x0000000110dde79f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dde7a0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dde7a5: callq  0x0000000110dde7aa
  0x0000000110dde7aa: subq   $0x5,(%rsp)
  0x0000000110dde7af: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dde7b4: hlt    
  0x0000000110dde7b5: hlt    
  0x0000000110dde7b6: hlt    
  0x0000000110dde7b7: hlt    

ImmutableOopMap{[0]=Oop [12]=NarrowOop }pc offsets: 176 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 212 
ImmutableOopMap{}pc offsets: 228 
ImmutableOopMap{[4]=NarrowOop }pc offsets: 252 Compiled method (c2)     218   53             java.util.ArrayList::add (25 bytes)
 total in heap  [0x0000000110ddfa90,0x0000000110de0000] = 1392
 relocation     [0x0000000110ddfc08,0x0000000110ddfc20] = 24
 main code      [0x0000000110ddfc20,0x0000000110ddfde0] = 448
 stub code      [0x0000000110ddfde0,0x0000000110ddfdf8] = 24
 metadata       [0x0000000110ddfdf8,0x0000000110ddfe10] = 24
 scopes data    [0x0000000110ddfe10,0x0000000110ddfe98] = 136
 scopes pcs     [0x0000000110ddfe98,0x0000000110ddffe8] = 336
 dependencies   [0x0000000110ddffe8,0x0000000110ddfff0] = 8
 nul chk table  [0x0000000110ddfff0,0x0000000110de0000] = 16
----------------------------------------------------------------------
java/util/ArrayList.add(Ljava/lang/Object;)Z  [0x0000000110ddfc20, 0x0000000110ddfdf8]  472 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ef9dc68} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000110ddfc20: mov    0x8(%rsi),%r10d
  0x0000000110ddfc24: movabs $0x800000000,%r12
  0x0000000110ddfc2e: add    %r12,%r10
  0x0000000110ddfc31: xor    %r12,%r12
  0x0000000110ddfc34: cmp    %r10,%rax
  0x0000000110ddfc37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddfc3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110ddfc40: mov    %eax,-0x14000(%rsp)
  0x0000000110ddfc47: push   %rbp
  0x0000000110ddfc48: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 497)

  0x0000000110ddfc4c: mov    %rdx,%rbx
  0x0000000110ddfc4f: mov    %rsi,%r13
  0x0000000110ddfc52: mov    0x14(%rsi),%r11d   ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@13 (line 498)

  0x0000000110ddfc56: incl   0xc(%rsi)          ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@7 (line 497)

  0x0000000110ddfc59: mov    0xc(%r12,%r11,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 484)
                                                ; - java.util.ArrayList::add@20 (line 498)
                                                ; implicit exception: dispatches to 0x0000000110ddfdc6
  0x0000000110ddfc5e: mov    0x10(%rsi),%ebp    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@17 (line 498)

  0x0000000110ddfc61: cmp    %r8d,%ebp
  0x0000000110ddfc64: je     0x0000000110ddfda7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfc6a: cmp    %r8d,%ebp
  0x0000000110ddfc6d: jae    0x0000000110ddfd5a
  0x0000000110ddfc73: mov    0x8(%r12,%r11,8),%r10d
  0x0000000110ddfc78: cmp    $0x14118,%r10d     ;   {metadata('java/lang/Object'[])}
  0x0000000110ddfc7f: jne    0x0000000110ddfd76  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfc85: lea    (%r12,%r11,8),%r10  ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@13 (line 498)

  0x0000000110ddfc89: lea    0x10(%r10,%rbp,4),%r14
  0x0000000110ddfc8e: cmpb   $0x0,0x30(%r15)
  0x0000000110ddfc93: jne    0x0000000110ddfd28
  0x0000000110ddfc99: mov    %r14,%r10
  0x0000000110ddfc9c: mov    %rbx,%r8
  0x0000000110ddfc9f: shr    $0x3,%r8
  0x0000000110ddfca3: mov    %r8d,(%r14)
  0x0000000110ddfca6: mov    %rbx,%r11
  0x0000000110ddfca9: xor    %r10,%r11
  0x0000000110ddfcac: shr    $0x14,%r11
  0x0000000110ddfcb0: test   %r11,%r11
  0x0000000110ddfcb3: je     0x0000000110ddfd0d
  0x0000000110ddfcb5: test   %rbx,%rbx
  0x0000000110ddfcb8: je     0x0000000110ddfd0d
  0x0000000110ddfcba: shr    $0x9,%r10
  0x0000000110ddfcbe: movabs $0x110569000,%rdi
  0x0000000110ddfcc8: add    %r10,%rdi
  0x0000000110ddfccb: cmpb   $0x20,(%rdi)
  0x0000000110ddfcce: je     0x0000000110ddfd0d
  0x0000000110ddfcd0: mov    0x70(%r15),%r10
  0x0000000110ddfcd4: mov    0x80(%r15),%r11
  0x0000000110ddfcdb: lock addl $0x0,-0x40(%rsp)
  0x0000000110ddfce1: cmpb   $0x0,(%rdi)
  0x0000000110ddfce4: je     0x0000000110ddfd0d
  0x0000000110ddfce6: movb   $0x0,(%rdi)
  0x0000000110ddfce9: test   %r10,%r10
  0x0000000110ddfcec: jne    0x0000000110ddfd00
  0x0000000110ddfcee: mov    %r15,%rsi
  0x0000000110ddfcf1: movabs $0x107aec8ce,%r10
  0x0000000110ddfcfb: callq  *%r10
  0x0000000110ddfcfe: jmp    0x0000000110ddfd0d
  0x0000000110ddfd00: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110ddfd05: add    $0xfffffffffffffff8,%r10
  0x0000000110ddfd09: mov    %r10,0x70(%r15)    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfd0d: inc    %ebp
  0x0000000110ddfd0f: mov    %ebp,0x10(%r13)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@7 (line 497)

  0x0000000110ddfd13: mov    $0x1,%eax
  0x0000000110ddfd18: add    $0x30,%rsp
  0x0000000110ddfd1c: pop    %rbp
  0x0000000110ddfd1d: mov    0x108(%r15),%r10
  0x0000000110ddfd24: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddfd27: retq   
  0x0000000110ddfd28: mov    (%r14),%r10d
  0x0000000110ddfd2b: test   %r10d,%r10d
  0x0000000110ddfd2e: je     0x0000000110ddfc99
  0x0000000110ddfd34: mov    0x38(%r15),%r11
  0x0000000110ddfd38: mov    %r10,%rdi
  0x0000000110ddfd3b: shl    $0x3,%rdi
  0x0000000110ddfd3f: test   %r11,%r11
  0x0000000110ddfd42: je     0x0000000110ddfd92
  0x0000000110ddfd44: mov    0x48(%r15),%r10
  0x0000000110ddfd48: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110ddfd4d: add    $0xfffffffffffffff8,%r11
  0x0000000110ddfd51: mov    %r11,0x38(%r15)
  0x0000000110ddfd55: jmpq   0x0000000110ddfc99  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfd5a: mov    $0xffffffe4,%esi
  0x0000000110ddfd5f: mov    %r13,(%rsp)
  0x0000000110ddfd63: mov    %r11d,0x8(%rsp)
  0x0000000110ddfd68: mov    %rdx,0x10(%rsp)
  0x0000000110ddfd6d: xchg   %ax,%ax
  0x0000000110ddfd6f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddfd74: ud2                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfd76: mov    $0xffffffd6,%esi
  0x0000000110ddfd7b: mov    %r13,(%rsp)
  0x0000000110ddfd7f: mov    %r11d,0x8(%rsp)
  0x0000000110ddfd84: mov    %rdx,0x10(%rsp)
  0x0000000110ddfd89: xchg   %ax,%ax
  0x0000000110ddfd8b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddfd90: ud2    
  0x0000000110ddfd92: mov    %r15,%rsi
  0x0000000110ddfd95: movabs $0x107aec8aa,%r10
  0x0000000110ddfd9f: callq  *%r10              ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfda2: jmpq   0x0000000110ddfc99  ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 484)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfda7: mov    $0xffffff4d,%esi
  0x0000000110ddfdac: mov    %r13,(%rsp)
  0x0000000110ddfdb0: mov    %rdx,0x8(%rsp)
  0x0000000110ddfdb5: mov    %r11d,0x10(%rsp)
  0x0000000110ddfdba: mov    %r8d,0x14(%rsp)
  0x0000000110ddfdbf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=NarrowOop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)
                                                ; - java.util.ArrayList::add@20 (line 498)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddfdc4: ud2    
  0x0000000110ddfdc6: mov    $0xfffffff6,%esi
  0x0000000110ddfdcb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 484)
                                                ; - java.util.ArrayList::add@20 (line 498)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddfdd0: ud2                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ; - java.util.ArrayList::add@20 (line 498)

  0x0000000110ddfdd2: hlt    
  0x0000000110ddfdd3: hlt    
  0x0000000110ddfdd4: hlt    
  0x0000000110ddfdd5: hlt    
  0x0000000110ddfdd6: hlt    
  0x0000000110ddfdd7: hlt    
  0x0000000110ddfdd8: hlt    
  0x0000000110ddfdd9: hlt    
  0x0000000110ddfdda: hlt    
  0x0000000110ddfddb: hlt    
  0x0000000110ddfddc: hlt    
  0x0000000110ddfddd: hlt    
  0x0000000110ddfdde: hlt    
  0x0000000110ddfddf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddfde0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddfde5: callq  0x0000000110ddfdea
  0x0000000110ddfdea: subq   $0x5,(%rsp)
  0x0000000110ddfdef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddfdf4: hlt    
  0x0000000110ddfdf5: hlt    
  0x0000000110ddfdf6: hlt    
  0x0000000110ddfdf7: hlt    

ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop }pc offsets: 340 368 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=NarrowOop }pc offsets: 420 
ImmutableOopMap{}pc offsets: 432 Compiled method (c2)     223   54             java.util.ArrayList::add (23 bytes)
 total in heap  [0x0000000110ddf590,0x0000000110ddfa60] = 1232
 relocation     [0x0000000110ddf708,0x0000000110ddf720] = 24
 main code      [0x0000000110ddf720,0x0000000110ddf8c0] = 416
 stub code      [0x0000000110ddf8c0,0x0000000110ddf8d8] = 24
 metadata       [0x0000000110ddf8d8,0x0000000110ddf8e8] = 16
 scopes data    [0x0000000110ddf8e8,0x0000000110ddf948] = 96
 scopes pcs     [0x0000000110ddf948,0x0000000110ddfa48] = 256
 dependencies   [0x0000000110ddfa48,0x0000000110ddfa50] = 8
 nul chk table  [0x0000000110ddfa50,0x0000000110ddfa60] = 16
----------------------------------------------------------------------
java/util/ArrayList.add(Ljava/lang/Object;[Ljava/lang/Object;I)V  [0x0000000110ddf720, 0x0000000110ddf8d8]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ef9db98} 'add' '(Ljava/lang/Object;[Ljava/lang/Object;I)V' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = '[Ljava/lang/Object;'
  # parm2:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110ddf720: mov    0x8(%rsi),%r10d
  0x0000000110ddf724: movabs $0x800000000,%r12
  0x0000000110ddf72e: add    %r12,%r10
  0x0000000110ddf731: xor    %r12,%r12
  0x0000000110ddf734: cmp    %r10,%rax
  0x0000000110ddf737: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddf73d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110ddf740: mov    %eax,-0x14000(%rsp)
  0x0000000110ddf747: push   %rbp
  0x0000000110ddf748: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 484)

  0x0000000110ddf74c: mov    %rdx,%r13
  0x0000000110ddf74f: mov    %rsi,%rbp
  0x0000000110ddf752: mov    0xc(%rcx),%r11d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 484)
                                                ; implicit exception: dispatches to 0x0000000110ddf8b2
  0x0000000110ddf756: mov    %r8d,%ebx
  0x0000000110ddf759: cmp    %r11d,%r8d
  0x0000000110ddf75c: je     0x0000000110ddf893  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)

  0x0000000110ddf762: cmp    %r11d,%r8d
  0x0000000110ddf765: jae    0x0000000110ddf847
  0x0000000110ddf76b: mov    0x8(%rcx),%r10d
  0x0000000110ddf76f: cmp    $0x14118,%r10d     ;   {metadata('java/lang/Object'[])}
  0x0000000110ddf776: jne    0x0000000110ddf862
  0x0000000110ddf77c: lea    0x10(%rcx,%r8,4),%r14
  0x0000000110ddf781: cmpb   $0x0,0x30(%r15)
  0x0000000110ddf786: jne    0x0000000110ddf815
  0x0000000110ddf78c: mov    %r14,%r10
  0x0000000110ddf78f: mov    %r13,%r11
  0x0000000110ddf792: shr    $0x3,%r11
  0x0000000110ddf796: mov    %r11d,(%r14)
  0x0000000110ddf799: mov    %r13,%r11
  0x0000000110ddf79c: xor    %r10,%r11
  0x0000000110ddf79f: shr    $0x14,%r11
  0x0000000110ddf7a3: test   %r11,%r11
  0x0000000110ddf7a6: je     0x0000000110ddf800
  0x0000000110ddf7a8: test   %r13,%r13
  0x0000000110ddf7ab: je     0x0000000110ddf800
  0x0000000110ddf7ad: shr    $0x9,%r10
  0x0000000110ddf7b1: movabs $0x110569000,%rdi
  0x0000000110ddf7bb: add    %r10,%rdi
  0x0000000110ddf7be: cmpb   $0x20,(%rdi)
  0x0000000110ddf7c1: je     0x0000000110ddf800
  0x0000000110ddf7c3: mov    0x70(%r15),%r10
  0x0000000110ddf7c7: mov    0x80(%r15),%r11
  0x0000000110ddf7ce: lock addl $0x0,-0x40(%rsp)
  0x0000000110ddf7d4: cmpb   $0x0,(%rdi)
  0x0000000110ddf7d7: je     0x0000000110ddf800
  0x0000000110ddf7d9: movb   $0x0,(%rdi)
  0x0000000110ddf7dc: test   %r10,%r10
  0x0000000110ddf7df: jne    0x0000000110ddf7f3
  0x0000000110ddf7e1: mov    %r15,%rsi
  0x0000000110ddf7e4: movabs $0x107aec8ce,%r10
  0x0000000110ddf7ee: callq  *%r10
  0x0000000110ddf7f1: jmp    0x0000000110ddf800
  0x0000000110ddf7f3: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110ddf7f8: add    $0xfffffffffffffff8,%r10
  0x0000000110ddf7fc: mov    %r10,0x70(%r15)    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)

  0x0000000110ddf800: inc    %ebx
  0x0000000110ddf802: mov    %ebx,0x10(%rbp)    ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)

  0x0000000110ddf805: add    $0x30,%rsp
  0x0000000110ddf809: pop    %rbp
  0x0000000110ddf80a: mov    0x108(%r15),%r10
  0x0000000110ddf811: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddf814: retq   
  0x0000000110ddf815: mov    (%r14),%r11d
  0x0000000110ddf818: test   %r11d,%r11d
  0x0000000110ddf81b: je     0x0000000110ddf78c
  0x0000000110ddf821: mov    0x38(%r15),%r10
  0x0000000110ddf825: mov    %r11,%rdi
  0x0000000110ddf828: shl    $0x3,%rdi
  0x0000000110ddf82c: test   %r10,%r10
  0x0000000110ddf82f: je     0x0000000110ddf87e
  0x0000000110ddf831: mov    0x48(%r15),%r11
  0x0000000110ddf835: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110ddf83a: add    $0xfffffffffffffff8,%r10
  0x0000000110ddf83e: mov    %r10,0x38(%r15)    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)

  0x0000000110ddf842: jmpq   0x0000000110ddf78c
  0x0000000110ddf847: mov    $0xffffffe4,%esi
  0x0000000110ddf84c: mov    %rcx,0x8(%rsp)
  0x0000000110ddf851: mov    %r8d,0x4(%rsp)
  0x0000000110ddf856: mov    %rdx,0x10(%rsp)
  0x0000000110ddf85b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf860: ud2                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)

  0x0000000110ddf862: mov    $0xffffffd6,%esi
  0x0000000110ddf867: mov    %rcx,0x8(%rsp)
  0x0000000110ddf86c: mov    %r8d,0x4(%rsp)
  0x0000000110ddf871: mov    %rdx,0x10(%rsp)
  0x0000000110ddf876: nop
  0x0000000110ddf877: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf87c: ud2    
  0x0000000110ddf87e: mov    %r15,%rsi
  0x0000000110ddf881: movabs $0x107aec8aa,%r10
  0x0000000110ddf88b: callq  *%r10              ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)

  0x0000000110ddf88e: jmpq   0x0000000110ddf78c
  0x0000000110ddf893: mov    $0xffffff4d,%esi
  0x0000000110ddf898: mov    %rdx,(%rsp)
  0x0000000110ddf89c: mov    %rcx,0x8(%rsp)
  0x0000000110ddf8a1: mov    %r8d,0x14(%rsp)
  0x0000000110ddf8a6: mov    %r11d,0x18(%rsp)
  0x0000000110ddf8ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf8b0: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@3 (line 484)

  0x0000000110ddf8b2: mov    $0xfffffff6,%esi
  0x0000000110ddf8b7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 484)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf8bc: ud2                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@14 (line 486)

  0x0000000110ddf8be: hlt    
  0x0000000110ddf8bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddf8c0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddf8c5: callq  0x0000000110ddf8ca
  0x0000000110ddf8ca: subq   $0x5,(%rsp)
  0x0000000110ddf8cf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddf8d4: hlt    
  0x0000000110ddf8d5: hlt    
  0x0000000110ddf8d6: hlt    
  0x0000000110ddf8d7: hlt    

ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 320 348 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 400 
ImmutableOopMap{}pc offsets: 412 Compiled method (c2)     227   55             java.lang.invoke.DirectMethodHandle$Holder::invokeStatic (15 bytes)
 total in heap  [0x0000000110ddf190,0x0000000110ddf528] = 920
 relocation     [0x0000000110ddf308,0x0000000110ddf328] = 32
 main code      [0x0000000110ddf340,0x0000000110ddf3c0] = 128
 stub code      [0x0000000110ddf3c0,0x0000000110ddf3e8] = 40
 metadata       [0x0000000110ddf3e8,0x0000000110ddf400] = 24
 scopes data    [0x0000000110ddf400,0x0000000110ddf458] = 88
 scopes pcs     [0x0000000110ddf458,0x0000000110ddf4f8] = 160
 dependencies   [0x0000000110ddf4f8,0x0000000110ddf500] = 8
 handler table  [0x0000000110ddf500,0x0000000110ddf518] = 24
 nul chk table  [0x0000000110ddf518,0x0000000110ddf528] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;ILjava/lang/Object;)I  [0x0000000110ddf340, 0x0000000110ddf3e8]  168 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0a0f20} 'invokeStatic' '(Ljava/lang/Object;ILjava/lang/Object;)I' in 'java/lang/invoke/DirectMethodHandle$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110ddf340: mov    %eax,-0x14000(%rsp)
  0x0000000110ddf347: push   %rbp
  0x0000000110ddf348: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1

  0x0000000110ddf34c: mov    %rcx,%r10
  0x0000000110ddf34f: mov    0x8(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000110ddf3ab
  0x0000000110ddf353: cmp    $0xc0e0,%r8d       ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110ddf35a: jne    0x0000000110ddf384  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddf35c: mov    0x1c(%rsi),%r8d
  0x0000000110ddf360: mov    %r8,%rcx
  0x0000000110ddf363: shl    $0x3,%rcx          ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddf367: mov    %edx,%esi
  0x0000000110ddf369: mov    %r10,%rdx
  0x0000000110ddf36c: data16 xchg %ax,%ax
  0x0000000110ddf36f: callq  0x0000000110d90400  ; ImmutableOopMap{}
                                                ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ;   {static_call}
  0x0000000110ddf374: add    $0x20,%rsp
  0x0000000110ddf378: pop    %rbp
  0x0000000110ddf379: mov    0x108(%r15),%r10
  0x0000000110ddf380: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddf383: retq   
  0x0000000110ddf384: mov    %edx,%ebp
  0x0000000110ddf386: mov    %rcx,(%rsp)
  0x0000000110ddf38a: mov    %rsi,0x8(%rsp)
  0x0000000110ddf38f: mov    $0xffffff6e,%esi
  0x0000000110ddf394: data16 xchg %ax,%ax
  0x0000000110ddf397: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf39c: ud2                       ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11

  0x0000000110ddf39e: mov    %rax,%rsi
  0x0000000110ddf3a1: add    $0x20,%rsp
  0x0000000110ddf3a5: pop    %rbp
  0x0000000110ddf3a6: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110ddf3ab: mov    $0xffffff64,%esi
  0x0000000110ddf3b0: mov    %edx,%ebp
  0x0000000110ddf3b2: mov    %rcx,(%rsp)
  0x0000000110ddf3b6: nop
  0x0000000110ddf3b7: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddf3bc: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddf3be: hlt    
  0x0000000110ddf3bf: hlt    
[Stub Code]
  0x0000000110ddf3c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110ddf3ca: jmpq   0x0000000110ddf3ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110ddf3cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110ddf3d4: callq  0x0000000110ddf3d9
  0x0000000110ddf3d9: subq   $0x5,(%rsp)
  0x0000000110ddf3de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddf3e3: hlt    
  0x0000000110ddf3e4: hlt    
  0x0000000110ddf3e5: hlt    
  0x0000000110ddf3e6: hlt    
  0x0000000110ddf3e7: hlt    

ImmutableOopMap{}pc offsets: 52 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 92 
ImmutableOopMap{[0]=Oop }pc offsets: 124 Compiled method (c2)     230   56             java.lang.invoke.DirectMethodHandle$Holder::invokeStatic (20 bytes)
 total in heap  [0x0000000110dded90,0x0000000110ddf150] = 960
 relocation     [0x0000000110ddef08,0x0000000110ddef28] = 32
 main code      [0x0000000110ddef40,0x0000000110ddefe0] = 160
 stub code      [0x0000000110ddefe0,0x0000000110ddf008] = 40
 metadata       [0x0000000110ddf008,0x0000000110ddf020] = 24
 scopes data    [0x0000000110ddf020,0x0000000110ddf080] = 96
 scopes pcs     [0x0000000110ddf080,0x0000000110ddf120] = 160
 dependencies   [0x0000000110ddf120,0x0000000110ddf128] = 8
 handler table  [0x0000000110ddf128,0x0000000110ddf140] = 24
 nul chk table  [0x0000000110ddf140,0x0000000110ddf150] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;)I  [0x0000000110ddef40, 0x0000000110ddf008]  200 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0a0e60} 'invokeStatic' '(Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;)I' in 'java/lang/invoke/DirectMethodHandle$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000110ddef40: mov    %eax,-0x14000(%rsp)
  0x0000000110ddef47: push   %rbp
  0x0000000110ddef48: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1

  0x0000000110ddef4c: mov    %r9,%r10
  0x0000000110ddef4f: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x0000000110ddefb7
  0x0000000110ddef53: cmp    $0xc0e0,%r11d      ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110ddef5a: jne    0x0000000110ddef88  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddef5c: mov    0x1c(%rsi),%r11d
  0x0000000110ddef60: mov    %r11,%r9
  0x0000000110ddef63: shl    $0x3,%r9           ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddef67: mov    %edx,%esi
  0x0000000110ddef69: mov    %rcx,%rdx
  0x0000000110ddef6c: mov    %r8d,%ecx
  0x0000000110ddef6f: mov    %r10,%r8
  0x0000000110ddef72: nop
  0x0000000110ddef73: callq  0x0000000110d90400  ; ImmutableOopMap{}
                                                ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@16
                                                ;   {static_call}
  0x0000000110ddef78: add    $0x30,%rsp
  0x0000000110ddef7c: pop    %rbp
  0x0000000110ddef7d: mov    0x108(%r15),%r10
  0x0000000110ddef84: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddef87: retq   
  0x0000000110ddef88: mov    %edx,%ebp
  0x0000000110ddef8a: mov    %rcx,(%rsp)
  0x0000000110ddef8e: mov    %r8d,0x8(%rsp)
  0x0000000110ddef93: mov    %r9,0x10(%rsp)
  0x0000000110ddef98: mov    %rsi,0x18(%rsp)
  0x0000000110ddef9d: mov    $0xffffff6e,%esi
  0x0000000110ddefa2: nop
  0x0000000110ddefa3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddefa8: ud2                       ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@16

  0x0000000110ddefaa: mov    %rax,%rsi
  0x0000000110ddefad: add    $0x30,%rsp
  0x0000000110ddefb1: pop    %rbp
  0x0000000110ddefb2: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110ddefb7: mov    $0xffffff64,%esi
  0x0000000110ddefbc: mov    %edx,%ebp
  0x0000000110ddefbe: mov    %rcx,(%rsp)
  0x0000000110ddefc2: mov    %r8d,0x8(%rsp)
  0x0000000110ddefc7: mov    %r9,0x10(%rsp)
  0x0000000110ddefcc: data16 xchg %ax,%ax
  0x0000000110ddefcf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddefd4: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110ddefd6: hlt    
  0x0000000110ddefd7: hlt    
  0x0000000110ddefd8: hlt    
  0x0000000110ddefd9: hlt    
  0x0000000110ddefda: hlt    
  0x0000000110ddefdb: hlt    
  0x0000000110ddefdc: hlt    
  0x0000000110ddefdd: hlt    
  0x0000000110ddefde: hlt    
  0x0000000110ddefdf: hlt    
[Stub Code]
  0x0000000110ddefe0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110ddefea: jmpq   0x0000000110ddefea  ;   {runtime_call}
[Exception Handler]
  0x0000000110ddefef: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110ddeff4: callq  0x0000000110ddeff9
  0x0000000110ddeff9: subq   $0x5,(%rsp)
  0x0000000110ddeffe: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddf003: hlt    
  0x0000000110ddf004: hlt    
  0x0000000110ddf005: hlt    
  0x0000000110ddf006: hlt    
  0x0000000110ddf007: hlt    

ImmutableOopMap{}pc offsets: 56 
ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }pc offsets: 104 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 148 Compiled method (c2)     233   57             java.lang.StringConcatHelper::prepend (16 bytes)
 total in heap  [0x0000000110de1910,0x0000000110de1e18] = 1288
 relocation     [0x0000000110de1a88,0x0000000110de1aa0] = 24
 main code      [0x0000000110de1aa0,0x0000000110de1ba0] = 256
 stub code      [0x0000000110de1ba0,0x0000000110de1bb8] = 24
 metadata       [0x0000000110de1bb8,0x0000000110de1bd8] = 32
 scopes data    [0x0000000110de1bd8,0x0000000110de1ca0] = 200
 scopes pcs     [0x0000000110de1ca0,0x0000000110de1df0] = 336
 dependencies   [0x0000000110de1df0,0x0000000110de1df8] = 8
 nul chk table  [0x0000000110de1df8,0x0000000110de1e18] = 32
----------------------------------------------------------------------
java/lang/StringConcatHelper.prepend(I[BBLjava/lang/String;)I  [0x0000000110de1aa0, 0x0000000110de1bb8]  280 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0fffa0} 'prepend' '(I[BBLjava/lang/String;)I' in 'java/lang/StringConcatHelper'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = byte
  # parm3:    r8:r8     = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110de1aa0: mov    %eax,-0x14000(%rsp)
  0x0000000110de1aa7: push   %rbp
  0x0000000110de1aa8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.StringConcatHelper::prepend@-1 (line 331)

  0x0000000110de1aac: mov    %ecx,%r9d
  0x0000000110de1aaf: mov    0xc(%r8),%r11d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)
                                                ; implicit exception: dispatches to 0x0000000110de1b66
  0x0000000110de1ab3: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)
                                                ; implicit exception: dispatches to 0x0000000110de1b76
  0x0000000110de1ab8: movsbl 0x14(%r8),%ecx     ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)

  0x0000000110de1abd: mov    %r10d,%eax
  0x0000000110de1ac0: sar    %cl,%eax
  0x0000000110de1ac2: mov    %esi,%ebx
  0x0000000110de1ac4: sub    %eax,%ebx          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringConcatHelper::prepend@5 (line 331)

  0x0000000110de1ac6: cmp    %r9d,%ecx
  0x0000000110de1ac9: jne    0x0000000110de1b42  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1acb: mov    %ebx,%ebp
  0x0000000110de1acd: mov    %r9d,%ecx
  0x0000000110de1ad0: shl    %cl,%ebp           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@16 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1ad2: mov    0xc(%rdx),%r8d     ; implicit exception: dispatches to 0x0000000110de1b86
  0x0000000110de1ad6: test   %ebp,%ebp
  0x0000000110de1ad8: jl     0x0000000110de1b20
  0x0000000110de1ada: mov    %ebp,%r9d
  0x0000000110de1add: add    %r10d,%r9d
  0x0000000110de1ae0: cmp    %r9d,%r8d
  0x0000000110de1ae3: jb     0x0000000110de1b20  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1ae5: test   %r10d,%r10d
  0x0000000110de1ae8: jbe    0x0000000110de1b0b
  0x0000000110de1aea: lea    0x10(%rdx,%rbp,1),%rsi
  0x0000000110de1aef: lea    (%r12,%r11,8),%r8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)

  0x0000000110de1af3: lea    0x10(%r12,%r11,8),%rdi
  0x0000000110de1af8: movslq %r10d,%rdx
  0x0000000110de1afb: vzeroupper 
  0x0000000110de1afe: movabs $0x110d9ecc0,%r10
  0x0000000110de1b08: callq  *%r10
  0x0000000110de1b0b: mov    %ebx,%eax
  0x0000000110de1b0d: vzeroupper 
  0x0000000110de1b10: add    $0x30,%rsp
  0x0000000110de1b14: pop    %rbp
  0x0000000110de1b15: mov    0x108(%r15),%r10
  0x0000000110de1b1c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de1b1f: retq   
  0x0000000110de1b20: mov    $0xffffffcc,%esi
  0x0000000110de1b25: mov    %r11d,(%rsp)
  0x0000000110de1b29: mov    %rdx,0x8(%rsp)
  0x0000000110de1b2e: mov    %ebx,0x4(%rsp)
  0x0000000110de1b32: mov    %r10d,0x10(%rsp)
  0x0000000110de1b37: nop
  0x0000000110de1b38: vzeroupper 
  0x0000000110de1b3b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [8]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1b40: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1b42: mov    $0xffffff4d,%esi
  0x0000000110de1b47: mov    %r8,%rbp
  0x0000000110de1b4a: mov    %rdx,(%rsp)
  0x0000000110de1b4e: mov    %r9d,0xc(%rsp)
  0x0000000110de1b53: mov    %ebx,0x14(%rsp)
  0x0000000110de1b57: mov    %ecx,0x18(%rsp)
  0x0000000110de1b5b: nop
  0x0000000110de1b5c: vzeroupper 
  0x0000000110de1b5f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1b64: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1b66: mov    $0xfffffff6,%esi
  0x0000000110de1b6b: nop
  0x0000000110de1b6c: vzeroupper 
  0x0000000110de1b6f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1b74: ud2                       ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)

  0x0000000110de1b76: mov    $0xfffffff6,%esi
  0x0000000110de1b7b: nop
  0x0000000110de1b7c: vzeroupper 
  0x0000000110de1b7f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1b84: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.StringConcatHelper::prepend@2 (line 331)

  0x0000000110de1b86: mov    $0xfffffff6,%esi
  0x0000000110de1b8b: mov    %r11d,(%rsp)
  0x0000000110de1b8f: mov    %r10d,0x4(%rsp)
  0x0000000110de1b94: vzeroupper 
  0x0000000110de1b97: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1b9c: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.StringConcatHelper::prepend@11 (line 332)

  0x0000000110de1b9e: hlt    
  0x0000000110de1b9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de1ba0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de1ba5: callq  0x0000000110de1baa
  0x0000000110de1baa: subq   $0x5,(%rsp)
  0x0000000110de1baf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de1bb4: hlt    
  0x0000000110de1bb5: hlt    
  0x0000000110de1bb6: hlt    
  0x0000000110de1bb7: hlt    

ImmutableOopMap{[0]=NarrowOop [8]=Oop }pc offsets: 160 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 196 
ImmutableOopMap{}pc offsets: 212 228 
ImmutableOopMap{[0]=NarrowOop }pc offsets: 252 
Running the benchmark with a cold JVM
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110dda020, 0x0000000110dda040]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f183c88} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dda020: mov    0x24(%rdx),%ebx
  0x0000000110dda023: shl    $0x3,%rbx
  0x0000000110dda027: mov    0x10(%rbx),%rbx
  0x0000000110dda02b: test   %rbx,%rbx
  0x0000000110dda02e: je     0x0000000110dda037
  0x0000000110dda034: jmpq   *0x38(%rbx)
  0x0000000110dda037: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dda03c: hlt    
  0x0000000110dda03d: hlt    
  0x0000000110dda03e: hlt    
  0x0000000110dda03f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110ddaea0, 0x0000000110ddaec8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1874e0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x0000000110ddaea0: mov    0x10(%rsp),%rbx
  0x0000000110ddaea5: cmp    (%rsi),%rax
  0x0000000110ddaea8: mov    0x24(%rbx),%ebx
  0x0000000110ddaeab: shl    $0x3,%rbx
  0x0000000110ddaeaf: mov    0x10(%rbx),%rbx
  0x0000000110ddaeb3: test   %rbx,%rbx
  0x0000000110ddaeb6: je     0x0000000110ddaebf
  0x0000000110ddaebc: jmpq   *0x38(%rbx)
  0x0000000110ddaebf: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddaec4: hlt    
  0x0000000110ddaec5: hlt    
  0x0000000110ddaec6: hlt    
  0x0000000110ddaec7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()Ljava/lang/Object;  [0x0000000110dde220, 0x0000000110dde250]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f196400} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dde220: mov    0x14(%rsi),%ebx
  0x0000000110dde223: shl    $0x3,%rbx
  0x0000000110dde227: mov    0x28(%rbx),%ebx
  0x0000000110dde22a: shl    $0x3,%rbx
  0x0000000110dde22e: mov    0x24(%rbx),%ebx
  0x0000000110dde231: shl    $0x3,%rbx
  0x0000000110dde235: mov    0x10(%rbx),%rbx
  0x0000000110dde239: test   %rbx,%rbx
  0x0000000110dde23c: je     0x0000000110dde245
  0x0000000110dde242: jmpq   *0x38(%rbx)
  0x0000000110dde245: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dde24a: hlt    
  0x0000000110dde24b: hlt    
  0x0000000110dde24c: hlt    
  0x0000000110dde24d: hlt    
  0x0000000110dde24e: hlt    
  0x0000000110dde24f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dde020, 0x0000000110dde040]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f196518} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dde020: cmp    (%rsi),%rax
  0x0000000110dde023: mov    0x24(%rdx),%ebx
  0x0000000110dde026: shl    $0x3,%rbx
  0x0000000110dde02a: mov    0x10(%rbx),%rbx
  0x0000000110dde02e: test   %rbx,%rbx
  0x0000000110dde031: je     0x0000000110dde03a
  0x0000000110dde037: jmpq   *0x38(%rbx)
  0x0000000110dde03a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dde03f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000110ddde20, 0x0000000110ddde40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1967c0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddde20: cmp    (%rsi),%rax
  0x0000000110ddde23: mov    0x24(%rcx),%ebx
  0x0000000110ddde26: shl    $0x3,%rbx
  0x0000000110ddde2a: mov    0x10(%rbx),%rbx
  0x0000000110ddde2e: test   %rbx,%rbx
  0x0000000110ddde31: je     0x0000000110ddde3a
  0x0000000110ddde37: jmpq   *0x38(%rbx)
  0x0000000110ddde3a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddde3f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I  [0x0000000110ddd9a0, 0x0000000110ddd9c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1abc90} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddd9a0: mov    0x24(%rcx),%ebx
  0x0000000110ddd9a3: shl    $0x3,%rbx
  0x0000000110ddd9a7: mov    0x10(%rbx),%rbx
  0x0000000110ddd9ab: test   %rbx,%rbx
  0x0000000110ddd9ae: je     0x0000000110ddd9b7
  0x0000000110ddd9b4: jmpq   *0x38(%rbx)
  0x0000000110ddd9b7: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddd9bc: hlt    
  0x0000000110ddd9bd: hlt    
  0x0000000110ddd9be: hlt    
  0x0000000110ddd9bf: hlt    
Compiled method (c2)     254   64             jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
 total in heap  [0x0000000110de3a10,0x0000000110de4828] = 3608
 relocation     [0x0000000110de3b88,0x0000000110de3bb8] = 48
 main code      [0x0000000110de3bc0,0x0000000110de3fe0] = 1056
 stub code      [0x0000000110de3fe0,0x0000000110de4008] = 40
 metadata       [0x0000000110de4008,0x0000000110de4038] = 48
 scopes data    [0x0000000110de4038,0x0000000110de4238] = 512
 scopes pcs     [0x0000000110de4238,0x0000000110de47d8] = 1440
 dependencies   [0x0000000110de47d8,0x0000000110de47e0] = 8
 handler table  [0x0000000110de47e0,0x0000000110de47f8] = 24
 nul chk table  [0x0000000110de47f8,0x0000000110de4828] = 48
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ByteVector.putUTF8(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;  [0x0000000110de3bc0, 0x0000000110de4008]  1096 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f135bf8} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x0000000110de3bc0: mov    0x8(%rsi),%r10d
  0x0000000110de3bc4: movabs $0x800000000,%r12
  0x0000000110de3bce: add    %r12,%r10
  0x0000000110de3bd1: xor    %r12,%r12
  0x0000000110de3bd4: cmp    %r10,%rax
  0x0000000110de3bd7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de3bdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de3be0: mov    %eax,-0x14000(%rsp)
  0x0000000110de3be7: push   %rbp
  0x0000000110de3be8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)

  0x0000000110de3bec: mov    %rsi,%r10
  0x0000000110de3bef: mov    %rdx,%r9
  0x0000000110de3bf2: mov    0xc(%rdx),%r8d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x0000000110de3fa3
  0x0000000110de3bf6: mov    0xc(%r12,%r8,8),%r11d  ; implicit exception: dispatches to 0x0000000110de3fb2
  0x0000000110de3bfb: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x0000000110de3bff: sar    %cl,%r11d          ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x0000000110de3c02: cmp    $0xffff,%r11d
  0x0000000110de3c09: jg     0x0000000110de3f6e  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x0000000110de3c0f: mov    %rsi,%rdi
  0x0000000110de3c12: mov    0x10(%rsi),%r10d   ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x0000000110de3c16: mov    0xc(%r12,%r10,8),%ebx  ; implicit exception: dispatches to 0x0000000110de3fbe
  0x0000000110de3c1b: mov    0xc(%rsi),%edx     ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x0000000110de3c1e: mov    %r11d,%r10d
  0x0000000110de3c21: add    %edx,%r10d
  0x0000000110de3c24: add    $0x2,%r10d
  0x0000000110de3c28: cmp    %ebx,%r10d
  0x0000000110de3c2b: jg     0x0000000110de3e59  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3c31: mov    0x10(%rdi),%ebx    ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x0000000110de3c34: mov    %r11d,%esi
  0x0000000110de3c37: shr    $0x8,%esi          ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@59 (line 255)

  0x0000000110de3c3a: movsbl %sil,%eax          ;*i2b {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@60 (line 255)

  0x0000000110de3c3e: mov    0xc(%r12,%rbx,8),%ebp  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ; implicit exception: dispatches to 0x0000000110de3fca
  0x0000000110de3c43: mov    %edx,%r10d
  0x0000000110de3c46: inc    %r10d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@53 (line 255)

  0x0000000110de3c49: cmp    %ebp,%edx
  0x0000000110de3c4b: jae    0x0000000110de3ee6
  0x0000000110de3c51: lea    (%r12,%rbx,8),%rax  ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x0000000110de3c55: mov    %sil,0x10(%rax,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000000110de3c5a: mov    %edx,%r14d
  0x0000000110de3c5d: add    $0x2,%r14d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000110de3c61: cmp    %ebp,%r10d
  0x0000000110de3c64: jae    0x0000000110de3f12
  0x0000000110de3c6a: movslq %edx,%rsi
  0x0000000110de3c6d: mov    %r11b,0x11(%rax,%rsi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x0000000110de3c72: test   %r11d,%r11d
  0x0000000110de3c75: jle    0x0000000110de3e42  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000110de3c7b: test   %ecx,%ecx
  0x0000000110de3c7d: jne    0x0000000110de3f3e
  0x0000000110de3c83: mov    0xc(%r12,%r8,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x0000000110de3f3e
  0x0000000110de3c88: test   %r10d,%r10d
  0x0000000110de3c8b: jbe    0x0000000110de3f3e
  0x0000000110de3c91: movslq %r10d,%rcx
  0x0000000110de3c94: movslq %r11d,%r13
  0x0000000110de3c97: mov    %r13,%r10
  0x0000000110de3c9a: dec    %r10
  0x0000000110de3c9d: cmp    %rcx,%r10
  0x0000000110de3ca0: jae    0x0000000110de3f3e
  0x0000000110de3ca6: cmp    %ebp,%r14d
  0x0000000110de3ca9: jae    0x0000000110de3f3e
  0x0000000110de3caf: movslq %ebp,%r10
  0x0000000110de3cb2: movslq %r14d,%rcx
  0x0000000110de3cb5: add    %r13,%rcx
  0x0000000110de3cb8: dec    %rcx
  0x0000000110de3cbb: cmp    %r10,%rcx
  0x0000000110de3cbe: jae    0x0000000110de3f3e
  0x0000000110de3cc4: movsbl 0x10(%r12,%r8,8),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3cca: mov    %ecx,%ebp
  0x0000000110de3ccc: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3cd0: mov    %ebp,%r10d
  0x0000000110de3cd3: dec    %r10d
  0x0000000110de3cd6: cmp    $0x7f,%r10d
  0x0000000110de3cda: jae    0x0000000110de3f86  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3ce0: mov    %cl,0x12(%rax,%rsi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3ce4: mov    %r11d,%r13d
  0x0000000110de3ce7: add    $0xfffffffd,%r13d
  0x0000000110de3ceb: lea    (%r12,%r8,8),%rsi
  0x0000000110de3cef: mov    $0x1,%ecx
  0x0000000110de3cf4: mov    $0x80000000,%r8d
  0x0000000110de3cfa: cmp    %r13d,%r11d
  0x0000000110de3cfd: cmovl  %r8d,%r13d
  0x0000000110de3d01: cmp    $0x1,%r13d
  0x0000000110de3d05: jle    0x0000000110de3f62  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x0000000110de3d0b: jmp    0x0000000110de3d1c
  0x0000000110de3d0d: vmovq  %xmm0,%r9
  0x0000000110de3d12: vmovq  %xmm1,%rdi
  0x0000000110de3d17: vmovd  %xmm3,%r11d
  0x0000000110de3d1c: mov    %r13d,%r10d
  0x0000000110de3d1f: sub    %ecx,%r10d
  0x0000000110de3d22: mov    $0xfa0,%r14d
  0x0000000110de3d28: cmp    %r14d,%r10d
  0x0000000110de3d2b: cmovg  %r14d,%r10d
  0x0000000110de3d2f: add    %ecx,%r10d
  0x0000000110de3d32: vmovq  %r9,%xmm0
  0x0000000110de3d37: vmovq  %rdi,%xmm1
  0x0000000110de3d3c: vmovd  %r11d,%xmm3        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3d41: mov    %ecx,%r14d
  0x0000000110de3d44: add    %edx,%r14d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000110de3d47: movslq %ecx,%r9
  0x0000000110de3d4a: movsbl 0x10(%rsi,%r9,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d50: mov    %r8d,%ebp
  0x0000000110de3d53: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d57: mov    %ebp,%r11d
  0x0000000110de3d5a: dec    %r11d
  0x0000000110de3d5d: cmp    $0x7f,%r11d
  0x0000000110de3d61: jae    0x0000000110de3e92  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3d67: movslq %r14d,%rdi
  0x0000000110de3d6a: mov    %r8b,0x12(%rax,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3d6f: movsbl 0x11(%rsi,%r9,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d75: mov    %r11d,%ebp
  0x0000000110de3d78: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d7c: mov    %ebp,%r8d
  0x0000000110de3d7f: dec    %r8d
  0x0000000110de3d82: cmp    $0x7f,%r8d
  0x0000000110de3d86: jae    0x0000000110de3e98  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3d8c: mov    %r11b,0x13(%rax,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3d91: movsbl 0x12(%rsi,%r9,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d97: mov    %r8d,%ebp
  0x0000000110de3d9a: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3d9e: mov    %ebp,%r11d
  0x0000000110de3da1: dec    %r11d
  0x0000000110de3da4: cmp    $0x7f,%r11d
  0x0000000110de3da8: jae    0x0000000110de3ea0  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3dae: mov    %r8b,0x14(%rax,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3db3: movsbl 0x13(%rsi,%r9,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3db9: mov    %r8d,%ebp
  0x0000000110de3dbc: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3dc0: mov    %ebp,%r11d
  0x0000000110de3dc3: dec    %r11d
  0x0000000110de3dc6: cmp    $0x7f,%r11d
  0x0000000110de3dca: jae    0x0000000110de3ea9  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3dd0: mov    %r8b,0x15(%rax,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3dd5: add    $0x4,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000110de3dd8: cmp    %r10d,%ecx
  0x0000000110de3ddb: jl     0x0000000110de3d41  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x0000000110de3de1: mov    0x108(%r15),%r9
  0x0000000110de3de8: add    $0x6,%r14d         ; ImmutableOopMap{rbx=NarrowOop rsi=Oop rax=Oop xmm0=Oop xmm1=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x0000000110de3dec: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)
                                                ;   {poll}
  0x0000000110de3def: cmp    %r13d,%ecx
  0x0000000110de3df2: jl     0x0000000110de3d0d
  0x0000000110de3df8: vmovq  %xmm0,%r9
  0x0000000110de3dfd: vmovq  %xmm1,%rdi
  0x0000000110de3e02: vmovd  %xmm3,%r11d
  0x0000000110de3e07: cmp    %r11d,%ecx
  0x0000000110de3e0a: jge    0x0000000110de3e42  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3e0c: movsbl 0x10(%rsi,%rcx,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3e12: mov    %ecx,%r14d
  0x0000000110de3e15: add    %edx,%r14d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000110de3e18: mov    %r8d,%ebp
  0x0000000110de3e1b: movzbl %bpl,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3e1f: mov    %ebp,%r10d
  0x0000000110de3e22: dec    %r10d
  0x0000000110de3e25: cmp    $0x7f,%r10d
  0x0000000110de3e29: jae    0x0000000110de3f8d  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000110de3e2f: movslq %r14d,%r10
  0x0000000110de3e32: mov    %r8b,0x12(%rax,%r10,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000110de3e37: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000110de3e39: cmp    %r11d,%ecx
  0x0000000110de3e3c: jl     0x0000000110de3e0c
  0x0000000110de3e3e: add    $0x3,%r14d         ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000110de3e42: mov    %r14d,0xc(%rdi)    ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x0000000110de3e46: mov    %rdi,%rax
  0x0000000110de3e49: add    $0x40,%rsp
  0x0000000110de3e4d: pop    %rbp
  0x0000000110de3e4e: mov    0x108(%r15),%r10
  0x0000000110de3e55: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de3e58: retq   
  0x0000000110de3e59: mov    %edx,0xc(%rsp)
  0x0000000110de3e5d: mov    %rsi,(%rsp)
  0x0000000110de3e61: mov    %r9,%rbp
  0x0000000110de3e64: mov    %r11d,%edx
  0x0000000110de3e67: mov    %r11d,0x8(%rsp)
  0x0000000110de3e6c: add    $0x2,%edx
  0x0000000110de3e6f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x0000000110de3e74: mov    %rbp,%r9
  0x0000000110de3e77: mov    0xc(%r9),%r8d      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3e7b: movsbl 0x14(%r9),%ecx     ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000110de3e80: mov    (%rsp),%rdi
  0x0000000110de3e84: mov    0x8(%rsp),%r11d
  0x0000000110de3e89: mov    0xc(%rsp),%edx
  0x0000000110de3e8d: jmpq   0x0000000110de3c31
  0x0000000110de3e92: add    $0x2,%r14d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3e96: jmp    0x0000000110de3eb0
  0x0000000110de3e98: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000110de3e9a: add    $0x3,%r14d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3e9e: jmp    0x0000000110de3eb0
  0x0000000110de3ea0: add    $0x2,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000110de3ea3: add    $0x4,%r14d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3ea7: jmp    0x0000000110de3eb0
  0x0000000110de3ea9: add    $0x3,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000110de3eac: add    $0x5,%r14d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3eb0: vmovq  %xmm0,%r9
  0x0000000110de3eb5: vmovq  %xmm1,%rdi
  0x0000000110de3eba: vmovd  %xmm3,%r11d        ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000110de3ebf: mov    $0xffffff45,%esi
  0x0000000110de3ec4: mov    %r14d,(%rsp)
  0x0000000110de3ec8: mov    %ecx,0x4(%rsp)
  0x0000000110de3ecc: mov    %rdi,0x10(%rsp)
  0x0000000110de3ed1: mov    %r9,0x18(%rsp)
  0x0000000110de3ed6: mov    %r11d,0xc(%rsp)
  0x0000000110de3edb: mov    %ebx,0x20(%rsp)
  0x0000000110de3edf: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [32]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3ee4: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000110de3ee6: mov    $0xffffffe4,%esi
  0x0000000110de3eeb: mov    %edx,%ebp
  0x0000000110de3eed: mov    %rdi,(%rsp)
  0x0000000110de3ef1: mov    %r9,0x8(%rsp)
  0x0000000110de3ef6: mov    %r11d,0x10(%rsp)
  0x0000000110de3efb: mov    %r10d,0x14(%rsp)
  0x0000000110de3f00: mov    %ebx,0x1c(%rsp)
  0x0000000110de3f04: mov    %eax,0x20(%rsp)
  0x0000000110de3f08: data16 xchg %ax,%ax
  0x0000000110de3f0b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [28]=NarrowOop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3f10: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x0000000110de3f12: movsbl %r11b,%ebp         ;*i2b {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@69 (line 256)

  0x0000000110de3f16: mov    $0xffffffe4,%esi
  0x0000000110de3f1b: mov    %r14d,(%rsp)
  0x0000000110de3f1f: mov    %rdi,0x8(%rsp)
  0x0000000110de3f24: mov    %r9,0x10(%rsp)
  0x0000000110de3f29: mov    %r11d,0x4(%rsp)
  0x0000000110de3f2e: mov    %ebx,0x1c(%rsp)
  0x0000000110de3f32: mov    %r10d,0x20(%rsp)
  0x0000000110de3f37: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop [28]=NarrowOop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3f3c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000110de3f3e: mov    $0xffffff7e,%esi
  0x0000000110de3f43: mov    %r14d,%ebp
  0x0000000110de3f46: mov    %rdi,(%rsp)
  0x0000000110de3f4a: mov    %r9,0x8(%rsp)
  0x0000000110de3f4f: mov    %ebx,0x14(%rsp)
  0x0000000110de3f53: mov    %r11d,0x18(%rsp)
  0x0000000110de3f58: data16 xchg %ax,%ax
  0x0000000110de3f5b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3f60: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000110de3f62: mov    %edx,%r14d
  0x0000000110de3f65: add    $0x3,%r14d         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@104 (line 260)

  0x0000000110de3f69: jmpq   0x0000000110de3e07
  0x0000000110de3f6e: mov    $0xffffff4d,%esi
  0x0000000110de3f73: mov    %r10,%rbp
  0x0000000110de3f76: mov    %rdx,(%rsp)
  0x0000000110de3f7a: mov    %r11d,0xc(%rsp)
  0x0000000110de3f7f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3f84: ud2                       ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x0000000110de3f86: xor    %ecx,%ecx
  0x0000000110de3f88: jmpq   0x0000000110de3ebf
  0x0000000110de3f8d: add    $0x2,%r14d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000110de3f91: jmpq   0x0000000110de3ebf  ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)

  0x0000000110de3f96: mov    %rax,%rsi
  0x0000000110de3f99: add    $0x40,%rsp
  0x0000000110de3f9d: pop    %rbp
  0x0000000110de3f9e: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de3fa3: mov    $0xfffffff6,%esi
  0x0000000110de3fa8: data16 xchg %ax,%ax
  0x0000000110de3fab: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3fb0: ud2                       ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x0000000110de3fb2: mov    $0xfffffff6,%esi
  0x0000000110de3fb7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3fbc: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x0000000110de3fbe: mov    $0xfffffff6,%esi
  0x0000000110de3fc3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3fc8: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)

  0x0000000110de3fca: mov    $0xfffffff6,%esi
  0x0000000110de3fcf: mov    %edx,%ebp
  0x0000000110de3fd1: mov    %eax,(%rsp)
  0x0000000110de3fd4: data16 xchg %ax,%ax
  0x0000000110de3fd7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3fdc: ud2                       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000000110de3fde: hlt    
  0x0000000110de3fdf: hlt    
[Stub Code]
  0x0000000110de3fe0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110de3fea: jmpq   0x0000000110de3fea  ;   {runtime_call}
[Exception Handler]
  0x0000000110de3fef: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110de3ff4: callq  0x0000000110de3ff9
  0x0000000110de3ff9: subq   $0x5,(%rsp)
  0x0000000110de3ffe: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de4003: hlt    
  0x0000000110de4004: hlt    
  0x0000000110de4005: hlt    
  0x0000000110de4006: hlt    
  0x0000000110de4007: hlt    

ImmutableOopMap{rbx=NarrowOop rsi=Oop rax=Oop xmm0=Oop xmm1=Oop }pc offsets: 556 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 692 
ImmutableOopMap{[16]=Oop [24]=Oop [32]=NarrowOop }pc offsets: 804 
ImmutableOopMap{[0]=Oop [8]=Oop [28]=NarrowOop }pc offsets: 848 
ImmutableOopMap{[8]=Oop [16]=Oop [28]=NarrowOop }pc offsets: 892 
ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }pc offsets: 928 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 964 
ImmutableOopMap{}pc offsets: 1008 1020 1032 1052 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IIILjava/lang/invoke/MemberName;)I  [0x0000000110ddd7a0, 0x0000000110ddd7c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1ade60} 'linkToStatic' '(IIILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddd7a0: mov    0x24(%r8),%ebx
  0x0000000110ddd7a4: shl    $0x3,%rbx
  0x0000000110ddd7a8: mov    0x10(%rbx),%rbx
  0x0000000110ddd7ac: test   %rbx,%rbx
  0x0000000110ddd7af: je     0x0000000110ddd7b8
  0x0000000110ddd7b5: jmpq   *0x38(%rbx)
  0x0000000110ddd7b8: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddd7bd: hlt    
  0x0000000110ddd7be: hlt    
  0x0000000110ddd7bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110ddd5a0, 0x0000000110ddd5d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1b7460} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddd5a0: mov    0x14(%rsi),%ebx
  0x0000000110ddd5a3: shl    $0x3,%rbx
  0x0000000110ddd5a7: mov    0x28(%rbx),%ebx
  0x0000000110ddd5aa: shl    $0x3,%rbx
  0x0000000110ddd5ae: mov    0x24(%rbx),%ebx
  0x0000000110ddd5b1: shl    $0x3,%rbx
  0x0000000110ddd5b5: mov    0x10(%rbx),%rbx
  0x0000000110ddd5b9: test   %rbx,%rbx
  0x0000000110ddd5bc: je     0x0000000110ddd5c5
  0x0000000110ddd5c2: jmpq   *0x38(%rbx)
  0x0000000110ddd5c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110ddd5ca: hlt    
  0x0000000110ddd5cb: hlt    
  0x0000000110ddd5cc: hlt    
  0x0000000110ddd5cd: hlt    
  0x0000000110ddd5ce: hlt    
  0x0000000110ddd5cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110ddd3a0, 0x0000000110ddd3c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1b7578} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110ddd3a0: cmp    (%rsi),%rax
  0x0000000110ddd3a3: mov    0x24(%r8),%ebx
  0x0000000110ddd3a7: shl    $0x3,%rbx
  0x0000000110ddd3ab: mov    0x10(%rbx),%rbx
  0x0000000110ddd3af: test   %rbx,%rbx
  0x0000000110ddd3b2: je     0x0000000110ddd3bb
  0x0000000110ddd3b8: jmpq   *0x38(%rbx)
  0x0000000110ddd3bb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)     288   68             java.util.regex.Matcher::reset (128 bytes)
 total in heap  [0x0000000110de0010,0x0000000110de0830] = 2080
 relocation     [0x0000000110de0188,0x0000000110de01b0] = 40
 constants      [0x0000000110de01c0,0x0000000110de01e0] = 32
 main code      [0x0000000110de01e0,0x0000000110de03e0] = 512
 stub code      [0x0000000110de03e0,0x0000000110de03f8] = 24
 metadata       [0x0000000110de03f8,0x0000000110de0408] = 16
 scopes data    [0x0000000110de0408,0x0000000110de0500] = 248
 scopes pcs     [0x0000000110de0500,0x0000000110de07f0] = 752
 dependencies   [0x0000000110de07f0,0x0000000110de07f8] = 8
 handler table  [0x0000000110de07f8,0x0000000110de0810] = 24
 nul chk table  [0x0000000110de0810,0x0000000110de0830] = 32
----------------------------------------------------------------------
java/util/regex/Matcher.reset()Ljava/util/regex/Matcher;  [0x0000000110de01e0, 0x0000000110de03f8]  536 bytes
[Constants]
  0x0000000110de01c0 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110de01c4 (offset:    4): 0xffffffff
  0x0000000110de01c8 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de01cc (offset:   12): 0xf4f4f4f4
  0x0000000110de01d0 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de01d4 (offset:   20): 0xf4f4f4f4
  0x0000000110de01d8 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de01dc (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f1b3518} 'reset' '()Ljava/util/regex/Matcher;' in 'java/util/regex/Matcher'
  #           [sp+0x30]  (sp of caller)
  0x0000000110de01e0: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110de01e4: movabs $0x800000000,%r12
  0x0000000110de01ee: add    %r12,%r10
  0x0000000110de01f1: xor    %r12,%r12
  0x0000000110de01f4: cmp    %r10,%rax
  0x0000000110de01f7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de01fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de0200: mov    %eax,-0x14000(%rsp)
  0x0000000110de0207: push   %rbp
  0x0000000110de0208: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Matcher::reset@-1 (line 403)

  0x0000000110de020c: mov    %rsi,(%rsp)
  0x0000000110de0210: mov    0x38(%rsi),%r10d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)

  0x0000000110de0214: movl   $0xffffffff,0x1c(%rsi)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)

  0x0000000110de021b: movl   $0xffffffff,0x24(%rsi)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)

  0x0000000110de0222: movl   $0x0,0x20(%rsi)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)

  0x0000000110de0229: mov    0xc(%r12,%r10,8),%ebx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; implicit exception: dispatches to 0x0000000110de039b
  0x0000000110de022e: test   %ebx,%ebx
  0x0000000110de0230: jbe    0x0000000110de02f5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)

  0x0000000110de0236: mov    %ebx,%r11d
  0x0000000110de0239: dec    %r11d
  0x0000000110de023c: cmp    %ebx,%r11d
  0x0000000110de023f: jae    0x0000000110de0360
  0x0000000110de0245: lea    (%r12,%r10,8),%r11
  0x0000000110de0249: mov    %r11d,%r10d
  0x0000000110de024c: shr    $0x2,%r10d
  0x0000000110de0250: and    $0x3,%r10d
  0x0000000110de0254: mov    $0xffffffff,%r9d
  0x0000000110de025a: sub    %r10d,%r9d
  0x0000000110de025d: and    $0x3,%r9d
  0x0000000110de0261: inc    %r9d
  0x0000000110de0264: cmp    %ebx,%r9d
  0x0000000110de0267: cmovg  %ebx,%r9d
  0x0000000110de026b: xor    %r8d,%r8d          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)

  0x0000000110de026e: movl   $0xffffffff,0x10(%r11,%r8,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)

  0x0000000110de0277: inc    %r8d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)

  0x0000000110de027a: cmp    %r9d,%r8d
  0x0000000110de027d: jl     0x0000000110de026e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)

  0x0000000110de027f: mov    %ebx,%ecx
  0x0000000110de0281: add    $0xfffffffd,%ecx
  0x0000000110de0284: cmp    %ecx,%r8d
  0x0000000110de0287: jge    0x0000000110de02df
  0x0000000110de0289: vmovq  -0xd1(%rip),%xmm0        # 0x0000000110de01c0
                                                ;   {section_word}
  0x0000000110de0291: vpunpcklqdq %xmm0,%xmm0,%xmm0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)

  0x0000000110de0295: mov    $0xfa0,%edx
  0x0000000110de029a: mov    %ebx,%r10d
  0x0000000110de029d: sub    %r8d,%r10d
  0x0000000110de02a0: add    $0xfffffffd,%r10d
  0x0000000110de02a4: cmp    %r10d,%edx
  0x0000000110de02a7: mov    $0xfa0,%r9d
  0x0000000110de02ad: cmovg  %r10d,%r9d
  0x0000000110de02b1: add    %r8d,%r9d
  0x0000000110de02b4: nopl   0x0(%rax,%rax,1)
  0x0000000110de02bc: data16 data16 xchg %ax,%ax  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)

  0x0000000110de02c0: vmovdqu %xmm0,0x10(%r11,%r8,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)

  0x0000000110de02c7: add    $0x4,%r8d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)

  0x0000000110de02cb: cmp    %r9d,%r8d
  0x0000000110de02ce: jl     0x0000000110de02c0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)

  0x0000000110de02d0: mov    0x108(%r15),%r9    ; ImmutableOopMap{r11=Oop [0]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)

  0x0000000110de02d7: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ;   {poll}
  0x0000000110de02da: cmp    %ecx,%r8d
  0x0000000110de02dd: jl     0x0000000110de029a
  0x0000000110de02df: cmp    %ebx,%r8d
  0x0000000110de02e2: jge    0x0000000110de02f5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)

  0x0000000110de02e4: movl   $0xffffffff,0x10(%r11,%r8,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)

  0x0000000110de02ed: inc    %r8d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)

  0x0000000110de02f0: cmp    %ebx,%r8d
  0x0000000110de02f3: jl     0x0000000110de02e4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)

  0x0000000110de02f5: mov    (%rsp),%r10
  0x0000000110de02f9: mov    0x40(%r10),%r11d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)

  0x0000000110de02fd: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; implicit exception: dispatches to 0x0000000110de03aa
  0x0000000110de0302: test   %ebp,%ebp
  0x0000000110de0304: ja     0x0000000110de0376  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)

  0x0000000110de0306: mov    0x44(%r10),%r11d   ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)

  0x0000000110de030a: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; implicit exception: dispatches to 0x0000000110de03b6
  0x0000000110de030f: test   %ebp,%ebp
  0x0000000110de0311: ja     0x0000000110de0382  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)

  0x0000000110de0313: movl   $0x0,0xc(%r10)     ;*putfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@105 (line 415)

  0x0000000110de031b: mov    0x3c(%r10),%r11d
  0x0000000110de031f: movl   $0x0,0x28(%r10)    ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)

  0x0000000110de0327: mov    %r11,%rsi
  0x0000000110de032a: shl    $0x3,%rsi          ;*getfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)

  0x0000000110de032e: data16 xchg %ax,%ax
  0x0000000110de0331: movabs $0xffffffffffffffff,%rax
  0x0000000110de033b: callq  0x0000000110d90180  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ;   {virtual_call}
  0x0000000110de0340: mov    (%rsp),%r10
  0x0000000110de0344: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)

  0x0000000110de0348: incl   0x2c(%r10)         ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)

  0x0000000110de034c: mov    (%rsp),%rax
  0x0000000110de0350: add    $0x20,%rsp
  0x0000000110de0354: pop    %rbp
  0x0000000110de0355: mov    0x108(%r15),%r10
  0x0000000110de035c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de035f: retq                      ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)

  0x0000000110de0360: mov    $0xffffff7e,%esi
  0x0000000110de0365: mov    (%rsp),%rbp
  0x0000000110de0369: mov    %ebx,(%rsp)
  0x0000000110de036c: data16 xchg %ax,%ax
  0x0000000110de036f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de0374: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)

  0x0000000110de0376: mov    $0xffffff4d,%esi
  0x0000000110de037b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de0380: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)

  0x0000000110de0382: mov    $0xffffff4d,%esi
  0x0000000110de0387: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de038c: ud2                       ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)

  0x0000000110de038e: mov    %rax,%rsi
  0x0000000110de0391: add    $0x20,%rsp
  0x0000000110de0395: pop    %rbp
  0x0000000110de0396: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de039b: mov    $0xfffffff6,%esi
  0x0000000110de03a0: data16 xchg %ax,%ax
  0x0000000110de03a3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de03a8: ud2    
  0x0000000110de03aa: mov    $0xfffffff6,%esi
  0x0000000110de03af: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de03b4: ud2    
  0x0000000110de03b6: mov    $0xfffffff6,%esi
  0x0000000110de03bb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de03c0: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)

  0x0000000110de03c2: hlt    
  0x0000000110de03c3: hlt    
  0x0000000110de03c4: hlt    
  0x0000000110de03c5: hlt    
  0x0000000110de03c6: hlt    
  0x0000000110de03c7: hlt    
  0x0000000110de03c8: hlt    
  0x0000000110de03c9: hlt    
  0x0000000110de03ca: hlt    
  0x0000000110de03cb: hlt    
  0x0000000110de03cc: hlt    
  0x0000000110de03cd: hlt    
  0x0000000110de03ce: hlt    
  0x0000000110de03cf: hlt    
  0x0000000110de03d0: hlt    
  0x0000000110de03d1: hlt    
  0x0000000110de03d2: hlt    
  0x0000000110de03d3: hlt    
  0x0000000110de03d4: hlt    
  0x0000000110de03d5: hlt    
  0x0000000110de03d6: hlt    
  0x0000000110de03d7: hlt    
  0x0000000110de03d8: hlt    
  0x0000000110de03d9: hlt    
  0x0000000110de03da: hlt    
  0x0000000110de03db: hlt    
  0x0000000110de03dc: hlt    
  0x0000000110de03dd: hlt    
  0x0000000110de03de: hlt    
  0x0000000110de03df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de03e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de03e5: callq  0x0000000110de03ea
  0x0000000110de03ea: subq   $0x5,(%rsp)
  0x0000000110de03ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de03f4: hlt    
  0x0000000110de03f5: hlt    
  0x0000000110de03f6: hlt    
  0x0000000110de03f7: hlt    

ImmutableOopMap{r11=Oop [0]=Oop }pc offsets: 247 
ImmutableOopMap{[0]=Oop }pc offsets: 352 
ImmutableOopMap{rbp=Oop }pc offsets: 404 
ImmutableOopMap{[0]=Oop }pc offsets: 416 428 
ImmutableOopMap{}pc offsets: 456 468 480 Compiled method (c2)     300   69             java.util.regex.Matcher::match (154 bytes)
 total in heap  [0x0000000110de1e90,0x0000000110de2cc0] = 3632
 relocation     [0x0000000110de2008,0x0000000110de2040] = 56
 constants      [0x0000000110de2040,0x0000000110de2060] = 32
 main code      [0x0000000110de2060,0x0000000110de2480] = 1056
 stub code      [0x0000000110de2480,0x0000000110de2498] = 24
 metadata       [0x0000000110de2498,0x0000000110de24b0] = 24
 scopes data    [0x0000000110de24b0,0x0000000110de2708] = 600
 scopes pcs     [0x0000000110de2708,0x0000000110de2c48] = 1344
 dependencies   [0x0000000110de2c48,0x0000000110de2c50] = 8
 handler table  [0x0000000110de2c50,0x0000000110de2c98] = 72
 nul chk table  [0x0000000110de2c98,0x0000000110de2cc0] = 40
----------------------------------------------------------------------
java/util/regex/Matcher.match(II)Z  [0x0000000110de2060, 0x0000000110de2498]  1080 bytes
[Constants]
  0x0000000110de2040 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110de2044 (offset:    4): 0xffffffff
  0x0000000110de2048 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de204c (offset:   12): 0xf4f4f4f4
  0x0000000110de2050 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de2054 (offset:   20): 0xf4f4f4f4
  0x0000000110de2058 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110de205c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f1b5a00} 'match' '(II)Z' in 'java/util/regex/Matcher'
  # this:     rsi:rsi   = 'java/util/regex/Matcher'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000110de2060: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110de2064: movabs $0x800000000,%r12
  0x0000000110de206e: add    %r12,%r10
  0x0000000110de2071: xor    %r12,%r12
  0x0000000110de2074: cmp    %r10,%rax
  0x0000000110de2077: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de207d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de2080: mov    %eax,-0x14000(%rsp)
  0x0000000110de2087: push   %rbp
  0x0000000110de2088: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Matcher::match@-1 (line 1744)

  0x0000000110de208c: mov    %rsi,%r8
  0x0000000110de208f: movb   $0x0,0x31(%rsi)    ;*putfield requireEnd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@7 (line 1745)

  0x0000000110de2093: movb   $0x0,0x30(%rsi)    ;*putfield hitEnd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@2 (line 1744)

  0x0000000110de2097: test   %edx,%edx
  0x0000000110de2099: jl     0x0000000110de23ca  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@11 (line 1746)

  0x0000000110de209f: mov    %edx,0x1c(%rsi)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@22 (line 1747)

  0x0000000110de20a2: mov    0x24(%rsi),%ebp    ;*getfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@27 (line 1748)

  0x0000000110de20a5: test   %ebp,%ebp
  0x0000000110de20a7: jge    0x0000000110de23e2  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@30 (line 1748)

  0x0000000110de20ad: mov    %edx,0x24(%rsi)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@41 (line 1748)

  0x0000000110de20b0: mov    0x38(%rsi),%r11d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@48 (line 1749)

  0x0000000110de20b4: mov    0xc(%r12,%r11,8),%ebx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@51 (line 1749)
                                                ; implicit exception: dispatches to 0x0000000110de242d
  0x0000000110de20b9: test   %ebx,%ebx
  0x0000000110de20bb: jbe    0x0000000110de216e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)

  0x0000000110de20c1: mov    %ebx,%r10d
  0x0000000110de20c4: dec    %r10d
  0x0000000110de20c7: cmp    %ebx,%r10d
  0x0000000110de20ca: jae    0x0000000110de23ae
  0x0000000110de20d0: lea    (%r12,%r11,8),%rax
  0x0000000110de20d4: mov    %eax,%r10d
  0x0000000110de20d7: shr    $0x2,%r10d
  0x0000000110de20db: and    $0x3,%r10d
  0x0000000110de20df: mov    $0xffffffff,%r9d
  0x0000000110de20e5: sub    %r10d,%r9d
  0x0000000110de20e8: and    $0x3,%r9d
  0x0000000110de20ec: inc    %r9d
  0x0000000110de20ef: cmp    %ebx,%r9d
  0x0000000110de20f2: cmovg  %ebx,%r9d
  0x0000000110de20f6: xor    %esi,%esi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@55 (line 1750)

  0x0000000110de20f8: movl   $0xffffffff,0x10(%rax,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@61 (line 1750)

  0x0000000110de2100: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@62 (line 1749)

  0x0000000110de2102: cmp    %r9d,%esi
  0x0000000110de2105: jl     0x0000000110de20f8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)

  0x0000000110de2107: mov    %ebx,%r11d
  0x0000000110de210a: add    $0xfffffffd,%r11d
  0x0000000110de210e: cmp    %r11d,%esi
  0x0000000110de2111: jge    0x0000000110de215c
  0x0000000110de2113: vmovq  -0xdb(%rip),%xmm0        # 0x0000000110de2040
                                                ;   {section_word}
  0x0000000110de211b: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110de211f: mov    $0xfa0,%edi
  0x0000000110de2124: mov    %ebx,%r10d
  0x0000000110de2127: sub    %esi,%r10d
  0x0000000110de212a: add    $0xfffffffd,%r10d
  0x0000000110de212e: cmp    %r10d,%edi
  0x0000000110de2131: mov    $0xfa0,%ebp
  0x0000000110de2136: cmovg  %r10d,%ebp
  0x0000000110de213a: add    %esi,%ebp
  0x0000000110de213c: nopl   0x0(%rax)          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@55 (line 1750)

  0x0000000110de2140: vmovdqu %xmm0,0x10(%rax,%rsi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@61 (line 1750)

  0x0000000110de2146: add    $0x4,%esi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@62 (line 1749)

  0x0000000110de2149: cmp    %ebp,%esi
  0x0000000110de214b: jl     0x0000000110de2140  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@65 (line 1749)

  0x0000000110de214d: mov    0x108(%r15),%r9    ; ImmutableOopMap{r8=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@65 (line 1749)

  0x0000000110de2154: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@65 (line 1749)
                                                ;   {poll}
  0x0000000110de2157: cmp    %r11d,%esi
  0x0000000110de215a: jl     0x0000000110de2124
  0x0000000110de215c: cmp    %ebx,%esi
  0x0000000110de215e: jge    0x0000000110de216e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@55 (line 1750)

  0x0000000110de2160: movl   $0xffffffff,0x10(%rax,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@61 (line 1750)

  0x0000000110de2168: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@62 (line 1749)

  0x0000000110de216a: cmp    %ebx,%esi
  0x0000000110de216c: jl     0x0000000110de2160  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)

  0x0000000110de216e: mov    0x44(%r8),%r10d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@72 (line 1751)

  0x0000000110de2172: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@75 (line 1751)
                                                ; implicit exception: dispatches to 0x0000000110de243a
  0x0000000110de2177: test   %ebp,%ebp
  0x0000000110de2179: ja     0x0000000110de23fe  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@76 (line 1751)

  0x0000000110de217f: mov    %ecx,0x18(%r8)     ;*putfield acceptMode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@105 (line 1755)

  0x0000000110de2183: mov    0x34(%r8),%r10d    ;*getfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@109 (line 1756)

  0x0000000110de2187: mov    0x38(%r12,%r10,8),%r10d  ;*getfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@112 (line 1756)
                                                ; implicit exception: dispatches to 0x0000000110de2446
  0x0000000110de218c: mov    0x3c(%r8),%ebp     ;*getfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@118 (line 1756)

  0x0000000110de2190: mov    0x8(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x0000000110de2452
  0x0000000110de2195: cmp    $0x699a0,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110de219c: jne    0x0000000110de2393  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de21a2: mov    0x10(%r8),%r9d     ;*getfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@4 (line 4336)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de21a6: shl    $0x3,%r10          ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de21aa: cmp    %r9d,%edx
  0x0000000110de21ad: jge    0x0000000110de21ec  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@12 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de21af: mov    $0x1,%r11d
  0x0000000110de21b5: sub    %edx,%r11d
  0x0000000110de21b8: mov    %rbp,%rcx
  0x0000000110de21bb: shl    $0x3,%rcx          ;*getfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@118 (line 1756)

  0x0000000110de21bf: mov    %edx,0x18(%rsp)
  0x0000000110de21c3: mov    $0x1,%edx
  0x0000000110de21c8: xor    %ebx,%ebx
  0x0000000110de21ca: mov    %r8,0x8(%rsp)
  0x0000000110de21cf: mov    %ebp,0x1c(%rsp)
  0x0000000110de21d3: mov    %r9d,0x24(%rsp)
  0x0000000110de21d8: mov    %edx,0x2c(%rsp)
  0x0000000110de21dc: mov    %r11d,0x28(%rsp)
  0x0000000110de21e1: mov    %rcx,0x30(%rsp)
  0x0000000110de21e6: mov    %ebx,0x20(%rsp)
  0x0000000110de21ea: jmp    0x0000000110de2217
  0x0000000110de21ec: mov    $0x1,%r9d
  0x0000000110de21f2: xor    %r11d,%r11d
  0x0000000110de21f5: jmpq   0x0000000110de2284
  0x0000000110de21fa: nopw   0x0(%rax,%rax,1)
  0x0000000110de2200: mov    0x28(%rsp),%r11d
  0x0000000110de2205: add    0x18(%rsp),%r11d
  0x0000000110de220a: mov    %edx,0x18(%rsp)
  0x0000000110de220e: mov    (%rsp),%r10
  0x0000000110de2212: mov    %r11d,0x20(%rsp)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@15 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2217: mov    0x14(%r10),%ebp    ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@16 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de221b: mov    %r10,(%rsp)
  0x0000000110de221f: mov    0x30(%rsp),%rsi
  0x0000000110de2224: mov    0x18(%rsp),%edx
  0x0000000110de2228: nop
  0x0000000110de2229: movabs $0xffffffffffffffff,%rax
  0x0000000110de2233: callq  0x0000000110d90180  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop }
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@21 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {virtual_call}
  0x0000000110de2238: mov    %rbp,%rsi
  0x0000000110de223b: shl    $0x3,%rsi          ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@16 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de223f: mov    %eax,%edx
  0x0000000110de2241: mov    0x8(%rsp),%rbp
  0x0000000110de2246: data16 xchg %ax,%ax
  0x0000000110de2249: movabs $0xffffffffffffffff,%rax
  0x0000000110de2253: callq  0x0000000110d90180  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop }
                                                ;*invokeinterface is {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@26 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {virtual_call}
  0x0000000110de2258: test   %eax,%eax
  0x0000000110de225a: je     0x0000000110de2355  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@31 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2260: mov    0x18(%rsp),%edx
  0x0000000110de2264: inc    %edx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@34 (line 4338)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2266: cmp    0x24(%rsp),%edx
  0x0000000110de226a: jl     0x0000000110de2200  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@12 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de226c: mov    0x20(%rsp),%r11d
  0x0000000110de2271: inc    %r11d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@37 (line 4338)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2274: mov    %rbp,%r8
  0x0000000110de2277: mov    0x1c(%rsp),%ebp
  0x0000000110de227b: mov    (%rsp),%r10
  0x0000000110de227f: mov    0x2c(%rsp),%r9d    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@31 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2284: movb   $0x1,0x30(%r8)     ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@54 (line 4343)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2289: mov    0x10(%r10),%ecx
  0x0000000110de228d: cmp    %ecx,%r11d
  0x0000000110de2290: jl     0x0000000110de2320  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@60 (line 4343)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2296: mov    %rbp,%rcx
  0x0000000110de2299: shl    $0x3,%rcx          ;*getfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@118 (line 1756)

  0x0000000110de229d: mov    %edx,0x10(%rsp)
  0x0000000110de22a1: mov    %r8,(%rsp)
  0x0000000110de22a5: mov    %ebp,0x14(%rsp)
  0x0000000110de22a9: mov    %r9d,0x1c(%rsp)
  0x0000000110de22ae: mov    %r11d,0x18(%rsp)
  0x0000000110de22b3: mov    %rcx,0x20(%rsp)
  0x0000000110de22b8: jmp    0x0000000110de22c9
  0x0000000110de22ba: nopw   0x0(%rax,%rax,1)
  0x0000000110de22c0: mov    %r9d,0x10(%rsp)
  0x0000000110de22c5: mov    %ecx,0x18(%rsp)    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@63 (line 4344)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de22c9: mov    0xc(%r10),%r11d
  0x0000000110de22cd: mov    %r10,%rbp
  0x0000000110de22d0: mov    %r11,%rsi
  0x0000000110de22d3: shl    $0x3,%rsi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@64 (line 4344)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de22d7: mov    (%rsp),%rdx
  0x0000000110de22db: mov    0x10(%rsp),%ecx
  0x0000000110de22df: mov    0x20(%rsp),%r8
  0x0000000110de22e4: nop
  0x0000000110de22e5: movabs $0xffffffffffffffff,%rax
  0x0000000110de22ef: callq  0x0000000110d90180  ; ImmutableOopMap{rbp=Oop [0]=Oop [20]=NarrowOop [32]=Oop }
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@70 (line 4344)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {virtual_call}
  0x0000000110de22f4: test   %eax,%eax
  0x0000000110de22f6: jne    0x0000000110de232d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@65 (line 1749)

  0x0000000110de22f8: mov    0x108(%r15),%r11
  0x0000000110de22ff: mov    %rbp,%r10
  0x0000000110de2302: mov    0x10(%r10),%r8d
  0x0000000110de2306: mov    0x18(%rsp),%ecx
  0x0000000110de230a: dec    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@81 (line 4346)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de230c: mov    0x10(%rsp),%r9d
  0x0000000110de2311: dec    %r9d               ; ImmutableOopMap{r10=Oop [0]=Oop [20]=NarrowOop [32]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@84 (line 4346)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2314: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@84 (line 4346)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {poll}
  0x0000000110de2317: cmp    %r8d,%ecx
  0x0000000110de231a: jge    0x0000000110de22c0
  0x0000000110de231c: mov    (%rsp),%r8         ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@60 (line 4343)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2320: movl   $0xffffffff,0x1c(%r8)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@131 (line 1758)

  0x0000000110de2328: xor    %r9d,%r9d
  0x0000000110de232b: jmp    0x0000000110de2336
  0x0000000110de232d: mov    (%rsp),%r8
  0x0000000110de2331: mov    0x1c(%rsp),%r9d    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@134 (line 1759)

  0x0000000110de2336: incl   0x2c(%r8)          ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@149 (line 1760)

  0x0000000110de233a: mov    0x20(%r8),%r11d    ;*getfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@136 (line 1759)

  0x0000000110de233e: mov    %r11d,0x24(%r8)    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@134 (line 1759)

  0x0000000110de2342: mov    %r9d,%eax
  0x0000000110de2345: add    $0x50,%rsp
  0x0000000110de2349: pop    %rbp
  0x0000000110de234a: mov    0x108(%r15),%r10
  0x0000000110de2351: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de2354: retq   
  0x0000000110de2355: mov    0x18(%rsp),%edx
  0x0000000110de2359: cmp    0x24(%rsp),%edx
  0x0000000110de235d: jl     0x0000000110de2379  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@46 (line 4340)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de235f: mov    %rbp,%r8
  0x0000000110de2362: mov    0x1c(%rsp),%ebp
  0x0000000110de2366: mov    (%rsp),%r10
  0x0000000110de236a: mov    0x2c(%rsp),%r9d
  0x0000000110de236f: mov    0x20(%rsp),%r11d
  0x0000000110de2374: jmpq   0x0000000110de2284
  0x0000000110de2379: mov    %rbp,%r8
  0x0000000110de237c: mov    0x1c(%rsp),%ebp
  0x0000000110de2380: mov    (%rsp),%r10
  0x0000000110de2384: mov    0x2c(%rsp),%r9d
  0x0000000110de2389: mov    0x20(%rsp),%r11d
  0x0000000110de238e: jmpq   0x0000000110de2289
  0x0000000110de2393: mov    $0xffffffde,%esi
  0x0000000110de2398: mov    %r8,0x8(%rsp)
  0x0000000110de239d: mov    %edx,0x10(%rsp)
  0x0000000110de23a1: mov    %r10d,0x14(%rsp)
  0x0000000110de23a6: nop
  0x0000000110de23a7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [8]=Oop [20]=NarrowOop }
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de23ac: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)

  0x0000000110de23ae: mov    $0xffffff7e,%esi
  0x0000000110de23b3: mov    %r8,%rbp
  0x0000000110de23b6: mov    %edx,(%rsp)
  0x0000000110de23b9: mov    %ecx,0x4(%rsp)
  0x0000000110de23bd: mov    %ebx,0x8(%rsp)
  0x0000000110de23c1: xchg   %ax,%ax
  0x0000000110de23c3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de23c8: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Matcher::match@-1 (line 1744)

  0x0000000110de23ca: mov    $0xffffff4d,%esi
  0x0000000110de23cf: mov    %r8,%rbp
  0x0000000110de23d2: mov    %ecx,0x4(%rsp)
  0x0000000110de23d6: mov    %edx,0x8(%rsp)
  0x0000000110de23da: nop
  0x0000000110de23db: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@11 (line 1746)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de23e0: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@30 (line 1748)

  0x0000000110de23e2: mov    $0xffffff4d,%esi
  0x0000000110de23e7: mov    %edx,0x8(%rsp)
  0x0000000110de23eb: mov    %ecx,0xc(%rsp)
  0x0000000110de23ef: mov    %r8,0x10(%rsp)
  0x0000000110de23f4: data16 xchg %ax,%ax
  0x0000000110de23f7: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@30 (line 1748)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de23fc: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@52 (line 1749)

  0x0000000110de23fe: mov    $0xffffff4d,%esi
  0x0000000110de2403: mov    %r8,(%rsp)
  0x0000000110de2407: mov    %edx,0x8(%rsp)
  0x0000000110de240b: mov    %ecx,0xc(%rsp)
  0x0000000110de240f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@76 (line 1751)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de2414: ud2                       ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@21 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2416: mov    %rax,%rsi
  0x0000000110de2419: jmp    0x0000000110de2423  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@70 (line 4344)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de241b: mov    %rax,%rsi
  0x0000000110de241e: jmp    0x0000000110de2423
  0x0000000110de2420: mov    %rax,%rsi          ;*invokeinterface is {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::match@26 (line 4337)
                                                ; - java.util.regex.Matcher::match@121 (line 1756)

  0x0000000110de2423: add    $0x50,%rsp
  0x0000000110de2427: pop    %rbp
  0x0000000110de2428: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de242d: mov    $0xfffffff6,%esi
  0x0000000110de2432: nop
  0x0000000110de2433: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@51 (line 1749)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de2438: ud2    
  0x0000000110de243a: mov    $0xfffffff6,%esi
  0x0000000110de243f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@75 (line 1751)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de2444: ud2                       ;*getfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@112 (line 1756)

  0x0000000110de2446: mov    $0xfffffff6,%esi
  0x0000000110de244b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield matchRoot {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@112 (line 1756)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de2450: ud2    
  0x0000000110de2452: mov    $0xfffffff6,%esi
  0x0000000110de2457: mov    %r8,(%rsp)
  0x0000000110de245b: mov    %edx,0x8(%rsp)
  0x0000000110de245f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@121 (line 1756)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de2464: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::match@55 (line 1750)

  0x0000000110de2466: hlt    
  0x0000000110de2467: hlt    
  0x0000000110de2468: hlt    
  0x0000000110de2469: hlt    
  0x0000000110de246a: hlt    
  0x0000000110de246b: hlt    
  0x0000000110de246c: hlt    
  0x0000000110de246d: hlt    
  0x0000000110de246e: hlt    
  0x0000000110de246f: hlt    
  0x0000000110de2470: hlt    
  0x0000000110de2471: hlt    
  0x0000000110de2472: hlt    
  0x0000000110de2473: hlt    
  0x0000000110de2474: hlt    
  0x0000000110de2475: hlt    
  0x0000000110de2476: hlt    
  0x0000000110de2477: hlt    
  0x0000000110de2478: hlt    
  0x0000000110de2479: hlt    
  0x0000000110de247a: hlt    
  0x0000000110de247b: hlt    
  0x0000000110de247c: hlt    
  0x0000000110de247d: hlt    
  0x0000000110de247e: hlt    
  0x0000000110de247f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de2480: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de2485: callq  0x0000000110de248a
  0x0000000110de248a: subq   $0x5,(%rsp)
  0x0000000110de248f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de2494: hlt    
  0x0000000110de2495: hlt    
  0x0000000110de2496: hlt    
  0x0000000110de2497: hlt    

ImmutableOopMap{r8=Oop rax=Oop }pc offsets: 244 
ImmutableOopMap{rbp=NarrowOop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop }pc offsets: 472 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop }pc offsets: 504 
ImmutableOopMap{rbp=Oop [0]=Oop [20]=NarrowOop [32]=Oop }pc offsets: 660 
ImmutableOopMap{r10=Oop [0]=Oop [20]=NarrowOop [32]=Oop }pc offsets: 692 
ImmutableOopMap{rbp=NarrowOop [8]=Oop [20]=NarrowOop }pc offsets: 844 
ImmutableOopMap{rbp=Oop }pc offsets: 872 896 
ImmutableOopMap{[16]=Oop }pc offsets: 924 
ImmutableOopMap{[0]=Oop }pc offsets: 948 
ImmutableOopMap{}pc offsets: 984 996 1008 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 1028 Compiled method (c2)     313   70             java.util.regex.Pattern::has (15 bytes)
 total in heap  [0x0000000110ddce90,0x0000000110ddd140] = 688
 relocation     [0x0000000110ddd008,0x0000000110ddd018] = 16
 main code      [0x0000000110ddd020,0x0000000110ddd080] = 96
 stub code      [0x0000000110ddd080,0x0000000110ddd098] = 24
 metadata       [0x0000000110ddd098,0x0000000110ddd0a0] = 8
 scopes data    [0x0000000110ddd0a0,0x0000000110ddd0c8] = 40
 scopes pcs     [0x0000000110ddd0c8,0x0000000110ddd138] = 112
 dependencies   [0x0000000110ddd138,0x0000000110ddd140] = 8
----------------------------------------------------------------------
java/util/regex/Pattern.has(I)Z  [0x0000000110ddd020, 0x0000000110ddd098]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19f558} 'has' '(I)Z' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110ddd020: mov    0x8(%rsi),%r10d
  0x0000000110ddd024: movabs $0x800000000,%r12
  0x0000000110ddd02e: add    %r12,%r10
  0x0000000110ddd031: xor    %r12,%r12
  0x0000000110ddd034: cmp    %r10,%rax
  0x0000000110ddd037: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110ddd03d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110ddd040: mov    %eax,-0x14000(%rsp)
  0x0000000110ddd047: push   %rbp
  0x0000000110ddd048: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)

  0x0000000110ddd04c: and    0x10(%rsi),%edx    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)

  0x0000000110ddd04f: test   %edx,%edx
  0x0000000110ddd051: jne    0x0000000110ddd065  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)

  0x0000000110ddd053: xor    %eax,%eax
  0x0000000110ddd055: add    $0x10,%rsp
  0x0000000110ddd059: pop    %rbp
  0x0000000110ddd05a: mov    0x108(%r15),%r10
  0x0000000110ddd061: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddd064: retq   
  0x0000000110ddd065: mov    $0xffffff4d,%esi
  0x0000000110ddd06a: mov    %edx,%ebp
  0x0000000110ddd06c: data16 xchg %ax,%ax
  0x0000000110ddd06f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddd074: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)

  0x0000000110ddd076: hlt    
  0x0000000110ddd077: hlt    
  0x0000000110ddd078: hlt    
  0x0000000110ddd079: hlt    
  0x0000000110ddd07a: hlt    
  0x0000000110ddd07b: hlt    
  0x0000000110ddd07c: hlt    
  0x0000000110ddd07d: hlt    
  0x0000000110ddd07e: hlt    
  0x0000000110ddd07f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddd080: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddd085: callq  0x0000000110ddd08a
  0x0000000110ddd08a: subq   $0x5,(%rsp)
  0x0000000110ddd08f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddd094: hlt    
  0x0000000110ddd095: hlt    
  0x0000000110ddd096: hlt    
  0x0000000110ddd097: hlt    

ImmutableOopMap{}pc offsets: 84 Compiled method (c2)     317   71             java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x0000000110ddea10,0x0000000110ddec80] = 624
 relocation     [0x0000000110ddeb88,0x0000000110ddeb98] = 16
 main code      [0x0000000110ddeba0,0x0000000110ddebe0] = 64
 stub code      [0x0000000110ddebe0,0x0000000110ddebf8] = 24
 metadata       [0x0000000110ddebf8,0x0000000110ddec00] = 8
 scopes data    [0x0000000110ddec00,0x0000000110ddec18] = 24
 scopes pcs     [0x0000000110ddec18,0x0000000110ddec78] = 96
 dependencies   [0x0000000110ddec78,0x0000000110ddec80] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110ddeba0, 0x0000000110ddebf8]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ee88640} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110ddeba0: mov    %eax,-0x14000(%rsp)
  0x0000000110ddeba7: push   %rbp
  0x0000000110ddeba8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)

  0x0000000110ddebac: mov    %rsi,%rax
  0x0000000110ddebaf: test   %rsi,%rsi
  0x0000000110ddebb2: je     0x0000000110ddebc4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x0000000110ddebb4: add    $0x20,%rsp
  0x0000000110ddebb8: pop    %rbp
  0x0000000110ddebb9: mov    0x108(%r15),%r10
  0x0000000110ddebc0: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110ddebc3: retq   
  0x0000000110ddebc4: mov    $0xffffff4d,%esi
  0x0000000110ddebc9: mov    %rax,(%rsp)
  0x0000000110ddebcd: xchg   %ax,%ax
  0x0000000110ddebcf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ddebd4: ud2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x0000000110ddebd6: hlt    
  0x0000000110ddebd7: hlt    
  0x0000000110ddebd8: hlt    
  0x0000000110ddebd9: hlt    
  0x0000000110ddebda: hlt    
  0x0000000110ddebdb: hlt    
  0x0000000110ddebdc: hlt    
  0x0000000110ddebdd: hlt    
  0x0000000110ddebde: hlt    
  0x0000000110ddebdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110ddebe0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110ddebe5: callq  0x0000000110ddebea
  0x0000000110ddebea: subq   $0x5,(%rsp)
  0x0000000110ddebef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ddebf4: hlt    
  0x0000000110ddebf5: hlt    
  0x0000000110ddebf6: hlt    
  0x0000000110ddebf7: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 52 Compiled method (c2)     320   72             java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x0000000110de1610,0x0000000110de1898] = 648
 relocation     [0x0000000110de1788,0x0000000110de1798] = 16
 main code      [0x0000000110de17a0,0x0000000110de17e0] = 64
 stub code      [0x0000000110de17e0,0x0000000110de17f8] = 24
 metadata       [0x0000000110de17f8,0x0000000110de1800] = 8
 scopes data    [0x0000000110de1800,0x0000000110de1820] = 32
 scopes pcs     [0x0000000110de1820,0x0000000110de1890] = 112
 dependencies   [0x0000000110de1890,0x0000000110de1898] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x0000000110de17a0, 0x0000000110de17f8]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec1a38} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110de17a0: mov    %eax,-0x14000(%rsp)
  0x0000000110de17a7: push   %rbp
  0x0000000110de17a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)

  0x0000000110de17ac: shr    $0x8,%esi          ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@3 (line 53)

  0x0000000110de17af: test   %esi,%esi
  0x0000000110de17b1: jne    0x0000000110de17c8  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x0000000110de17b3: mov    $0x1,%eax
  0x0000000110de17b8: add    $0x10,%rsp
  0x0000000110de17bc: pop    %rbp
  0x0000000110de17bd: mov    0x108(%r15),%r10
  0x0000000110de17c4: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de17c7: retq   
  0x0000000110de17c8: mov    %esi,%ebp
  0x0000000110de17ca: mov    $0xffffff4d,%esi
  0x0000000110de17cf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de17d4: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x0000000110de17d6: hlt    
  0x0000000110de17d7: hlt    
  0x0000000110de17d8: hlt    
  0x0000000110de17d9: hlt    
  0x0000000110de17da: hlt    
  0x0000000110de17db: hlt    
  0x0000000110de17dc: hlt    
  0x0000000110de17dd: hlt    
  0x0000000110de17de: hlt    
  0x0000000110de17df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de17e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de17e5: callq  0x0000000110de17ea
  0x0000000110de17ea: subq   $0x5,(%rsp)
  0x0000000110de17ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de17f4: hlt    
  0x0000000110de17f5: hlt    
  0x0000000110de17f6: hlt    
  0x0000000110de17f7: hlt    

ImmutableOopMap{}pc offsets: 52 Compiled method (c2)     330   73             java.lang.StringLatin1::indexOf (121 bytes)
 total in heap  [0x0000000110de5190,0x0000000110de5f98] = 3592
 relocation     [0x0000000110de5308,0x0000000110de5330] = 40
 main code      [0x0000000110de5340,0x0000000110de5800] = 1216
 stub code      [0x0000000110de5800,0x0000000110de5818] = 24
 metadata       [0x0000000110de5818,0x0000000110de5820] = 8
 scopes data    [0x0000000110de5820,0x0000000110de5a88] = 616
 scopes pcs     [0x0000000110de5a88,0x0000000110de5f78] = 1264
 dependencies   [0x0000000110de5f78,0x0000000110de5f80] = 8
 nul chk table  [0x0000000110de5f80,0x0000000110de5f98] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BI[BII)I  [0x0000000110de5340, 0x0000000110de5818]  1240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec2e68} 'indexOf' '([BI[BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = '[B'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000110de5340: mov    %eax,-0x14000(%rsp)
  0x0000000110de5347: push   %rbp
  0x0000000110de5348: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 234)

  0x0000000110de534c: mov    %r9d,%r11d
  0x0000000110de534f: mov    %r8d,%r13d
  0x0000000110de5352: mov    0xc(%rcx),%r8d     ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)
                                                ; implicit exception: dispatches to 0x0000000110de57cd
  0x0000000110de5356: mov    %r8d,0x8(%rsp)
  0x0000000110de535b: test   %r8d,%r8d
  0x0000000110de535e: jbe    0x0000000110de5636
  0x0000000110de5364: mov    %edx,%r9d
  0x0000000110de5367: sub    %r13d,%r9d         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@7 (line 235)

  0x0000000110de536a: movsbl 0x10(%rcx),%r14d   ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)

  0x0000000110de536f: mov    %r11d,%r10d
  0x0000000110de5372: cmp    %r9d,%r10d
  0x0000000110de5375: jg     0x0000000110de5722  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 236)

  0x0000000110de537b: mov    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x0000000110de57da
  0x0000000110de537e: cmp    %edi,%r10d
  0x0000000110de5381: jae    0x0000000110de55ba
  0x0000000110de5387: movsbl 0x10(%rsi,%r10,1),%ebp  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@24 (line 238)

  0x0000000110de538d: cmp    %r14d,%ebp
  0x0000000110de5390: je     0x0000000110de574a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 238)

  0x0000000110de5396: mov    %r10d,%eax
  0x0000000110de5399: inc    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de539b: cmp    %r9d,%eax
  0x0000000110de539e: jg     0x0000000110de5776  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de53a4: cmp    %edi,%eax
  0x0000000110de53a6: jae    0x0000000110de55e6
  0x0000000110de53ac: movslq %edi,%r11
  0x0000000110de53af: mov    %r11,(%rsp)
  0x0000000110de53b3: mov    %r9d,%edx
  0x0000000110de53b6: inc    %edx
  0x0000000110de53b8: movslq %edx,%r11
  0x0000000110de53bb: dec    %r11
  0x0000000110de53be: cmp    (%rsp),%r11
  0x0000000110de53c2: jae    0x0000000110de55e6
  0x0000000110de53c8: cmp    $0x7ffffffe,%r9d
  0x0000000110de53cf: jg     0x0000000110de560e
  0x0000000110de53d5: add    $0x2,%r10d         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@40 (line 239)

  0x0000000110de53d9: movsbl 0x10(%rsi,%rax,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de53df: mov    %eax,%ebx
  0x0000000110de53e1: inc    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de53e3: cmp    %r14d,%r11d
  0x0000000110de53e6: je     0x0000000110de54cf  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de53ec: cmp    %r10d,%ebx
  0x0000000110de53ef: jge    0x0000000110de53f5  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de53f1: mov    %ebx,%eax
  0x0000000110de53f3: jmp    0x0000000110de53d9
  0x0000000110de53f5: mov    %r9d,%r10d
  0x0000000110de53f8: add    $0xfffffffe,%r10d
  0x0000000110de53fc: mov    $0x80000000,%r8d
  0x0000000110de5402: cmp    %r10d,%edx
  0x0000000110de5405: cmovl  %r8d,%r10d
  0x0000000110de5409: cmp    %r10d,%ebx
  0x0000000110de540c: jge    0x0000000110de56a4
  0x0000000110de5412: mov    $0xfa0,%r11d
  0x0000000110de5418: mov    %r10d,%r8d
  0x0000000110de541b: sub    %ebx,%r8d
  0x0000000110de541e: cmp    %r11d,%r8d
  0x0000000110de5421: cmovg  %r11d,%r8d
  0x0000000110de5425: add    %ebx,%r8d
  0x0000000110de5428: vmovq  %rcx,%xmm2
  0x0000000110de542d: jmp    0x0000000110de5435
  0x0000000110de542f: nop
  0x0000000110de5430: vmovd  %xmm0,%r9d         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@40 (line 239)

  0x0000000110de5435: movsbl 0x10(%rsi,%rbx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de543a: vmovq  %rsi,%xmm1
  0x0000000110de543f: mov    %ebx,%eax
  0x0000000110de5441: inc    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de5443: cmp    %r14d,%ecx
  0x0000000110de5446: je     0x0000000110de54aa  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de5448: vmovd  %r9d,%xmm0
  0x0000000110de544d: mov    %ebx,%ecx
  0x0000000110de544f: add    $0x2,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de5452: movslq %ebx,%r9
  0x0000000110de5455: movsbl 0x11(%rsi,%r9,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de545b: cmp    %r14d,%esi
  0x0000000110de545e: je     0x0000000110de54be  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de5460: vmovq  %xmm1,%rsi
  0x0000000110de5465: movsbl 0x12(%rsi,%r9,1),%ebp  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de546b: mov    %ebx,%eax
  0x0000000110de546d: add    $0x3,%eax          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de5470: cmp    %r14d,%ebp
  0x0000000110de5473: je     0x0000000110de54ae  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de5475: movsbl 0x13(%rsi,%r9,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de547b: add    $0x4,%ebx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de547e: cmp    %r14d,%ecx
  0x0000000110de5481: je     0x0000000110de54c5  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de5483: cmp    %r8d,%ebx
  0x0000000110de5486: jl     0x0000000110de5430  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de5488: mov    0x108(%r15),%r8    ; ImmutableOopMap{rsi=Oop xmm2=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@49 (line 239)

  0x0000000110de548f: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@49 (line 239)
                                                ;   {poll}
  0x0000000110de5492: cmp    %r10d,%ebx
  0x0000000110de5495: jge    0x0000000110de569a
  0x0000000110de549b: vmovd  %xmm0,%r9d
  0x0000000110de54a0: vmovq  %xmm2,%rcx
  0x0000000110de54a5: jmpq   0x0000000110de5418
  0x0000000110de54aa: mov    %ebx,%ecx
  0x0000000110de54ac: jmp    0x0000000110de54b3
  0x0000000110de54ae: vmovd  %xmm0,%r9d
  0x0000000110de54b3: mov    %eax,%ebx
  0x0000000110de54b5: mov    %ecx,%eax
  0x0000000110de54b7: vmovq  %xmm1,%rsi
  0x0000000110de54bc: jmp    0x0000000110de54ca
  0x0000000110de54be: mov    %ecx,%ebx
  0x0000000110de54c0: vmovq  %xmm1,%rsi
  0x0000000110de54c5: vmovd  %xmm0,%r9d
  0x0000000110de54ca: vmovq  %xmm2,%rcx
  0x0000000110de54cf: cmp    %r9d,%eax
  0x0000000110de54d2: jg     0x0000000110de579e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 242)

  0x0000000110de54d8: mov    %r13d,%ebp
  0x0000000110de54db: add    %eax,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de54dd: cmp    %ebp,%ebx
  0x0000000110de54df: jl     0x0000000110de54f9  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@80 (line 245)

  0x0000000110de54e1: cmp    %ebp,%ebx
  0x0000000110de54e3: jne    0x0000000110de558d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@107 (line 246)

  0x0000000110de54e9: add    $0x40,%rsp
  0x0000000110de54ed: pop    %rbp
  0x0000000110de54ee: mov    0x108(%r15),%r10
  0x0000000110de54f5: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de54f8: retq   
  0x0000000110de54f9: cmp    %edi,%ebx
  0x0000000110de54fb: jae    0x0000000110de56f3
  0x0000000110de5501: movslq %ebp,%r11
  0x0000000110de5504: mov    %r11,%r10
  0x0000000110de5507: dec    %r10
  0x0000000110de550a: cmp    (%rsp),%r10
  0x0000000110de550e: jae    0x0000000110de56f3
  0x0000000110de5514: mov    %eax,%r10d
  0x0000000110de5517: neg    %r10d
  0x0000000110de551a: movslq 0x8(%rsp),%r8
  0x0000000110de551f: movslq %r10d,%r10
  0x0000000110de5522: movslq %ebx,%rdi
  0x0000000110de5525: add    %r10,%rdi
  0x0000000110de5528: cmp    %r8,%rdi
  0x0000000110de552b: jae    0x0000000110de56f3
  0x0000000110de5531: add    %r10,%r11
  0x0000000110de5534: dec    %r11
  0x0000000110de5537: cmp    %r8,%r11
  0x0000000110de553a: jae    0x0000000110de56f3
  0x0000000110de5540: mov    $0x3e8,%edi
  0x0000000110de5545: mov    %ebp,%r10d
  0x0000000110de5548: sub    %ebx,%r10d
  0x0000000110de554b: cmp    %edi,%r10d
  0x0000000110de554e: cmovg  %edi,%r10d
  0x0000000110de5552: add    %ebx,%r10d         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@83 (line 245)

  0x0000000110de5555: movsbl 0x10(%rsi,%rbx,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@86 (line 245)

  0x0000000110de555b: mov    %ebx,%edx
  0x0000000110de555d: sub    %eax,%edx          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@83 (line 245)

  0x0000000110de555f: movsbl 0x10(%rcx,%rdx,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@90 (line 245)

  0x0000000110de5565: cmp    %r11d,%r8d
  0x0000000110de5568: jne    0x0000000110de565e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@91 (line 245)

  0x0000000110de556e: inc    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@94 (line 245)

  0x0000000110de5570: cmp    %r10d,%ebx
  0x0000000110de5573: jl     0x0000000110de5555  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@80 (line 245)

  0x0000000110de5575: mov    0x108(%r15),%r10
  0x0000000110de557c: inc    %edx               ; ImmutableOopMap{rcx=Oop rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@100 (line 245)

  0x0000000110de557e: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@100 (line 245)
                                                ;   {poll}
  0x0000000110de5581: cmp    %ebp,%ebx
  0x0000000110de5583: jl     0x0000000110de5545
  0x0000000110de5585: cmp    %ebp,%ebx
  0x0000000110de5587: je     0x0000000110de54e9  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@80 (line 245)

  0x0000000110de558d: mov    %rsi,(%rsp)
  0x0000000110de5591: mov    %rcx,0x8(%rsp)
  0x0000000110de5596: mov    %r14d,0x10(%rsp)
  0x0000000110de559b: mov    %eax,0x14(%rsp)
  0x0000000110de559f: mov    %ebx,0x18(%rsp)
  0x0000000110de55a3: mov    %r13d,0x1c(%rsp)
  0x0000000110de55a8: mov    %r9d,0x20(%rsp)
  0x0000000110de55ad: mov    $0xffffff4d,%esi
  0x0000000110de55b2: nop
  0x0000000110de55b3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@107 (line 246)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de55b8: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@107 (line 246)

  0x0000000110de55ba: mov    %rcx,(%rsp)
  0x0000000110de55be: mov    %r14d,0x8(%rsp)
  0x0000000110de55c3: mov    %rsi,0x10(%rsp)
  0x0000000110de55c8: mov    %r13d,%r8d
  0x0000000110de55cb: mov    %r8d,0xc(%rsp)
  0x0000000110de55d0: mov    %r9d,0x18(%rsp)
  0x0000000110de55d5: mov    %r10d,0x20(%rsp)
  0x0000000110de55da: mov    $0xffffffe4,%esi
  0x0000000110de55df: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@24 (line 238)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de55e4: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@24 (line 238)

  0x0000000110de55e6: mov    %rsi,%rbp
  0x0000000110de55e9: mov    %rcx,(%rsp)
  0x0000000110de55ed: mov    %r14d,0x8(%rsp)
  0x0000000110de55f2: mov    %eax,0x10(%rsp)
  0x0000000110de55f6: mov    %r13d,0x14(%rsp)
  0x0000000110de55fb: mov    %r9d,0x1c(%rsp)
  0x0000000110de5600: mov    $0xffffff7e,%esi
  0x0000000110de5605: xchg   %ax,%ax
  0x0000000110de5607: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de560c: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de560e: mov    %rsi,%rbp
  0x0000000110de5611: mov    %rcx,(%rsp)
  0x0000000110de5615: mov    %r14d,0x8(%rsp)
  0x0000000110de561a: mov    %eax,0x10(%rsp)
  0x0000000110de561e: mov    %r13d,0x14(%rsp)
  0x0000000110de5623: mov    %r9d,0x1c(%rsp)
  0x0000000110de5628: mov    $0xffffff76,%esi
  0x0000000110de562d: xchg   %ax,%ax
  0x0000000110de562f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de5634: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de5636: mov    %rsi,%rbp
  0x0000000110de5639: mov    %rcx,0x8(%rsp)
  0x0000000110de563e: mov    %edx,0x10(%rsp)
  0x0000000110de5642: mov    %r13d,%r8d
  0x0000000110de5645: mov    %r8d,0x14(%rsp)
  0x0000000110de564a: mov    %r9d,0x18(%rsp)
  0x0000000110de564f: mov    $0xffffffe4,%esi
  0x0000000110de5654: data16 xchg %ax,%ax
  0x0000000110de5657: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de565c: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)

  0x0000000110de565e: mov    %rsi,(%rsp)
  0x0000000110de5662: mov    %rcx,0x8(%rsp)
  0x0000000110de5667: mov    %r14d,0x10(%rsp)
  0x0000000110de566c: mov    %eax,0x14(%rsp)
  0x0000000110de5670: mov    %ebx,0x18(%rsp)
  0x0000000110de5674: mov    %edx,0x1c(%rsp)
  0x0000000110de5678: mov    %r8d,0x20(%rsp)
  0x0000000110de567d: mov    %r11d,0x24(%rsp)
  0x0000000110de5682: mov    %r13d,0x28(%rsp)
  0x0000000110de5687: mov    %r9d,0x2c(%rsp)
  0x0000000110de568c: mov    $0xffffff4d,%esi
  0x0000000110de5691: xchg   %ax,%ax
  0x0000000110de5693: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@91 (line 245)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de5698: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@91 (line 245)

  0x0000000110de569a: vmovd  %xmm0,%r9d
  0x0000000110de569f: vmovq  %xmm2,%rcx
  0x0000000110de56a4: cmp    %edx,%ebx
  0x0000000110de56a6: jge    0x0000000110de57c6
  0x0000000110de56ac: jmp    0x0000000110de56b2
  0x0000000110de56ae: xchg   %ax,%ax
  0x0000000110de56b0: mov    %ebp,%ebx          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@40 (line 239)

  0x0000000110de56b2: movsbl 0x10(%rsi,%rbx,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@43 (line 239)

  0x0000000110de56b8: mov    %ebx,%ebp
  0x0000000110de56ba: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@30 (line 239)

  0x0000000110de56bc: cmp    %r14d,%r11d
  0x0000000110de56bf: je     0x0000000110de56ea  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@46 (line 239)

  0x0000000110de56c1: cmp    %edx,%ebp
  0x0000000110de56c3: jl     0x0000000110de56b0  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de56c5: mov    %rsi,(%rsp)
  0x0000000110de56c9: mov    %rcx,0x8(%rsp)
  0x0000000110de56ce: mov    %r14d,0x10(%rsp)
  0x0000000110de56d3: mov    %r13d,0x14(%rsp)
  0x0000000110de56d8: mov    %r9d,0x1c(%rsp)
  0x0000000110de56dd: mov    $0xffffff4d,%esi
  0x0000000110de56e2: nop
  0x0000000110de56e3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de56e8: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de56ea: mov    %ebx,%eax
  0x0000000110de56ec: mov    %ebp,%ebx
  0x0000000110de56ee: jmpq   0x0000000110de54cf
  0x0000000110de56f3: mov    %rsi,(%rsp)
  0x0000000110de56f7: mov    %rcx,0x8(%rsp)
  0x0000000110de56fc: mov    %r14d,0x10(%rsp)
  0x0000000110de5701: mov    %eax,0x14(%rsp)
  0x0000000110de5705: mov    %ebx,0x1c(%rsp)
  0x0000000110de5709: mov    %r13d,0x20(%rsp)
  0x0000000110de570e: mov    %r9d,0x24(%rsp)
  0x0000000110de5713: mov    $0xffffff7e,%esi
  0x0000000110de5718: data16 xchg %ax,%ax
  0x0000000110de571b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@80 (line 245)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de5720: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@80 (line 245)

  0x0000000110de5722: mov    %rsi,%rbp
  0x0000000110de5725: mov    %rcx,(%rsp)
  0x0000000110de5729: mov    %r14d,0x8(%rsp)
  0x0000000110de572e: mov    %r13d,0xc(%rsp)
  0x0000000110de5733: mov    %r10d,0x18(%rsp)
  0x0000000110de5738: mov    %r9d,0x1c(%rsp)
  0x0000000110de573d: mov    $0xffffff4d,%esi
  0x0000000110de5742: nop
  0x0000000110de5743: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 236)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de5748: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 236)

  0x0000000110de574a: mov    %rsi,(%rsp)
  0x0000000110de574e: mov    %rcx,0x8(%rsp)
  0x0000000110de5753: mov    %r14d,0x14(%rsp)
  0x0000000110de5758: mov    %r13d,0x18(%rsp)
  0x0000000110de575d: mov    %r9d,0x1c(%rsp)
  0x0000000110de5762: mov    %r10d,0x20(%rsp)
  0x0000000110de5767: mov    $0xffffff4d,%esi
  0x0000000110de576c: data16 xchg %ax,%ax
  0x0000000110de576f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 238)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de5774: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 238)

  0x0000000110de5776: mov    %rsi,%rbp
  0x0000000110de5779: mov    %rcx,(%rsp)
  0x0000000110de577d: mov    %r14d,0x8(%rsp)
  0x0000000110de5782: mov    %eax,0x10(%rsp)
  0x0000000110de5786: mov    %r13d,0x14(%rsp)
  0x0000000110de578b: mov    %r9d,0x1c(%rsp)
  0x0000000110de5790: mov    $0xffffff4d,%esi
  0x0000000110de5795: xchg   %ax,%ax
  0x0000000110de5797: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de579c: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@37 (line 239)

  0x0000000110de579e: mov    %rsi,%rbp
  0x0000000110de57a1: mov    %rcx,(%rsp)
  0x0000000110de57a5: mov    %r14d,0x8(%rsp)
  0x0000000110de57aa: mov    %eax,0x10(%rsp)
  0x0000000110de57ae: mov    %r13d,0x14(%rsp)
  0x0000000110de57b3: mov    %r9d,0x1c(%rsp)
  0x0000000110de57b8: mov    $0xffffff4d,%esi
  0x0000000110de57bd: xchg   %ax,%ax
  0x0000000110de57bf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 242)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de57c4: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 242)

  0x0000000110de57c6: mov    %ebx,%ebp
  0x0000000110de57c8: jmpq   0x0000000110de56c5
  0x0000000110de57cd: mov    $0xfffffff6,%esi
  0x0000000110de57d2: nop
  0x0000000110de57d3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de57d8: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 234)

  0x0000000110de57da: mov    $0xfffffff6,%esi
  0x0000000110de57df: mov    %r10d,%ebp
  0x0000000110de57e2: nop
  0x0000000110de57e3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@24 (line 238)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de57e8: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@24 (line 238)

  0x0000000110de57ea: hlt    
  0x0000000110de57eb: hlt    
  0x0000000110de57ec: hlt    
  0x0000000110de57ed: hlt    
  0x0000000110de57ee: hlt    
  0x0000000110de57ef: hlt    
  0x0000000110de57f0: hlt    
  0x0000000110de57f1: hlt    
  0x0000000110de57f2: hlt    
  0x0000000110de57f3: hlt    
  0x0000000110de57f4: hlt    
  0x0000000110de57f5: hlt    
  0x0000000110de57f6: hlt    
  0x0000000110de57f7: hlt    
  0x0000000110de57f8: hlt    
  0x0000000110de57f9: hlt    
  0x0000000110de57fa: hlt    
  0x0000000110de57fb: hlt    
  0x0000000110de57fc: hlt    
  0x0000000110de57fd: hlt    
  0x0000000110de57fe: hlt    
  0x0000000110de57ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de5800: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de5805: callq  0x0000000110de580a
  0x0000000110de580a: subq   $0x5,(%rsp)
  0x0000000110de580f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de5814: hlt    
  0x0000000110de5815: hlt    
  0x0000000110de5816: hlt    
  0x0000000110de5817: hlt    

ImmutableOopMap{rsi=Oop xmm2=Oop }pc offsets: 335 
ImmutableOopMap{rcx=Oop rsi=Oop }pc offsets: 574 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 632 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 676 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 716 756 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 796 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 856 936 992 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 1032 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 1076 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 1116 1156 
ImmutableOopMap{}pc offsets: 1176 1192 Compiled method (c2)     344   74             java.lang.AbstractStringBuilder::appendChars (133 bytes)
 total in heap  [0x0000000110de0e90,0x0000000110de15a8] = 1816
 relocation     [0x0000000110de1008,0x0000000110de1020] = 24
 main code      [0x0000000110de1020,0x0000000110de1260] = 576
 stub code      [0x0000000110de1260,0x0000000110de1278] = 24
 metadata       [0x0000000110de1278,0x0000000110de12a0] = 40
 scopes data    [0x0000000110de12a0,0x0000000110de1360] = 192
 scopes pcs     [0x0000000110de1360,0x0000000110de1580] = 544
 dependencies   [0x0000000110de1580,0x0000000110de1588] = 8
 nul chk table  [0x0000000110de1588,0x0000000110de15a8] = 32
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.appendChars(Ljava/lang/CharSequence;II)V  [0x0000000110de1020, 0x0000000110de1278]  600 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0fa80} 'appendChars' '(Ljava/lang/CharSequence;II)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/CharSequence'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000110de1020: mov    0x8(%rsi),%r10d
  0x0000000110de1024: movabs $0x800000000,%r12
  0x0000000110de102e: add    %r12,%r10
  0x0000000110de1031: xor    %r12,%r12
  0x0000000110de1034: cmp    %r10,%rax
  0x0000000110de1037: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de103d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de1040: mov    %eax,-0x14000(%rsp)
  0x0000000110de1047: push   %rbp
  0x0000000110de1048: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::appendChars@-1 (line 1693)

  0x0000000110de104c: movsbl 0x10(%rsi),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)

  0x0000000110de1051: test   %r10d,%r10d
  0x0000000110de1054: jne    0x0000000110de122e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@4 (line 1693)

  0x0000000110de105a: mov    0xc(%rsi),%ebx     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)

  0x0000000110de105d: cmp    %r8d,%ecx
  0x0000000110de1060: jge    0x0000000110de11ec  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)

  0x0000000110de1066: mov    0x14(%rsi),%ebp    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@8 (line 1694)

  0x0000000110de1069: mov    %rdx,%r10
  0x0000000110de106c: mov    0x8(%rdx),%r9d     ; implicit exception: dispatches to 0x0000000110de1206
  0x0000000110de1070: cmp    $0x1808,%r9d       ;   {metadata('java/lang/String')}
  0x0000000110de1077: jne    0x0000000110de1206
  0x0000000110de107d: mov    %rdx,%r14          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)

  0x0000000110de1080: cmpb   $0x0,0x14(%r14)
  0x0000000110de1085: jne    0x0000000110de1206
  0x0000000110de108b: mov    0xc(%r14),%r9d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)

  0x0000000110de108f: mov    0xc(%r12,%r9,8),%edi  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; implicit exception: dispatches to 0x0000000110de1206
  0x0000000110de1094: cmp    %edi,%ecx
  0x0000000110de1096: jae    0x0000000110de1206
  0x0000000110de109c: movslq %r8d,%rdx
  0x0000000110de109f: movslq %edi,%r11
  0x0000000110de10a2: mov    %rdx,%rdi
  0x0000000110de10a5: dec    %rdi
  0x0000000110de10a8: cmp    %r11,%rdi
  0x0000000110de10ab: jae    0x0000000110de1206
  0x0000000110de10b1: mov    0xc(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x0000000110de1206
  0x0000000110de10b6: mov    %ebx,%r13d
  0x0000000110de10b9: sub    %ecx,%r13d         ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)

  0x0000000110de10bc: movslq %r11d,%r11
  0x0000000110de10bf: movslq %r13d,%rdi
  0x0000000110de10c2: movslq %ecx,%rax
  0x0000000110de10c5: add    %rdi,%rax
  0x0000000110de10c8: cmp    %r11,%rax
  0x0000000110de10cb: jae    0x0000000110de1206
  0x0000000110de10d1: add    %rdi,%rdx
  0x0000000110de10d4: dec    %rdx
  0x0000000110de10d7: cmp    %r11,%rdx
  0x0000000110de10da: jae    0x0000000110de1206
  0x0000000110de10e0: lea    (%r12,%r9,8),%rdi
  0x0000000110de10e4: lea    (%r12,%rbp,8),%r10  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@8 (line 1694)

  0x0000000110de10e8: mov    %ecx,%r9d
  0x0000000110de10eb: inc    %r9d
  0x0000000110de10ee: mov    %ecx,%ebp          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)

  0x0000000110de10f0: movsbl 0x10(%rdi,%rbp,1),%r11d
  0x0000000110de10f6: mov    %ebp,%edx
  0x0000000110de10f8: add    %r13d,%edx
  0x0000000110de10fb: mov    %r11b,0x10(%r10,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)

  0x0000000110de1100: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)

  0x0000000110de1102: cmp    %r9d,%ebp
  0x0000000110de1105: jl     0x0000000110de10f0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)

  0x0000000110de1107: mov    %r8d,%r9d
  0x0000000110de110a: add    $0xfffffffd,%r9d
  0x0000000110de110e: mov    $0x80000000,%r11d
  0x0000000110de1114: cmp    %r9d,%r8d
  0x0000000110de1117: cmovl  %r11d,%r9d
  0x0000000110de111b: cmp    %r9d,%ebp
  0x0000000110de111e: jge    0x0000000110de11ce
  0x0000000110de1124: mov    $0xfa0,%eax        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)

  0x0000000110de1129: jmp    0x0000000110de113d
  0x0000000110de112b: vmovd  %xmm0,%ebx
  0x0000000110de112f: vmovq  %xmm1,%rsi
  0x0000000110de1134: vmovd  %xmm2,%ecx
  0x0000000110de1138: vmovd  %xmm4,%r8d
  0x0000000110de113d: mov    %r9d,%edx
  0x0000000110de1140: sub    %ebp,%edx
  0x0000000110de1142: cmp    %eax,%edx
  0x0000000110de1144: cmovg  %eax,%edx
  0x0000000110de1147: add    %ebp,%edx
  0x0000000110de1149: vmovd  %ebx,%xmm0
  0x0000000110de114d: vmovq  %rsi,%xmm1
  0x0000000110de1152: vmovd  %ecx,%xmm2
  0x0000000110de1156: vmovd  %r8d,%xmm4
  0x0000000110de115b: nopl   0x0(%rax,%rax,1)
  0x0000000110de1160: movsbl 0x10(%rdi,%rbp,1),%ebx
  0x0000000110de1165: mov    %ebp,%ecx
  0x0000000110de1167: add    %r13d,%ecx
  0x0000000110de116a: movslq %ebp,%r11
  0x0000000110de116d: movslq %ecx,%rsi
  0x0000000110de1170: mov    %ebp,%r8d
  0x0000000110de1173: add    %r13d,%r8d         ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)

  0x0000000110de1176: mov    %bl,0x10(%r10,%r8,1)
  0x0000000110de117b: movslq %r8d,%r8
  0x0000000110de117e: movsbl 0x11(%rdi,%r11,1),%ebx
  0x0000000110de1184: mov    %bl,0x11(%r10,%r8,1)
  0x0000000110de1189: movsbl 0x12(%rdi,%r11,1),%ebx
  0x0000000110de118f: mov    %bl,0x12(%r10,%rsi,1)
  0x0000000110de1194: movsbl 0x13(%rdi,%r11,1),%r11d
  0x0000000110de119a: mov    %r11b,0x13(%r10,%rsi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)

  0x0000000110de119f: add    $0x4,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)

  0x0000000110de11a2: cmp    %edx,%ebp
  0x0000000110de11a4: jl     0x0000000110de1160  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)

  0x0000000110de11a6: mov    0x108(%r15),%r11
  0x0000000110de11ad: add    $0x4,%ecx          ; ImmutableOopMap{r10=Oop rdi=Oop r14=Oop xmm1=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)

  0x0000000110de11b0: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)
                                                ;   {poll}
  0x0000000110de11b3: cmp    %r9d,%ebp
  0x0000000110de11b6: jl     0x0000000110de112b
  0x0000000110de11bc: vmovd  %xmm0,%ebx
  0x0000000110de11c0: vmovq  %xmm1,%rsi
  0x0000000110de11c5: vmovd  %xmm2,%ecx
  0x0000000110de11c9: vmovd  %xmm4,%r8d
  0x0000000110de11ce: cmp    %r8d,%ebp
  0x0000000110de11d1: jge    0x0000000110de11ec
  0x0000000110de11d3: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)

  0x0000000110de11d4: movsbl 0x10(%rdi,%rbp,1),%r9d
  0x0000000110de11da: mov    %ebp,%r11d
  0x0000000110de11dd: add    %r13d,%r11d
  0x0000000110de11e0: mov    %r9b,0x10(%r10,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)

  0x0000000110de11e5: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)

  0x0000000110de11e7: cmp    %r8d,%ebp
  0x0000000110de11ea: jl     0x0000000110de11d4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)

  0x0000000110de11ec: sub    %ecx,%r8d
  0x0000000110de11ef: add    %ebx,%r8d
  0x0000000110de11f2: mov    %r8d,0xc(%rsi)     ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::appendChars@-1 (line 1693)

  0x0000000110de11f6: add    $0x40,%rsp
  0x0000000110de11fa: pop    %rbp
  0x0000000110de11fb: mov    0x108(%r15),%r10
  0x0000000110de1202: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de1205: retq   
  0x0000000110de1206: mov    %rsi,(%rsp)
  0x0000000110de120a: mov    %ecx,0x10(%rsp)
  0x0000000110de120e: mov    %ecx,0x14(%rsp)
  0x0000000110de1212: mov    %r8d,0x18(%rsp)
  0x0000000110de1217: mov    %r10,0x20(%rsp)
  0x0000000110de121c: mov    %ebx,0x1c(%rsp)
  0x0000000110de1220: mov    $0xffffff7e,%esi
  0x0000000110de1225: xchg   %ax,%ax
  0x0000000110de1227: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop [32]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de122c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)

  0x0000000110de122e: test   %r10d,%r10d
  0x0000000110de1231: setne  %bpl
  0x0000000110de1235: movzbl %bpl,%ebp
  0x0000000110de1239: xor    $0x1,%ebp          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)

  0x0000000110de123c: mov    %rsi,(%rsp)
  0x0000000110de1240: mov    %ecx,0x8(%rsp)
  0x0000000110de1244: mov    %r8d,0xc(%rsp)
  0x0000000110de1249: mov    %rdx,0x10(%rsp)
  0x0000000110de124e: mov    $0xffffff4d,%esi
  0x0000000110de1253: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@4 (line 1693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de1258: ud2                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)

  0x0000000110de125a: hlt    
  0x0000000110de125b: hlt    
  0x0000000110de125c: hlt    
  0x0000000110de125d: hlt    
  0x0000000110de125e: hlt    
  0x0000000110de125f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de1260: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de1265: callq  0x0000000110de126a
  0x0000000110de126a: subq   $0x5,(%rsp)
  0x0000000110de126f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de1274: hlt    
  0x0000000110de1275: hlt    
  0x0000000110de1276: hlt    
  0x0000000110de1277: hlt    

ImmutableOopMap{r10=Oop rdi=Oop r14=Oop xmm1=Oop }pc offsets: 400 
ImmutableOopMap{rbp=NarrowOop [0]=Oop [32]=Oop }pc offsets: 524 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 568 Compiled method (c2)     362   75             java.util.regex.Pattern::peek (26 bytes)
 total in heap  [0x0000000110de0910,0x0000000110de0ce8] = 984
 relocation     [0x0000000110de0a88,0x0000000110de0a98] = 16
 main code      [0x0000000110de0aa0,0x0000000110de0b60] = 192
 stub code      [0x0000000110de0b60,0x0000000110de0b78] = 24
 metadata       [0x0000000110de0b78,0x0000000110de0b88] = 16
 scopes data    [0x0000000110de0b88,0x0000000110de0bf0] = 104
 scopes pcs     [0x0000000110de0bf0,0x0000000110de0cd0] = 224
 dependencies   [0x0000000110de0cd0,0x0000000110de0cd8] = 8
 nul chk table  [0x0000000110de0cd8,0x0000000110de0ce8] = 16
----------------------------------------------------------------------
java/util/regex/Pattern.peek()I  [0x0000000110de0aa0, 0x0000000110de0b78]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19f7e0} 'peek' '()I' in 'java/util/regex/Pattern'
  #           [sp+0x30]  (sp of caller)
  0x0000000110de0aa0: mov    0x8(%rsi),%r10d
  0x0000000110de0aa4: movabs $0x800000000,%r12
  0x0000000110de0aae: add    %r12,%r10
  0x0000000110de0ab1: xor    %r12,%r12
  0x0000000110de0ab4: cmp    %r10,%rax
  0x0000000110de0ab7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de0abd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de0ac0: mov    %eax,-0x14000(%rsp)
  0x0000000110de0ac7: push   %rbp
  0x0000000110de0ac8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::peek@-1 (line 1892)

  0x0000000110de0acc: mov    0x20(%rsi),%r11d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)

  0x0000000110de0ad0: mov    0x50(%rsi),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)

  0x0000000110de0ad4: mov    0xc(%r12,%r10,8),%r9d  ; implicit exception: dispatches to 0x0000000110de0b32
  0x0000000110de0ad9: cmp    %r9d,%r11d
  0x0000000110de0adc: jae    0x0000000110de0b03
  0x0000000110de0ade: shl    $0x3,%r10
  0x0000000110de0ae2: mov    0x10(%r10,%r11,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)

  0x0000000110de0ae7: mov    $0x4,%ebp
  0x0000000110de0aec: and    0x10(%rsi),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)

  0x0000000110de0aef: test   %ebp,%ebp
  0x0000000110de0af1: jne    0x0000000110de0b1e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)

  0x0000000110de0af3: add    $0x20,%rsp
  0x0000000110de0af7: pop    %rbp
  0x0000000110de0af8: mov    0x108(%r15),%r10
  0x0000000110de0aff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de0b02: retq   
  0x0000000110de0b03: mov    %rsi,%rbp
  0x0000000110de0b06: mov    %r10d,(%rsp)
  0x0000000110de0b0a: mov    %r11d,0x4(%rsp)
  0x0000000110de0b0f: mov    $0xffffffe4,%esi
  0x0000000110de0b14: data16 xchg %ax,%ax
  0x0000000110de0b17: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de0b1c: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)

  0x0000000110de0b1e: mov    %rsi,(%rsp)
  0x0000000110de0b22: mov    %eax,0x8(%rsp)
  0x0000000110de0b26: mov    $0xffffff4d,%esi
  0x0000000110de0b2b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de0b30: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)

  0x0000000110de0b32: mov    $0xfffffff6,%esi
  0x0000000110de0b37: mov    %r11d,%ebp
  0x0000000110de0b3a: nop
  0x0000000110de0b3b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de0b40: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)

  0x0000000110de0b42: hlt    
  0x0000000110de0b43: hlt    
  0x0000000110de0b44: hlt    
  0x0000000110de0b45: hlt    
  0x0000000110de0b46: hlt    
  0x0000000110de0b47: hlt    
  0x0000000110de0b48: hlt    
  0x0000000110de0b49: hlt    
  0x0000000110de0b4a: hlt    
  0x0000000110de0b4b: hlt    
  0x0000000110de0b4c: hlt    
  0x0000000110de0b4d: hlt    
  0x0000000110de0b4e: hlt    
  0x0000000110de0b4f: hlt    
  0x0000000110de0b50: hlt    
  0x0000000110de0b51: hlt    
  0x0000000110de0b52: hlt    
  0x0000000110de0b53: hlt    
  0x0000000110de0b54: hlt    
  0x0000000110de0b55: hlt    
  0x0000000110de0b56: hlt    
  0x0000000110de0b57: hlt    
  0x0000000110de0b58: hlt    
  0x0000000110de0b59: hlt    
  0x0000000110de0b5a: hlt    
  0x0000000110de0b5b: hlt    
  0x0000000110de0b5c: hlt    
  0x0000000110de0b5d: hlt    
  0x0000000110de0b5e: hlt    
  0x0000000110de0b5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de0b60: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de0b65: callq  0x0000000110de0b6a
  0x0000000110de0b6a: subq   $0x5,(%rsp)
  0x0000000110de0b6f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de0b74: hlt    
  0x0000000110de0b75: hlt    
  0x0000000110de0b76: hlt    
  0x0000000110de0b77: hlt    

ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 124 
ImmutableOopMap{[0]=Oop }pc offsets: 144 
ImmutableOopMap{}pc offsets: 160 Compiled method (c2)     405   76             java.util.regex.Pattern::compile (498 bytes)
 total in heap  [0x0000000110debd10,0x0000000110deea28] = 11544
 relocation     [0x0000000110debe88,0x0000000110debf48] = 192
 main code      [0x0000000110debf60,0x0000000110ded1e0] = 4736
 stub code      [0x0000000110ded1e0,0x0000000110ded228] = 72
 oops           [0x0000000110ded228,0x0000000110ded240] = 24
 metadata       [0x0000000110ded240,0x0000000110ded2f0] = 176
 scopes data    [0x0000000110ded2f0,0x0000000110ded838] = 1352
 scopes pcs     [0x0000000110ded838,0x0000000110dee8d8] = 4256
 dependencies   [0x0000000110dee8d8,0x0000000110dee8e0] = 8
 handler table  [0x0000000110dee8e0,0x0000000110dee9e8] = 264
 nul chk table  [0x0000000110dee9e8,0x0000000110deea28] = 64
----------------------------------------------------------------------
java/util/regex/Pattern.compile()V  [0x0000000110debf60, 0x0000000110ded228]  4808 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19f3c8} 'compile' '()V' in 'java/util/regex/Pattern'
  #           [sp+0x50]  (sp of caller)
  0x0000000110debf60: mov    0x8(%rsi),%r10d
  0x0000000110debf64: movabs $0x800000000,%r12
  0x0000000110debf6e: add    %r12,%r10
  0x0000000110debf71: xor    %r12,%r12
  0x0000000110debf74: cmp    %r10,%rax
  0x0000000110debf77: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110debf7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110debf80: mov    %eax,-0x14000(%rsp)
  0x0000000110debf87: push   %rbp
  0x0000000110debf88: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::compile@-1 (line 1743)

  0x0000000110debf8c: mov    $0x80,%ebp
  0x0000000110debf91: mov    %rsi,%r14
  0x0000000110debf94: and    0x10(%rsi),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::compile@4 (line 1743)

  0x0000000110debf97: test   %ebp,%ebp
  0x0000000110debf99: jne    0x0000000110ded105
  0x0000000110debf9f: cmpb   $0x0,0x30(%r15)
  0x0000000110debfa4: jne    0x0000000110decb2f  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110debfaa: mov    0x2c(%r14),%ebx    ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@35 (line 1746)

  0x0000000110debfae: mov    %ebx,0x30(%r14)
  0x0000000110debfb2: mov    %r14,%r10
  0x0000000110debfb5: mov    %rbx,%r11
  0x0000000110debfb8: shl    $0x3,%r11
  0x0000000110debfbc: xor    %r10,%r11
  0x0000000110debfbf: shr    $0x14,%r11
  0x0000000110debfc3: test   %r11,%r11
  0x0000000110debfc6: je     0x0000000110dec036
  0x0000000110debfc8: test   %ebx,%ebx
  0x0000000110debfca: je     0x0000000110dec027
  0x0000000110debfcc: shr    $0x9,%r10
  0x0000000110debfd0: movabs $0x110569000,%rdi
  0x0000000110debfda: add    %r10,%rdi
  0x0000000110debfdd: cmpb   $0x20,(%rdi)
  0x0000000110debfe0: je     0x0000000110dec03a
  0x0000000110debfe2: mov    0x70(%r15),%r10
  0x0000000110debfe6: mov    0x80(%r15),%r11
  0x0000000110debfed: lock addl $0x0,-0x40(%rsp)
  0x0000000110debff3: cmpb   $0x0,(%rdi)
  0x0000000110debff6: je     0x0000000110dec01f
  0x0000000110debff8: movb   $0x0,(%rdi)
  0x0000000110debffb: test   %r10,%r10
  0x0000000110debffe: je     0x0000000110dec00f
  0x0000000110dec000: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110dec005: add    $0xfffffffffffffff8,%r10
  0x0000000110dec009: mov    %r10,0x70(%r15)
  0x0000000110dec00d: jmp    0x0000000110dec01f
  0x0000000110dec00f: mov    %r15,%rsi
  0x0000000110dec012: movabs $0x107aec8ce,%r10
  0x0000000110dec01c: callq  *%r10              ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec01f: mov    0x30(%r14),%ebx    ;*getfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@43 (line 1748)

  0x0000000110dec023: test   %ebx,%ebx
  0x0000000110dec025: jne    0x0000000110dec03a
  0x0000000110dec027: mov    $0xfffffff6,%esi
  0x0000000110dec02c: data16 xchg %ax,%ax
  0x0000000110dec02f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dec034: ud2    
  0x0000000110dec036: test   %ebx,%ebx
  0x0000000110dec038: je     0x0000000110dec027  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec03a: mov    0xc(%r12,%rbx,8),%r11d  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)

  0x0000000110dec03f: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)
                                                ; implicit exception: dispatches to 0x0000000110ded172
  0x0000000110dec044: movsbl 0x14(%r12,%rbx,8),%ecx  ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)

  0x0000000110dec04a: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)

  0x0000000110dec04c: mov    %ebp,%edx
  0x0000000110dec04e: add    $0x2,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@58 (line 1752)

  0x0000000110dec051: cmp    $0x40000,%edx
  0x0000000110dec057: ja     0x0000000110decf5e
  0x0000000110dec05d: movslq %ebp,%rcx
  0x0000000110dec060: add    $0x2,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@59 (line 1752)

  0x0000000110dec064: mov    %ebp,0x24(%r14)    ;*putfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@49 (line 1748)

  0x0000000110dec068: cmp    $0x40000,%edx
  0x0000000110dec06e: ja     0x0000000110decdff  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec074: mov    0x118(%r15),%r13
  0x0000000110dec07b: shl    $0x2,%rcx
  0x0000000110dec07f: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@59 (line 1752)

  0x0000000110dec083: mov    %rcx,%r10
  0x0000000110dec086: and    $0xfffffffffffffff8,%r10
  0x0000000110dec08a: mov    %r13,%r11
  0x0000000110dec08d: add    %r10,%r11
  0x0000000110dec090: cmp    0x128(%r15),%r11
  0x0000000110dec097: jae    0x0000000110decdff
  0x0000000110dec09d: mov    %r11,0x118(%r15)
  0x0000000110dec0a4: prefetchnta 0xc0(%r11)
  0x0000000110dec0ac: movq   $0x1,0x0(%r13)
  0x0000000110dec0b4: prefetchnta 0x100(%r11)
  0x0000000110dec0bc: movl   $0xc10,0x8(%r13)   ;   {metadata({type array int})}
  0x0000000110dec0c4: mov    %edx,0xc(%r13)
  0x0000000110dec0c8: prefetchnta 0x140(%r11)
  0x0000000110dec0d0: mov    %r13,%rdi
  0x0000000110dec0d3: add    $0x10,%rdi
  0x0000000110dec0d7: prefetchnta 0x180(%r11)
  0x0000000110dec0df: shr    $0x3,%rcx
  0x0000000110dec0e3: add    $0xfffffffffffffffe,%rcx
  0x0000000110dec0e7: xor    %rax,%rax
  0x0000000110dec0ea: cmp    $0x8,%rcx
  0x0000000110dec0ee: jg     0x0000000110dec100
  0x0000000110dec0f0: dec    %rcx
  0x0000000110dec0f3: js     0x0000000110dec107
  0x0000000110dec0f5: mov    %rax,(%rdi,%rcx,8)
  0x0000000110dec0f9: dec    %rcx
  0x0000000110dec0fc: jge    0x0000000110dec0f5
  0x0000000110dec0fe: jmp    0x0000000110dec107
  0x0000000110dec100: shl    $0x3,%rcx
  0x0000000110dec104: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dec107: cmpb   $0x0,0x30(%r15)
  0x0000000110dec10c: jne    0x0000000110decb66
  0x0000000110dec112: mov    %r14,%r10
  0x0000000110dec115: mov    %r13,%r11
  0x0000000110dec118: shr    $0x3,%r11
  0x0000000110dec11c: mov    %r11d,0x50(%r14)
  0x0000000110dec120: mov    %r13,%r8
  0x0000000110dec123: xor    %r10,%r8
  0x0000000110dec126: shr    $0x14,%r8
  0x0000000110dec12a: test   %r8,%r8
  0x0000000110dec12d: je     0x0000000110dec18e
  0x0000000110dec12f: shr    $0x9,%r10
  0x0000000110dec133: movabs $0x110569000,%rdi
  0x0000000110dec13d: add    %r10,%rdi
  0x0000000110dec140: cmpb   $0x20,(%rdi)
  0x0000000110dec143: je     0x0000000110dec18e
  0x0000000110dec145: mov    0x70(%r15),%r10    ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec149: mov    0x80(%r15),%r11
  0x0000000110dec150: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec156: cmpb   $0x0,(%rdi)
  0x0000000110dec159: je     0x0000000110dec182
  0x0000000110dec15b: movb   $0x0,(%rdi)
  0x0000000110dec15e: test   %r10,%r10
  0x0000000110dec161: je     0x0000000110dec172
  0x0000000110dec163: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110dec168: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec16c: mov    %r10,0x70(%r15)    ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110dec170: jmp    0x0000000110dec182  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec172: mov    %r15,%rsi
  0x0000000110dec175: movabs $0x107aec8ce,%r10
  0x0000000110dec17f: callq  *%r10              ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110dec182: mov    0x50(%r14),%r11d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@103 (line 1762)

  0x0000000110dec186: mov    0x24(%r14),%ebp    ;*getfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@75 (line 1757)

  0x0000000110dec18a: mov    0x30(%r14),%ebx    ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110dec18e: movb   $0x0,0x2a(%r14)    ;*putfield hasSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@66 (line 1754)

  0x0000000110dec193: test   %ebp,%ebp
  0x0000000110dec195: jle    0x0000000110decb1e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@78 (line 1757)

  0x0000000110dec19b: mov    0xc(%r12,%rbx,8),%edi  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@9 (line 723)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)
                                                ; implicit exception: dispatches to 0x0000000110decfc2
  0x0000000110dec1a0: cmpb   $0x0,0x14(%r12,%rbx,8)
  0x0000000110dec1a6: jne    0x0000000110decfc2
  0x0000000110dec1ac: mov    0xc(%r12,%rdi,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@12 (line 723)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)
                                                ; implicit exception: dispatches to 0x0000000110decfc2
  0x0000000110dec1b1: test   %r8d,%r8d
  0x0000000110dec1b4: jbe    0x0000000110decfc2
  0x0000000110dec1ba: movslq %r8d,%r10
  0x0000000110dec1bd: movslq %ebp,%r8
  0x0000000110dec1c0: dec    %r8
  0x0000000110dec1c3: cmp    %r10,%r8
  0x0000000110dec1c6: jae    0x0000000110decfc2
  0x0000000110dec1cc: mov    0xc(%r12,%r11,8),%r10d  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)
                                                ; implicit exception: dispatches to 0x0000000110decfc2
  0x0000000110dec1d1: test   %r10d,%r10d
  0x0000000110dec1d4: jbe    0x0000000110decfc2
  0x0000000110dec1da: movslq %r10d,%r10
  0x0000000110dec1dd: cmp    %r10,%r8
  0x0000000110dec1e0: jae    0x0000000110decfc2
  0x0000000110dec1e6: movzbl 0x10(%r12,%rdi,8),%r8d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@25 (line 724)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)

  0x0000000110dec1ec: mov    %r8d,0x10(%r12,%r11,8)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec1f1: mov    %ebp,%r9d
  0x0000000110dec1f4: add    $0xfffffffd,%r9d
  0x0000000110dec1f8: lea    (%r12,%r11,8),%r10
  0x0000000110dec1fc: lea    (%r12,%rdi,8),%r11
  0x0000000110dec200: mov    $0x80000000,%ecx
  0x0000000110dec205: cmp    %r9d,%ebp
  0x0000000110dec208: cmovl  %ecx,%r9d
  0x0000000110dec20c: mov    $0x1,%edi
  0x0000000110dec211: cmp    $0x1,%r9d
  0x0000000110dec215: jle    0x0000000110decfd2
  0x0000000110dec21b: mov    $0xfa0,%r13d
  0x0000000110dec221: movabs $0x110569000,%rdx
  0x0000000110dec22b: mov    %r9d,%r8d
  0x0000000110dec22e: sub    %edi,%r8d
  0x0000000110dec231: cmp    %r13d,%r8d
  0x0000000110dec234: cmovg  %r13d,%r8d
  0x0000000110dec238: add    %edi,%r8d
  0x0000000110dec23b: nopl   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@81 (line 1758)

  0x0000000110dec240: movslq %edi,%rax          ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec243: movzbl 0x10(%r11,%rax,1),%ecx  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@25 (line 724)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)

  0x0000000110dec249: mov    %ecx,0x10(%r10,%rax,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec24e: movzbl 0x13(%r11,%rax,1),%ecx
  0x0000000110dec254: movzbl 0x12(%r11,%rax,1),%ebx
  0x0000000110dec25a: movzbl 0x11(%r11,%rax,1),%esi  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@25 (line 724)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)

  0x0000000110dec260: mov    %esi,0x14(%r10,%rax,4)
  0x0000000110dec265: mov    %ebx,0x18(%r10,%rax,4)
  0x0000000110dec26a: mov    %ecx,0x1c(%r10,%rax,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec26f: add    $0x4,%edi          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@117 (line 1757)

  0x0000000110dec272: cmp    %r8d,%edi
  0x0000000110dec275: jl     0x0000000110dec240  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec277: mov    0x108(%r15),%r8    ; ImmutableOopMap{r10=Oop r11=Oop r14=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@119 (line 1757)

  0x0000000110dec27e: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@119 (line 1757)
                                                ;   {poll}
  0x0000000110dec281: cmp    %r9d,%edi
  0x0000000110dec284: jl     0x0000000110dec22b
  0x0000000110dec286: cmp    %ebp,%edi
  0x0000000110dec288: jge    0x0000000110dec2a0
  0x0000000110dec28a: xchg   %ax,%ax            ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@81 (line 1758)

  0x0000000110dec28c: movslq %edi,%r8           ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec28f: movzbl 0x10(%r11,%r8,1),%r9d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::codePointAt@25 (line 724)
                                                ; - java.util.regex.Pattern::compile@86 (line 1758)

  0x0000000110dec295: mov    %r9d,0x10(%r10,%r8,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@111 (line 1762)

  0x0000000110dec29a: inc    %edi               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@117 (line 1757)

  0x0000000110dec29c: cmp    %ebp,%edi
  0x0000000110dec29e: jl     0x0000000110dec28c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@78 (line 1757)

  0x0000000110dec2a0: mov    %edi,0x24(%r14)    ;*putfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@124 (line 1765)

  0x0000000110dec2a4: mov    $0x10,%ebp
  0x0000000110dec2a9: and    0x10(%r14),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::compile@130 (line 1767)

  0x0000000110dec2ad: test   %ebp,%ebp
  0x0000000110dec2af: jne    0x0000000110ded116  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::compile@130 (line 1767)

  0x0000000110dec2b5: mov    %rdx,(%rsp)
  0x0000000110dec2b9: mov    %r14,%rbp          ;*invokevirtual has {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@130 (line 1767)

  0x0000000110dec2bc: mov    %r14,%rsi
  0x0000000110dec2bf: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual RemoveQEQuoting {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@137 (line 1768)
                                                ;   {optimized virtual_call}
  0x0000000110dec2c4: mov    0x118(%r15),%rbx
  0x0000000110dec2cb: mov    %rbx,%r10
  0x0000000110dec2ce: add    $0x90,%r10
  0x0000000110dec2d5: cmp    0x128(%r15),%r10
  0x0000000110dec2dc: jae    0x0000000110dece28
  0x0000000110dec2e2: mov    %r10,0x118(%r15)
  0x0000000110dec2e9: prefetchnta 0xc0(%r10)
  0x0000000110dec2f1: movq   $0x1,(%rbx)
  0x0000000110dec2f8: prefetchnta 0x100(%r10)
  0x0000000110dec300: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110dec307: prefetchnta 0x140(%r10)
  0x0000000110dec30f: movl   $0x20,0xc(%rbx)
  0x0000000110dec316: prefetchnta 0x180(%r10)
  0x0000000110dec31e: mov    %rbx,%rdi
  0x0000000110dec321: add    $0x10,%rdi
  0x0000000110dec325: mov    $0x10,%ecx
  0x0000000110dec32a: xor    %rax,%rax
  0x0000000110dec32d: shl    $0x3,%rcx
  0x0000000110dec331: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dec334: cmpb   $0x0,0x30(%r15)
  0x0000000110dec339: jne    0x0000000110decc42
  0x0000000110dec33f: mov    %rbp,%r10
  0x0000000110dec342: mov    %rbx,%r8
  0x0000000110dec345: shr    $0x3,%r8
  0x0000000110dec349: mov    %r8d,0x3c(%rbp)
  0x0000000110dec34d: mov    %rbx,%r11
  0x0000000110dec350: xor    %r10,%r11
  0x0000000110dec353: shr    $0x14,%r11
  0x0000000110dec357: test   %r11,%r11
  0x0000000110dec35a: je     0x0000000110dec3af
  0x0000000110dec35c: shr    $0x9,%r10
  0x0000000110dec360: movabs $0x110569000,%rdi
  0x0000000110dec36a: add    %r10,%rdi
  0x0000000110dec36d: cmpb   $0x20,(%rdi)
  0x0000000110dec370: je     0x0000000110dec3af
  0x0000000110dec372: mov    0x70(%r15),%r10
  0x0000000110dec376: mov    0x80(%r15),%r11
  0x0000000110dec37d: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec383: cmpb   $0x0,(%rdi)
  0x0000000110dec386: je     0x0000000110dec3af
  0x0000000110dec388: movb   $0x0,(%rdi)
  0x0000000110dec38b: test   %r10,%r10
  0x0000000110dec38e: jne    0x0000000110dec3a2  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec390: mov    %r15,%rsi
  0x0000000110dec393: movabs $0x107aec8ce,%r10
  0x0000000110dec39d: callq  *%r10
  0x0000000110dec3a0: jmp    0x0000000110dec3af
  0x0000000110dec3a2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@145 (line 1771)

  0x0000000110dec3a7: add    $0xfffffffffffffff8,%r10
  0x0000000110dec3ab: mov    %r10,0x70(%r15)
  0x0000000110dec3af: mov    0x118(%r15),%rbx
  0x0000000110dec3b6: mov    %rbx,%r10
  0x0000000110dec3b9: add    $0x38,%r10
  0x0000000110dec3bd: cmp    0x128(%r15),%r10
  0x0000000110dec3c4: jae    0x0000000110dece6a
  0x0000000110dec3ca: mov    %r10,0x118(%r15)
  0x0000000110dec3d1: prefetchnta 0xc0(%r10)
  0x0000000110dec3d9: movq   $0x1,(%rbx)
  0x0000000110dec3e0: prefetchnta 0x100(%r10)
  0x0000000110dec3e8: movl   $0x68ad0,0x8(%rbx)  ;   {metadata('java/util/regex/Pattern$GroupHead'[])}
  0x0000000110dec3ef: prefetchnta 0x140(%r10)
  0x0000000110dec3f7: movl   $0xa,0xc(%rbx)
  0x0000000110dec3fe: prefetchnta 0x180(%r10)
  0x0000000110dec406: movq   $0x0,0x10(%rbx)
  0x0000000110dec40e: movq   $0x0,0x18(%rbx)
  0x0000000110dec416: movq   $0x0,0x20(%rbx)
  0x0000000110dec41e: movq   $0x0,0x28(%rbx)
  0x0000000110dec426: movq   $0x0,0x30(%rbx)
  0x0000000110dec42e: cmpb   $0x0,0x30(%r15)
  0x0000000110dec433: jne    0x0000000110decc0b
  0x0000000110dec439: mov    %rbp,%r10
  0x0000000110dec43c: mov    %rbx,%r8
  0x0000000110dec43f: shr    $0x3,%r8
  0x0000000110dec443: mov    %r8d,0x48(%rbp)
  0x0000000110dec447: mov    %rbx,%r11
  0x0000000110dec44a: xor    %r10,%r11
  0x0000000110dec44d: shr    $0x14,%r11
  0x0000000110dec451: test   %r11,%r11
  0x0000000110dec454: je     0x0000000110dec4a9
  0x0000000110dec456: shr    $0x9,%r10
  0x0000000110dec45a: movabs $0x110569000,%rdi
  0x0000000110dec464: add    %r10,%rdi
  0x0000000110dec467: cmpb   $0x20,(%rdi)
  0x0000000110dec46a: je     0x0000000110dec4a9
  0x0000000110dec46c: mov    0x70(%r15),%r10
  0x0000000110dec470: mov    0x80(%r15),%r11
  0x0000000110dec477: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec47d: cmpb   $0x0,(%rdi)
  0x0000000110dec480: je     0x0000000110dec4a9
  0x0000000110dec482: movb   $0x0,(%rdi)
  0x0000000110dec485: test   %r10,%r10
  0x0000000110dec488: jne    0x0000000110dec49c  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec48a: mov    %r15,%rsi
  0x0000000110dec48d: movabs $0x107aec8ce,%r10
  0x0000000110dec497: callq  *%r10
  0x0000000110dec49a: jmp    0x0000000110dec4a9
  0x0000000110dec49c: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@154 (line 1772)

  0x0000000110dec4a1: add    $0xfffffffffffffff8,%r10
  0x0000000110dec4a5: mov    %r10,0x70(%r15)
  0x0000000110dec4a9: cmpb   $0x0,0x30(%r15)
  0x0000000110dec4ae: jne    0x0000000110decbd4
  0x0000000110dec4b4: movl   $0x0,0x44(%rbp)
  0x0000000110dec4bb: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec4c1: mov    0x118(%r15),%rbx
  0x0000000110dec4c8: mov    %rbx,%r10
  0x0000000110dec4cb: add    $0x18,%r10
  0x0000000110dec4cf: cmp    0x128(%r15),%r10
  0x0000000110dec4d6: jae    0x0000000110dece88
  0x0000000110dec4dc: mov    %r10,0x118(%r15)
  0x0000000110dec4e3: prefetchnta 0xc0(%r10)
  0x0000000110dec4eb: mov    $0x302b8,%r10d     ;   {metadata('java/util/ArrayList')}
  0x0000000110dec4f1: movabs $0x800000000,%r12
  0x0000000110dec4fb: add    %r12,%r10
  0x0000000110dec4fe: xor    %r12,%r12
  0x0000000110dec501: mov    0xb8(%r10),%r10
  0x0000000110dec508: mov    %r10,(%rbx)
  0x0000000110dec50b: movl   $0x302b8,0x8(%rbx)  ;   {metadata('java/util/ArrayList')}
  0x0000000110dec512: movl   $0x0,0xc(%rbx)
  0x0000000110dec519: movq   $0x0,0x10(%rbx)
  0x0000000110dec521: mov    0x118(%r15),%rax
  0x0000000110dec528: mov    %rax,%r10
  0x0000000110dec52b: add    $0x38,%r10
  0x0000000110dec52f: cmp    0x128(%r15),%r10
  0x0000000110dec536: jae    0x0000000110dece44  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec53c: mov    %r10,0x118(%r15)
  0x0000000110dec543: prefetchnta 0xc0(%r10)
  0x0000000110dec54b: movq   $0x1,(%rax)
  0x0000000110dec552: prefetchnta 0x100(%r10)
  0x0000000110dec55a: movl   $0x14118,0x8(%rax)  ;   {metadata('java/lang/Object'[])}
  0x0000000110dec561: prefetchnta 0x140(%r10)
  0x0000000110dec569: movl   $0xa,0xc(%rax)
  0x0000000110dec570: prefetchnta 0x180(%r10)
  0x0000000110dec578: movq   $0x0,0x10(%rax)
  0x0000000110dec580: movq   $0x0,0x18(%rax)
  0x0000000110dec588: movq   $0x0,0x20(%rax)
  0x0000000110dec590: movq   $0x0,0x28(%rax)
  0x0000000110dec598: movq   $0x0,0x30(%rax)    ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::<init>@10 (line 154)
                                                ; - java.util.regex.Pattern::compile@169 (line 1774)

  0x0000000110dec5a0: mov    %rbx,%r10
  0x0000000110dec5a3: mov    %rax,%r11
  0x0000000110dec5a6: shr    $0x3,%r11
  0x0000000110dec5aa: mov    %r11d,0x14(%rbx)
  0x0000000110dec5ae: mov    %rax,%r11
  0x0000000110dec5b1: xor    %r10,%r11
  0x0000000110dec5b4: shr    $0x14,%r11
  0x0000000110dec5b8: test   %r11,%r11
  0x0000000110dec5bb: je     0x0000000110dec610
  0x0000000110dec5bd: shr    $0x9,%r10
  0x0000000110dec5c1: movabs $0x110569000,%rdi
  0x0000000110dec5cb: add    %r10,%rdi
  0x0000000110dec5ce: cmpb   $0x20,(%rdi)
  0x0000000110dec5d1: je     0x0000000110dec610
  0x0000000110dec5d3: mov    0x70(%r15),%r10
  0x0000000110dec5d7: mov    0x80(%r15),%r11
  0x0000000110dec5de: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec5e4: cmpb   $0x0,(%rdi)
  0x0000000110dec5e7: je     0x0000000110dec610
  0x0000000110dec5e9: movb   $0x0,(%rdi)
  0x0000000110dec5ec: test   %r10,%r10
  0x0000000110dec5ef: jne    0x0000000110dec603  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec5f1: mov    %r15,%rsi
  0x0000000110dec5f4: movabs $0x107aec8ce,%r10
  0x0000000110dec5fe: callq  *%r10
  0x0000000110dec601: jmp    0x0000000110dec610
  0x0000000110dec603: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::<init>@13 (line 154)
                                                ; - java.util.regex.Pattern::compile@169 (line 1774)

  0x0000000110dec608: add    $0xfffffffffffffff8,%r10
  0x0000000110dec60c: mov    %r10,0x70(%r15)
  0x0000000110dec610: cmpb   $0x0,0x30(%r15)
  0x0000000110dec615: jne    0x0000000110decb9d
  0x0000000110dec61b: mov    %rbp,%r10
  0x0000000110dec61e: mov    %rbx,%r11
  0x0000000110dec621: shr    $0x3,%r11
  0x0000000110dec625: mov    %r11d,0x4c(%rbp)
  0x0000000110dec629: mov    %rbx,%r11
  0x0000000110dec62c: xor    %r10,%r11
  0x0000000110dec62f: shr    $0x14,%r11
  0x0000000110dec633: test   %r11,%r11
  0x0000000110dec636: je     0x0000000110dec68b
  0x0000000110dec638: shr    $0x9,%r10
  0x0000000110dec63c: movabs $0x110569000,%rdi
  0x0000000110dec646: add    %r10,%rdi
  0x0000000110dec649: cmpb   $0x20,(%rdi)
  0x0000000110dec64c: je     0x0000000110dec68b
  0x0000000110dec64e: mov    0x70(%r15),%r10
  0x0000000110dec652: mov    0x80(%r15),%r11
  0x0000000110dec659: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec65f: cmpb   $0x0,(%rdi)
  0x0000000110dec662: je     0x0000000110dec68b
  0x0000000110dec664: movb   $0x0,(%rdi)
  0x0000000110dec667: test   %r10,%r10
  0x0000000110dec66a: jne    0x0000000110dec67e  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec66c: mov    %r15,%rsi
  0x0000000110dec66f: movabs $0x107aec8ce,%r10
  0x0000000110dec679: callq  *%r10
  0x0000000110dec67c: jmp    0x0000000110dec68b
  0x0000000110dec67e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@172 (line 1774)

  0x0000000110dec683: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec687: mov    %r10,0x70(%r15)    ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@172 (line 1774)

  0x0000000110dec68b: mov    $0x10,%r10d
  0x0000000110dec691: and    0x10(%rbp),%r10d   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::compile@178 (line 1776)

  0x0000000110dec695: test   %r10d,%r10d
  0x0000000110dec698: jne    0x0000000110ded126  ;*synchronization entry
                                                ; - java.util.regex.Pattern::expr@-1 (line 2062)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec69e: mov    %rbp,%rsi
  0x0000000110dec6a1: movabs $0x70fd5b9d8,%rdx  ;   {oop(a 'java/util/regex/Pattern$LastNode'{0x000000070fd5b9d8})}
  0x0000000110dec6ab: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual sequence {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::expr@12 (line 2068)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {optimized virtual_call}
  0x0000000110dec6b0: mov    %rbp,%rbx
  0x0000000110dec6b3: mov    0x34(%rbx),%r8d    ;*getfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@18 (line 2069)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6b7: mov    %rax,0x10(%rsp)
  0x0000000110dec6bc: jmp    0x0000000110dec6c8
  0x0000000110dec6be: xchg   %ax,%ax
  0x0000000110dec6c0: mov    %rax,0x10(%rsp)
  0x0000000110dec6c5: mov    %r10d,%r8d         ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@27 (line 2071)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6c8: mov    0x20(%rbx),%r14d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6cc: mov    0x50(%rbx),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6d0: mov    0xc(%r12,%r10,8),%r11d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ; implicit exception: dispatches to 0x0000000110ded162
  0x0000000110dec6d5: cmp    %r11d,%r14d
  0x0000000110dec6d8: jae    0x0000000110decef2
  0x0000000110dec6de: mov    $0x4,%r9d
  0x0000000110dec6e4: and    0x10(%rbx),%r9d    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6e8: lea    (%r12,%r10,8),%rcx
  0x0000000110dec6ec: mov    0x10(%rcx,%r14,4),%edi  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6f1: test   %r9d,%r9d
  0x0000000110dec6f4: jne    0x0000000110decf3a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6fa: cmp    $0x7c,%edi
  0x0000000110dec6fd: jne    0x0000000110dec75a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@129 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec6ff: inc    %r14d              ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::expr@135 (line 2104)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec702: mov    %r14d,0x20(%rbx)   ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::expr@135 (line 2104)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec706: cmp    %r11d,%r14d
  0x0000000110dec709: jae    0x0000000110decf16
  0x0000000110dec70f: mov    %r8d,0x18(%rsp)
  0x0000000110dec714: mov    %rbx,%rbp          ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@135 (line 2104)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec717: mov    %rbx,%rsi
  0x0000000110dec71a: movabs $0x70fd5b9d8,%rdx  ;   {oop(a 'java/util/regex/Pattern$LastNode'{0x000000070fd5b9d8})}
  0x0000000110dec724: data16 xchg %ax,%ax
  0x0000000110dec727: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [24]=NarrowOop }
                                                ;*invokevirtual sequence {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::expr@12 (line 2068)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {optimized virtual_call}
  0x0000000110dec72c: mov    %rbp,%rbx
  0x0000000110dec72f: mov    0x34(%rbx),%r10d   ;*getfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@18 (line 2069)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec733: mov    0x10(%rsp),%r11
  0x0000000110dec738: test   %r11,%r11
  0x0000000110dec73b: je     0x0000000110dec6c0  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@24 (line 2070)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110dec741: mov    $0x9a,%esi
  0x0000000110dec746: mov    %rax,0x20(%rsp)
  0x0000000110dec74b: mov    %r10d,0x1c(%rsp)
  0x0000000110dec750: data16 xchg %ax,%ax
  0x0000000110dec753: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [16]=Oop [24]=NarrowOop [28]=NarrowOop [32]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@41 (line 2076)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dec758: ud2    
  0x0000000110dec75a: cmpb   $0x0,0x30(%r15)
  0x0000000110dec75f: jne    0x0000000110decc79
  0x0000000110dec765: mov    0x10(%rsp),%r8
  0x0000000110dec76a: mov    %r8,%r13
  0x0000000110dec76d: shr    $0x3,%r13
  0x0000000110dec771: mov    %r13d,0x38(%rbx)
  0x0000000110dec775: mov    %rbx,%r10
  0x0000000110dec778: mov    %r8,%r11
  0x0000000110dec77b: xor    %r10,%r11
  0x0000000110dec77e: shr    $0x14,%r11
  0x0000000110dec782: test   %r11,%r11
  0x0000000110dec785: je     0x0000000110dec7e7
  0x0000000110dec787: test   %r8,%r8
  0x0000000110dec78a: je     0x0000000110dec7e7
  0x0000000110dec78c: shr    $0x9,%r10
  0x0000000110dec790: movabs $0x110569000,%rdi
  0x0000000110dec79a: add    %r10,%rdi
  0x0000000110dec79d: cmpb   $0x20,(%rdi)
  0x0000000110dec7a0: je     0x0000000110dec7e7
  0x0000000110dec7a2: mov    0x80(%r15),%r10    ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec7a9: mov    0x70(%r15),%r11
  0x0000000110dec7ad: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec7b3: cmpb   $0x0,(%rdi)
  0x0000000110dec7b6: je     0x0000000110dec7df
  0x0000000110dec7b8: movb   $0x0,(%rdi)
  0x0000000110dec7bb: test   %r11,%r11
  0x0000000110dec7be: je     0x0000000110dec7cf
  0x0000000110dec7c0: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110dec7c5: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec7c9: mov    %r11,0x70(%r15)    ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110dec7cd: jmp    0x0000000110dec7df  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec7cf: mov    %r15,%rsi
  0x0000000110dec7d2: movabs $0x107aec8ce,%r10
  0x0000000110dec7dc: callq  *%r10              ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110dec7df: mov    0x38(%rbx),%r13d   ;*getfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@263 (line 1794)

  0x0000000110dec7e3: mov    0x20(%rbx),%r14d   ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110dec7e7: mov    0x24(%rbx),%ebp    ;*getfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@229 (line 1784)

  0x0000000110dec7ea: cmp    %r14d,%ebp
  0x0000000110dec7ed: jne    0x0000000110ded136  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@236 (line 1784)

  0x0000000110dec7f3: mov    0x8(%r12,%r13,8),%r11d  ; implicit exception: dispatches to 0x0000000110ded17e
  0x0000000110dec7f8: cmp    $0x69e00,%r11d     ;   {metadata('java/util/regex/Pattern$Slice')}
  0x0000000110dec7ff: je     0x0000000110decf66  ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@266 (line 1794)

  0x0000000110dec805: cmp    $0x6a030,%r11d     ;   {metadata('java/util/regex/Pattern$Begin')}
  0x0000000110dec80c: je     0x0000000110decf76  ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@337 (line 1799)

  0x0000000110dec812: cmp    $0x6a250,%r11d     ;   {metadata('java/util/regex/Pattern$First')}
  0x0000000110dec819: je     0x0000000110decf86  ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@347 (line 1799)

  0x0000000110dec81f: movzbl 0x2a(%rbx),%ebp    ;*getfield hasSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@366 (line 1802)

  0x0000000110dec823: test   %ebp,%ebp
  0x0000000110dec825: jne    0x0000000110ded14e
  0x0000000110dec82b: mov    0x118(%r15),%rbp
  0x0000000110dec832: mov    %rbp,%r10
  0x0000000110dec835: add    $0x18,%r10
  0x0000000110dec839: cmp    0x128(%r15),%r10
  0x0000000110dec840: jae    0x0000000110decea0  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec846: mov    %r10,0x118(%r15)
  0x0000000110dec84d: prefetchnta 0xc0(%r10)
  0x0000000110dec855: mov    $0x6a470,%r11d     ;   {metadata('java/util/regex/Pattern$Start')}
  0x0000000110dec85b: movabs $0x800000000,%r10
  0x0000000110dec865: add    %r11,%r10
  0x0000000110dec868: mov    0xb8(%r10),%r10
  0x0000000110dec86f: mov    %r10,0x0(%rbp)
  0x0000000110dec873: movl   $0x6a470,0x8(%rbp)  ;   {metadata('java/util/regex/Pattern$Start')}
  0x0000000110dec87a: movq   $0x0,0x10(%rbp)
  0x0000000110dec882: movl   $0xe1fab729,0xc(%rbp)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@386 (line 1802)
                                                ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110dec889: mov    %rbp,%r10
  0x0000000110dec88c: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110dec896: xor    %r10,%r11
  0x0000000110dec899: shr    $0x14,%r11
  0x0000000110dec89d: test   %r11,%r11
  0x0000000110dec8a0: je     0x0000000110dec8f5
  0x0000000110dec8a2: shr    $0x9,%r10
  0x0000000110dec8a6: movabs $0x110569000,%rdi
  0x0000000110dec8b0: add    %r10,%rdi
  0x0000000110dec8b3: cmpb   $0x20,(%rdi)
  0x0000000110dec8b6: je     0x0000000110dec8f5
  0x0000000110dec8b8: mov    0x70(%r15),%r10
  0x0000000110dec8bc: mov    0x80(%r15),%r11
  0x0000000110dec8c3: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec8c9: cmpb   $0x0,(%rdi)
  0x0000000110dec8cc: je     0x0000000110dec8f5
  0x0000000110dec8ce: movb   $0x0,(%rdi)
  0x0000000110dec8d1: test   %r10,%r10
  0x0000000110dec8d4: jne    0x0000000110dec8e8  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec8d6: mov    %r15,%rsi
  0x0000000110dec8d9: movabs $0x107aec8ce,%r10
  0x0000000110dec8e3: callq  *%r10
  0x0000000110dec8e6: jmp    0x0000000110dec8f5
  0x0000000110dec8e8: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$Start::<init>@1 (line 3606)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec8ed: add    $0xfffffffffffffff8,%r10
  0x0000000110dec8f1: mov    %r10,0x70(%r15)
  0x0000000110dec8f5: cmpb   $0x0,0x30(%r15)
  0x0000000110dec8fa: jne    0x0000000110deccb0
  0x0000000110dec900: mov    %r13d,0xc(%rbp)
  0x0000000110dec904: mov    %r13,%r10
  0x0000000110dec907: shl    $0x3,%r10
  0x0000000110dec90b: mov    %rbp,%r11
  0x0000000110dec90e: xor    %r11,%r10
  0x0000000110dec911: shr    $0x14,%r10
  0x0000000110dec915: test   %r10,%r10
  0x0000000110dec918: je     0x0000000110dec971
  0x0000000110dec91a: shr    $0x9,%r11
  0x0000000110dec91e: movabs $0x110569000,%rdi
  0x0000000110dec928: add    %r11,%rdi
  0x0000000110dec92b: cmpb   $0x20,(%rdi)
  0x0000000110dec92e: je     0x0000000110dec971
  0x0000000110dec930: mov    0x70(%r15),%r10    ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec934: mov    0x80(%r15),%r11
  0x0000000110dec93b: lock addl $0x0,-0x40(%rsp)
  0x0000000110dec941: cmpb   $0x0,(%rdi)
  0x0000000110dec944: je     0x0000000110dec96d
  0x0000000110dec946: movb   $0x0,(%rdi)
  0x0000000110dec949: test   %r10,%r10
  0x0000000110dec94c: je     0x0000000110dec95d
  0x0000000110dec94e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec953: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec957: mov    %r10,0x70(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec95b: jmp    0x0000000110dec96d  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec95d: mov    %r15,%rsi
  0x0000000110dec960: movabs $0x107aec8ce,%r10
  0x0000000110dec96a: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec96d: mov    0xc(%rbp),%r13d
  0x0000000110dec971: mov    0x118(%r15),%rax
  0x0000000110dec978: mov    %rax,%r10
  0x0000000110dec97b: add    $0x18,%r10
  0x0000000110dec97f: cmp    0x128(%r15),%r10
  0x0000000110dec986: jae    0x0000000110decece  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110dec98c: mov    %r10,0x118(%r15)
  0x0000000110dec993: prefetchnta 0xc0(%r10)
  0x0000000110dec99b: mov    $0x6a6a0,%r10d     ;   {metadata('java/util/regex/Pattern$TreeInfo')}
  0x0000000110dec9a1: movabs $0x800000000,%r12
  0x0000000110dec9ab: add    %r12,%r10
  0x0000000110dec9ae: xor    %r12,%r12
  0x0000000110dec9b1: mov    0xb8(%r10),%r10
  0x0000000110dec9b8: mov    %r10,(%rax)
  0x0000000110dec9bb: movl   $0x6a6a0,0x8(%rax)  ;   {metadata('java/util/regex/Pattern$TreeInfo')}
  0x0000000110dec9c2: movl   $0x0,0xc(%rax)
  0x0000000110dec9c9: mov    %rbx,0x8(%rsp)     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@9 (line 3608)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec9ce: mov    %r13,%rsi
  0x0000000110dec9d1: shl    $0x3,%rsi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@18 (line 3609)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec9d5: movabs $0x10100000000,%r10
  0x0000000110dec9df: mov    %r10,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@9 (line 3608)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec9e3: mov    %rax,0x10(%rsp)    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@13 (line 3608)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110dec9e8: mov    %rax,%rdx
  0x0000000110dec9eb: xchg   %ax,%ax
  0x0000000110dec9ed: movabs $0xffffffffffffffff,%rax
  0x0000000110dec9f7: callq  0x0000000110d90180  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@22 (line 3609)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)
                                                ;   {virtual_call}
  0x0000000110dec9fc: cmpb   $0x0,0x30(%r15)
  0x0000000110deca01: jne    0x0000000110decce7
  0x0000000110deca07: mov    0x8(%rsp),%rbx     ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110deca0c: mov    0x10(%rsp),%r10
  0x0000000110deca11: mov    0xc(%r10),%r11d
  0x0000000110deca15: mov    %r11d,0x10(%rbp)   ;*putfield minLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@31 (line 3610)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110deca19: mov    %rbx,%r10
  0x0000000110deca1c: mov    %rbp,%r11
  0x0000000110deca1f: shr    $0x3,%r11
  0x0000000110deca23: mov    %r11d,0x34(%rbx)
  0x0000000110deca27: mov    %rbp,%r11
  0x0000000110deca2a: xor    %r10,%r11
  0x0000000110deca2d: shr    $0x14,%r11
  0x0000000110deca31: test   %r11,%r11
  0x0000000110deca34: je     0x0000000110deca83
  0x0000000110deca36: shr    $0x9,%r10
  0x0000000110deca3a: mov    (%rsp),%rdi
  0x0000000110deca3e: add    %r10,%rdi
  0x0000000110deca41: cmpb   $0x20,(%rdi)
  0x0000000110deca44: je     0x0000000110deca83
  0x0000000110deca46: mov    0x70(%r15),%r10
  0x0000000110deca4a: mov    0x80(%r15),%r11
  0x0000000110deca51: lock addl $0x0,-0x40(%rsp)
  0x0000000110deca57: cmpb   $0x0,(%rdi)
  0x0000000110deca5a: je     0x0000000110deca83
  0x0000000110deca5c: movb   $0x0,(%rdi)
  0x0000000110deca5f: test   %r10,%r10
  0x0000000110deca62: jne    0x0000000110deca76  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110deca64: mov    %r15,%rsi
  0x0000000110deca67: movabs $0x107aec8ce,%r10
  0x0000000110deca71: callq  *%r10
  0x0000000110deca74: jmp    0x0000000110deca83
  0x0000000110deca76: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110deca7b: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110deca7f: mov    %r10,0x70(%r15)    ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110deca83: movzbl 0x29(%rbx),%ebp    ;*getfield hasGroupRef {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@401 (line 1809)

  0x0000000110deca87: test   %ebp,%ebp
  0x0000000110deca89: jne    0x0000000110ded05f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@404 (line 1809)

  0x0000000110deca8f: mov    0x4c(%rbx),%ebp    ;*getfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@408 (line 1810)

  0x0000000110deca92: mov    0x8(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x0000000110ded18e
  0x0000000110deca97: cmp    $0x302b8,%r11d     ;   {metadata('java/util/ArrayList')}
  0x0000000110deca9e: jne    0x0000000110decf96  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::iterator@5 (line 976)
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)

  0x0000000110decaa4: lea    (%r12,%rbp,8),%r11  ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)

  0x0000000110decaa8: mov    0x10(%r11),%r10d
  0x0000000110decaac: test   %r10d,%r10d
  0x0000000110decaaf: jne    0x0000000110decfa6
  0x0000000110decab5: cmpb   $0x0,0x30(%r15)
  0x0000000110decaba: jne    0x0000000110decd23
  0x0000000110decac0: cmpb   $0x0,0x30(%r15)
  0x0000000110decac5: jne    0x0000000110decd5a  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decacb: cmpb   $0x0,0x30(%r15)
  0x0000000110decad0: jne    0x0000000110decd91
  0x0000000110decad6: movl   $0x0,0x48(%rbx)    ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@479 (line 1821)

  0x0000000110decadd: movl   $0x0,0x24(%rbx)    ;*putfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@484 (line 1822)

  0x0000000110decae4: movl   $0x0,0x50(%rbx)    ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@469 (line 1819)

  0x0000000110decaeb: movl   $0x0,0x3c(%rbx)
  0x0000000110decaf2: movb   $0x1,0x28(%rbx)
  0x0000000110decaf6: lock addl $0x0,-0x40(%rsp)  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decafc: cmpb   $0x0,0x30(%r15)
  0x0000000110decb01: jne    0x0000000110decdc8
  0x0000000110decb07: movl   $0x0,0x4c(%rbx)    ;*synchronization entry
                                                ; - java.util.regex.Pattern::compile@-1 (line 1743)

  0x0000000110decb0e: add    $0x40,%rsp
  0x0000000110decb12: pop    %rbp
  0x0000000110decb13: mov    0x108(%r15),%r10
  0x0000000110decb1a: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110decb1d: retq   
  0x0000000110decb1e: xor    %edi,%edi
  0x0000000110decb20: movabs $0x110569000,%rdx
  0x0000000110decb2a: jmpq   0x0000000110dec2a0
  0x0000000110decb2f: mov    0x30(%rsi),%r10d
  0x0000000110decb33: test   %r10d,%r10d
  0x0000000110decb36: je     0x0000000110debfaa
  0x0000000110decb3c: mov    0x38(%r15),%r11
  0x0000000110decb40: mov    %r10,%rdi
  0x0000000110decb43: shl    $0x3,%rdi
  0x0000000110decb47: test   %r11,%r11
  0x0000000110decb4a: je     0x0000000110decfe1
  0x0000000110decb50: mov    0x48(%r15),%r10
  0x0000000110decb54: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110decb59: add    $0xfffffffffffffff8,%r11
  0x0000000110decb5d: mov    %r11,0x38(%r15)
  0x0000000110decb61: jmpq   0x0000000110debfaa
  0x0000000110decb66: mov    0x50(%r14),%r11d
  0x0000000110decb6a: test   %r11d,%r11d
  0x0000000110decb6d: je     0x0000000110dec112
  0x0000000110decb73: mov    0x38(%r15),%r10
  0x0000000110decb77: mov    %r11,%rdi
  0x0000000110decb7a: shl    $0x3,%rdi
  0x0000000110decb7e: test   %r10,%r10
  0x0000000110decb81: je     0x0000000110decff6  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decb87: mov    0x48(%r15),%r11
  0x0000000110decb8b: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110decb90: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decb94: mov    %r10,0x38(%r15)    ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110decb98: jmpq   0x0000000110dec112
  0x0000000110decb9d: mov    0x4c(%rbp),%r11d
  0x0000000110decba1: test   %r11d,%r11d
  0x0000000110decba4: je     0x0000000110dec61b
  0x0000000110decbaa: mov    0x38(%r15),%r10
  0x0000000110decbae: mov    %r11,%rdi
  0x0000000110decbb1: shl    $0x3,%rdi
  0x0000000110decbb5: test   %r10,%r10
  0x0000000110decbb8: je     0x0000000110ded00b  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decbbe: mov    0x48(%r15),%r11
  0x0000000110decbc2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@172 (line 1774)

  0x0000000110decbc7: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decbcb: mov    %r10,0x38(%r15)    ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@172 (line 1774)

  0x0000000110decbcf: jmpq   0x0000000110dec61b
  0x0000000110decbd4: mov    0x44(%rbp),%r10d
  0x0000000110decbd8: test   %r10d,%r10d
  0x0000000110decbdb: je     0x0000000110dec4b4
  0x0000000110decbe1: mov    0x38(%r15),%r11
  0x0000000110decbe5: mov    %r10,%rdi
  0x0000000110decbe8: shl    $0x3,%rdi
  0x0000000110decbec: test   %r11,%r11
  0x0000000110decbef: je     0x0000000110ded020  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decbf5: mov    0x48(%r15),%r10
  0x0000000110decbf9: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield namedGroups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@159 (line 1773)

  0x0000000110decbfe: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc02: mov    %r11,0x38(%r15)    ;*putfield namedGroups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@159 (line 1773)

  0x0000000110decc06: jmpq   0x0000000110dec4b4
  0x0000000110decc0b: mov    0x48(%rbp),%r10d
  0x0000000110decc0f: test   %r10d,%r10d
  0x0000000110decc12: je     0x0000000110dec439
  0x0000000110decc18: mov    0x38(%r15),%r11
  0x0000000110decc1c: mov    %r10,%rdi
  0x0000000110decc1f: shl    $0x3,%rdi
  0x0000000110decc23: test   %r11,%r11
  0x0000000110decc26: je     0x0000000110ded04a  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc2c: mov    0x48(%r15),%r10
  0x0000000110decc30: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@154 (line 1772)

  0x0000000110decc35: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc39: mov    %r11,0x38(%r15)    ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@154 (line 1772)

  0x0000000110decc3d: jmpq   0x0000000110dec439
  0x0000000110decc42: mov    0x3c(%rbp),%r10d
  0x0000000110decc46: test   %r10d,%r10d
  0x0000000110decc49: je     0x0000000110dec33f
  0x0000000110decc4f: mov    0x38(%r15),%r11
  0x0000000110decc53: mov    %r10,%rdi
  0x0000000110decc56: shl    $0x3,%rdi
  0x0000000110decc5a: test   %r11,%r11
  0x0000000110decc5d: je     0x0000000110ded035  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc63: mov    0x48(%r15),%r10
  0x0000000110decc67: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@145 (line 1771)

  0x0000000110decc6c: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc70: mov    %r11,0x38(%r15)    ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@145 (line 1771)

  0x0000000110decc74: jmpq   0x0000000110dec33f
  0x0000000110decc79: mov    0x38(%rbx),%r11d
  0x0000000110decc7d: test   %r11d,%r11d
  0x0000000110decc80: je     0x0000000110dec765
  0x0000000110decc86: mov    0x38(%r15),%r10
  0x0000000110decc8a: mov    %r11,%rdi
  0x0000000110decc8d: shl    $0x3,%rdi
  0x0000000110decc91: test   %r10,%r10
  0x0000000110decc94: je     0x0000000110ded072  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decc9a: mov    0x48(%r15),%r11
  0x0000000110decc9e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110decca3: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decca7: mov    %r10,0x38(%r15)    ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110deccab: jmpq   0x0000000110dec765
  0x0000000110deccb0: mov    0xc(%rbp),%r10d
  0x0000000110deccb4: test   %r10d,%r10d
  0x0000000110deccb7: je     0x0000000110dec900
  0x0000000110deccbd: mov    0x38(%r15),%r11
  0x0000000110deccc1: mov    %r10,%rdi
  0x0000000110deccc4: shl    $0x3,%rdi
  0x0000000110deccc8: test   %r11,%r11
  0x0000000110decccb: je     0x0000000110ded087  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110deccd1: mov    0x48(%r15),%r10
  0x0000000110deccd5: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110deccda: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110deccde: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110decce2: jmpq   0x0000000110dec900
  0x0000000110decce7: mov    0x8(%rsp),%rbx
  0x0000000110deccec: mov    0x34(%rbx),%r10d
  0x0000000110deccf0: test   %r10d,%r10d
  0x0000000110deccf3: je     0x0000000110deca0c
  0x0000000110deccf9: mov    0x38(%r15),%r11
  0x0000000110deccfd: mov    %r10,%rdi
  0x0000000110decd00: shl    $0x3,%rdi
  0x0000000110decd04: test   %r11,%r11
  0x0000000110decd07: je     0x0000000110ded09c  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd0d: mov    0x48(%r15),%r10
  0x0000000110decd11: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110decd16: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd1a: mov    %r11,0x38(%r15)    ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110decd1e: jmpq   0x0000000110deca0c
  0x0000000110decd23: mov    0x50(%rbx),%r11d
  0x0000000110decd27: test   %r11d,%r11d
  0x0000000110decd2a: je     0x0000000110decac0
  0x0000000110decd30: mov    0x38(%r15),%r10
  0x0000000110decd34: mov    %r11,%rdi
  0x0000000110decd37: shl    $0x3,%rdi
  0x0000000110decd3b: test   %r10,%r10
  0x0000000110decd3e: je     0x0000000110ded0db  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd44: mov    0x48(%r15),%r11
  0x0000000110decd48: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@469 (line 1819)

  0x0000000110decd4d: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd51: mov    %r10,0x38(%r15)    ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@469 (line 1819)

  0x0000000110decd55: jmpq   0x0000000110decac0
  0x0000000110decd5a: mov    0x3c(%rbx),%r11d
  0x0000000110decd5e: test   %r11d,%r11d
  0x0000000110decd61: je     0x0000000110decacb
  0x0000000110decd67: mov    0x38(%r15),%r10
  0x0000000110decd6b: mov    %r11,%rdi
  0x0000000110decd6e: shl    $0x3,%rdi
  0x0000000110decd72: test   %r10,%r10
  0x0000000110decd75: je     0x0000000110ded0b1  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd7b: mov    0x48(%r15),%r11
  0x0000000110decd7f: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@474 (line 1820)

  0x0000000110decd84: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decd88: mov    %r10,0x38(%r15)    ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@474 (line 1820)

  0x0000000110decd8c: jmpq   0x0000000110decacb
  0x0000000110decd91: mov    0x48(%rbx),%r11d
  0x0000000110decd95: test   %r11d,%r11d
  0x0000000110decd98: je     0x0000000110decad6
  0x0000000110decd9e: mov    0x38(%r15),%r10
  0x0000000110decda2: mov    %r11,%rdi
  0x0000000110decda5: shl    $0x3,%rdi
  0x0000000110decda9: test   %r10,%r10
  0x0000000110decdac: je     0x0000000110ded0f0  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decdb2: mov    0x48(%r15),%r11
  0x0000000110decdb6: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@479 (line 1821)

  0x0000000110decdbb: add    $0xfffffffffffffff8,%r10  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decdbf: mov    %r10,0x38(%r15)    ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@479 (line 1821)

  0x0000000110decdc3: jmpq   0x0000000110decad6
  0x0000000110decdc8: mov    0x4c(%rbx),%r10d
  0x0000000110decdcc: test   %r10d,%r10d
  0x0000000110decdcf: je     0x0000000110decb07
  0x0000000110decdd5: mov    0x38(%r15),%r11
  0x0000000110decdd9: mov    %r10,%rdi
  0x0000000110decddc: shl    $0x3,%rdi
  0x0000000110decde0: test   %r11,%r11
  0x0000000110decde3: je     0x0000000110ded0c6  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decde9: mov    0x48(%r15),%r10
  0x0000000110decded: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@494 (line 1824)

  0x0000000110decdf2: add    $0xfffffffffffffff8,%r11  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decdf6: mov    %r11,0x38(%r15)    ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@494 (line 1824)

  0x0000000110decdfa: jmpq   0x0000000110decb07
  0x0000000110decdff: mov    %ebx,0x8(%rsp)
  0x0000000110dece03: mov    %r14,(%rsp)        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)

  0x0000000110dece07: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110dece11: xchg   %ax,%ax
  0x0000000110dece13: callq  0x0000000110dc7a80  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@59 (line 1752)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110dece18: mov    (%rsp),%r14
  0x0000000110dece1c: mov    0x8(%rsp),%ebx
  0x0000000110dece20: mov    %rax,%r13
  0x0000000110dece23: jmpq   0x0000000110dec107
  0x0000000110dece28: mov    $0x20,%edx
  0x0000000110dece2d: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110dece37: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@143 (line 1771)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110dece3c: mov    %rax,%rbx
  0x0000000110dece3f: jmpq   0x0000000110dec334
  0x0000000110dece44: mov    %rbx,0x8(%rsp)     ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::<init>@1 (line 152)
                                                ; - java.util.regex.Pattern::compile@169 (line 1774)

  0x0000000110dece49: movabs $0x800014118,%rsi  ;   {metadata('java/lang/Object'[])}
  0x0000000110dece53: mov    $0xa,%edx
  0x0000000110dece58: data16 xchg %ax,%ax
  0x0000000110dece5b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.ArrayList::<init>@10 (line 154)
                                                ; - java.util.regex.Pattern::compile@169 (line 1774)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110dece60: mov    0x8(%rsp),%rbx
  0x0000000110dece65: jmpq   0x0000000110dec5a0  ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@145 (line 1771)

  0x0000000110dece6a: movabs $0x800068ad0,%rsi  ;   {metadata('java/util/regex/Pattern$GroupHead'[])}
  0x0000000110dece74: mov    $0xa,%edx
  0x0000000110dece79: xchg   %ax,%ax
  0x0000000110dece7b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@151 (line 1772)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110dece80: mov    %rax,%rbx
  0x0000000110dece83: jmpq   0x0000000110dec42e
  0x0000000110dece88: movabs $0x8000302b8,%rsi  ;   {metadata('java/util/ArrayList')}
  0x0000000110dece92: nop
  0x0000000110dece93: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@163 (line 1774)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110dece98: mov    %rax,%rbx
  0x0000000110dece9b: jmpq   0x0000000110dec521
  0x0000000110decea0: mov    %r13d,0x10(%rsp)
  0x0000000110decea5: mov    %rbx,0x8(%rsp)     ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@369 (line 1802)

  0x0000000110deceaa: movabs $0x80006a470,%rsi  ;   {metadata('java/util/regex/Pattern$Start')}
  0x0000000110deceb4: mov    %rbx,%rbp
  0x0000000110deceb7: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=NarrowOop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@386 (line 1802)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110decebc: mov    %rax,%rbp
  0x0000000110decebf: mov    0x8(%rsp),%rbx
  0x0000000110decec4: mov    0x10(%rsp),%r13d
  0x0000000110decec9: jmpq   0x0000000110dec882
  0x0000000110decece: mov    %r13d,0x10(%rsp)
  0x0000000110deced3: mov    %rbx,0x8(%rsp)     ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110deced8: movabs $0x80006a6a0,%rsi  ;   {metadata('java/util/regex/Pattern$TreeInfo')}
  0x0000000110decee2: nop
  0x0000000110decee3: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=NarrowOop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern$Start::<init>@9 (line 3608)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110decee8: mov    0x10(%rsp),%r13d
  0x0000000110deceed: jmpq   0x0000000110dec9ce
  0x0000000110decef2: mov    $0xffffffe4,%esi
  0x0000000110decef7: mov    %rbx,(%rsp)
  0x0000000110decefb: mov    %rbx,0x8(%rsp)
  0x0000000110decf00: mov    %r8d,0x18(%rsp)
  0x0000000110decf05: mov    %r10d,0x1c(%rsp)
  0x0000000110decf0a: mov    %r14d,0x28(%rsp)
  0x0000000110decf0f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=NarrowOop [28]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf14: ud2    
  0x0000000110decf16: mov    $0xffffffe4,%esi
  0x0000000110decf1b: mov    %rbx,(%rsp)
  0x0000000110decf1f: mov    %rbx,0x8(%rsp)
  0x0000000110decf24: mov    %r8d,0x18(%rsp)
  0x0000000110decf29: mov    %r10d,0x1c(%rsp)
  0x0000000110decf2e: mov    %r14d,0x28(%rsp)
  0x0000000110decf33: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=NarrowOop [28]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::expr@135 (line 2104)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf38: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::expr@135 (line 2104)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110decf3a: mov    $0xffffff4d,%esi
  0x0000000110decf3f: mov    %rbx,(%rsp)
  0x0000000110decf43: mov    %rbx,0x8(%rsp)
  0x0000000110decf48: mov    %r8d,0x18(%rsp)
  0x0000000110decf4d: mov    %edi,0x1c(%rsp)
  0x0000000110decf51: mov    %r9d,0x28(%rsp)
  0x0000000110decf56: nop
  0x0000000110decf57: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=NarrowOop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf5c: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110decf5e: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@59 (line 1752)

  0x0000000110decf61: jmpq   0x0000000110dec064  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@236 (line 1784)

  0x0000000110decf66: mov    $0xffffff4d,%esi
  0x0000000110decf6b: mov    %rbx,%rbp
  0x0000000110decf6e: nop
  0x0000000110decf6f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@269 (line 1794)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf74: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@340 (line 1799)

  0x0000000110decf76: mov    $0xffffff4d,%esi
  0x0000000110decf7b: mov    %rbx,%rbp
  0x0000000110decf7e: nop
  0x0000000110decf7f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@340 (line 1799)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf84: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@269 (line 1794)

  0x0000000110decf86: mov    $0xffffff4d,%esi
  0x0000000110decf8b: mov    %rbx,%rbp
  0x0000000110decf8e: nop
  0x0000000110decf8f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@350 (line 1799)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decf94: ud2    
  0x0000000110decf96: mov    $0xffffffde,%esi
  0x0000000110decf9b: mov    %rbx,(%rsp)
  0x0000000110decf9f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decfa4: ud2                       ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)

  0x0000000110decfa6: mov    0xc(%r11),%ebp     ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@19 (line 985)
                                                ; - java.util.ArrayList::iterator@5 (line 976)
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)

  0x0000000110decfaa: mov    $0xffffff4d,%esi
  0x0000000110decfaf: mov    %rbx,(%rsp)
  0x0000000110decfb3: mov    %r11,0x8(%rsp)
  0x0000000110decfb8: data16 xchg %ax,%ax
  0x0000000110decfbb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@423 (line 1810)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decfc0: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@78 (line 1757)

  0x0000000110decfc2: mov    $0xffffff7e,%esi
  0x0000000110decfc7: mov    %r14,(%rsp)
  0x0000000110decfcb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@78 (line 1757)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110decfd0: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@78 (line 1757)

  0x0000000110decfd2: movabs $0x110569000,%rdx
  0x0000000110decfdc: jmpq   0x0000000110dec286
  0x0000000110decfe1: mov    %r15,%rsi
  0x0000000110decfe4: movabs $0x107aec8aa,%r10
  0x0000000110decfee: callq  *%r10
  0x0000000110decff1: jmpq   0x0000000110debfaa  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110decff6: mov    %r15,%rsi
  0x0000000110decff9: movabs $0x107aec8aa,%r10
  0x0000000110ded003: callq  *%r10              ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@61 (line 1752)

  0x0000000110ded006: jmpq   0x0000000110dec112  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded00b: mov    %r15,%rsi
  0x0000000110ded00e: movabs $0x107aec8aa,%r10
  0x0000000110ded018: callq  *%r10              ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@172 (line 1774)

  0x0000000110ded01b: jmpq   0x0000000110dec61b  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded020: mov    %r15,%rsi
  0x0000000110ded023: movabs $0x107aec8aa,%r10
  0x0000000110ded02d: callq  *%r10              ;*putfield namedGroups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@159 (line 1773)

  0x0000000110ded030: jmpq   0x0000000110dec4b4  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded035: mov    %r15,%rsi
  0x0000000110ded038: movabs $0x107aec8aa,%r10
  0x0000000110ded042: callq  *%r10              ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@145 (line 1771)

  0x0000000110ded045: jmpq   0x0000000110dec33f  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded04a: mov    %r15,%rsi
  0x0000000110ded04d: movabs $0x107aec8aa,%r10
  0x0000000110ded057: callq  *%r10              ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@154 (line 1772)

  0x0000000110ded05a: jmpq   0x0000000110dec439  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@404 (line 1809)

  0x0000000110ded05f: mov    $0xffffff4d,%esi
  0x0000000110ded064: mov    %rbx,(%rsp)
  0x0000000110ded068: data16 xchg %ax,%ax
  0x0000000110ded06b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@404 (line 1809)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded070: ud2                       ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded072: mov    %r15,%rsi
  0x0000000110ded075: movabs $0x107aec8aa,%r10
  0x0000000110ded07f: callq  *%r10              ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110ded082: jmpq   0x0000000110dec765  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded087: mov    %r15,%rsi
  0x0000000110ded08a: movabs $0x107aec8aa,%r10
  0x0000000110ded094: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@6 (line 3607)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110ded097: jmpq   0x0000000110dec900  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded09c: mov    %r15,%rsi
  0x0000000110ded09f: movabs $0x107aec8aa,%r10
  0x0000000110ded0a9: callq  *%r10              ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@397 (line 1802)

  0x0000000110ded0ac: jmpq   0x0000000110deca0c  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded0b1: mov    %r15,%rsi
  0x0000000110ded0b4: movabs $0x107aec8aa,%r10
  0x0000000110ded0be: callq  *%r10              ;*putfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@474 (line 1820)

  0x0000000110ded0c1: jmpq   0x0000000110decacb  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded0c6: mov    %r15,%rsi
  0x0000000110ded0c9: movabs $0x107aec8aa,%r10
  0x0000000110ded0d3: callq  *%r10              ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@494 (line 1824)

  0x0000000110ded0d6: jmpq   0x0000000110decb07  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded0db: mov    %r15,%rsi
  0x0000000110ded0de: movabs $0x107aec8aa,%r10
  0x0000000110ded0e8: callq  *%r10              ;*putfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@469 (line 1819)

  0x0000000110ded0eb: jmpq   0x0000000110decac0  ;*putfield normalizedPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@38 (line 1746)

  0x0000000110ded0f0: mov    %r15,%rsi
  0x0000000110ded0f3: movabs $0x107aec8aa,%r10
  0x0000000110ded0fd: callq  *%r10              ;*putfield groupNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@479 (line 1821)

  0x0000000110ded100: jmpq   0x0000000110decad6
  0x0000000110ded105: mov    $0xffffff4d,%esi
  0x0000000110ded10a: mov    %r14,(%rsp)
  0x0000000110ded10e: nop
  0x0000000110ded10f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::compile@4 (line 1743)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded114: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::compile@130 (line 1767)

  0x0000000110ded116: mov    $0xffffff4d,%esi
  0x0000000110ded11b: mov    %r14,(%rsp)
  0x0000000110ded11f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::compile@130 (line 1767)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded124: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::compile@178 (line 1776)

  0x0000000110ded126: mov    $0xffffff4d,%esi
  0x0000000110ded12b: mov    %r10d,(%rsp)
  0x0000000110ded12f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::compile@178 (line 1776)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded134: ud2                       ;*putfield matchRoot {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@225 (line 1782)

  0x0000000110ded136: mov    $0xffffff4d,%esi
  0x0000000110ded13b: mov    %rbx,(%rsp)
  0x0000000110ded13f: mov    %r14d,0x8(%rsp)
  0x0000000110ded144: data16 xchg %ax,%ax
  0x0000000110ded147: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@236 (line 1784)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded14c: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@350 (line 1799)

  0x0000000110ded14e: mov    $0xffffff4d,%esi
  0x0000000110ded153: mov    %rbx,0x8(%rsp)
  0x0000000110ded158: data16 xchg %ax,%ax
  0x0000000110ded15b: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@369 (line 1802)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded160: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@369 (line 1802)

  0x0000000110ded162: mov    $0xfffffff6,%esi
  0x0000000110ded167: mov    %r14d,%ebp
  0x0000000110ded16a: nop
  0x0000000110ded16b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::expr@124 (line 2101)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded170: ud2    
  0x0000000110ded172: mov    $0xfffffff6,%esi
  0x0000000110ded177: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.util.regex.Pattern::compile@46 (line 1748)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded17c: ud2    
  0x0000000110ded17e: mov    $0xfffffff4,%esi
  0x0000000110ded183: mov    %rbx,%rbp
  0x0000000110ded186: nop
  0x0000000110ded187: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@266 (line 1794)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded18c: ud2    
  0x0000000110ded18e: mov    $0xfffffff6,%esi
  0x0000000110ded193: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@411 (line 1810)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110ded198: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@386 (line 1802)

  0x0000000110ded19a: mov    %rax,%rsi
  0x0000000110ded19d: jmp    0x0000000110ded1cc  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@9 (line 3608)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110ded19f: mov    %rax,%rsi
  0x0000000110ded1a2: jmp    0x0000000110ded1cc  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@143 (line 1771)

  0x0000000110ded1a4: mov    %rax,%rsi
  0x0000000110ded1a7: jmp    0x0000000110ded1cc  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@151 (line 1772)

  0x0000000110ded1a9: mov    %rax,%rsi
  0x0000000110ded1ac: jmp    0x0000000110ded1cc  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@163 (line 1774)

  0x0000000110ded1ae: mov    %rax,%rsi
  0x0000000110ded1b1: jmp    0x0000000110ded1cc  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::<init>@10 (line 154)
                                                ; - java.util.regex.Pattern::compile@169 (line 1774)

  0x0000000110ded1b3: mov    %rax,%rsi
  0x0000000110ded1b6: jmp    0x0000000110ded1cc  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@59 (line 1752)

  0x0000000110ded1b8: mov    %rax,%rsi
  0x0000000110ded1bb: jmp    0x0000000110ded1cc  ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Start::<init>@22 (line 3609)
                                                ; - java.util.regex.Pattern::compile@394 (line 1802)

  0x0000000110ded1bd: mov    %rax,%rsi
  0x0000000110ded1c0: jmp    0x0000000110ded1cc  ;*invokevirtual sequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@12 (line 2068)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110ded1c2: jmp    0x0000000110ded1c9  ;*invokevirtual RemoveQEQuoting {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@137 (line 1768)

  0x0000000110ded1c4: mov    %rax,%rsi
  0x0000000110ded1c7: jmp    0x0000000110ded1cc  ;*invokevirtual sequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::expr@12 (line 2068)
                                                ; - java.util.regex.Pattern::compile@222 (line 1782)

  0x0000000110ded1c9: mov    %rax,%rsi          ;*invokevirtual RemoveQEQuoting {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@137 (line 1768)

  0x0000000110ded1cc: add    $0x40,%rsp
  0x0000000110ded1d0: pop    %rbp
  0x0000000110ded1d1: jmpq   0x0000000110dc8700  ;*putfield topClosureNodes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@494 (line 1824)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110ded1d6: hlt    
  0x0000000110ded1d7: hlt    
  0x0000000110ded1d8: hlt    
  0x0000000110ded1d9: hlt    
  0x0000000110ded1da: hlt    
  0x0000000110ded1db: hlt    
  0x0000000110ded1dc: hlt    
  0x0000000110ded1dd: hlt    
  0x0000000110ded1de: hlt    
  0x0000000110ded1df: hlt    
[Stub Code]
  0x0000000110ded1e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110ded1ea: jmpq   0x0000000110ded1ea  ;   {runtime_call}
  0x0000000110ded1ef: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110ded1f9: jmpq   0x0000000110ded1f9  ;   {runtime_call}
  0x0000000110ded1fe: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110ded208: jmpq   0x0000000110ded208  ;   {runtime_call}
[Exception Handler]
  0x0000000110ded20d: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110ded212: callq  0x0000000110ded217
  0x0000000110ded217: subq   $0x5,(%rsp)
  0x0000000110ded21c: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110ded221: hlt    
  0x0000000110ded222: hlt    
  0x0000000110ded223: hlt    
  0x0000000110ded224: hlt    
  0x0000000110ded225: hlt    
  0x0000000110ded226: hlt    
  0x0000000110ded227: hlt    

ImmutableOopMap{}pc offsets: 212 
ImmutableOopMap{r10=Oop r11=Oop r14=Oop }pc offsets: 798 
ImmutableOopMap{rbp=Oop }pc offsets: 868 1872 
ImmutableOopMap{rbp=Oop [16]=Oop [24]=NarrowOop }pc offsets: 1996 
ImmutableOopMap{rbp=Oop [16]=Oop [24]=NarrowOop [28]=NarrowOop [32]=Oop }pc offsets: 2040 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2716 
ImmutableOopMap{[0]=Oop [8]=NarrowOop }pc offsets: 3768 
ImmutableOopMap{rbp=Oop }pc offsets: 3804 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 3840 
ImmutableOopMap{rbp=Oop }pc offsets: 3872 3896 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=NarrowOop }pc offsets: 3932 3976 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=NarrowOop [28]=NarrowOop }pc offsets: 4020 4056 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=NarrowOop }pc offsets: 4092 
ImmutableOopMap{rbp=Oop }pc offsets: 4116 4132 4148 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 4164 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 4192 
ImmutableOopMap{[0]=Oop }pc offsets: 4208 4368 4532 4548 
ImmutableOopMap{rbp=Oop }pc offsets: 4564 
ImmutableOopMap{[0]=Oop }pc offsets: 4588 
ImmutableOopMap{[8]=Oop }pc offsets: 4608 
ImmutableOopMap{}pc offsets: 4624 4636 
ImmutableOopMap{rbp=Oop }pc offsets: 4652 
ImmutableOopMap{}pc offsets: 4664 Compiled method (c2)     441   77             java.lang.invoke.Invokers$Holder::linkToTargetMethod (9 bytes)
 total in heap  [0x0000000110de3690,0x0000000110de39f8] = 872
 relocation     [0x0000000110de3808,0x0000000110de3828] = 32
 main code      [0x0000000110de3840,0x0000000110de38c0] = 128
 stub code      [0x0000000110de38c0,0x0000000110de38f8] = 56
 metadata       [0x0000000110de38f8,0x0000000110de3900] = 8
 scopes data    [0x0000000110de3900,0x0000000110de3938] = 56
 scopes pcs     [0x0000000110de3938,0x0000000110de39c8] = 144
 dependencies   [0x0000000110de39c8,0x0000000110de39d0] = 8
 handler table  [0x0000000110de39d0,0x0000000110de39e8] = 24
 nul chk table  [0x0000000110de39e8,0x0000000110de39f8] = 16
----------------------------------------------------------------------
java/lang/invoke/Invokers$Holder.linkToTargetMethod(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110de3840, 0x0000000110de38f8]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0f3960} 'linkToTargetMethod' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de3840: mov    %eax,-0x14000(%rsp)
  0x0000000110de3847: push   %rbp
  0x0000000110de3848: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1

  0x0000000110de384c: mov    %rsi,%r10
  0x0000000110de384f: mov    0x8(%rdx),%r8d     ; implicit exception: dispatches to 0x0000000110de38af
  0x0000000110de3853: movabs $0x800000000,%r11
  0x0000000110de385d: add    %r8,%r11
  0x0000000110de3860: mov    0x38(%r11),%r11
  0x0000000110de3864: movabs $0x80000bdb0,%r8   ;   {metadata('java/lang/invoke/MethodHandle')}
  0x0000000110de386e: cmp    %r8,%r11
  0x0000000110de3871: jne    0x0000000110de3890
  0x0000000110de3873: mov    %rdx,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110de3876: mov    %r10,%rdx
  0x0000000110de3879: xchg   %ax,%ax
  0x0000000110de387b: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ;   {optimized virtual_call}
  0x0000000110de3880: add    $0x10,%rsp
  0x0000000110de3884: pop    %rbp
  0x0000000110de3885: mov    0x108(%r15),%r10
  0x0000000110de388c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de388f: retq   
  0x0000000110de3890: mov    $0xffffffde,%esi
  0x0000000110de3895: mov    %rdx,%rbp
  0x0000000110de3898: data16 xchg %ax,%ax
  0x0000000110de389b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de38a0: ud2                       ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5

  0x0000000110de38a2: mov    %rax,%rsi
  0x0000000110de38a5: add    $0x10,%rsp
  0x0000000110de38a9: pop    %rbp
  0x0000000110de38aa: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de38af: mov    $0xffffff64,%esi
  0x0000000110de38b4: mov    %r10,%rbp
  0x0000000110de38b7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de38bc: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110de38be: hlt    
  0x0000000110de38bf: hlt    
[Stub Code]
  0x0000000110de38c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110de38ca: jmpq   0x0000000110de38ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110de38cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110de38d4: callq  0x0000000110de38d9
  0x0000000110de38d9: subq   $0x5,(%rsp)
  0x0000000110de38de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
[Deopt MH Handler Code]
  0x0000000110de38e3: callq  0x0000000110de38e8
  0x0000000110de38e8: subq   $0x5,(%rsp)
  0x0000000110de38ed: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de38f2: hlt    
  0x0000000110de38f3: hlt    
  0x0000000110de38f4: hlt    
  0x0000000110de38f5: hlt    
  0x0000000110de38f6: hlt    
  0x0000000110de38f7: hlt    

ImmutableOopMap{}pc offsets: 64 
ImmutableOopMap{rbp=Oop }pc offsets: 96 124 Compiled method (c2)     443   78             java.lang.invoke.DirectMethodHandle$Holder::invokeStatic (14 bytes)
 total in heap  [0x0000000110de3290,0x0000000110de3620] = 912
 relocation     [0x0000000110de3408,0x0000000110de3428] = 32
 main code      [0x0000000110de3440,0x0000000110de34c0] = 128
 stub code      [0x0000000110de34c0,0x0000000110de34e8] = 40
 metadata       [0x0000000110de34e8,0x0000000110de3500] = 24
 scopes data    [0x0000000110de3500,0x0000000110de3550] = 80
 scopes pcs     [0x0000000110de3550,0x0000000110de35f0] = 160
 dependencies   [0x0000000110de35f0,0x0000000110de35f8] = 8
 handler table  [0x0000000110de35f8,0x0000000110de3610] = 24
 nul chk table  [0x0000000110de3610,0x0000000110de3620] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110de3440, 0x0000000110de34e8]  168 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0a16b8} 'invokeStatic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/DirectMethodHandle$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110de3440: mov    %eax,-0x14000(%rsp)
  0x0000000110de3447: push   %rbp
  0x0000000110de3448: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1

  0x0000000110de344c: mov    %rdx,%r10
  0x0000000110de344f: mov    0x8(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000110de34a3
  0x0000000110de3453: cmp    $0xc0e0,%r8d       ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110de345a: jne    0x0000000110de3480  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de345c: mov    0x1c(%rsi),%r8d
  0x0000000110de3460: mov    %r8,%rdx
  0x0000000110de3463: shl    $0x3,%rdx          ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de3467: mov    %r10,%rsi
  0x0000000110de346a: nop
  0x0000000110de346b: callq  0x0000000110d90400  ; ImmutableOopMap{}
                                                ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ;   {static_call}
  0x0000000110de3470: add    $0x20,%rsp
  0x0000000110de3474: pop    %rbp
  0x0000000110de3475: mov    0x108(%r15),%r10
  0x0000000110de347c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de347f: retq   
  0x0000000110de3480: mov    %rdx,%rbp
  0x0000000110de3483: mov    %rsi,(%rsp)
  0x0000000110de3487: mov    $0xffffff6e,%esi
  0x0000000110de348c: data16 xchg %ax,%ax
  0x0000000110de348f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de3494: ud2                       ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10

  0x0000000110de3496: mov    %rax,%rsi
  0x0000000110de3499: add    $0x20,%rsp
  0x0000000110de349d: pop    %rbp
  0x0000000110de349e: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de34a3: mov    $0xffffff64,%esi
  0x0000000110de34a8: mov    %rdx,%rbp
  0x0000000110de34ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de34b0: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de34b2: hlt    
  0x0000000110de34b3: hlt    
  0x0000000110de34b4: hlt    
  0x0000000110de34b5: hlt    
  0x0000000110de34b6: hlt    
  0x0000000110de34b7: hlt    
  0x0000000110de34b8: hlt    
  0x0000000110de34b9: hlt    
  0x0000000110de34ba: hlt    
  0x0000000110de34bb: hlt    
  0x0000000110de34bc: hlt    
  0x0000000110de34bd: hlt    
  0x0000000110de34be: hlt    
  0x0000000110de34bf: hlt    
[Stub Code]
  0x0000000110de34c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110de34ca: jmpq   0x0000000110de34ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110de34cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110de34d4: callq  0x0000000110de34d9
  0x0000000110de34d9: subq   $0x5,(%rsp)
  0x0000000110de34de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de34e3: hlt    
  0x0000000110de34e4: hlt    
  0x0000000110de34e5: hlt    
  0x0000000110de34e6: hlt    
  0x0000000110de34e7: hlt    

ImmutableOopMap{}pc offsets: 48 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 84 
ImmutableOopMap{rbp=Oop }pc offsets: 112 Compiled method (c2)     446   79             java.util.Optional::isPresent (13 bytes)
 total in heap  [0x0000000110de3010,0x0000000110de3278] = 616
 relocation     [0x0000000110de3188,0x0000000110de3198] = 16
 main code      [0x0000000110de31a0,0x0000000110de3200] = 96
 stub code      [0x0000000110de3200,0x0000000110de3218] = 24
 metadata       [0x0000000110de3218,0x0000000110de3220] = 8
 scopes data    [0x0000000110de3220,0x0000000110de3230] = 16
 scopes pcs     [0x0000000110de3230,0x0000000110de3270] = 64
 dependencies   [0x0000000110de3270,0x0000000110de3278] = 8
----------------------------------------------------------------------
java/util/Optional.isPresent()Z  [0x0000000110de31a0, 0x0000000110de3218]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011efb4d20} 'isPresent' '()Z' in 'java/util/Optional'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de31a0: mov    0x8(%rsi),%r10d
  0x0000000110de31a4: movabs $0x800000000,%r12
  0x0000000110de31ae: add    %r12,%r10
  0x0000000110de31b1: xor    %r12,%r12
  0x0000000110de31b4: cmp    %r10,%rax
  0x0000000110de31b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de31bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de31c0: sub    $0x18,%rsp
  0x0000000110de31c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.Optional::isPresent@-1 (line 159)

  0x0000000110de31cc: mov    0xc(%rsi),%r11d
  0x0000000110de31d0: mov    %r11,%r10
  0x0000000110de31d3: shl    $0x3,%r10
  0x0000000110de31d7: test   %r10,%r10
  0x0000000110de31da: setne  %al
  0x0000000110de31dd: movzbl %al,%eax           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@12 (line 159)

  0x0000000110de31e0: add    $0x10,%rsp
  0x0000000110de31e4: pop    %rbp
  0x0000000110de31e5: mov    0x108(%r15),%r10
  0x0000000110de31ec: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de31ef: retq   
  0x0000000110de31f0: hlt    
  0x0000000110de31f1: hlt    
  0x0000000110de31f2: hlt    
  0x0000000110de31f3: hlt    
  0x0000000110de31f4: hlt    
  0x0000000110de31f5: hlt    
  0x0000000110de31f6: hlt    
  0x0000000110de31f7: hlt    
  0x0000000110de31f8: hlt    
  0x0000000110de31f9: hlt    
  0x0000000110de31fa: hlt    
  0x0000000110de31fb: hlt    
  0x0000000110de31fc: hlt    
  0x0000000110de31fd: hlt    
  0x0000000110de31fe: hlt    
  0x0000000110de31ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de3200: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de3205: callq  0x0000000110de320a
  0x0000000110de320a: subq   $0x5,(%rsp)
  0x0000000110de320f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de3214: hlt    
  0x0000000110de3215: hlt    
  0x0000000110de3216: hlt    
  0x0000000110de3217: hlt    
Compiled method (c2)     449   80             java.util.regex.Pattern::next (33 bytes)
 total in heap  [0x0000000110de4d90,0x0000000110de5170] = 992
 relocation     [0x0000000110de4f08,0x0000000110de4f18] = 16
 main code      [0x0000000110de4f20,0x0000000110de4fe0] = 192
 stub code      [0x0000000110de4fe0,0x0000000110de4ff8] = 24
 metadata       [0x0000000110de4ff8,0x0000000110de5008] = 16
 scopes data    [0x0000000110de5008,0x0000000110de5078] = 112
 scopes pcs     [0x0000000110de5078,0x0000000110de5158] = 224
 dependencies   [0x0000000110de5158,0x0000000110de5160] = 8
 nul chk table  [0x0000000110de5160,0x0000000110de5170] = 16
----------------------------------------------------------------------
java/util/regex/Pattern.next()I  [0x0000000110de4f20, 0x0000000110de4ff8]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19fa58} 'next' '()I' in 'java/util/regex/Pattern'
  #           [sp+0x30]  (sp of caller)
  0x0000000110de4f20: mov    0x8(%rsi),%r10d
  0x0000000110de4f24: movabs $0x800000000,%r12
  0x0000000110de4f2e: add    %r12,%r10
  0x0000000110de4f31: xor    %r12,%r12
  0x0000000110de4f34: cmp    %r10,%rax
  0x0000000110de4f37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de4f3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de4f40: mov    %eax,-0x14000(%rsp)
  0x0000000110de4f47: push   %rbp
  0x0000000110de4f48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::next@-1 (line 1921)

  0x0000000110de4f4c: mov    0x20(%rsi),%r10d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@6 (line 1921)

  0x0000000110de4f50: mov    0x50(%rsi),%r8d    ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@1 (line 1921)

  0x0000000110de4f54: mov    %r10d,%r9d
  0x0000000110de4f57: inc    %r9d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)

  0x0000000110de4f5a: mov    %r9d,0x20(%rsi)    ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)

  0x0000000110de4f5e: mov    0xc(%r12,%r8,8),%ecx  ; implicit exception: dispatches to 0x0000000110de4fbe
  0x0000000110de4f63: cmp    %ecx,%r9d
  0x0000000110de4f66: jae    0x0000000110de4f90
  0x0000000110de4f68: lea    (%r12,%r8,8),%r11
  0x0000000110de4f6c: movslq %r10d,%r10
  0x0000000110de4f6f: mov    0x14(%r11,%r10,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)

  0x0000000110de4f74: mov    $0x4,%ebp
  0x0000000110de4f79: and    0x10(%rsi),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)

  0x0000000110de4f7c: test   %ebp,%ebp
  0x0000000110de4f7e: jne    0x0000000110de4faa
  0x0000000110de4f80: add    $0x20,%rsp
  0x0000000110de4f84: pop    %rbp
  0x0000000110de4f85: mov    0x108(%r15),%r10
  0x0000000110de4f8c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de4f8f: retq   
  0x0000000110de4f90: mov    %rsi,%rbp
  0x0000000110de4f93: mov    %r8d,(%rsp)
  0x0000000110de4f97: mov    %r9d,0x4(%rsp)
  0x0000000110de4f9c: mov    $0xffffffe4,%esi
  0x0000000110de4fa1: xchg   %ax,%ax
  0x0000000110de4fa3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de4fa8: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)

  0x0000000110de4faa: mov    %rsi,(%rsp)
  0x0000000110de4fae: mov    %eax,0x8(%rsp)
  0x0000000110de4fb2: mov    $0xffffff4d,%esi
  0x0000000110de4fb7: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de4fbc: ud2    
  0x0000000110de4fbe: mov    $0xfffffff6,%esi
  0x0000000110de4fc3: mov    %r9d,%ebp
  0x0000000110de4fc6: nop
  0x0000000110de4fc7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de4fcc: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)

  0x0000000110de4fce: hlt    
  0x0000000110de4fcf: hlt    
  0x0000000110de4fd0: hlt    
  0x0000000110de4fd1: hlt    
  0x0000000110de4fd2: hlt    
  0x0000000110de4fd3: hlt    
  0x0000000110de4fd4: hlt    
  0x0000000110de4fd5: hlt    
  0x0000000110de4fd6: hlt    
  0x0000000110de4fd7: hlt    
  0x0000000110de4fd8: hlt    
  0x0000000110de4fd9: hlt    
  0x0000000110de4fda: hlt    
  0x0000000110de4fdb: hlt    
  0x0000000110de4fdc: hlt    
  0x0000000110de4fdd: hlt    
  0x0000000110de4fde: hlt    
  0x0000000110de4fdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de4fe0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de4fe5: callq  0x0000000110de4fea
  0x0000000110de4fea: subq   $0x5,(%rsp)
  0x0000000110de4fef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de4ff4: hlt    
  0x0000000110de4ff5: hlt    
  0x0000000110de4ff6: hlt    
  0x0000000110de4ff7: hlt    

ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 136 
ImmutableOopMap{[0]=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 172 Compiled method (c2)     454   81             java.util.regex.Pattern::RemoveQEQuoting (346 bytes)
 total in heap  [0x0000000110de8710,0x0000000110de8d48] = 1592
 relocation     [0x0000000110de8888,0x0000000110de88a0] = 24
 main code      [0x0000000110de88a0,0x0000000110de8a20] = 384
 stub code      [0x0000000110de8a20,0x0000000110de8a38] = 24
 metadata       [0x0000000110de8a38,0x0000000110de8a40] = 8
 scopes data    [0x0000000110de8a40,0x0000000110de8af0] = 176
 scopes pcs     [0x0000000110de8af0,0x0000000110de8d30] = 576
 dependencies   [0x0000000110de8d30,0x0000000110de8d38] = 8
 nul chk table  [0x0000000110de8d38,0x0000000110de8d48] = 16
----------------------------------------------------------------------
java/util/regex/Pattern.RemoveQEQuoting()V  [0x0000000110de88a0, 0x0000000110de8a38]  408 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19f0c8} 'RemoveQEQuoting' '()V' in 'java/util/regex/Pattern'
  #           [sp+0x40]  (sp of caller)
  0x0000000110de88a0: mov    0x8(%rsi),%r10d
  0x0000000110de88a4: movabs $0x800000000,%r12
  0x0000000110de88ae: add    %r12,%r10
  0x0000000110de88b1: xor    %r12,%r12
  0x0000000110de88b4: cmp    %r10,%rax
  0x0000000110de88b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de88bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de88c0: mov    %eax,-0x14000(%rsp)
  0x0000000110de88c7: push   %rbp
  0x0000000110de88c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@-1 (line 1671)

  0x0000000110de88cc: mov    %rsi,%r9
  0x0000000110de88cf: mov    0x24(%rsi),%ebx    ;*getfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@1 (line 1671)

  0x0000000110de88d2: mov    0x50(%rsi),%ebp    ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@15 (line 1674)

  0x0000000110de88d5: mov    0xc(%r12,%rbp,8),%edx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)
                                                ; implicit exception: dispatches to 0x0000000110de8a06
  0x0000000110de88da: mov    %ebx,%edi
  0x0000000110de88dc: dec    %edi               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@10 (line 1673)

  0x0000000110de88de: test   %edi,%edi
  0x0000000110de88e0: jle    0x0000000110de89af  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@11 (line 1673)

  0x0000000110de88e6: lea    (%r12,%rbp,8),%rax
  0x0000000110de88ea: xor    %r10d,%r10d
  0x0000000110de88ed: mov    $0x1,%r8d
  0x0000000110de88f3: cmp    %r8d,%edi
  0x0000000110de88f6: mov    %edi,%esi
  0x0000000110de88f8: cmovg  %r8d,%esi
  0x0000000110de88fc: cmp    %edx,%r10d
  0x0000000110de88ff: jae    0x0000000110de89ea
  0x0000000110de8905: mov    0x10(%rax,%r10,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de890a: cmp    $0x5c,%ecx
  0x0000000110de890d: je     0x0000000110de89ce  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de8913: inc    %r10d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@25 (line 1675)

  0x0000000110de8916: cmp    %esi,%r10d
  0x0000000110de8919: jl     0x0000000110de88fc  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@11 (line 1673)

  0x0000000110de891b: cmp    %edx,%edi
  0x0000000110de891d: mov    %edi,%ecx
  0x0000000110de891f: cmovg  %edx,%ecx
  0x0000000110de8922: mov    %ecx,%r8d
  0x0000000110de8925: add    $0xfffffffd,%r8d
  0x0000000110de8929: mov    $0x80000000,%esi
  0x0000000110de892e: cmp    %r8d,%ecx
  0x0000000110de8931: cmovl  %esi,%r8d
  0x0000000110de8935: cmp    %r8d,%r10d
  0x0000000110de8938: jge    0x0000000110de8993  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@28 (line 1675)

  0x0000000110de893a: mov    $0xfa0,%r11d
  0x0000000110de8940: mov    %r8d,%esi
  0x0000000110de8943: sub    %r10d,%esi
  0x0000000110de8946: cmp    %r11d,%esi
  0x0000000110de8949: cmovg  %r11d,%esi
  0x0000000110de894d: add    %r10d,%esi
  0x0000000110de8950: mov    0x10(%rax,%r10,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de8955: cmp    $0x5c,%ecx
  0x0000000110de8958: je     0x0000000110de89ce  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de895a: movslq %r10d,%r13
  0x0000000110de895d: mov    0x14(%rax,%r13,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de8962: cmp    $0x5c,%ecx
  0x0000000110de8965: je     0x0000000110de89bf  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de8967: mov    0x18(%rax,%r13,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de896c: cmp    $0x5c,%ecx
  0x0000000110de896f: je     0x0000000110de89c4  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de8971: mov    0x1c(%rax,%r13,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de8976: cmp    $0x5c,%ecx
  0x0000000110de8979: je     0x0000000110de89ca  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de897b: add    $0x4,%r10d         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@25 (line 1675)

  0x0000000110de897f: cmp    %esi,%r10d
  0x0000000110de8982: jl     0x0000000110de8950  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@11 (line 1673)

  0x0000000110de8984: mov    0x108(%r15),%r14   ; ImmutableOopMap{r9=Oop rax=Oop rbp=NarrowOop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@28 (line 1675)

  0x0000000110de898b: test   %eax,(%r14)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@28 (line 1675)
                                                ;   {poll}
  0x0000000110de898e: cmp    %r8d,%r10d
  0x0000000110de8991: jl     0x0000000110de8940
  0x0000000110de8993: cmp    %edi,%r10d
  0x0000000110de8996: jge    0x0000000110de89af
  0x0000000110de8998: cmp    %edx,%r10d
  0x0000000110de899b: jae    0x0000000110de89ea
  0x0000000110de899d: mov    0x10(%rax,%r10,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de89a2: cmp    $0x5c,%ecx
  0x0000000110de89a5: je     0x0000000110de89ce  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de89a7: inc    %r10d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@25 (line 1675)

  0x0000000110de89aa: cmp    %edi,%r10d
  0x0000000110de89ad: jl     0x0000000110de8998  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@11 (line 1673)

  0x0000000110de89af: add    $0x30,%rsp
  0x0000000110de89b3: pop    %rbp
  0x0000000110de89b4: mov    0x108(%r15),%r10
  0x0000000110de89bb: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de89be: retq   
  0x0000000110de89bf: inc    %r10d
  0x0000000110de89c2: jmp    0x0000000110de89ce
  0x0000000110de89c4: add    $0x2,%r10d
  0x0000000110de89c8: jmp    0x0000000110de89ce
  0x0000000110de89ca: add    $0x3,%r10d         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@25 (line 1675)

  0x0000000110de89ce: mov    $0xffffff4d,%esi
  0x0000000110de89d3: mov    %r9,%rbp
  0x0000000110de89d6: mov    %ebx,(%rsp)
  0x0000000110de89d9: mov    %r10d,0x4(%rsp)
  0x0000000110de89de: mov    %ecx,0x8(%rsp)
  0x0000000110de89e2: nop
  0x0000000110de89e3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de89e8: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@22 (line 1674)

  0x0000000110de89ea: mov    $0xffffffe4,%esi
  0x0000000110de89ef: mov    %r9,(%rsp)
  0x0000000110de89f3: mov    %ebx,0x8(%rsp)
  0x0000000110de89f7: mov    %r10d,0x10(%rsp)
  0x0000000110de89fc: data16 xchg %ax,%ax
  0x0000000110de89ff: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de8a04: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@19 (line 1674)

  0x0000000110de8a06: mov    $0xffffffbe,%esi
  0x0000000110de8a0b: mov    %r9,%rbp
  0x0000000110de8a0e: mov    %ebx,(%rsp)
  0x0000000110de8a11: xchg   %ax,%ax
  0x0000000110de8a13: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@7 (line 1673)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de8a18: ud2                       ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::RemoveQEQuoting@7 (line 1673)

  0x0000000110de8a1a: hlt    
  0x0000000110de8a1b: hlt    
  0x0000000110de8a1c: hlt    
  0x0000000110de8a1d: hlt    
  0x0000000110de8a1e: hlt    
  0x0000000110de8a1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de8a20: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de8a25: callq  0x0000000110de8a2a
  0x0000000110de8a2a: subq   $0x5,(%rsp)
  0x0000000110de8a2f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de8a34: hlt    
  0x0000000110de8a35: hlt    
  0x0000000110de8a36: hlt    
  0x0000000110de8a37: hlt    

ImmutableOopMap{r9=Oop rax=Oop rbp=NarrowOop }pc offsets: 235 
ImmutableOopMap{rbp=Oop }pc offsets: 328 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 356 
ImmutableOopMap{rbp=Oop }pc offsets: 376 Compiled method (c2)     472   82             java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)
 total in heap  [0x0000000110de4890,0x0000000110de4bd8] = 840
 relocation     [0x0000000110de4a08,0x0000000110de4a28] = 32
 main code      [0x0000000110de4a40,0x0000000110de4aa0] = 96
 stub code      [0x0000000110de4aa0,0x0000000110de4ad8] = 56
 metadata       [0x0000000110de4ad8,0x0000000110de4ae8] = 16
 scopes data    [0x0000000110de4ae8,0x0000000110de4b18] = 48
 scopes pcs     [0x0000000110de4b18,0x0000000110de4ba8] = 144
 dependencies   [0x0000000110de4ba8,0x0000000110de4bb0] = 8
 handler table  [0x0000000110de4bb0,0x0000000110de4bc8] = 24
 nul chk table  [0x0000000110de4bc8,0x0000000110de4bd8] = 16
----------------------------------------------------------------------
java/lang/invoke/Invokers$Holder.linkToTargetMethod(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110de4a40, 0x0000000110de4ad8]  152 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0f3ae0} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de4a40: mov    %eax,-0x14000(%rsp)
  0x0000000110de4a47: push   %rbp
  0x0000000110de4a48: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1

  0x0000000110de4a4c: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x0000000110de4a8f
  0x0000000110de4a50: cmp    $0x57830,%r11d     ;   {metadata('java/lang/invoke/BoundMethodHandle$Species_L')}
  0x0000000110de4a57: jne    0x0000000110de4a70  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110de4a59: xchg   %ax,%ax
  0x0000000110de4a5b: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                ;   {optimized virtual_call}
  0x0000000110de4a60: add    $0x10,%rsp
  0x0000000110de4a64: pop    %rbp
  0x0000000110de4a65: mov    0x108(%r15),%r10
  0x0000000110de4a6c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de4a6f: retq   
  0x0000000110de4a70: mov    %rsi,%rbp
  0x0000000110de4a73: mov    $0xffffff6e,%esi
  0x0000000110de4a78: data16 xchg %ax,%ax
  0x0000000110de4a7b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de4a80: ud2                       ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4

  0x0000000110de4a82: mov    %rax,%rsi
  0x0000000110de4a85: add    $0x10,%rsp
  0x0000000110de4a89: pop    %rbp
  0x0000000110de4a8a: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de4a8f: mov    $0xffffff64,%esi
  0x0000000110de4a94: data16 xchg %ax,%ax
  0x0000000110de4a97: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de4a9c: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110de4a9e: hlt    
  0x0000000110de4a9f: hlt    
[Stub Code]
  0x0000000110de4aa0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110de4aaa: jmpq   0x0000000110de4aaa  ;   {runtime_call}
[Exception Handler]
  0x0000000110de4aaf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110de4ab4: callq  0x0000000110de4ab9
  0x0000000110de4ab9: subq   $0x5,(%rsp)
  0x0000000110de4abe: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
[Deopt MH Handler Code]
  0x0000000110de4ac3: callq  0x0000000110de4ac8
  0x0000000110de4ac8: subq   $0x5,(%rsp)
  0x0000000110de4acd: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de4ad2: hlt    
  0x0000000110de4ad3: hlt    
  0x0000000110de4ad4: hlt    
  0x0000000110de4ad5: hlt    
  0x0000000110de4ad6: hlt    
  0x0000000110de4ad7: hlt    

ImmutableOopMap{}pc offsets: 32 
ImmutableOopMap{rbp=Oop }pc offsets: 64 
ImmutableOopMap{}pc offsets: 92 Compiled method (c2)     474   83             java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke (8 bytes)
 total in heap  [0x0000000110de6d90,0x0000000110de7078] = 744
 relocation     [0x0000000110de6f08,0x0000000110de6f18] = 16
 main code      [0x0000000110de6f20,0x0000000110de6f80] = 96
 stub code      [0x0000000110de6f80,0x0000000110de6f98] = 24
 oops           [0x0000000110de6f98,0x0000000110de6fa0] = 8
 metadata       [0x0000000110de6fa0,0x0000000110de6fb0] = 16
 scopes data    [0x0000000110de6fb0,0x0000000110de6fe0] = 48
 scopes pcs     [0x0000000110de6fe0,0x0000000110de7060] = 128
 dependencies   [0x0000000110de7060,0x0000000110de7068] = 8
 nul chk table  [0x0000000110de7068,0x0000000110de7078] = 16
----------------------------------------------------------------------
java/lang/invoke/LambdaForm$MH.invoke(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110de6f20, 0x0000000110de6f98]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f17fde8} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de6f20: mov    %eax,-0x14000(%rsp)
  0x0000000110de6f27: push   %rbp
  0x0000000110de6f28: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@-1

  0x0000000110de6f2c: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x0000000110de6f66
  0x0000000110de6f30: cmp    $0x57830,%r11d     ;   {metadata('java/lang/invoke/BoundMethodHandle$Species_L')}
  0x0000000110de6f37: jne    0x0000000110de6f54  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@1

  0x0000000110de6f39: mov    0x1c(%rsi),%r11d
  0x0000000110de6f3d: mov    %r11,%rax
  0x0000000110de6f40: shl    $0x3,%rax          ;*getfield argL0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@4

  0x0000000110de6f44: add    $0x10,%rsp
  0x0000000110de6f48: pop    %rbp
  0x0000000110de6f49: mov    0x108(%r15),%r10
  0x0000000110de6f50: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de6f53: retq   
  0x0000000110de6f54: mov    %rsi,%rbp
  0x0000000110de6f57: mov    $0xffffff6e,%esi
  0x0000000110de6f5c: data16 xchg %ax,%ax
  0x0000000110de6f5f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de6f64: ud2    
  0x0000000110de6f66: mov    $0xffffff64,%esi
  0x0000000110de6f6b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de6f70: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800065440::invoke@1

  0x0000000110de6f72: hlt    
  0x0000000110de6f73: hlt    
  0x0000000110de6f74: hlt    
  0x0000000110de6f75: hlt    
  0x0000000110de6f76: hlt    
  0x0000000110de6f77: hlt    
  0x0000000110de6f78: hlt    
  0x0000000110de6f79: hlt    
  0x0000000110de6f7a: hlt    
  0x0000000110de6f7b: hlt    
  0x0000000110de6f7c: hlt    
  0x0000000110de6f7d: hlt    
  0x0000000110de6f7e: hlt    
  0x0000000110de6f7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de6f80: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de6f85: callq  0x0000000110de6f8a
  0x0000000110de6f8a: subq   $0x5,(%rsp)
  0x0000000110de6f8f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de6f94: hlt    
  0x0000000110de6f95: hlt    
  0x0000000110de6f96: hlt    
  0x0000000110de6f97: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 68 
ImmutableOopMap{}pc offsets: 80 Compiled method (c2)     476   84             java.util.Optional::filter (35 bytes)
 total in heap  [0x0000000110de6990,0x0000000110de6d60] = 976
 relocation     [0x0000000110de6b08,0x0000000110de6b20] = 24
 main code      [0x0000000110de6b20,0x0000000110de6be0] = 192
 stub code      [0x0000000110de6be0,0x0000000110de6bf8] = 24
 metadata       [0x0000000110de6bf8,0x0000000110de6c10] = 24
 scopes data    [0x0000000110de6c10,0x0000000110de6c70] = 96
 scopes pcs     [0x0000000110de6c70,0x0000000110de6d40] = 208
 dependencies   [0x0000000110de6d40,0x0000000110de6d48] = 8
 handler table  [0x0000000110de6d48,0x0000000110de6d60] = 24
----------------------------------------------------------------------
java/util/Optional.filter(Ljava/util/function/Predicate;)Ljava/util/Optional;  [0x0000000110de6b20, 0x0000000110de6bf8]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011efb5050} 'filter' '(Ljava/util/function/Predicate;)Ljava/util/Optional;' in 'java/util/Optional'
  # this:     rsi:rsi   = 'java/util/Optional'
  # parm0:    rdx:rdx   = 'java/util/function/Predicate'
  #           [sp+0x40]  (sp of caller)
  0x0000000110de6b20: mov    0x8(%rsi),%r10d
  0x0000000110de6b24: movabs $0x800000000,%r12
  0x0000000110de6b2e: add    %r12,%r10
  0x0000000110de6b31: xor    %r12,%r12
  0x0000000110de6b34: cmp    %r10,%rax
  0x0000000110de6b37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de6b3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de6b40: mov    %eax,-0x14000(%rsp)
  0x0000000110de6b47: push   %rbp
  0x0000000110de6b48: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.Optional::filter@-1 (line 219)

  0x0000000110de6b4c: mov    %rsi,%r10
  0x0000000110de6b4f: mov    %rdx,%r8
  0x0000000110de6b52: test   %rdx,%rdx
  0x0000000110de6b55: je     0x0000000110de6ba4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.Optional::filter@1 (line 219)

  0x0000000110de6b57: mov    %rsi,%rbp
  0x0000000110de6b5a: mov    0xc(%rsi),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)

  0x0000000110de6b5e: test   %r11d,%r11d
  0x0000000110de6b61: je     0x0000000110de6b93  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)

  0x0000000110de6b63: mov    %r11,%rdx
  0x0000000110de6b66: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)

  0x0000000110de6b6a: mov    %r8,%rsi
  0x0000000110de6b6d: movabs $0xffffffffffffffff,%rax
  0x0000000110de6b77: callq  0x0000000110d90180  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ;   {virtual_call}
  0x0000000110de6b7c: test   %eax,%eax
  0x0000000110de6b7e: je     0x0000000110de6b98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@24 (line 223)

  0x0000000110de6b80: mov    %rbp,%rax          ;*synchronization entry
                                                ; - java.util.Optional::filter@-1 (line 219)

  0x0000000110de6b83: add    $0x30,%rsp
  0x0000000110de6b87: pop    %rbp
  0x0000000110de6b88: mov    0x108(%r15),%r10
  0x0000000110de6b8f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de6b92: retq   
  0x0000000110de6b93: mov    %rsi,%rax
  0x0000000110de6b96: jmp    0x0000000110de6b83
  0x0000000110de6b98: movabs $0x70ff4b4c8,%rax  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110de6ba2: jmp    0x0000000110de6b83
  0x0000000110de6ba4: mov    $0xffffff4d,%esi
  0x0000000110de6ba9: mov    %r10,%rbp
  0x0000000110de6bac: mov    %rdx,0x8(%rsp)
  0x0000000110de6bb1: mov    %rdx,0x10(%rsp)
  0x0000000110de6bb6: nop
  0x0000000110de6bb7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.Optional::filter@1 (line 219)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de6bbc: ud2                       ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)

  0x0000000110de6bbe: mov    %rax,%rsi
  0x0000000110de6bc1: add    $0x30,%rsp
  0x0000000110de6bc5: pop    %rbp
  0x0000000110de6bc6: jmpq   0x0000000110dc8700  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@34 (line 223)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110de6bcb: hlt    
  0x0000000110de6bcc: hlt    
  0x0000000110de6bcd: hlt    
  0x0000000110de6bce: hlt    
  0x0000000110de6bcf: hlt    
  0x0000000110de6bd0: hlt    
  0x0000000110de6bd1: hlt    
  0x0000000110de6bd2: hlt    
  0x0000000110de6bd3: hlt    
  0x0000000110de6bd4: hlt    
  0x0000000110de6bd5: hlt    
  0x0000000110de6bd6: hlt    
  0x0000000110de6bd7: hlt    
  0x0000000110de6bd8: hlt    
  0x0000000110de6bd9: hlt    
  0x0000000110de6bda: hlt    
  0x0000000110de6bdb: hlt    
  0x0000000110de6bdc: hlt    
  0x0000000110de6bdd: hlt    
  0x0000000110de6bde: hlt    
  0x0000000110de6bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de6be0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de6be5: callq  0x0000000110de6bea
  0x0000000110de6bea: subq   $0x5,(%rsp)
  0x0000000110de6bef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de6bf4: hlt    
  0x0000000110de6bf5: hlt    
  0x0000000110de6bf6: hlt    
  0x0000000110de6bf7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 92 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 156 Compiled method (c2)     480   85             java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is (13 bytes)
 total in heap  [0x0000000110de6610,0x0000000110de6960] = 848
 relocation     [0x0000000110de6788,0x0000000110de6798] = 16
 main code      [0x0000000110de67a0,0x0000000110de6820] = 128
 stub code      [0x0000000110de6820,0x0000000110de6838] = 24
 oops           [0x0000000110de6838,0x0000000110de6840] = 8
 metadata       [0x0000000110de6840,0x0000000110de6858] = 24
 scopes data    [0x0000000110de6858,0x0000000110de68b8] = 96
 scopes pcs     [0x0000000110de68b8,0x0000000110de6958] = 160
 dependencies   [0x0000000110de6958,0x0000000110de6960] = 8
----------------------------------------------------------------------
java/util/regex/Pattern$$Lambda$7.is(I)Z  [0x0000000110de67a0, 0x0000000110de6838]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f17c840} 'is' '(I)Z' in 'java/util/regex/Pattern$$Lambda$7'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$$Lambda$7'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110de67a0: mov    0x8(%rsi),%r10d
  0x0000000110de67a4: movabs $0x800000000,%r12
  0x0000000110de67ae: add    %r12,%r10
  0x0000000110de67b1: xor    %r12,%r12
  0x0000000110de67b4: cmp    %r10,%rax
  0x0000000110de67b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de67bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de67c0: mov    %eax,-0x14000(%rsp)
  0x0000000110de67c7: push   %rbp
  0x0000000110de67c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@-1

  0x0000000110de67cc: mov    0x10(%rsi),%r11d   ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@5

  0x0000000110de67d0: mov    0xc(%rsi),%r10d    ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@1

  0x0000000110de67d4: cmp    %edx,%r10d
  0x0000000110de67d7: jg     0x0000000110de67f7  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@9

  0x0000000110de67d9: cmp    %r11d,%edx
  0x0000000110de67dc: jg     0x0000000110de67f3  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@7 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@9

  0x0000000110de67de: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@15 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@9

  0x0000000110de67e3: add    $0x20,%rsp
  0x0000000110de67e7: pop    %rbp
  0x0000000110de67e8: mov    0x108(%r15),%r10
  0x0000000110de67ef: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de67f2: retq   
  0x0000000110de67f3: xor    %eax,%eax
  0x0000000110de67f5: jmp    0x0000000110de67e3
  0x0000000110de67f7: mov    $0xffffff4d,%esi
  0x0000000110de67fc: mov    %r11d,(%rsp)
  0x0000000110de6800: mov    %r10d,0x4(%rsp)
  0x0000000110de6805: mov    %edx,0x8(%rsp)
  0x0000000110de6809: xchg   %ax,%ax
  0x0000000110de680b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@9
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de6810: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::is@9

  0x0000000110de6812: hlt    
  0x0000000110de6813: hlt    
  0x0000000110de6814: hlt    
  0x0000000110de6815: hlt    
  0x0000000110de6816: hlt    
  0x0000000110de6817: hlt    
  0x0000000110de6818: hlt    
  0x0000000110de6819: hlt    
  0x0000000110de681a: hlt    
  0x0000000110de681b: hlt    
  0x0000000110de681c: hlt    
  0x0000000110de681d: hlt    
  0x0000000110de681e: hlt    
  0x0000000110de681f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de6820: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de6825: callq  0x0000000110de682a
  0x0000000110de682a: subq   $0x5,(%rsp)
  0x0000000110de682f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de6834: hlt    
  0x0000000110de6835: hlt    
  0x0000000110de6836: hlt    
  0x0000000110de6837: hlt    

ImmutableOopMap{}pc offsets: 112 Compiled method (c2)     482   86             java.util.regex.Pattern::lambda$Range$11 (7 bytes)
 total in heap  [0x0000000110de6310,0x0000000110de65f0] = 736
 relocation     [0x0000000110de6488,0x0000000110de6498] = 16
 main code      [0x0000000110de64a0,0x0000000110de6500] = 96
 stub code      [0x0000000110de6500,0x0000000110de6518] = 24
 metadata       [0x0000000110de6518,0x0000000110de6528] = 16
 scopes data    [0x0000000110de6528,0x0000000110de6568] = 64
 scopes pcs     [0x0000000110de6568,0x0000000110de65e8] = 128
 dependencies   [0x0000000110de65e8,0x0000000110de65f0] = 8
----------------------------------------------------------------------
java/util/regex/Pattern.lambda$Range$11(III)Z  [0x0000000110de64a0, 0x0000000110de6518]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f1a5060} 'lambda$Range$11' '(III)Z' in 'java/util/regex/Pattern'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110de64a0: mov    %eax,-0x14000(%rsp)
  0x0000000110de64a7: push   %rbp
  0x0000000110de64a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::lambda$Range$11@-1 (line 5802)

  0x0000000110de64ac: cmp    %ecx,%esi
  0x0000000110de64ae: jg     0x0000000110de64cd  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)

  0x0000000110de64b0: cmp    %edx,%ecx
  0x0000000110de64b2: jg     0x0000000110de64c9  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@7 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)

  0x0000000110de64b4: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@15 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)

  0x0000000110de64b9: add    $0x20,%rsp
  0x0000000110de64bd: pop    %rbp
  0x0000000110de64be: mov    0x108(%r15),%r10
  0x0000000110de64c5: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de64c8: retq   
  0x0000000110de64c9: xor    %eax,%eax
  0x0000000110de64cb: jmp    0x0000000110de64b9
  0x0000000110de64cd: mov    %edx,(%rsp)
  0x0000000110de64d0: mov    %esi,0x4(%rsp)
  0x0000000110de64d4: mov    %ecx,0x8(%rsp)
  0x0000000110de64d8: mov    $0xffffff4d,%esi
  0x0000000110de64dd: xchg   %ax,%ax
  0x0000000110de64df: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de64e4: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ; - java.util.regex.Pattern::lambda$Range$11@3 (line 5802)

  0x0000000110de64e6: hlt    
  0x0000000110de64e7: hlt    
  0x0000000110de64e8: hlt    
  0x0000000110de64e9: hlt    
  0x0000000110de64ea: hlt    
  0x0000000110de64eb: hlt    
  0x0000000110de64ec: hlt    
  0x0000000110de64ed: hlt    
  0x0000000110de64ee: hlt    
  0x0000000110de64ef: hlt    
  0x0000000110de64f0: hlt    
  0x0000000110de64f1: hlt    
  0x0000000110de64f2: hlt    
  0x0000000110de64f3: hlt    
  0x0000000110de64f4: hlt    
  0x0000000110de64f5: hlt    
  0x0000000110de64f6: hlt    
  0x0000000110de64f7: hlt    
  0x0000000110de64f8: hlt    
  0x0000000110de64f9: hlt    
  0x0000000110de64fa: hlt    
  0x0000000110de64fb: hlt    
  0x0000000110de64fc: hlt    
  0x0000000110de64fd: hlt    
  0x0000000110de64fe: hlt    
  0x0000000110de64ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de6500: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de6505: callq  0x0000000110de650a
  0x0000000110de650a: subq   $0x5,(%rsp)
  0x0000000110de650f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de6514: hlt    
  0x0000000110de6515: hlt    
  0x0000000110de6516: hlt    
  0x0000000110de6517: hlt    

ImmutableOopMap{}pc offsets: 68 Compiled method (c2)     484   87             java.util.regex.Pattern::inRange (16 bytes)
 total in heap  [0x0000000110de6010,0x0000000110de62d8] = 712
 relocation     [0x0000000110de6188,0x0000000110de6198] = 16
 main code      [0x0000000110de61a0,0x0000000110de6200] = 96
 stub code      [0x0000000110de6200,0x0000000110de6218] = 24
 metadata       [0x0000000110de6218,0x0000000110de6220] = 8
 scopes data    [0x0000000110de6220,0x0000000110de6250] = 48
 scopes pcs     [0x0000000110de6250,0x0000000110de62d0] = 128
 dependencies   [0x0000000110de62d0,0x0000000110de62d8] = 8
----------------------------------------------------------------------
java/util/regex/Pattern.inRange(III)Z  [0x0000000110de61a0, 0x0000000110de6218]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f1a4700} 'inRange' '(III)Z' in 'java/util/regex/Pattern'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110de61a0: mov    %eax,-0x14000(%rsp)
  0x0000000110de61a7: push   %rbp
  0x0000000110de61a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::inRange@-1 (line 5792)

  0x0000000110de61ac: cmp    %edx,%esi
  0x0000000110de61ae: jg     0x0000000110de61cd  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)

  0x0000000110de61b0: cmp    %ecx,%edx
  0x0000000110de61b2: jg     0x0000000110de61c9  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@7 (line 5792)

  0x0000000110de61b4: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@15 (line 5792)

  0x0000000110de61b9: add    $0x20,%rsp
  0x0000000110de61bd: pop    %rbp
  0x0000000110de61be: mov    0x108(%r15),%r10
  0x0000000110de61c5: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de61c8: retq   
  0x0000000110de61c9: xor    %eax,%eax
  0x0000000110de61cb: jmp    0x0000000110de61b9
  0x0000000110de61cd: mov    %ecx,(%rsp)
  0x0000000110de61d0: mov    %esi,0x4(%rsp)
  0x0000000110de61d4: mov    %edx,0x8(%rsp)
  0x0000000110de61d8: mov    $0xffffff4d,%esi
  0x0000000110de61dd: xchg   %ax,%ax
  0x0000000110de61df: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de61e4: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::inRange@2 (line 5792)

  0x0000000110de61e6: hlt    
  0x0000000110de61e7: hlt    
  0x0000000110de61e8: hlt    
  0x0000000110de61e9: hlt    
  0x0000000110de61ea: hlt    
  0x0000000110de61eb: hlt    
  0x0000000110de61ec: hlt    
  0x0000000110de61ed: hlt    
  0x0000000110de61ee: hlt    
  0x0000000110de61ef: hlt    
  0x0000000110de61f0: hlt    
  0x0000000110de61f1: hlt    
  0x0000000110de61f2: hlt    
  0x0000000110de61f3: hlt    
  0x0000000110de61f4: hlt    
  0x0000000110de61f5: hlt    
  0x0000000110de61f6: hlt    
  0x0000000110de61f7: hlt    
  0x0000000110de61f8: hlt    
  0x0000000110de61f9: hlt    
  0x0000000110de61fa: hlt    
  0x0000000110de61fb: hlt    
  0x0000000110de61fc: hlt    
  0x0000000110de61fd: hlt    
  0x0000000110de61fe: hlt    
  0x0000000110de61ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de6200: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de6205: callq  0x0000000110de620a
  0x0000000110de620a: subq   $0x5,(%rsp)
  0x0000000110de620f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de6214: hlt    
  0x0000000110de6215: hlt    
  0x0000000110de6216: hlt    
  0x0000000110de6217: hlt    

ImmutableOopMap{}pc offsets: 68 Compiled method (c2)     488   88             java.util.regex.Pattern$Node::<init> (12 bytes)
 total in heap  [0x0000000110de9690,0x0000000110de99b0] = 800
 relocation     [0x0000000110de9808,0x0000000110de9818] = 16
 main code      [0x0000000110de9820,0x0000000110de9940] = 288
 stub code      [0x0000000110de9940,0x0000000110de9958] = 24
 oops           [0x0000000110de9958,0x0000000110de9960] = 8
 metadata       [0x0000000110de9960,0x0000000110de9970] = 16
 scopes data    [0x0000000110de9970,0x0000000110de9978] = 8
 scopes pcs     [0x0000000110de9978,0x0000000110de99a8] = 48
 dependencies   [0x0000000110de99a8,0x0000000110de99b0] = 8
----------------------------------------------------------------------
java/util/regex/Pattern$Node.<init>()V  [0x0000000110de9820, 0x0000000110de9958]  312 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a8d60} '<init>' '()V' in 'java/util/regex/Pattern$Node'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de9820: mov    0x8(%rsi),%r10d
  0x0000000110de9824: movabs $0x800000000,%r12
  0x0000000110de982e: add    %r12,%r10
  0x0000000110de9831: xor    %r12,%r12
  0x0000000110de9834: cmp    %r10,%rax
  0x0000000110de9837: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de983d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de9840: sub    $0x18,%rsp
  0x0000000110de9847: mov    %rbp,0x10(%rsp)
  0x0000000110de984c: cmpb   $0x0,0x30(%r15)
  0x0000000110de9851: jne    0x0000000110de98dd
  0x0000000110de9857: mov    %rsi,%rbx
  0x0000000110de985a: movl   $0xe1fab729,0xc(%rbx)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110de9861: mov    %rbx,%r10
  0x0000000110de9864: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110de986e: xor    %r10,%r11
  0x0000000110de9871: shr    $0x14,%r11
  0x0000000110de9875: test   %r11,%r11
  0x0000000110de9878: je     0x0000000110de98cd
  0x0000000110de987a: shr    $0x9,%r10
  0x0000000110de987e: movabs $0x110569000,%rdi
  0x0000000110de9888: add    %r10,%rdi
  0x0000000110de988b: cmpb   $0x20,(%rdi)
  0x0000000110de988e: je     0x0000000110de98cd
  0x0000000110de9890: mov    0x70(%r15),%r10
  0x0000000110de9894: mov    0x80(%r15),%r11
  0x0000000110de989b: lock addl $0x0,-0x40(%rsp)
  0x0000000110de98a1: cmpb   $0x0,(%rdi)
  0x0000000110de98a4: je     0x0000000110de98cd
  0x0000000110de98a6: movb   $0x0,(%rdi)
  0x0000000110de98a9: test   %r10,%r10
  0x0000000110de98ac: jne    0x0000000110de98c0
  0x0000000110de98ae: mov    %r15,%rsi
  0x0000000110de98b1: movabs $0x107aec8ce,%r10
  0x0000000110de98bb: callq  *%r10
  0x0000000110de98be: jmp    0x0000000110de98cd
  0x0000000110de98c0: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110de98c5: add    $0xfffffffffffffff8,%r10
  0x0000000110de98c9: mov    %r10,0x70(%r15)
  0x0000000110de98cd: add    $0x10,%rsp
  0x0000000110de98d1: pop    %rbp
  0x0000000110de98d2: mov    0x108(%r15),%r10
  0x0000000110de98d9: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de98dc: retq   
  0x0000000110de98dd: mov    %rsi,%rbx
  0x0000000110de98e0: mov    0xc(%rsi),%r10d
  0x0000000110de98e4: test   %r10d,%r10d
  0x0000000110de98e7: je     0x0000000110de985a
  0x0000000110de98ed: mov    0x38(%r15),%r11
  0x0000000110de98f1: mov    %r10,%rdi
  0x0000000110de98f4: shl    $0x3,%rdi
  0x0000000110de98f8: test   %r11,%r11
  0x0000000110de98fb: je     0x0000000110de9913
  0x0000000110de98fd: mov    0x48(%r15),%r10
  0x0000000110de9901: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110de9906: add    $0xfffffffffffffff8,%r11
  0x0000000110de990a: mov    %r11,0x38(%r15)
  0x0000000110de990e: jmpq   0x0000000110de985a
  0x0000000110de9913: mov    %r15,%rsi
  0x0000000110de9916: movabs $0x107aec8aa,%r10
  0x0000000110de9920: callq  *%r10
  0x0000000110de9923: jmpq   0x0000000110de985a  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)

  0x0000000110de9928: hlt    
  0x0000000110de9929: hlt    
  0x0000000110de992a: hlt    
  0x0000000110de992b: hlt    
  0x0000000110de992c: hlt    
  0x0000000110de992d: hlt    
  0x0000000110de992e: hlt    
  0x0000000110de992f: hlt    
  0x0000000110de9930: hlt    
  0x0000000110de9931: hlt    
  0x0000000110de9932: hlt    
  0x0000000110de9933: hlt    
  0x0000000110de9934: hlt    
  0x0000000110de9935: hlt    
  0x0000000110de9936: hlt    
  0x0000000110de9937: hlt    
  0x0000000110de9938: hlt    
  0x0000000110de9939: hlt    
  0x0000000110de993a: hlt    
  0x0000000110de993b: hlt    
  0x0000000110de993c: hlt    
  0x0000000110de993d: hlt    
  0x0000000110de993e: hlt    
  0x0000000110de993f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de9940: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de9945: callq  0x0000000110de994a
  0x0000000110de994a: subq   $0x5,(%rsp)
  0x0000000110de994f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de9954: hlt    
  0x0000000110de9955: hlt    
  0x0000000110de9956: hlt    
  0x0000000110de9957: hlt    
Compiled method (c2)     514   89             java.lang.String::toString (2 bytes)
 total in heap  [0x0000000110de9410,0x0000000110de9640] = 560
 relocation     [0x0000000110de9588,0x0000000110de9598] = 16
 main code      [0x0000000110de95a0,0x0000000110de95e0] = 64
 stub code      [0x0000000110de95e0,0x0000000110de95f8] = 24
 metadata       [0x0000000110de95f8,0x0000000110de9600] = 8
 scopes data    [0x0000000110de9600,0x0000000110de9608] = 8
 scopes pcs     [0x0000000110de9608,0x0000000110de9638] = 48
 dependencies   [0x0000000110de9638,0x0000000110de9640] = 8
----------------------------------------------------------------------
java/lang/String.toString()Ljava/lang/String;  [0x0000000110de95a0, 0x0000000110de95f8]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed71e50} 'toString' '()Ljava/lang/String;' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110de95a0: mov    0x8(%rsi),%r10d
  0x0000000110de95a4: movabs $0x800000000,%r12
  0x0000000110de95ae: add    %r12,%r10
  0x0000000110de95b1: xor    %r12,%r12
  0x0000000110de95b4: cmp    %r10,%rax
  0x0000000110de95b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110de95bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110de95c0: sub    $0x18,%rsp
  0x0000000110de95c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::toString@-1 (line 2807)

  0x0000000110de95cc: mov    %rsi,%rax
  0x0000000110de95cf: add    $0x10,%rsp
  0x0000000110de95d3: pop    %rbp
  0x0000000110de95d4: mov    0x108(%r15),%r10
  0x0000000110de95db: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de95de: retq   
  0x0000000110de95df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de95e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de95e5: callq  0x0000000110de95ea
  0x0000000110de95ea: subq   $0x5,(%rsp)
  0x0000000110de95ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de95f4: hlt    
  0x0000000110de95f5: hlt    
  0x0000000110de95f6: hlt    
  0x0000000110de95f7: hlt    
Compiled method (c2)     516   90             java.lang.invoke.DirectMethodHandle$Holder::invokeStatic (15 bytes)
 total in heap  [0x0000000110de9010,0x0000000110de93a8] = 920
 relocation     [0x0000000110de9188,0x0000000110de91a8] = 32
 main code      [0x0000000110de91c0,0x0000000110de9240] = 128
 stub code      [0x0000000110de9240,0x0000000110de9268] = 40
 metadata       [0x0000000110de9268,0x0000000110de9280] = 24
 scopes data    [0x0000000110de9280,0x0000000110de92d8] = 88
 scopes pcs     [0x0000000110de92d8,0x0000000110de9378] = 160
 dependencies   [0x0000000110de9378,0x0000000110de9380] = 8
 handler table  [0x0000000110de9380,0x0000000110de9398] = 24
 nul chk table  [0x0000000110de9398,0x0000000110de93a8] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;II)Ljava/lang/Object;  [0x0000000110de91c0, 0x0000000110de9268]  168 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0a0cd0} 'invokeStatic' '(Ljava/lang/Object;II)Ljava/lang/Object;' in 'java/lang/invoke/DirectMethodHandle$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110de91c0: mov    %eax,-0x14000(%rsp)
  0x0000000110de91c7: push   %rbp
  0x0000000110de91c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1

  0x0000000110de91cc: mov    %ecx,%r11d
  0x0000000110de91cf: mov    0x8(%rsi),%r10d    ; implicit exception: dispatches to 0x0000000110de9227
  0x0000000110de91d3: cmp    $0xc0e0,%r10d      ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110de91da: jne    0x0000000110de9204  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de91dc: mov    0x1c(%rsi),%r10d
  0x0000000110de91e0: mov    %r10,%rcx
  0x0000000110de91e3: shl    $0x3,%rcx          ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de91e7: mov    %edx,%esi
  0x0000000110de91e9: mov    %r11d,%edx
  0x0000000110de91ec: data16 xchg %ax,%ax
  0x0000000110de91ef: callq  0x0000000110d90400  ; ImmutableOopMap{}
                                                ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ;   {static_call}
  0x0000000110de91f4: add    $0x20,%rsp
  0x0000000110de91f8: pop    %rbp
  0x0000000110de91f9: mov    0x108(%r15),%r10
  0x0000000110de9200: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de9203: retq   
  0x0000000110de9204: mov    %edx,%ebp
  0x0000000110de9206: mov    %ecx,(%rsp)
  0x0000000110de9209: mov    %rsi,0x8(%rsp)
  0x0000000110de920e: mov    $0xffffff6e,%esi
  0x0000000110de9213: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de9218: ud2                       ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11

  0x0000000110de921a: mov    %rax,%rsi
  0x0000000110de921d: add    $0x20,%rsp
  0x0000000110de9221: pop    %rbp
  0x0000000110de9222: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110de9227: mov    $0xffffff64,%esi
  0x0000000110de922c: mov    %edx,%ebp
  0x0000000110de922e: mov    %ecx,(%rsp)
  0x0000000110de9231: xchg   %ax,%ax
  0x0000000110de9233: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110de9238: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110de923a: hlt    
  0x0000000110de923b: hlt    
  0x0000000110de923c: hlt    
  0x0000000110de923d: hlt    
  0x0000000110de923e: hlt    
  0x0000000110de923f: hlt    
[Stub Code]
  0x0000000110de9240: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110de924a: jmpq   0x0000000110de924a  ;   {runtime_call}
[Exception Handler]
  0x0000000110de924f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110de9254: callq  0x0000000110de9259
  0x0000000110de9259: subq   $0x5,(%rsp)
  0x0000000110de925e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de9263: hlt    
  0x0000000110de9264: hlt    
  0x0000000110de9265: hlt    
  0x0000000110de9266: hlt    
  0x0000000110de9267: hlt    

ImmutableOopMap{}pc offsets: 52 
ImmutableOopMap{[8]=Oop }pc offsets: 88 
ImmutableOopMap{}pc offsets: 120 Compiled method (c2)     519   91             java.util.regex.Pattern$BmpCharProperty::<init> (6 bytes)
 total in heap  [0x0000000110defc90,0x0000000110df0138] = 1192
 relocation     [0x0000000110defe08,0x0000000110defe18] = 16
 main code      [0x0000000110defe20,0x0000000110df0000] = 480
 stub code      [0x0000000110df0000,0x0000000110df0018] = 24
 oops           [0x0000000110df0018,0x0000000110df0020] = 8
 metadata       [0x0000000110df0020,0x0000000110df0040] = 32
 scopes data    [0x0000000110df0040,0x0000000110df0060] = 32
 scopes pcs     [0x0000000110df0060,0x0000000110df0130] = 208
 dependencies   [0x0000000110df0130,0x0000000110df0138] = 8
----------------------------------------------------------------------
java/util/regex/Pattern$BmpCharProperty.<init>(Ljava/util/regex/Pattern$BmpCharPredicate;)V  [0x0000000110defe20, 0x0000000110df0018]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1aadf8} '<init>' '(Ljava/util/regex/Pattern$BmpCharPredicate;)V' in 'java/util/regex/Pattern$BmpCharProperty'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$BmpCharProperty'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$BmpCharPredicate'
  #           [sp+0x20]  (sp of caller)
  0x0000000110defe20: mov    0x8(%rsi),%r10d
  0x0000000110defe24: movabs $0x800000000,%r12
  0x0000000110defe2e: add    %r12,%r10
  0x0000000110defe31: xor    %r12,%r12
  0x0000000110defe34: cmp    %r10,%rax
  0x0000000110defe37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110defe3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110defe40: sub    $0x18,%rsp
  0x0000000110defe47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@-1 (line 3959)

  0x0000000110defe4c: mov    %rdx,%rbx
  0x0000000110defe4f: cmpb   $0x0,0x30(%r15)
  0x0000000110defe54: jne    0x0000000110deff99
  0x0000000110defe5a: mov    %rsi,%rbp
  0x0000000110defe5d: movl   $0xe1fab729,0xc(%rbp)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110defe64: mov    %rbp,%r10
  0x0000000110defe67: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110defe71: xor    %r10,%r11
  0x0000000110defe74: shr    $0x14,%r11
  0x0000000110defe78: test   %r11,%r11
  0x0000000110defe7b: je     0x0000000110defed0
  0x0000000110defe7d: shr    $0x9,%r10
  0x0000000110defe81: movabs $0x110569000,%rdi
  0x0000000110defe8b: add    %r10,%rdi
  0x0000000110defe8e: cmpb   $0x20,(%rdi)
  0x0000000110defe91: je     0x0000000110defed0
  0x0000000110defe93: mov    0x70(%r15),%r10
  0x0000000110defe97: mov    0x80(%r15),%r11
  0x0000000110defe9e: lock addl $0x0,-0x40(%rsp)
  0x0000000110defea4: cmpb   $0x0,(%rdi)
  0x0000000110defea7: je     0x0000000110defed0
  0x0000000110defea9: movb   $0x0,(%rdi)
  0x0000000110defeac: test   %r10,%r10
  0x0000000110defeaf: jne    0x0000000110defec3
  0x0000000110defeb1: mov    %r15,%rsi
  0x0000000110defeb4: movabs $0x107aec8ce,%r10
  0x0000000110defebe: callq  *%r10
  0x0000000110defec1: jmp    0x0000000110defed0
  0x0000000110defec3: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110defec8: add    $0xfffffffffffffff8,%r10
  0x0000000110defecc: mov    %r10,0x70(%r15)
  0x0000000110defed0: cmpb   $0x0,0x30(%r15)
  0x0000000110defed5: jne    0x0000000110deff66
  0x0000000110defedb: mov    %rbp,%r10
  0x0000000110defede: mov    %rbx,%r8
  0x0000000110defee1: shr    $0x3,%r8
  0x0000000110defee5: mov    %r8d,0x10(%rbp)
  0x0000000110defee9: mov    %rbx,%r11
  0x0000000110defeec: xor    %r10,%r11
  0x0000000110defeef: shr    $0x14,%r11
  0x0000000110defef3: test   %r11,%r11
  0x0000000110defef6: je     0x0000000110deff56
  0x0000000110defef8: test   %rbx,%rbx
  0x0000000110defefb: je     0x0000000110deff56
  0x0000000110defefd: shr    $0x9,%r10
  0x0000000110deff01: movabs $0x110569000,%r8
  0x0000000110deff0b: add    %r10,%r8
  0x0000000110deff0e: cmpb   $0x20,(%r8)
  0x0000000110deff12: je     0x0000000110deff56
  0x0000000110deff14: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff18: mov    0x80(%r15),%r11
  0x0000000110deff1f: lock addl $0x0,-0x40(%rsp)
  0x0000000110deff25: cmpb   $0x0,(%r8)
  0x0000000110deff29: je     0x0000000110deff56
  0x0000000110deff2b: movb   $0x0,(%r8)
  0x0000000110deff2f: test   %r10,%r10
  0x0000000110deff32: jne    0x0000000110deff49  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff34: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff37: mov    %r15,%rsi
  0x0000000110deff3a: movabs $0x107aec8ce,%r10
  0x0000000110deff44: callq  *%r10
  0x0000000110deff47: jmp    0x0000000110deff56
  0x0000000110deff49: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff4e: add    $0xfffffffffffffff8,%r10
  0x0000000110deff52: mov    %r10,0x70(%r15)
  0x0000000110deff56: add    $0x10,%rsp
  0x0000000110deff5a: pop    %rbp
  0x0000000110deff5b: mov    0x108(%r15),%r10
  0x0000000110deff62: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110deff65: retq   
  0x0000000110deff66: mov    0x10(%rbp),%r10d
  0x0000000110deff6a: test   %r10d,%r10d
  0x0000000110deff6d: je     0x0000000110defedb
  0x0000000110deff73: mov    0x38(%r15),%r11
  0x0000000110deff77: mov    %r10,%rdi
  0x0000000110deff7a: shl    $0x3,%rdi
  0x0000000110deff7e: test   %r11,%r11
  0x0000000110deff81: je     0x0000000110deffe4  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff83: mov    0x48(%r15),%r10
  0x0000000110deff87: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff8c: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff90: mov    %r11,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deff94: jmpq   0x0000000110defedb
  0x0000000110deff99: mov    %rsi,%rbp
  0x0000000110deff9c: mov    0xc(%rsi),%r10d
  0x0000000110deffa0: test   %r10d,%r10d
  0x0000000110deffa3: je     0x0000000110defe5d
  0x0000000110deffa9: mov    0x38(%r15),%r11
  0x0000000110deffad: mov    %r10,%rdi
  0x0000000110deffb0: shl    $0x3,%rdi
  0x0000000110deffb4: test   %r11,%r11
  0x0000000110deffb7: je     0x0000000110deffcf
  0x0000000110deffb9: mov    0x48(%r15),%r10
  0x0000000110deffbd: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110deffc2: add    $0xfffffffffffffff8,%r11
  0x0000000110deffc6: mov    %r11,0x38(%r15)
  0x0000000110deffca: jmpq   0x0000000110defe5d
  0x0000000110deffcf: mov    %r15,%rsi
  0x0000000110deffd2: movabs $0x107aec8aa,%r10
  0x0000000110deffdc: callq  *%r10
  0x0000000110deffdf: jmpq   0x0000000110defe5d  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110deffe4: mov    %r15,%rsi
  0x0000000110deffe7: movabs $0x107aec8aa,%r10
  0x0000000110defff1: callq  *%r10
  0x0000000110defff4: jmpq   0x0000000110defedb  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)

  0x0000000110defff9: hlt    
  0x0000000110defffa: hlt    
  0x0000000110defffb: hlt    
  0x0000000110defffc: hlt    
  0x0000000110defffd: hlt    
  0x0000000110defffe: hlt    
  0x0000000110deffff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df0000: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df0005: callq  0x0000000110df000a
  0x0000000110df000a: subq   $0x5,(%rsp)
  0x0000000110df000f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df0014: hlt    
  0x0000000110df0015: hlt    
  0x0000000110df0016: hlt    
  0x0000000110df0017: hlt    
Compiled method (c2)     524   92             java.util.regex.Pattern$CharProperty::<init> (10 bytes)
 total in heap  [0x0000000110def790,0x0000000110defc30] = 1184
 relocation     [0x0000000110def908,0x0000000110def918] = 16
 main code      [0x0000000110def920,0x0000000110defb00] = 480
 stub code      [0x0000000110defb00,0x0000000110defb18] = 24
 oops           [0x0000000110defb18,0x0000000110defb20] = 8
 metadata       [0x0000000110defb20,0x0000000110defb38] = 24
 scopes data    [0x0000000110defb38,0x0000000110defb58] = 32
 scopes pcs     [0x0000000110defb58,0x0000000110defc28] = 208
 dependencies   [0x0000000110defc28,0x0000000110defc30] = 8
----------------------------------------------------------------------
java/util/regex/Pattern$CharProperty.<init>(Ljava/util/regex/Pattern$CharPredicate;)V  [0x0000000110def920, 0x0000000110defb18]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1ab3b0} '<init>' '(Ljava/util/regex/Pattern$CharPredicate;)V' in 'java/util/regex/Pattern$CharProperty'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$CharProperty'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$CharPredicate'
  #           [sp+0x20]  (sp of caller)
  0x0000000110def920: mov    0x8(%rsi),%r10d
  0x0000000110def924: movabs $0x800000000,%r12
  0x0000000110def92e: add    %r12,%r10
  0x0000000110def931: xor    %r12,%r12
  0x0000000110def934: cmp    %r10,%rax
  0x0000000110def937: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110def93d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110def940: sub    $0x18,%rsp
  0x0000000110def947: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$CharProperty::<init>@-1 (line 3933)

  0x0000000110def94c: mov    %rdx,%rbx
  0x0000000110def94f: cmpb   $0x0,0x30(%r15)
  0x0000000110def954: jne    0x0000000110defa99
  0x0000000110def95a: mov    %rsi,%rbp
  0x0000000110def95d: movl   $0xe1fab729,0xc(%rbp)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110def964: mov    %rbp,%r10
  0x0000000110def967: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110def971: xor    %r10,%r11
  0x0000000110def974: shr    $0x14,%r11
  0x0000000110def978: test   %r11,%r11
  0x0000000110def97b: je     0x0000000110def9d0
  0x0000000110def97d: shr    $0x9,%r10
  0x0000000110def981: movabs $0x110569000,%rdi
  0x0000000110def98b: add    %r10,%rdi
  0x0000000110def98e: cmpb   $0x20,(%rdi)
  0x0000000110def991: je     0x0000000110def9d0
  0x0000000110def993: mov    0x70(%r15),%r10
  0x0000000110def997: mov    0x80(%r15),%r11
  0x0000000110def99e: lock addl $0x0,-0x40(%rsp)
  0x0000000110def9a4: cmpb   $0x0,(%rdi)
  0x0000000110def9a7: je     0x0000000110def9d0
  0x0000000110def9a9: movb   $0x0,(%rdi)
  0x0000000110def9ac: test   %r10,%r10
  0x0000000110def9af: jne    0x0000000110def9c3
  0x0000000110def9b1: mov    %r15,%rsi
  0x0000000110def9b4: movabs $0x107aec8ce,%r10
  0x0000000110def9be: callq  *%r10
  0x0000000110def9c1: jmp    0x0000000110def9d0
  0x0000000110def9c3: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110def9c8: add    $0xfffffffffffffff8,%r10
  0x0000000110def9cc: mov    %r10,0x70(%r15)
  0x0000000110def9d0: cmpb   $0x0,0x30(%r15)
  0x0000000110def9d5: jne    0x0000000110defa66
  0x0000000110def9db: mov    %rbp,%r10
  0x0000000110def9de: mov    %rbx,%r8
  0x0000000110def9e1: shr    $0x3,%r8
  0x0000000110def9e5: mov    %r8d,0x10(%rbp)
  0x0000000110def9e9: mov    %rbx,%r11
  0x0000000110def9ec: xor    %r10,%r11
  0x0000000110def9ef: shr    $0x14,%r11
  0x0000000110def9f3: test   %r11,%r11
  0x0000000110def9f6: je     0x0000000110defa56
  0x0000000110def9f8: test   %rbx,%rbx
  0x0000000110def9fb: je     0x0000000110defa56
  0x0000000110def9fd: shr    $0x9,%r10
  0x0000000110defa01: movabs $0x110569000,%r8
  0x0000000110defa0b: add    %r10,%r8
  0x0000000110defa0e: cmpb   $0x20,(%r8)
  0x0000000110defa12: je     0x0000000110defa56
  0x0000000110defa14: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)

  0x0000000110defa18: mov    0x80(%r15),%r11
  0x0000000110defa1f: lock addl $0x0,-0x40(%rsp)
  0x0000000110defa25: cmpb   $0x0,(%r8)
  0x0000000110defa29: je     0x0000000110defa56
  0x0000000110defa2b: movb   $0x0,(%r8)
  0x0000000110defa2f: test   %r10,%r10
  0x0000000110defa32: jne    0x0000000110defa49  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)

  0x0000000110defa34: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)

  0x0000000110defa37: mov    %r15,%rsi
  0x0000000110defa3a: movabs $0x107aec8ce,%r10
  0x0000000110defa44: callq  *%r10
  0x0000000110defa47: jmp    0x0000000110defa56
  0x0000000110defa49: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)

  0x0000000110defa4e: add    $0xfffffffffffffff8,%r10
  0x0000000110defa52: mov    %r10,0x70(%r15)
  0x0000000110defa56: add    $0x10,%rsp
  0x0000000110defa5a: pop    %rbp
  0x0000000110defa5b: mov    0x108(%r15),%r10
  0x0000000110defa62: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110defa65: retq   
  0x0000000110defa66: mov    0x10(%rbp),%r10d
  0x0000000110defa6a: test   %r10d,%r10d
  0x0000000110defa6d: je     0x0000000110def9db
  0x0000000110defa73: mov    0x38(%r15),%r11
  0x0000000110defa77: mov    %r10,%rdi
  0x0000000110defa7a: shl    $0x3,%rdi
  0x0000000110defa7e: test   %r11,%r11
  0x0000000110defa81: je     0x0000000110defae4  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)

  0x0000000110defa83: mov    0x48(%r15),%r10
  0x0000000110defa87: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)

  0x0000000110defa8c: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)

  0x0000000110defa90: mov    %r11,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)

  0x0000000110defa94: jmpq   0x0000000110def9db
  0x0000000110defa99: mov    %rsi,%rbp
  0x0000000110defa9c: mov    0xc(%rsi),%r10d
  0x0000000110defaa0: test   %r10d,%r10d
  0x0000000110defaa3: je     0x0000000110def95d
  0x0000000110defaa9: mov    0x38(%r15),%r11
  0x0000000110defaad: mov    %r10,%rdi
  0x0000000110defab0: shl    $0x3,%rdi
  0x0000000110defab4: test   %r11,%r11
  0x0000000110defab7: je     0x0000000110defacf
  0x0000000110defab9: mov    0x48(%r15),%r10
  0x0000000110defabd: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110defac2: add    $0xfffffffffffffff8,%r11
  0x0000000110defac6: mov    %r11,0x38(%r15)
  0x0000000110defaca: jmpq   0x0000000110def95d
  0x0000000110defacf: mov    %r15,%rsi
  0x0000000110defad2: movabs $0x107aec8aa,%r10
  0x0000000110defadc: callq  *%r10
  0x0000000110defadf: jmpq   0x0000000110def95d  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)

  0x0000000110defae4: mov    %r15,%rsi
  0x0000000110defae7: movabs $0x107aec8aa,%r10
  0x0000000110defaf1: callq  *%r10
  0x0000000110defaf4: jmpq   0x0000000110def9db  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)

  0x0000000110defaf9: hlt    
  0x0000000110defafa: hlt    
  0x0000000110defafb: hlt    
  0x0000000110defafc: hlt    
  0x0000000110defafd: hlt    
  0x0000000110defafe: hlt    
  0x0000000110defaff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110defb00: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110defb05: callq  0x0000000110defb0a
  0x0000000110defb0a: subq   $0x5,(%rsp)
  0x0000000110defb0f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110defb14: hlt    
  0x0000000110defb15: hlt    
  0x0000000110defb16: hlt    
  0x0000000110defb17: hlt    
Compiled method (c2)     528   93             java.util.regex.Pattern$Node::study (21 bytes)
 total in heap  [0x0000000110def290,0x0000000110def720] = 1168
 relocation     [0x0000000110def408,0x0000000110def430] = 40
 main code      [0x0000000110def440,0x0000000110def520] = 224
 stub code      [0x0000000110def520,0x0000000110def548] = 40
 metadata       [0x0000000110def548,0x0000000110def558] = 16
 scopes data    [0x0000000110def558,0x0000000110def5c8] = 112
 scopes pcs     [0x0000000110def5c8,0x0000000110def6e8] = 288
 dependencies   [0x0000000110def6e8,0x0000000110def6f0] = 8
 handler table  [0x0000000110def6f0,0x0000000110def708] = 24
 nul chk table  [0x0000000110def708,0x0000000110def720] = 24
----------------------------------------------------------------------
java/util/regex/Pattern$Node.study(Ljava/util/regex/Pattern$TreeInfo;)Z  [0x0000000110def440, 0x0000000110def548]  264 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a8f10} 'study' '(Ljava/util/regex/Pattern$TreeInfo;)Z' in 'java/util/regex/Pattern$Node'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$Node'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$TreeInfo'
  #           [sp+0x30]  (sp of caller)
  0x0000000110def440: mov    0x8(%rsi),%r10d
  0x0000000110def444: movabs $0x800000000,%r12
  0x0000000110def44e: add    %r12,%r10
  0x0000000110def451: xor    %r12,%r12
  0x0000000110def454: cmp    %r10,%rax
  0x0000000110def457: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110def45d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110def460: mov    %eax,-0x14000(%rsp)
  0x0000000110def467: push   %rbp
  0x0000000110def468: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$Node::study@-1 (line 3574)

  0x0000000110def46c: mov    0xc(%rsi),%r10d    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@1 (line 3574)

  0x0000000110def470: test   %r10d,%r10d
  0x0000000110def473: je     0x0000000110def4b0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@4 (line 3574)

  0x0000000110def475: mov    0x8(%r12,%r10,8),%r11d
  0x0000000110def47a: cmp    $0x68040,%r11d     ;   {metadata('java/util/regex/Pattern$Node')}
  0x0000000110def481: jne    0x0000000110def4c4
  0x0000000110def483: shl    $0x3,%r10          ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def487: mov    0xc(%r10),%ebp     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@1 (line 3574)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def48b: test   %ebp,%ebp
  0x0000000110def48d: je     0x0000000110def4aa  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@4 (line 3574)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def48f: mov    0x8(%r12,%rbp,8),%r10d
  0x0000000110def494: cmp    $0x68040,%r10d     ;   {metadata('java/util/regex/Pattern$Node')}
  0x0000000110def49b: jne    0x0000000110def4da
  0x0000000110def49d: lea    (%r12,%rbp,8),%rsi
  0x0000000110def4a1: xchg   %ax,%ax
  0x0000000110def4a3: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ;   {optimized virtual_call}
  0x0000000110def4a8: jmp    0x0000000110def4b4
  0x0000000110def4aa: movzbl 0x15(%rdx),%eax    ;*getfield deterministic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@17 (line 3577)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; implicit exception: dispatches to 0x0000000110def506
  0x0000000110def4ae: jmp    0x0000000110def4b4
  0x0000000110def4b0: movzbl 0x15(%rdx),%eax    ; implicit exception: dispatches to 0x0000000110def4f7
  0x0000000110def4b4: add    $0x20,%rsp
  0x0000000110def4b8: pop    %rbp
  0x0000000110def4b9: mov    0x108(%r15),%r10
  0x0000000110def4c0: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110def4c3: retq   
  0x0000000110def4c4: mov    $0xffffffde,%esi
  0x0000000110def4c9: mov    %r10d,%ebp
  0x0000000110def4cc: mov    %rdx,(%rsp)
  0x0000000110def4d0: data16 xchg %ax,%ax
  0x0000000110def4d3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def4d8: ud2                       ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def4da: mov    $0xffffffde,%esi
  0x0000000110def4df: mov    %rdx,(%rsp)
  0x0000000110def4e3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def4e8: ud2                       ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def4ea: mov    %rax,%rsi
  0x0000000110def4ed: add    $0x20,%rsp
  0x0000000110def4f1: pop    %rbp
  0x0000000110def4f2: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110def4f7: mov    $0xfffffff6,%esi
  0x0000000110def4fc: data16 xchg %ax,%ax
  0x0000000110def4ff: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield deterministic {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@17 (line 3577)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def504: ud2                       ;*getfield deterministic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@17 (line 3577)

  0x0000000110def506: mov    $0xfffffff6,%esi
  0x0000000110def50b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield deterministic {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@17 (line 3577)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def510: ud2                       ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)

  0x0000000110def512: hlt    
  0x0000000110def513: hlt    
  0x0000000110def514: hlt    
  0x0000000110def515: hlt    
  0x0000000110def516: hlt    
  0x0000000110def517: hlt    
  0x0000000110def518: hlt    
  0x0000000110def519: hlt    
  0x0000000110def51a: hlt    
  0x0000000110def51b: hlt    
  0x0000000110def51c: hlt    
  0x0000000110def51d: hlt    
  0x0000000110def51e: hlt    
  0x0000000110def51f: hlt    
[Stub Code]
  0x0000000110def520: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110def52a: jmpq   0x0000000110def52a  ;   {runtime_call}
[Exception Handler]
  0x0000000110def52f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110def534: callq  0x0000000110def539
  0x0000000110def539: subq   $0x5,(%rsp)
  0x0000000110def53e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110def543: hlt    
  0x0000000110def544: hlt    
  0x0000000110def545: hlt    
  0x0000000110def546: hlt    
  0x0000000110def547: hlt    

ImmutableOopMap{}pc offsets: 104 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 152 168 
ImmutableOopMap{}pc offsets: 196 208 Compiled method (c2)     538   94             java.util.regex.Pattern::sequence (645 bytes)
 total in heap  [0x0000000110df0a90,0x0000000110df1ae0] = 4176
 relocation     [0x0000000110df0c08,0x0000000110df0c60] = 88
 main code      [0x0000000110df0c60,0x0000000110df12c0] = 1632
 stub code      [0x0000000110df12c0,0x0000000110df12f8] = 56
 oops           [0x0000000110df12f8,0x0000000110df1300] = 8
 metadata       [0x0000000110df1300,0x0000000110df1340] = 64
 scopes data    [0x0000000110df1340,0x0000000110df1590] = 592
 scopes pcs     [0x0000000110df1590,0x0000000110df1a80] = 1264
 dependencies   [0x0000000110df1a80,0x0000000110df1a88] = 8
 handler table  [0x0000000110df1a88,0x0000000110df1ad0] = 72
 nul chk table  [0x0000000110df1ad0,0x0000000110df1ae0] = 16
----------------------------------------------------------------------
java/util/regex/Pattern.sequence(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;  [0x0000000110df0c60, 0x0000000110df12f8]  1688 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a0a38} 'sequence' '(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$Node'
  #           [sp+0x60]  (sp of caller)
  0x0000000110df0c60: mov    0x8(%rsi),%r10d
  0x0000000110df0c64: movabs $0x800000000,%r12
  0x0000000110df0c6e: add    %r12,%r10
  0x0000000110df0c71: xor    %r12,%r12
  0x0000000110df0c74: cmp    %r10,%rax
  0x0000000110df0c77: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df0c7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df0c80: mov    %eax,-0x14000(%rsp)
  0x0000000110df0c87: push   %rbp
  0x0000000110df0c88: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::sequence@-1 (line 2113)

  0x0000000110df0c8c: mov    %rdx,(%rsp)
  0x0000000110df0c90: movabs $0x110569000,%r10
  0x0000000110df0c9a: xor    %r11d,%r11d
  0x0000000110df0c9d: mov    %r10,0x30(%rsp)
  0x0000000110df0ca2: mov    %r11,0x10(%rsp)    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@7 (line 2118)

  0x0000000110df0ca7: mov    %rsi,0x8(%rsp)
  0x0000000110df0cac: mov    0x50(%rsi),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0cb0: mov    0x20(%rsi),%r11d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0cb4: mov    0xc(%r12,%r10,8),%r8d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)
                                                ; implicit exception: dispatches to 0x0000000110df127b
  0x0000000110df0cb9: cmp    %r8d,%r11d
  0x0000000110df0cbc: jae    0x0000000110df119e
  0x0000000110df0cc2: mov    0x10(%rsi),%r9d    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0cc6: shl    $0x3,%r10
  0x0000000110df0cca: mov    0x10(%r10,%r11,4),%r10d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0ccf: mov    %r9d,%ebp
  0x0000000110df0cd2: and    $0x4,%ebp          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0cd5: test   %ebp,%ebp
  0x0000000110df0cd7: jne    0x0000000110df11d2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df0cdd: test   %r10d,%r10d
  0x0000000110df0ce0: je     0x0000000110df0ed7
  0x0000000110df0ce6: cmp    $0x5b,%r10d
  0x0000000110df0cea: jne    0x0000000110df11ba  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@15 (line 2119)

  0x0000000110df0cf0: and    $0x80,%r9d         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::sequence@178 (line 2135)

  0x0000000110df0cf7: test   %r9d,%r9d
  0x0000000110df0cfa: jne    0x0000000110df124e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::sequence@178 (line 2135)

  0x0000000110df0d00: mov    $0x1,%edx
  0x0000000110df0d05: xchg   %ax,%ax
  0x0000000110df0d07: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*invokevirtual clazz {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::sequence@213 (line 2138)
                                                ;   {optimized virtual_call}
  0x0000000110df0d0c: mov    %rax,%rbx
  0x0000000110df0d0f: test   %rax,%rax
  0x0000000110df0d12: je     0x0000000110df1096  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@1 (line 2929)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0d18: mov    0x8(%rax),%r10d
  0x0000000110df0d1c: movabs $0x800000000,%rsi
  0x0000000110df0d26: add    %r10,%rsi
  0x0000000110df0d29: mov    0x20(%rsi),%rbp
  0x0000000110df0d2d: movabs $0x800069568,%r10  ;   {metadata('java/util/regex/Pattern$BmpCharPredicate')}
  0x0000000110df0d37: cmp    %r10,%rbp
  0x0000000110df0d3a: jne    0x0000000110df1010
  0x0000000110df0d40: mov    0x118(%r15),%r13
  0x0000000110df0d47: mov    %r13,%r10
  0x0000000110df0d4a: add    $0x18,%r10
  0x0000000110df0d4e: cmp    0x128(%r15),%r10
  0x0000000110df0d55: jae    0x0000000110df1148  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0d5b: mov    %r10,0x118(%r15)
  0x0000000110df0d62: prefetchnta 0xc0(%r10)
  0x0000000110df0d6a: mov    $0x68ef8,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharProperty')}
  0x0000000110df0d70: movabs $0x800000000,%r10
  0x0000000110df0d7a: add    %r11,%r10
  0x0000000110df0d7d: mov    0xb8(%r10),%r10
  0x0000000110df0d84: mov    %r10,0x0(%r13)
  0x0000000110df0d88: movl   $0x68ef8,0x8(%r13)  ;   {metadata('java/util/regex/Pattern$BmpCharProperty')}
  0x0000000110df0d90: movl   $0x0,0xc(%r13)
  0x0000000110df0d98: movq   $0x0,0x10(%r13)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@13 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0da0: movabs $0x800069568,%r10  ;   {metadata('java/util/regex/Pattern$BmpCharPredicate')}
  0x0000000110df0daa: cmp    %r10,%rbp
  0x0000000110df0dad: jne    0x0000000110df1056  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@18 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0db3: movl   $0xe1fab729,0xc(%r13)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110df0dbb: mov    %r13,%r10
  0x0000000110df0dbe: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110df0dc8: xor    %r10,%r11
  0x0000000110df0dcb: shr    $0x14,%r11
  0x0000000110df0dcf: test   %r11,%r11
  0x0000000110df0dd2: je     0x0000000110df0e27
  0x0000000110df0dd4: shr    $0x9,%r10
  0x0000000110df0dd8: movabs $0x110569000,%rdi
  0x0000000110df0de2: add    %r10,%rdi
  0x0000000110df0de5: cmpb   $0x20,(%rdi)
  0x0000000110df0de8: je     0x0000000110df0e27
  0x0000000110df0dea: mov    0x80(%r15),%r10
  0x0000000110df0df1: mov    0x70(%r15),%r11
  0x0000000110df0df5: lock addl $0x0,-0x40(%rsp)
  0x0000000110df0dfb: cmpb   $0x0,(%rdi)
  0x0000000110df0dfe: je     0x0000000110df0e27
  0x0000000110df0e00: movb   $0x0,(%rdi)
  0x0000000110df0e03: test   %r11,%r11
  0x0000000110df0e06: jne    0x0000000110df0e1a
  0x0000000110df0e08: mov    %r15,%rsi
  0x0000000110df0e0b: movabs $0x107aec8ce,%r10
  0x0000000110df0e15: callq  *%r10
  0x0000000110df0e18: jmp    0x0000000110df0e27
  0x0000000110df0e1a: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110df0e1f: add    $0xfffffffffffffff8,%r11
  0x0000000110df0e23: mov    %r11,0x70(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0e27: cmpb   $0x0,0x30(%r15)
  0x0000000110df0e2c: jne    0x0000000110df1111  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@18 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0e32: mov    %r13,%r10
  0x0000000110df0e35: mov    %rbx,%r11
  0x0000000110df0e38: shr    $0x3,%r11
  0x0000000110df0e3c: mov    %r11d,0x10(%r13)
  0x0000000110df0e40: mov    %rbx,%r11
  0x0000000110df0e43: xor    %r10,%r11
  0x0000000110df0e46: shr    $0x14,%r11
  0x0000000110df0e4a: test   %r11,%r11
  0x0000000110df0e4d: je     0x0000000110df0ea2
  0x0000000110df0e4f: shr    $0x9,%r10
  0x0000000110df0e53: movabs $0x110569000,%rdi
  0x0000000110df0e5d: add    %r10,%rdi
  0x0000000110df0e60: cmpb   $0x20,(%rdi)
  0x0000000110df0e63: je     0x0000000110df0ea2
  0x0000000110df0e65: mov    0x70(%r15),%r10
  0x0000000110df0e69: mov    0x80(%r15),%r11
  0x0000000110df0e70: lock addl $0x0,-0x40(%rsp)
  0x0000000110df0e76: cmpb   $0x0,(%rdi)
  0x0000000110df0e79: je     0x0000000110df0ea2
  0x0000000110df0e7b: movb   $0x0,(%rdi)
  0x0000000110df0e7e: test   %r10,%r10
  0x0000000110df0e81: jne    0x0000000110df0e95  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0e83: mov    %r15,%rsi
  0x0000000110df0e86: movabs $0x107aec8ce,%r10
  0x0000000110df0e90: callq  *%r10
  0x0000000110df0e93: jmp    0x0000000110df0ea2
  0x0000000110df0e95: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0e9a: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0e9e: mov    %r10,0x70(%r15)    ;*invokevirtual newCharProperty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0ea2: mov    0x8(%rsp),%rsi
  0x0000000110df0ea7: mov    %r13,%rdx
  0x0000000110df0eaa: nop
  0x0000000110df0eab: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*invokevirtual closure {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::sequence@598 (line 2213)
                                                ;   {optimized virtual_call}
  0x0000000110df0eb0: mov    0x10(%rsp),%r10
  0x0000000110df0eb5: test   %r10,%r10
  0x0000000110df0eb8: jne    0x0000000110df1224  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0ebe: mov    0x108(%r15),%r10   ; ImmutableOopMap{rax=Oop [0]=Oop [8]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@624 (line 2226)

  0x0000000110df0ec5: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@624 (line 2226)
                                                ;   {poll}
  0x0000000110df0ec8: mov    0x8(%rsp),%rsi
  0x0000000110df0ecd: mov    %rax,0x10(%rsp)
  0x0000000110df0ed2: jmpq   0x0000000110df0ca7
  0x0000000110df0ed7: mov    0x24(%rsi),%ebp    ;*getfield patternLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@580 (line 2204)

  0x0000000110df0eda: cmp    %ebp,%r11d
  0x0000000110df0edd: jl     0x0000000110df11e6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@583 (line 2204)

  0x0000000110df0ee3: mov    0x10(%rsp),%r10
  0x0000000110df0ee8: test   %r10,%r10
  0x0000000110df0eeb: je     0x0000000110df123a
  0x0000000110df0ef1: cmpb   $0x0,0x30(%r15)
  0x0000000110df0ef6: jne    0x0000000110df109e
  0x0000000110df0efc: mov    0x10(%rsp),%r10
  0x0000000110df0f01: mov    (%rsp),%r9
  0x0000000110df0f05: mov    %r9,%r8
  0x0000000110df0f08: shr    $0x3,%r8
  0x0000000110df0f0c: mov    0x10(%rsp),%r11
  0x0000000110df0f11: mov    %r8d,0xc(%r11)
  0x0000000110df0f15: mov    %r9,%r11
  0x0000000110df0f18: xor    %r10,%r11
  0x0000000110df0f1b: shr    $0x14,%r11
  0x0000000110df0f1f: test   %r11,%r11
  0x0000000110df0f22: je     0x0000000110df0f7c
  0x0000000110df0f24: test   %r9,%r9
  0x0000000110df0f27: je     0x0000000110df0f7c
  0x0000000110df0f29: shr    $0x9,%r10
  0x0000000110df0f2d: movabs $0x110569000,%rdi
  0x0000000110df0f37: add    %r10,%rdi
  0x0000000110df0f3a: cmpb   $0x20,(%rdi)
  0x0000000110df0f3d: je     0x0000000110df0f7c
  0x0000000110df0f3f: mov    0x70(%r15),%r10
  0x0000000110df0f43: mov    0x80(%r15),%r11
  0x0000000110df0f4a: lock addl $0x0,-0x40(%rsp)
  0x0000000110df0f50: cmpb   $0x0,(%rdi)
  0x0000000110df0f53: je     0x0000000110df0f7c
  0x0000000110df0f55: movb   $0x0,(%rdi)
  0x0000000110df0f58: test   %r10,%r10
  0x0000000110df0f5b: jne    0x0000000110df0f6f  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0f5d: mov    %r15,%rsi
  0x0000000110df0f60: movabs $0x107aec8ce,%r10
  0x0000000110df0f6a: callq  *%r10
  0x0000000110df0f6d: jmp    0x0000000110df0f7c
  0x0000000110df0f6f: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@635 (line 2230)

  0x0000000110df0f74: add    $0xfffffffffffffff8,%r10
  0x0000000110df0f78: mov    %r10,0x70(%r15)
  0x0000000110df0f7c: cmpb   $0x0,0x30(%r15)
  0x0000000110df0f81: jne    0x0000000110df10d5
  0x0000000110df0f87: mov    0x10(%rsp),%r10
  0x0000000110df0f8c: shr    $0x3,%r10
  0x0000000110df0f90: mov    0x8(%rsp),%r11
  0x0000000110df0f95: mov    %r10d,0x34(%r11)
  0x0000000110df0f99: mov    %r11,%r10
  0x0000000110df0f9c: mov    0x10(%rsp),%r11
  0x0000000110df0fa1: xor    %r10,%r11
  0x0000000110df0fa4: shr    $0x14,%r11
  0x0000000110df0fa8: test   %r11,%r11
  0x0000000110df0fab: je     0x0000000110df0ffb
  0x0000000110df0fad: shr    $0x9,%r10
  0x0000000110df0fb1: mov    0x30(%rsp),%rdi
  0x0000000110df0fb6: add    %r10,%rdi
  0x0000000110df0fb9: cmpb   $0x20,(%rdi)
  0x0000000110df0fbc: je     0x0000000110df0ffb
  0x0000000110df0fbe: mov    0x80(%r15),%r10
  0x0000000110df0fc5: mov    0x70(%r15),%r11
  0x0000000110df0fc9: lock addl $0x0,-0x40(%rsp)
  0x0000000110df0fcf: cmpb   $0x0,(%rdi)
  0x0000000110df0fd2: je     0x0000000110df0ffb
  0x0000000110df0fd4: movb   $0x0,(%rdi)
  0x0000000110df0fd7: test   %r11,%r11
  0x0000000110df0fda: jne    0x0000000110df0fee  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0fdc: mov    %r15,%rsi
  0x0000000110df0fdf: movabs $0x107aec8ce,%r10
  0x0000000110df0fe9: callq  *%r10
  0x0000000110df0fec: jmp    0x0000000110df0ffb
  0x0000000110df0fee: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@640 (line 2231)

  0x0000000110df0ff3: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df0ff7: mov    %r11,0x70(%r15)    ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@640 (line 2231)

  0x0000000110df0ffb: mov    0x10(%rsp),%rax
  0x0000000110df1000: add    $0x50,%rsp
  0x0000000110df1004: pop    %rbp
  0x0000000110df1005: mov    0x108(%r15),%r10
  0x0000000110df100c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df100f: retq   
  0x0000000110df1010: movabs $0x800069568,%rax  ;   {metadata('java/util/regex/Pattern$BmpCharPredicate')}
  0x0000000110df101a: push   %rax
  0x0000000110df101b: mov    %rax,%rax
  0x0000000110df101e: mov    0x28(%rsi),%rdi
  0x0000000110df1022: mov    (%rdi),%ecx
  0x0000000110df1024: add    $0x8,%rdi
  0x0000000110df1028: test   %rax,%rax
  0x0000000110df102b: repnz scas %es:(%rdi),%rax
  0x0000000110df102e: pop    %rax
  0x0000000110df102f: jne    0x0000000110df1039
  0x0000000110df1035: mov    %rax,0x20(%rsi)
  0x0000000110df1039: je     0x0000000110df0d40  ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@7 (line 2931)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df103f: mov    $0xb2,%esi
  0x0000000110df1044: mov    0x8(%rsp),%rbp
  0x0000000110df1049: mov    %rbx,0x18(%rsp)
  0x0000000110df104e: nop
  0x0000000110df104f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@25 (line 2934)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df1054: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@25 (line 2934)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1056: movabs $0x800069568,%rax  ;   {metadata('java/util/regex/Pattern$BmpCharPredicate')}
  0x0000000110df1060: push   %rax
  0x0000000110df1061: mov    %rax,%rax
  0x0000000110df1064: mov    0x28(%rsi),%rdi
  0x0000000110df1068: mov    (%rdi),%ecx
  0x0000000110df106a: add    $0x8,%rdi
  0x0000000110df106e: test   %rax,%rax
  0x0000000110df1071: repnz scas %es:(%rdi),%rax
  0x0000000110df1074: pop    %rax
  0x0000000110df1075: jne    0x0000000110df107f
  0x0000000110df107b: mov    %rax,0x20(%rsi)
  0x0000000110df107f: je     0x0000000110df0db3
  0x0000000110df1085: mov    $0xffffffde,%esi
  0x0000000110df108a: mov    %rbx,%rbp
  0x0000000110df108d: xchg   %ax,%ax
  0x0000000110df108f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@18 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df1094: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@18 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1096: xor    %r13d,%r13d
  0x0000000110df1099: jmpq   0x0000000110df0ea2
  0x0000000110df109e: mov    0xc(%r10),%r10d
  0x0000000110df10a2: test   %r10d,%r10d
  0x0000000110df10a5: je     0x0000000110df0efc
  0x0000000110df10ab: mov    0x38(%r15),%r11
  0x0000000110df10af: mov    %r10,%rdi
  0x0000000110df10b2: shl    $0x3,%rdi
  0x0000000110df10b6: test   %r11,%r11
  0x0000000110df10b9: je     0x0000000110df11fa  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df10bf: mov    0x48(%r15),%r10
  0x0000000110df10c3: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@635 (line 2230)

  0x0000000110df10c8: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df10cc: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@635 (line 2230)

  0x0000000110df10d0: jmpq   0x0000000110df0efc
  0x0000000110df10d5: mov    0x8(%rsp),%r10
  0x0000000110df10da: mov    0x34(%r10),%r11d
  0x0000000110df10de: test   %r11d,%r11d
  0x0000000110df10e1: je     0x0000000110df0f87
  0x0000000110df10e7: mov    0x38(%r15),%r10
  0x0000000110df10eb: mov    %r11,%rdi
  0x0000000110df10ee: shl    $0x3,%rdi
  0x0000000110df10f2: test   %r10,%r10
  0x0000000110df10f5: je     0x0000000110df120f  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df10fb: mov    0x48(%r15),%r11
  0x0000000110df10ff: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@640 (line 2231)

  0x0000000110df1104: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1108: mov    %r10,0x38(%r15)    ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@640 (line 2231)

  0x0000000110df110c: jmpq   0x0000000110df0f87
  0x0000000110df1111: mov    0x10(%r13),%r11d
  0x0000000110df1115: test   %r11d,%r11d
  0x0000000110df1118: je     0x0000000110df0e32
  0x0000000110df111e: mov    0x38(%r15),%r10
  0x0000000110df1122: mov    %r11,%rdi
  0x0000000110df1125: shl    $0x3,%rdi
  0x0000000110df1129: test   %r10,%r10
  0x0000000110df112c: je     0x0000000110df1266  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1132: mov    0x48(%r15),%r11
  0x0000000110df1136: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df113b: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df113f: mov    %r10,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1143: jmpq   0x0000000110df0e32
  0x0000000110df1148: mov    %rsi,0x28(%rsp)
  0x0000000110df114d: mov    %rbx,0x20(%rsp)
  0x0000000110df1152: rex.W pushq 0x10(%rsp)
  0x0000000110df1157: rex.W popq 0x18(%rsp)
  0x0000000110df115c: rex.W pushq 0x30(%rsp)
  0x0000000110df1161: rex.W popq 0x10(%rsp)
  0x0000000110df1166: movabs $0x800068ef8,%rsi  ;   {metadata('java/util/regex/Pattern$BmpCharProperty')}
  0x0000000110df1170: data16 xchg %ax,%ax
  0x0000000110df1173: callq  0x0000000110dc6380  ; ImmutableOopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::newCharProperty@13 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df1178: rex.W pushq 0x10(%rsp)
  0x0000000110df117d: rex.W popq 0x30(%rsp)
  0x0000000110df1182: rex.W pushq 0x18(%rsp)
  0x0000000110df1187: rex.W popq 0x10(%rsp)
  0x0000000110df118c: mov    0x20(%rsp),%rbx
  0x0000000110df1191: mov    0x28(%rsp),%rsi
  0x0000000110df1196: mov    %rax,%r13
  0x0000000110df1199: jmpq   0x0000000110df0da0
  0x0000000110df119e: mov    $0xffffffe4,%esi
  0x0000000110df11a3: mov    0x8(%rsp),%rbp
  0x0000000110df11a8: mov    %r10d,0x20(%rsp)
  0x0000000110df11ad: mov    %r11d,0x24(%rsp)
  0x0000000110df11b2: nop
  0x0000000110df11b3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [32]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df11b8: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df11ba: mov    $0xffffff4d,%esi
  0x0000000110df11bf: mov    0x8(%rsp),%rbp
  0x0000000110df11c4: mov    %r10d,0x1c(%rsp)
  0x0000000110df11c9: xchg   %ax,%ax
  0x0000000110df11cb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop }
                                                ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@15 (line 2119)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df11d0: ud2                       ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@15 (line 2119)

  0x0000000110df11d2: mov    $0xffffff4d,%esi
  0x0000000110df11d7: mov    %r10d,0x28(%rsp)
  0x0000000110df11dc: data16 xchg %ax,%ax
  0x0000000110df11df: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df11e4: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)

  0x0000000110df11e6: mov    $0xffffff4d,%esi
  0x0000000110df11eb: mov    %r11d,0x20(%rsp)
  0x0000000110df11f0: data16 xchg %ax,%ax
  0x0000000110df11f3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@583 (line 2204)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df11f8: ud2                       ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df11fa: mov    %r15,%rsi
  0x0000000110df11fd: movabs $0x107aec8aa,%r10
  0x0000000110df1207: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@635 (line 2230)

  0x0000000110df120a: jmpq   0x0000000110df0efc  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df120f: mov    %r15,%rsi
  0x0000000110df1212: movabs $0x107aec8aa,%r10
  0x0000000110df121c: callq  *%r10              ;*putfield root {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@640 (line 2231)

  0x0000000110df121f: jmpq   0x0000000110df0f87
  0x0000000110df1224: mov    $0xffffff4d,%esi
  0x0000000110df1229: mov    0x8(%rsp),%rbp
  0x0000000110df122e: mov    %rax,0x18(%rsp)
  0x0000000110df1233: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@604 (line 2220)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df1238: ud2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@604 (line 2220)

  0x0000000110df123a: mov    $0xffffff4d,%esi
  0x0000000110df123f: mov    0x8(%rsp),%rbp
  0x0000000110df1244: data16 xchg %ax,%ax
  0x0000000110df1247: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@628 (line 2227)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df124c: ud2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@628 (line 2227)

  0x0000000110df124e: mov    $0xffffff4d,%esi
  0x0000000110df1253: mov    0x8(%rsp),%rbp
  0x0000000110df1258: mov    %r9d,0x18(%rsp)
  0x0000000110df125d: xchg   %ax,%ax
  0x0000000110df125f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::sequence@178 (line 2135)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df1264: ud2                       ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1266: mov    %r15,%rsi
  0x0000000110df1269: movabs $0x107aec8aa,%r10
  0x0000000110df1273: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df1276: jmpq   0x0000000110df0e32
  0x0000000110df127b: mov    $0xfffffff6,%esi
  0x0000000110df1280: mov    %r11d,%ebp
  0x0000000110df1283: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::sequence@8 (line 2118)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df1288: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::newCharProperty@13 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)

  0x0000000110df128a: mov    %rax,%rsi
  0x0000000110df128d: jmp    0x0000000110df1297  ;*invokevirtual clazz {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@213 (line 2138)

  0x0000000110df128f: mov    %rax,%rsi
  0x0000000110df1292: jmp    0x0000000110df1297  ;*invokevirtual closure {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::sequence@598 (line 2213)

  0x0000000110df1294: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.util.regex.Pattern::sequence@-1 (line 2113)

  0x0000000110df1297: add    $0x50,%rsp
  0x0000000110df129b: pop    %rbp
  0x0000000110df129c: jmpq   0x0000000110dc8700  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern::newCharProperty@21 (line 2932)
                                                ; - java.util.regex.Pattern::sequence@216 (line 2138)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df12a1: hlt    
  0x0000000110df12a2: hlt    
  0x0000000110df12a3: hlt    
  0x0000000110df12a4: hlt    
  0x0000000110df12a5: hlt    
  0x0000000110df12a6: hlt    
  0x0000000110df12a7: hlt    
  0x0000000110df12a8: hlt    
  0x0000000110df12a9: hlt    
  0x0000000110df12aa: hlt    
  0x0000000110df12ab: hlt    
  0x0000000110df12ac: hlt    
  0x0000000110df12ad: hlt    
  0x0000000110df12ae: hlt    
  0x0000000110df12af: hlt    
  0x0000000110df12b0: hlt    
  0x0000000110df12b1: hlt    
  0x0000000110df12b2: hlt    
  0x0000000110df12b3: hlt    
  0x0000000110df12b4: hlt    
  0x0000000110df12b5: hlt    
  0x0000000110df12b6: hlt    
  0x0000000110df12b7: hlt    
  0x0000000110df12b8: hlt    
  0x0000000110df12b9: hlt    
  0x0000000110df12ba: hlt    
  0x0000000110df12bb: hlt    
  0x0000000110df12bc: hlt    
  0x0000000110df12bd: hlt    
  0x0000000110df12be: hlt    
  0x0000000110df12bf: hlt    
[Stub Code]
  0x0000000110df12c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df12ca: jmpq   0x0000000110df12ca  ;   {runtime_call}
  0x0000000110df12cf: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df12d9: jmpq   0x0000000110df12d9  ;   {runtime_call}
[Exception Handler]
  0x0000000110df12de: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df12e3: callq  0x0000000110df12e8
  0x0000000110df12e8: subq   $0x5,(%rsp)
  0x0000000110df12ed: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df12f2: hlt    
  0x0000000110df12f3: hlt    
  0x0000000110df12f4: hlt    
  0x0000000110df12f5: hlt    
  0x0000000110df12f6: hlt    
  0x0000000110df12f7: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }pc offsets: 172 592 
ImmutableOopMap{rax=Oop [0]=Oop [8]=Oop }pc offsets: 613 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }pc offsets: 1012 
ImmutableOopMap{rbp=Oop }pc offsets: 1076 
ImmutableOopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop }pc offsets: 1304 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [32]=NarrowOop }pc offsets: 1368 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop }pc offsets: 1392 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }pc offsets: 1412 1432 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }pc offsets: 1496 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop }pc offsets: 1516 1540 
ImmutableOopMap{}pc offsets: 1576 Compiled method (c2)     572   95             java.util.regex.Pattern::clazz (438 bytes)
 total in heap  [0x0000000110df5e90,0x0000000110df8aa8] = 11288
 relocation     [0x0000000110df6008,0x0000000110df60f8] = 240
 main code      [0x0000000110df6100,0x0000000110df6e60] = 3424
 stub code      [0x0000000110df6e60,0x0000000110df6f10] = 176
 oops           [0x0000000110df6f10,0x0000000110df6f30] = 32
 metadata       [0x0000000110df6f30,0x0000000110df6fc0] = 144
 scopes data    [0x0000000110df6fc0,0x0000000110df7cf8] = 3384
 scopes pcs     [0x0000000110df7cf8,0x0000000110df8928] = 3120
 dependencies   [0x0000000110df8928,0x0000000110df8930] = 8
 handler table  [0x0000000110df8930,0x0000000110df8a68] = 312
 nul chk table  [0x0000000110df8a68,0x0000000110df8aa8] = 64
----------------------------------------------------------------------
java/util/regex/Pattern.clazz(Z)Ljava/util/regex/Pattern$CharPredicate;  [0x0000000110df6100, 0x0000000110df6f10]  3600 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a1920} 'clazz' '(Z)Ljava/util/regex/Pattern$CharPredicate;' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx       = boolean
  #           [sp+0x70]  (sp of caller)
  0x0000000110df6100: mov    0x8(%rsi),%r10d
  0x0000000110df6104: movabs $0x800000000,%r12
  0x0000000110df610e: add    %r12,%r10
  0x0000000110df6111: xor    %r12,%r12
  0x0000000110df6114: cmp    %r10,%rax
  0x0000000110df6117: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df611d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df6120: mov    %eax,-0x14000(%rsp)
  0x0000000110df6127: push   %rbp
  0x0000000110df6128: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::clazz@-1 (line 2627)

  0x0000000110df612c: mov    %edx,0x18(%rsp)
  0x0000000110df6130: mov    %rsi,0x10(%rsp)
  0x0000000110df6135: mov    0x118(%r15),%rax
  0x0000000110df613c: mov    %rax,%r10
  0x0000000110df613f: add    $0x18,%r10
  0x0000000110df6143: cmp    0x128(%r15),%r10
  0x0000000110df614a: jae    0x0000000110df695c  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6150: mov    %r10,0x118(%r15)
  0x0000000110df6157: prefetchnta 0xc0(%r10)
  0x0000000110df615f: mov    $0x69130,%r10d     ;   {metadata('java/util/regex/Pattern$BitClass')}
  0x0000000110df6165: movabs $0x800000000,%r12
  0x0000000110df616f: add    %r12,%r10
  0x0000000110df6172: xor    %r12,%r12
  0x0000000110df6175: mov    0xb8(%r10),%r10
  0x0000000110df617c: mov    %r10,(%rax)
  0x0000000110df617f: movl   $0x69130,0x8(%rax)  ;   {metadata('java/util/regex/Pattern$BitClass')}
  0x0000000110df6186: movl   $0x0,0xc(%rax)
  0x0000000110df618d: movq   $0x0,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@4 (line 2629)

  0x0000000110df6195: mov    %rax,0x48(%rsp)
  0x0000000110df619a: mov    0x118(%r15),%rbp
  0x0000000110df61a1: mov    %rbp,%r10
  0x0000000110df61a4: add    $0x110,%r10
  0x0000000110df61ab: cmp    0x128(%r15),%r10
  0x0000000110df61b2: jae    0x0000000110df6975
  0x0000000110df61b8: mov    %r10,0x118(%r15)
  0x0000000110df61bf: prefetchnta 0xc0(%r10)
  0x0000000110df61c7: movq   $0x1,0x0(%rbp)
  0x0000000110df61cf: prefetchnta 0x100(%r10)
  0x0000000110df61d7: movl   $0x40,0x8(%rbp)    ;   {metadata({type array bool})}
  0x0000000110df61de: prefetchnta 0x140(%r10)
  0x0000000110df61e6: movl   $0x100,0xc(%rbp)
  0x0000000110df61ed: prefetchnta 0x180(%r10)
  0x0000000110df61f5: mov    %rbp,%rdi
  0x0000000110df61f8: add    $0x10,%rdi
  0x0000000110df61fc: mov    $0x20,%ecx
  0x0000000110df6201: xor    %rax,%rax
  0x0000000110df6204: shl    $0x3,%rcx
  0x0000000110df6208: rep rex.W stos %al,%es:(%rdi)
  0x0000000110df620b: mov    0x118(%r15),%rbx
  0x0000000110df6212: mov    %rbx,%r10
  0x0000000110df6215: add    $0x10,%r10
  0x0000000110df6219: cmp    0x128(%r15),%r10
  0x0000000110df6220: jae    0x0000000110df693a  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6226: mov    %r10,0x118(%r15)
  0x0000000110df622d: prefetchnta 0xc0(%r10)
  0x0000000110df6235: mov    $0x67840,%r10d     ;   {metadata('java/util/regex/Pattern$BitClass$$Lambda$5')}
  0x0000000110df623b: movabs $0x800000000,%r12
  0x0000000110df6245: add    %r12,%r10
  0x0000000110df6248: xor    %r12,%r12
  0x0000000110df624b: mov    0xb8(%r10),%r10
  0x0000000110df6252: mov    %r10,(%rbx)
  0x0000000110df6255: movl   $0x67840,0x8(%rbx)  ;   {metadata('java/util/regex/Pattern$BitClass$$Lambda$5')}
  0x0000000110df625c: mov    %rbp,%r13
  0x0000000110df625f: shr    $0x3,%r13
  0x0000000110df6263: mov    %r13d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6267: mov    %rbp,%r10
  0x0000000110df626a: mov    %rbx,%r11
  0x0000000110df626d: xor    %r11,%r10
  0x0000000110df6270: shr    $0x14,%r10
  0x0000000110df6274: test   %r10,%r10
  0x0000000110df6277: je     0x0000000110df62cc
  0x0000000110df6279: shr    $0x9,%r11
  0x0000000110df627d: movabs $0x110569000,%rdi
  0x0000000110df6287: add    %r11,%rdi
  0x0000000110df628a: cmpb   $0x20,(%rdi)
  0x0000000110df628d: je     0x0000000110df62cc
  0x0000000110df628f: mov    0x70(%r15),%r10
  0x0000000110df6293: mov    0x80(%r15),%r11
  0x0000000110df629a: lock addl $0x0,-0x40(%rsp)
  0x0000000110df62a0: cmpb   $0x0,(%rdi)
  0x0000000110df62a3: je     0x0000000110df62cc
  0x0000000110df62a5: movb   $0x0,(%rdi)
  0x0000000110df62a8: test   %r10,%r10
  0x0000000110df62ab: jne    0x0000000110df62bf
  0x0000000110df62ad: mov    %r15,%rsi
  0x0000000110df62b0: movabs $0x107aec8ce,%r10
  0x0000000110df62ba: callq  *%r10
  0x0000000110df62bd: jmp    0x0000000110df62cc
  0x0000000110df62bf: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df62c4: add    $0xfffffffffffffff8,%r10
  0x0000000110df62c8: mov    %r10,0x70(%r15)
  0x0000000110df62cc: cmpb   $0x0,0x30(%r15)
  0x0000000110df62d1: jne    0x0000000110df6886
  0x0000000110df62d7: mov    0x48(%rsp),%r10
  0x0000000110df62dc: movl   $0xe1fab729,0xc(%r10)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110df62e4: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110df62ee: xor    %r10,%r11
  0x0000000110df62f1: shr    $0x14,%r11
  0x0000000110df62f5: test   %r11,%r11
  0x0000000110df62f8: je     0x0000000110df634d
  0x0000000110df62fa: shr    $0x9,%r10
  0x0000000110df62fe: movabs $0x110569000,%rdi
  0x0000000110df6308: add    %r10,%rdi
  0x0000000110df630b: cmpb   $0x20,(%rdi)
  0x0000000110df630e: je     0x0000000110df634d
  0x0000000110df6310: mov    0x70(%r15),%r10
  0x0000000110df6314: mov    0x80(%r15),%r11
  0x0000000110df631b: lock addl $0x0,-0x40(%rsp)
  0x0000000110df6321: cmpb   $0x0,(%rdi)
  0x0000000110df6324: je     0x0000000110df634d
  0x0000000110df6326: movb   $0x0,(%rdi)
  0x0000000110df6329: test   %r10,%r10
  0x0000000110df632c: jne    0x0000000110df6340  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df632e: mov    %r15,%rsi
  0x0000000110df6331: movabs $0x107aec8ce,%r10
  0x0000000110df633b: callq  *%r10
  0x0000000110df633e: jmp    0x0000000110df634d
  0x0000000110df6340: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6345: add    $0xfffffffffffffff8,%r10
  0x0000000110df6349: mov    %r10,0x70(%r15)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df634d: cmpb   $0x0,0x30(%r15)
  0x0000000110df6352: jne    0x0000000110df68c2  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@8
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6358: mov    0x48(%rsp),%r10
  0x0000000110df635d: mov    %rbx,%r8
  0x0000000110df6360: shr    $0x3,%r8
  0x0000000110df6364: mov    0x48(%rsp),%r11
  0x0000000110df6369: mov    %r8d,0x10(%r11)
  0x0000000110df636d: mov    %rbx,%r11
  0x0000000110df6370: xor    %r10,%r11
  0x0000000110df6373: shr    $0x14,%r11
  0x0000000110df6377: test   %r11,%r11
  0x0000000110df637a: je     0x0000000110df63cf
  0x0000000110df637c: shr    $0x9,%r10
  0x0000000110df6380: movabs $0x110569000,%rdi
  0x0000000110df638a: add    %r10,%rdi
  0x0000000110df638d: cmpb   $0x20,(%rdi)
  0x0000000110df6390: je     0x0000000110df63cf
  0x0000000110df6392: mov    0x70(%r15),%r10
  0x0000000110df6396: mov    0x80(%r15),%r11
  0x0000000110df639d: lock addl $0x0,-0x40(%rsp)
  0x0000000110df63a3: cmpb   $0x0,(%rdi)
  0x0000000110df63a6: je     0x0000000110df63cf
  0x0000000110df63a8: movb   $0x0,(%rdi)
  0x0000000110df63ab: test   %r10,%r10
  0x0000000110df63ae: jne    0x0000000110df63c2  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df63b0: mov    %r15,%rsi
  0x0000000110df63b3: movabs $0x107aec8ce,%r10
  0x0000000110df63bd: callq  *%r10
  0x0000000110df63c0: jmp    0x0000000110df63cf
  0x0000000110df63c2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df63c7: add    $0xfffffffffffffff8,%r10
  0x0000000110df63cb: mov    %r10,0x70(%r15)
  0x0000000110df63cf: cmpb   $0x0,0x30(%r15)
  0x0000000110df63d4: jne    0x0000000110df68fe
  0x0000000110df63da: mov    0x48(%rsp),%r10
  0x0000000110df63df: mov    %r13d,0x14(%r10)
  0x0000000110df63e3: mov    %rbp,%r10
  0x0000000110df63e6: mov    0x48(%rsp),%r11
  0x0000000110df63eb: xor    %r11,%r10
  0x0000000110df63ee: shr    $0x14,%r10
  0x0000000110df63f2: test   %r10,%r10
  0x0000000110df63f5: je     0x0000000110df644a
  0x0000000110df63f7: shr    $0x9,%r11
  0x0000000110df63fb: movabs $0x110569000,%rdi
  0x0000000110df6405: add    %r11,%rdi
  0x0000000110df6408: cmpb   $0x20,(%rdi)
  0x0000000110df640b: je     0x0000000110df644a
  0x0000000110df640d: mov    0x70(%r15),%r10
  0x0000000110df6411: mov    0x80(%r15),%r11
  0x0000000110df6418: lock addl $0x0,-0x40(%rsp)
  0x0000000110df641e: cmpb   $0x0,(%rdi)
  0x0000000110df6421: je     0x0000000110df644a
  0x0000000110df6423: movb   $0x0,(%rdi)
  0x0000000110df6426: test   %r10,%r10
  0x0000000110df6429: jne    0x0000000110df643d  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df642b: mov    %r15,%rsi
  0x0000000110df642e: movabs $0x107aec8ce,%r10
  0x0000000110df6438: callq  *%r10
  0x0000000110df643b: jmp    0x0000000110df644a
  0x0000000110df643d: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6442: add    $0xfffffffffffffff8,%r10  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6446: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$BitClass::<init>@-1 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df644a: mov    0x10(%rsp),%r10
  0x0000000110df644f: mov    0x50(%r10),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@1 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6453: mov    0x10(%rsp),%r11
  0x0000000110df6458: mov    0x20(%r11),%ecx    ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@6 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df645c: mov    %ecx,%r9d
  0x0000000110df645f: inc    %r9d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6462: mov    %r9d,0x20(%r11)    ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6466: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x0000000110df6db6
  0x0000000110df646b: cmp    %r8d,%r9d
  0x0000000110df646e: jae    0x0000000110df699c
  0x0000000110df6474: mov    0x10(%r11),%ebx    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6478: lea    (%r12,%r10,8),%r8
  0x0000000110df647c: mov    %ebx,%r11d
  0x0000000110df647f: and    $0x4,%r11d         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6483: movslq %ecx,%rcx
  0x0000000110df6486: mov    0x14(%r8,%rcx,4),%r8d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df648b: test   %r11d,%r11d
  0x0000000110df648e: jne    0x0000000110df6b61  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6494: cmp    $0x5e,%r8d
  0x0000000110df6498: je     0x0000000110df6b8a  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$6/0x0000000800067c40::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern::clazz@15 (line 2630)

  0x0000000110df649e: xor    %ecx,%ecx
  0x0000000110df64a0: mov    %rcx,0x40(%rsp)    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df64a5: mov    %r9d,%ecx
  0x0000000110df64a8: inc    %ecx               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df64aa: cmp    $0x5d,%r8d
  0x0000000110df64ae: je     0x0000000110df65bd
  0x0000000110df64b4: cmp    $0x5c,%r8d
  0x0000000110df64b8: jb     0x0000000110df69e2  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@390 (line 2713)

  0x0000000110df64be: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x0000000110df6dd6
  0x0000000110df64c3: cmp    %r8d,%r9d
  0x0000000110df64c6: jae    0x0000000110df6a4e
  0x0000000110df64cc: lea    (%r12,%r10,8),%rdi
  0x0000000110df64d0: mov    0x10(%rdi,%r9,4),%ebp  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df64d5: test   %r11d,%r11d
  0x0000000110df64d8: jne    0x0000000110df6c42  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df64de: cmp    $0x5c,%ebp
  0x0000000110df64e1: je     0x0000000110df660b  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@8 (line 2788)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df64e7: mov    0x10(%rsp),%r11
  0x0000000110df64ec: mov    %ecx,0x20(%r11)    ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::range@120 (line 2808)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df64f0: cmp    %r8d,%ecx
  0x0000000110df64f3: jae    0x0000000110df6afa
  0x0000000110df64f9: mov    %ebp,0x30(%rsp)    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df64fd: mov    0x30(%rsp),%r11d
  0x0000000110df6502: test   %r11d,%r11d
  0x0000000110df6505: jl     0x0000000110df6ada  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@125 (line 2810)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df650b: mov    0xc(%r12,%r10,8),%edx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ; implicit exception: dispatches to 0x0000000110df6de6
  0x0000000110df6510: cmp    %edx,%ecx
  0x0000000110df6512: jae    0x0000000110df6a7a
  0x0000000110df6518: mov    %ebx,%r9d
  0x0000000110df651b: and    $0x4,%r9d          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df651f: lea    (%r12,%r10,8),%r11
  0x0000000110df6523: mov    0x10(%r11,%rcx,4),%ebp  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6528: test   %r9d,%r9d
  0x0000000110df652b: jne    0x0000000110df6c6a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6531: cmp    $0x2d,%ebp
  0x0000000110df6534: je     0x0000000110df66c4  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@134 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df653a: mov    0x10(%rsp),%rsi
  0x0000000110df653f: mov    0x48(%rsp),%rdx
  0x0000000110df6544: mov    0x30(%rsp),%ecx
  0x0000000110df6548: mov    %rdx,%rbp
  0x0000000110df654b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual bitsOrSingle {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::range@257 (line 2836)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6550: test   %rax,%rax
  0x0000000110df6553: je     0x0000000110df6caa  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@398 (line 2714)

  0x0000000110df6559: mov    0x40(%rsp),%r10
  0x0000000110df655e: test   %r10,%r10
  0x0000000110df6561: jne    0x0000000110df6bba  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@408 (line 2717)

  0x0000000110df6567: mov    0x10(%rsp),%r10
  0x0000000110df656c: mov    0x20(%r10),%r9d    ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df6570: mov    0x50(%r10),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df6574: mov    0xc(%r12,%r10,8),%r11d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)
                                                ; implicit exception: dispatches to 0x0000000110df6df6
  0x0000000110df6579: cmp    %r11d,%r9d
  0x0000000110df657c: jae    0x0000000110df6ab6
  0x0000000110df6582: mov    0x10(%rsp),%r11
  0x0000000110df6587: mov    0x10(%r11),%ebx    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df658b: lea    (%r12,%r10,8),%r11
  0x0000000110df658f: mov    0x10(%r11,%r9,4),%r8d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df6594: mov    %ebx,%r11d
  0x0000000110df6597: and    $0x4,%r11d         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df659b: test   %r11d,%r11d
  0x0000000110df659e: jne    0x0000000110df6cc6  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df65a4: mov    0x108(%r15),%r14
  0x0000000110df65ab: mov    0x48(%rsp),%rdi    ; ImmutableOopMap{r10=NarrowOop rdi=Oop rax=Oop [16]=Oop [72]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@435 (line 2722)

  0x0000000110df65b0: test   %eax,(%r14)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@435 (line 2722)
                                                ;   {poll}
  0x0000000110df65b3: mov    %rax,0x40(%rsp)
  0x0000000110df65b8: jmpq   0x0000000110df64a5
  0x0000000110df65bd: mov    0x40(%rsp),%r8
  0x0000000110df65c2: test   %r8,%r8
  0x0000000110df65c5: je     0x0000000110df6bd6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@335 (line 2698)

  0x0000000110df65cb: mov    0x18(%rsp),%ebx
  0x0000000110df65cf: test   %ebx,%ebx
  0x0000000110df65d1: je     0x0000000110df6c0a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@344 (line 2699)

  0x0000000110df65d7: mov    0x10(%rsp),%r8
  0x0000000110df65dc: mov    %ecx,0x20(%r8)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df65e0: mov    0xc(%r12,%r10,8),%ebx  ; implicit exception: dispatches to 0x0000000110df6dc6
  0x0000000110df65e5: cmp    %ebx,%ecx
  0x0000000110df65e7: jae    0x0000000110df69c6
  0x0000000110df65ed: test   %r11d,%r11d
  0x0000000110df65f0: jne    0x0000000110df6c22  ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df65f6: mov    0x40(%rsp),%rax
  0x0000000110df65fb: add    $0x60,%rsp
  0x0000000110df65ff: pop    %rbp
  0x0000000110df6600: mov    0x108(%r15),%r10
  0x0000000110df6607: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df660a: retq                      ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df660b: mov    0x10(%rsp),%rsi
  0x0000000110df6610: mov    0x18(%rsp),%ebp
  0x0000000110df6614: rex.W pushq 0x48(%rsp)
  0x0000000110df6619: rex.W popq 0x20(%rsp)
  0x0000000110df661e: nop
  0x0000000110df661f: callq  0x0000000110d8ff00  ; ImmutableOopMap{[16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual nextEscaped {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@12 (line 2789)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6624: mov    0x10(%rsp),%r10
  0x0000000110df6629: mov    0x50(%r10),%r11d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@73 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df662d: mov    0x20(%r10),%r10d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@77 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6631: mov    %r10d,%ebp
  0x0000000110df6634: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@81 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6636: movslq %r10d,%r10
  0x0000000110df6639: cmp    $0x70,%eax
  0x0000000110df663c: je     0x0000000110df678a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@19 (line 2790)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6642: cmp    $0x50,%eax
  0x0000000110df6645: je     0x0000000110df678a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@25 (line 2790)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df664b: mov    0xc(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x0000000110df6e06
  0x0000000110df6650: cmp    %r8d,%ebp
  0x0000000110df6653: jae    0x0000000110df6d12
  0x0000000110df6659: shl    $0x3,%r11
  0x0000000110df665d: mov    0x14(%r11,%r10,4),%r11d
  0x0000000110df6662: cmp    $0x2d,%r11d
  0x0000000110df6666: je     0x0000000110df6825  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@85 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df666c: xor    %ebp,%ebp          ;*istore_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@93 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df666e: mov    0x10(%rsp),%rsi
  0x0000000110df6673: rex.W pushq 0x48(%rsp)
  0x0000000110df6678: rex.W popq 0x28(%rsp)
  0x0000000110df667d: xchg   %ax,%ax
  0x0000000110df667f: callq  0x0000000110d8ff00  ; ImmutableOopMap{[16]=Oop [40]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@95 (line 2802)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6684: mov    0x10(%rsp),%rsi
  0x0000000110df6689: mov    $0x1,%edx
  0x0000000110df668e: mov    $0x1,%ecx
  0x0000000110df6693: mov    %ebp,%r8d
  0x0000000110df6696: mov    %rsi,%rbp
  0x0000000110df6699: rex.W pushq 0x28(%rsp)
  0x0000000110df669e: rex.W popq 0x20(%rsp)
  0x0000000110df66a3: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@102 (line 2803)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df66a8: cmp    $0xffffffff,%eax
  0x0000000110df66ab: je     0x0000000110df682f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@108 (line 2804)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66b1: mov    0x10(%rbp),%ebx    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66b4: mov    0x20(%rbp),%ecx    ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66b7: mov    0x50(%rbp),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66bb: mov    %eax,0x30(%rsp)
  0x0000000110df66bf: jmpq   0x0000000110df64fd
  0x0000000110df66c4: mov    %ecx,%ebp
  0x0000000110df66c6: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@146 (line 2812)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66c8: cmp    %edx,%ebp
  0x0000000110df66ca: jae    0x0000000110df6cea
  0x0000000110df66d0: movslq %ecx,%r8
  0x0000000110df66d3: mov    0x14(%r11,%r8,4),%r11d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@147 (line 2812)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66d8: cmp    $0x5b,%r11d
  0x0000000110df66dc: je     0x0000000110df6805  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@152 (line 2813)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66e2: cmp    $0x5d,%r11d
  0x0000000110df66e6: je     0x0000000110df653a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@165 (line 2816)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66ec: mov    0x10(%rsp),%r8
  0x0000000110df66f1: mov    %ebp,0x20(%r8)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::range@169 (line 2817)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66f5: cmp    $0x5c,%r11d
  0x0000000110df66f9: je     0x0000000110df683f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@183 (line 2819)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df66ff: add    $0x2,%ecx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::range@199 (line 2822)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6702: mov    %ecx,0x20(%r8)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::range@199 (line 2822)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6706: cmp    %edx,%ecx
  0x0000000110df6708: jae    0x0000000110df6d26  ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::range@218 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df670e: cmp    0x30(%rsp),%r11d
  0x0000000110df6713: jl     0x0000000110df6741  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@206 (line 2824)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6715: and    $0x2,%ebx          ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::range@218 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6718: test   %ebx,%ebx
  0x0000000110df671a: jne    0x0000000110df6d7a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@221 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6720: mov    0x30(%rsp),%esi
  0x0000000110df6724: mov    %r11d,%edx
  0x0000000110df6727: mov    0x10(%rsp),%rbp
  0x0000000110df672c: rex.W pushq 0x48(%rsp)
  0x0000000110df6731: rex.W popq 0x20(%rsp)
  0x0000000110df6736: nop
  0x0000000110df6737: callq  0x0000000110d90400  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokestatic Range {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::range@250 (line 2832)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {static_call}
  0x0000000110df673c: jmpq   0x0000000110df6550  ;*invokevirtual escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@190 (line 2820)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6741: movabs $0x70fc0b738,%rdx  ;   {oop("Illegal character range"{0x000000070fc0b738})}
  0x0000000110df674b: mov    0x10(%rsp),%rsi
  0x0000000110df6750: mov    %rsi,%rbp
  0x0000000110df6753: rex.W pushq 0x48(%rsp)
  0x0000000110df6758: rex.W popq 0x20(%rsp)
  0x0000000110df675d: xchg   %ax,%ax
  0x0000000110df675f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::range@212 (line 2825)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6764: mov    $0xffffffec,%esi
  0x0000000110df6769: rex.W pushq 0x10(%rsp)
  0x0000000110df676e: rex.W popq (%rsp)
  0x0000000110df6772: mov    0x18(%rsp),%r8d
  0x0000000110df6777: mov    %r8d,0x8(%rsp)
  0x0000000110df677c: mov    %rax,0x18(%rsp)
  0x0000000110df6781: xchg   %ax,%ax
  0x0000000110df6783: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop [32]=Oop [64]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@215 (line 2825)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6788: ud2                       ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@28 (line 2791)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df678a: cmp    $0x50,%eax
  0x0000000110df678d: je     0x0000000110df686f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@31 (line 2791)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6793: xor    %r9d,%r9d
  0x0000000110df6796: mov    %r9d,0x1c(%rsp)    ;*istore_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@39 (line 2791)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df679b: mov    0x10(%rsp),%r8
  0x0000000110df67a0: mov    %ebp,0x20(%r8)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67a4: mov    0xc(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x0000000110df6e12
  0x0000000110df67a9: cmp    %r8d,%ebp
  0x0000000110df67ac: jae    0x0000000110df6d5e
  0x0000000110df67b2: shl    $0x3,%r11
  0x0000000110df67b6: mov    0x14(%r11,%r10,4),%r10d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67bb: mov    $0x4,%ebp
  0x0000000110df67c0: mov    0x10(%rsp),%r11
  0x0000000110df67c5: and    0x10(%r11),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67c9: test   %ebp,%ebp
  0x0000000110df67cb: jne    0x0000000110df6da2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67d1: cmp    $0x7b,%r10d
  0x0000000110df67d5: je     0x0000000110df687f  ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67db: mov    %r11,%rsi
  0x0000000110df67de: mov    %rsi,%rbp
  0x0000000110df67e1: xchg   %ax,%ax
  0x0000000110df67e3: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@55 (line 2796)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df67e8: mov    $0x1,%edx          ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@55 (line 2796)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df67ed: mov    0x10(%rsp),%rsi
  0x0000000110df67f2: mov    0x1c(%rsp),%ecx
  0x0000000110df67f6: mov    %rsi,%rbp
  0x0000000110df67f9: xchg   %ax,%ax
  0x0000000110df67fb: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual family {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::range@68 (line 2799)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6800: jmpq   0x0000000110df6550  ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6805: mov    0x10(%rsp),%rsi
  0x0000000110df680a: mov    0x48(%rsp),%rdx
  0x0000000110df680f: mov    0x30(%rsp),%ecx
  0x0000000110df6813: mov    %rsi,%rbp
  0x0000000110df6816: mov    %rdx,0x28(%rsp)
  0x0000000110df681b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [40]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual bitsOrSingle {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::range@158 (line 2814)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6820: jmpq   0x0000000110df6550
  0x0000000110df6825: mov    $0x1,%ebp
  0x0000000110df682a: jmpq   0x0000000110df666e
  0x0000000110df682f: mov    0x40(%rbp),%r10d
  0x0000000110df6833: mov    %r10,%rax
  0x0000000110df6836: shl    $0x3,%rax          ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@112 (line 2805)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df683a: jmpq   0x0000000110df6550  ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@174 (line 2818)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df683f: mov    %r8,%rsi
  0x0000000110df6842: mov    $0x1,%edx
  0x0000000110df6847: xor    %ecx,%ecx
  0x0000000110df6849: mov    $0x1,%r8d
  0x0000000110df684f: mov    %rsi,%rbp
  0x0000000110df6852: rex.W pushq 0x48(%rsp)
  0x0000000110df6857: rex.W popq 0x20(%rsp)
  0x0000000110df685c: data16 xchg %ax,%ax
  0x0000000110df685f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }
                                                ;*invokevirtual escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@190 (line 2820)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {optimized virtual_call}
  0x0000000110df6864: mov    0x10(%rbp),%ebx    ;*getfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@1 (line 1866)
                                                ; - java.util.regex.Pattern::range@218 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6867: mov    %eax,%r11d
  0x0000000110df686a: jmpq   0x0000000110df670e
  0x0000000110df686f: mov    $0x1,%r9d
  0x0000000110df6875: mov    %r9d,0x1c(%rsp)
  0x0000000110df687a: jmpq   0x0000000110df679b
  0x0000000110df687f: xor    %edx,%edx
  0x0000000110df6881: jmpq   0x0000000110df67ed
  0x0000000110df6886: mov    0x48(%rsp),%r10
  0x0000000110df688b: mov    0xc(%r10),%r10d
  0x0000000110df688f: test   %r10d,%r10d
  0x0000000110df6892: je     0x0000000110df62d7
  0x0000000110df6898: mov    0x38(%r15),%r11
  0x0000000110df689c: mov    %r10,%rdi
  0x0000000110df689f: shl    $0x3,%rdi
  0x0000000110df68a3: test   %r11,%r11
  0x0000000110df68a6: je     0x0000000110df6b22  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68ac: mov    0x48(%r15),%r10
  0x0000000110df68b0: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68b5: add    $0xfffffffffffffff8,%r11  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68b9: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68bd: jmpq   0x0000000110df62d7
  0x0000000110df68c2: mov    0x48(%rsp),%r10
  0x0000000110df68c7: mov    0x10(%r10),%r10d
  0x0000000110df68cb: test   %r10d,%r10d
  0x0000000110df68ce: je     0x0000000110df6358
  0x0000000110df68d4: mov    0x38(%r15),%r11
  0x0000000110df68d8: mov    %r10,%rdi
  0x0000000110df68db: shl    $0x3,%rdi
  0x0000000110df68df: test   %r11,%r11
  0x0000000110df68e2: je     0x0000000110df6b37  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68e8: mov    0x48(%r15),%r10
  0x0000000110df68ec: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68f1: add    $0xfffffffffffffff8,%r11  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68f5: mov    %r11,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df68f9: jmpq   0x0000000110df6358
  0x0000000110df68fe: mov    0x48(%rsp),%r10
  0x0000000110df6903: mov    0x14(%r10),%r10d
  0x0000000110df6907: test   %r10d,%r10d
  0x0000000110df690a: je     0x0000000110df63da
  0x0000000110df6910: mov    0x38(%r15),%r11
  0x0000000110df6914: mov    %r10,%rdi
  0x0000000110df6917: shl    $0x3,%rdi
  0x0000000110df691b: test   %r11,%r11
  0x0000000110df691e: je     0x0000000110df6b4c  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6924: mov    0x48(%r15),%r10
  0x0000000110df6928: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df692d: add    $0xfffffffffffffff8,%r11  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6931: mov    %r11,0x38(%r15)    ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6935: jmpq   0x0000000110df63da  ;*synchronization entry
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@-1
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df693a: movabs $0x800067840,%rsi  ;   {metadata('java/util/regex/Pattern$BitClass$$Lambda$5')}
  0x0000000110df6944: rex.W pushq 0x48(%rsp)
  0x0000000110df6949: rex.W popq 0x20(%rsp)
  0x0000000110df694e: nop
  0x0000000110df694f: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [72]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df6954: mov    %rax,%rbx
  0x0000000110df6957: jmpq   0x0000000110df625c
  0x0000000110df695c: movabs $0x800069130,%rsi  ;   {metadata('java/util/regex/Pattern$BitClass')}
  0x0000000110df6966: mov    0x10(%rsp),%rbp
  0x0000000110df696b: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::clazz@4 (line 2629)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df6970: jmpq   0x0000000110df6195  ;*synchronization entry
                                                ; - java.util.regex.Pattern$BitClass::<init>@-1 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6975: mov    $0x100,%edx
  0x0000000110df697a: movabs $0x800000040,%rsi  ;   {metadata({type array bool})}
  0x0000000110df6984: mov    0x10(%rsp),%rbp
  0x0000000110df6989: mov    %rax,0x20(%rsp)
  0x0000000110df698e: nop
  0x0000000110df698f: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [72]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern$BitClass::<init>@4 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110df6994: mov    %rax,%rbp
  0x0000000110df6997: jmpq   0x0000000110df620b
  0x0000000110df699c: mov    $0xffffffe4,%esi
  0x0000000110df69a1: mov    %r10d,%ebp
  0x0000000110df69a4: mov    %r9d,(%rsp)
  0x0000000110df69a8: mov    0x18(%rsp),%r11d
  0x0000000110df69ad: mov    %r11d,0x4(%rsp)
  0x0000000110df69b2: rex.W pushq 0x48(%rsp)
  0x0000000110df69b7: rex.W popq 0x18(%rsp)
  0x0000000110df69bc: data16 xchg %ax,%ax
  0x0000000110df69bf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [16]=Oop [24]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df69c4: ud2    
  0x0000000110df69c6: mov    $0xffffffe4,%esi
  0x0000000110df69cb: mov    %r10d,(%rsp)
  0x0000000110df69cf: mov    %ecx,0x4(%rsp)
  0x0000000110df69d3: mov    %r8,0x8(%rsp)
  0x0000000110df69d8: data16 xchg %ax,%ax
  0x0000000110df69db: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [8]=Oop [64]=Oop [72]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df69e0: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df69e2: cmp    $0x27,%r8d
  0x0000000110df69e6: jge    0x0000000110df6a1e
  0x0000000110df69e8: mov    %r8d,%edx
  0x0000000110df69eb: dec    %edx
  0x0000000110df69ed: cmp    $0x25,%edx
  0x0000000110df69f0: jb     0x0000000110df64be  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@68 (line 2642)

  0x0000000110df69f6: mov    $0xffffff45,%esi
  0x0000000110df69fb: mov    %r8d,0x8(%rsp)
  0x0000000110df6a00: mov    0x18(%rsp),%r10d
  0x0000000110df6a05: mov    %r10d,0xc(%rsp)
  0x0000000110df6a0a: rex.W pushq 0x48(%rsp)
  0x0000000110df6a0f: rex.W popq 0x18(%rsp)
  0x0000000110df6a14: data16 xchg %ax,%ax
  0x0000000110df6a17: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }
                                                ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@68 (line 2642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6a1c: ud2    
  0x0000000110df6a1e: cmp    $0x5a,%r8d
  0x0000000110df6a22: jle    0x0000000110df64be  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@68 (line 2642)

  0x0000000110df6a28: mov    $0xffffff4d,%esi
  0x0000000110df6a2d: mov    %r8d,0x8(%rsp)
  0x0000000110df6a32: mov    0x18(%rsp),%r10d
  0x0000000110df6a37: mov    %r10d,0xc(%rsp)
  0x0000000110df6a3c: rex.W pushq 0x48(%rsp)
  0x0000000110df6a41: rex.W popq 0x18(%rsp)
  0x0000000110df6a46: nop
  0x0000000110df6a47: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }
                                                ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@68 (line 2642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6a4c: ud2    
  0x0000000110df6a4e: mov    $0xffffffe4,%esi
  0x0000000110df6a53: mov    %r10d,(%rsp)
  0x0000000110df6a57: mov    %r9d,0x4(%rsp)
  0x0000000110df6a5c: rex.W pushq 0x10(%rsp)
  0x0000000110df6a61: rex.W popq 0x8(%rsp)
  0x0000000110df6a66: rex.W pushq 0x48(%rsp)
  0x0000000110df6a6b: rex.W popq 0x20(%rsp)
  0x0000000110df6a70: data16 xchg %ax,%ax
  0x0000000110df6a73: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [8]=Oop [32]=Oop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6a78: ud2    
  0x0000000110df6a7a: mov    $0xffffffe4,%esi
  0x0000000110df6a7f: mov    %r10d,(%rsp)
  0x0000000110df6a83: mov    %ecx,0x4(%rsp)
  0x0000000110df6a87: rex.W pushq 0x10(%rsp)
  0x0000000110df6a8c: rex.W popq 0x8(%rsp)
  0x0000000110df6a91: rex.W pushq 0x48(%rsp)
  0x0000000110df6a96: rex.W popq 0x20(%rsp)
  0x0000000110df6a9b: mov    %rax,-0x8(%rsp)
  0x0000000110df6aa0: mov    0x30(%rsp),%eax
  0x0000000110df6aa4: mov    %eax,0x1c(%rsp)
  0x0000000110df6aa8: mov    -0x8(%rsp),%rax
  0x0000000110df6aad: xchg   %ax,%ax
  0x0000000110df6aaf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [8]=Oop [32]=Oop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6ab4: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6ab6: mov    $0xffffffe4,%esi
  0x0000000110df6abb: mov    %rax,(%rsp)
  0x0000000110df6abf: mov    %r10d,0x8(%rsp)
  0x0000000110df6ac4: mov    %r9d,0xc(%rsp)
  0x0000000110df6ac9: rex.W pushq 0x48(%rsp)
  0x0000000110df6ace: rex.W popq 0x20(%rsp)
  0x0000000110df6ad3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop [32]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6ad8: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@125 (line 2810)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6ada: mov    $0x20,%esi
  0x0000000110df6adf: mov    0x18(%rsp),%r10d
  0x0000000110df6ae4: mov    %r10d,0x8(%rsp)
  0x0000000110df6ae9: rex.W pushq 0x48(%rsp)
  0x0000000110df6aee: rex.W popq 0x18(%rsp)
  0x0000000110df6af3: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@262 (line 2838)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6af8: ud2    
  0x0000000110df6afa: mov    $0xffffffe4,%esi
  0x0000000110df6aff: rex.W pushq 0x40(%rsp)
  0x0000000110df6b04: rex.W popq (%rsp)
  0x0000000110df6b08: mov    %r10d,0x8(%rsp)
  0x0000000110df6b0d: mov    %ecx,0xc(%rsp)
  0x0000000110df6b11: rex.W pushq 0x48(%rsp)
  0x0000000110df6b16: rex.W popq 0x20(%rsp)
  0x0000000110df6b1b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop [32]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::range@120 (line 2808)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6b20: ud2                       ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b22: mov    %r15,%rsi
  0x0000000110df6b25: movabs $0x107aec8aa,%r10
  0x0000000110df6b2f: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharProperty::<init>@1 (line 3933)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b32: jmpq   0x0000000110df62d7  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b37: mov    %r15,%rsi
  0x0000000110df6b3a: movabs $0x107aec8aa,%r10
  0x0000000110df6b44: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharProperty::<init>@6 (line 3934)
                                                ; - java.util.regex.Pattern$BmpCharProperty::<init>@2 (line 3959)
                                                ; - java.util.regex.Pattern$BitClass::<init>@7 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b47: jmpq   0x0000000110df6358  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::<init>@6
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b4c: mov    %r15,%rsi
  0x0000000110df6b4f: movabs $0x107aec8aa,%r10
  0x0000000110df6b59: callq  *%r10              ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6b5c: jmpq   0x0000000110df63da  ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6b61: mov    $0xffffff4d,%esi
  0x0000000110df6b66: mov    %r8d,%ebp
  0x0000000110df6b69: mov    %r11d,(%rsp)
  0x0000000110df6b6d: mov    0x18(%rsp),%r10d
  0x0000000110df6b72: mov    %r10d,0x4(%rsp)
  0x0000000110df6b77: rex.W pushq 0x48(%rsp)
  0x0000000110df6b7c: rex.W popq 0x18(%rsp)
  0x0000000110df6b81: xchg   %ax,%ax
  0x0000000110df6b83: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6b88: ud2                       ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)

  0x0000000110df6b8a: mov    $0xffffff4d,%esi
  0x0000000110df6b8f: mov    %r8d,(%rsp)
  0x0000000110df6b93: rex.W pushq 0x10(%rsp)
  0x0000000110df6b98: rex.W popq 0x8(%rsp)
  0x0000000110df6b9d: mov    0x18(%rsp),%r11d
  0x0000000110df6ba2: mov    %r11d,0x4(%rsp)
  0x0000000110df6ba7: rex.W pushq 0x48(%rsp)
  0x0000000110df6bac: rex.W popq 0x10(%rsp)
  0x0000000110df6bb1: xchg   %ax,%ax
  0x0000000110df6bb3: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@38 (line 2637)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6bb8: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@38 (line 2637)

  0x0000000110df6bba: mov    $0xffffff4d,%esi
  0x0000000110df6bbf: mov    %rax,(%rsp)
  0x0000000110df6bc3: rex.W pushq 0x48(%rsp)
  0x0000000110df6bc8: rex.W popq 0x20(%rsp)
  0x0000000110df6bcd: xchg   %ax,%ax
  0x0000000110df6bcf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [32]=Oop [64]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@408 (line 2717)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6bd4: ud2                       ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@68 (line 2642)

  0x0000000110df6bd6: mov    $0xffffff4d,%esi
  0x0000000110df6bdb: rex.W pushq 0x10(%rsp)
  0x0000000110df6be0: rex.W popq 0x8(%rsp)
  0x0000000110df6be5: mov    %rax,-0x8(%rsp)
  0x0000000110df6bea: mov    0x18(%rsp),%eax
  0x0000000110df6bee: mov    %eax,0x10(%rsp)
  0x0000000110df6bf2: mov    -0x8(%rsp),%rax
  0x0000000110df6bf7: rex.W pushq 0x48(%rsp)
  0x0000000110df6bfc: rex.W popq 0x18(%rsp)
  0x0000000110df6c01: xchg   %ax,%ax
  0x0000000110df6c03: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop [64]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@335 (line 2698)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6c08: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@344 (line 2699)

  0x0000000110df6c0a: mov    $0xffffff4d,%esi
  0x0000000110df6c0f: rex.W pushq 0x10(%rsp)
  0x0000000110df6c14: rex.W popq (%rsp)
  0x0000000110df6c18: data16 xchg %ax,%ax
  0x0000000110df6c1b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [64]=Oop [72]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@344 (line 2699)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6c20: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df6c22: shl    $0x3,%r10
  0x0000000110df6c26: movslq %r9d,%r8
  0x0000000110df6c29: mov    0x14(%r10,%r8,4),%ebp  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)

  0x0000000110df6c2e: mov    $0xffffff4d,%esi
  0x0000000110df6c33: mov    %r11d,0x8(%rsp)
  0x0000000110df6c38: data16 xchg %ax,%ax
  0x0000000110df6c3b: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [64]=Oop [72]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6c40: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6c42: mov    $0xffffff4d,%esi
  0x0000000110df6c47: mov    %r11d,0x8(%rsp)
  0x0000000110df6c4c: mov    0x18(%rsp),%r11d
  0x0000000110df6c51: mov    %r11d,0xc(%rsp)
  0x0000000110df6c56: rex.W pushq 0x48(%rsp)
  0x0000000110df6c5b: rex.W popq 0x18(%rsp)
  0x0000000110df6c60: data16 xchg %ax,%ax
  0x0000000110df6c63: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6c68: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6c6a: mov    $0xffffff4d,%esi
  0x0000000110df6c6f: rex.W pushq 0x40(%rsp)
  0x0000000110df6c74: rex.W popq (%rsp)
  0x0000000110df6c78: rex.W pushq 0x10(%rsp)
  0x0000000110df6c7d: rex.W popq 0x8(%rsp)
  0x0000000110df6c82: rex.W pushq 0x48(%rsp)
  0x0000000110df6c87: rex.W popq 0x20(%rsp)
  0x0000000110df6c8c: mov    %rax,-0x8(%rsp)
  0x0000000110df6c91: mov    0x30(%rsp),%eax
  0x0000000110df6c95: mov    %eax,0x1c(%rsp)
  0x0000000110df6c99: mov    -0x8(%rsp),%rax
  0x0000000110df6c9e: mov    %r9d,0x38(%rsp)
  0x0000000110df6ca3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6ca8: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6caa: mov    $0xffffff4d,%esi
  0x0000000110df6caf: mov    %rax,0x8(%rsp)
  0x0000000110df6cb4: rex.W pushq 0x48(%rsp)
  0x0000000110df6cb9: rex.W popq 0x20(%rsp)
  0x0000000110df6cbe: nop
  0x0000000110df6cbf: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop [32]=Oop [64]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@398 (line 2714)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6cc4: ud2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@398 (line 2714)

  0x0000000110df6cc6: mov    $0xffffff4d,%esi
  0x0000000110df6ccb: mov    %rax,(%rsp)
  0x0000000110df6ccf: mov    %r8d,0x8(%rsp)
  0x0000000110df6cd4: mov    %r11d,0xc(%rsp)
  0x0000000110df6cd9: rex.W pushq 0x48(%rsp)
  0x0000000110df6cde: rex.W popq 0x20(%rsp)
  0x0000000110df6ce3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [32]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6ce8: ud2    
  0x0000000110df6cea: mov    $0xffffffe4,%esi
  0x0000000110df6cef: mov    %r10d,0x8(%rsp)
  0x0000000110df6cf4: mov    0x18(%rsp),%r10d
  0x0000000110df6cf9: mov    %r10d,0xc(%rsp)
  0x0000000110df6cfe: rex.W pushq 0x48(%rsp)
  0x0000000110df6d03: rex.W popq 0x18(%rsp)
  0x0000000110df6d08: data16 xchg %ax,%ax
  0x0000000110df6d0b: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=NarrowOop [16]=Oop [24]=Oop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@147 (line 2812)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6d10: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@147 (line 2812)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6d12: mov    $0xffffffe4,%esi
  0x0000000110df6d17: mov    %r11d,0x1c(%rsp)
  0x0000000110df6d1c: data16 xchg %ax,%ax
  0x0000000110df6d1f: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [28]=NarrowOop [32]=Oop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@82 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6d24: ud2    
  0x0000000110df6d26: mov    $0xffffffe4,%esi
  0x0000000110df6d2b: mov    %r10d,(%rsp)
  0x0000000110df6d2f: mov    %ecx,0x4(%rsp)
  0x0000000110df6d33: rex.W pushq 0x48(%rsp)
  0x0000000110df6d38: rex.W popq 0x20(%rsp)
  0x0000000110df6d3d: mov    %rax,-0x8(%rsp)
  0x0000000110df6d42: mov    0x30(%rsp),%eax
  0x0000000110df6d46: mov    %eax,0x1c(%rsp)
  0x0000000110df6d4a: mov    -0x8(%rsp),%rax
  0x0000000110df6d4f: mov    %r11d,0x28(%rsp)
  0x0000000110df6d54: data16 xchg %ax,%ax
  0x0000000110df6d57: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [16]=Oop [32]=Oop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::range@199 (line 2822)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6d5c: ud2    
  0x0000000110df6d5e: mov    $0xffffffe4,%esi
  0x0000000110df6d63: rex.W pushq 0x10(%rsp)
  0x0000000110df6d68: rex.W popq 0x8(%rsp)
  0x0000000110df6d6d: mov    %r11d,0x30(%rsp)
  0x0000000110df6d72: nop
  0x0000000110df6d73: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [32]=Oop [48]=NarrowOop [64]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6d78: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::range@218 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6d7a: mov    $0xffffff4d,%esi
  0x0000000110df6d7f: mov    %ebx,(%rsp)
  0x0000000110df6d82: mov    0x18(%rsp),%r8d
  0x0000000110df6d87: mov    %r8d,0x4(%rsp)
  0x0000000110df6d8c: rex.W pushq 0x48(%rsp)
  0x0000000110df6d91: rex.W popq 0x18(%rsp)
  0x0000000110df6d96: mov    %r11d,0x24(%rsp)
  0x0000000110df6d9b: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::range@218 (line 2827)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6da0: ud2                       ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6da2: mov    $0xffffff4d,%esi
  0x0000000110df6da7: mov    %r10d,0x30(%rsp)
  0x0000000110df6dac: data16 xchg %ax,%ax
  0x0000000110df6daf: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop [32]=Oop [64]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6db4: ud2    
  0x0000000110df6db6: mov    $0xfffffff6,%esi
  0x0000000110df6dbb: mov    %r9d,%ebp
  0x0000000110df6dbe: nop
  0x0000000110df6dbf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@29 (line 2634)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6dc4: ud2    
  0x0000000110df6dc6: mov    $0xfffffff6,%esi
  0x0000000110df6dcb: mov    %ecx,%ebp
  0x0000000110df6dcd: xchg   %ax,%ax
  0x0000000110df6dcf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::clazz@348 (line 2700)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6dd4: ud2    
  0x0000000110df6dd6: mov    $0xfffffff6,%esi
  0x0000000110df6ddb: mov    %r9d,%ebp
  0x0000000110df6dde: nop
  0x0000000110df6ddf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@1 (line 2787)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6de4: ud2    
  0x0000000110df6de6: mov    $0xfffffff6,%esi
  0x0000000110df6deb: mov    %ecx,%ebp
  0x0000000110df6ded: xchg   %ax,%ax
  0x0000000110df6def: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6df4: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::range@129 (line 2811)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6df6: mov    $0xfffffff6,%esi
  0x0000000110df6dfb: mov    %r9d,%ebp
  0x0000000110df6dfe: nop
  0x0000000110df6dff: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6e04: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::clazz@430 (line 2722)

  0x0000000110df6e06: mov    $0xfffffff6,%esi
  0x0000000110df6e0b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@82 (line 2801)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6e10: ud2    
  0x0000000110df6e12: mov    $0xfffffff6,%esi
  0x0000000110df6e17: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::range@44 (line 2794)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df6e1c: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::clazz@4 (line 2629)

  0x0000000110df6e1e: mov    %rax,%rsi
  0x0000000110df6e21: jmp    0x0000000110df6e42  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@4 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6e23: mov    %rax,%rsi
  0x0000000110df6e26: jmp    0x0000000110df6e42  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass$$Lambda$5/0x0000000800067840::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.regex.Pattern$BitClass::<init>@2 (line 3500)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)

  0x0000000110df6e28: mov    %rax,%rsi
  0x0000000110df6e2b: jmp    0x0000000110df6e42  ;*invokevirtual escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@190 (line 2820)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e2d: jmp    0x0000000110df6e3f  ;*invokevirtual bitsOrSingle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@158 (line 2814)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e2f: jmp    0x0000000110df6e3f  ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@55 (line 2796)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e31: jmp    0x0000000110df6e3f  ;*invokevirtual family {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@68 (line 2799)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e33: jmp    0x0000000110df6e3f  ;*invokestatic Range {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@250 (line 2832)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e35: jmp    0x0000000110df6e3f  ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@212 (line 2825)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e37: jmp    0x0000000110df6e3f  ;*invokevirtual escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@102 (line 2803)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e39: jmp    0x0000000110df6e3f  ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@95 (line 2802)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e3b: jmp    0x0000000110df6e3f  ;*invokevirtual nextEscaped {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@12 (line 2789)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e3d: jmp    0x0000000110df6e3f  ;*invokevirtual unread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::range@95 (line 2802)
                                                ; - java.util.regex.Pattern::clazz@393 (line 2713)

  0x0000000110df6e3f: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.util.regex.Pattern::clazz@-1 (line 2627)

  0x0000000110df6e42: add    $0x60,%rsp
  0x0000000110df6e46: pop    %rbp
  0x0000000110df6e47: jmpq   0x0000000110dc8700  ;*putfield bits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$BitClass::<init>@12 (line 3501)
                                                ; - java.util.regex.Pattern$BitClass::<init>@6 (line 3497)
                                                ; - java.util.regex.Pattern::clazz@8 (line 2629)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df6e4c: hlt    
  0x0000000110df6e4d: hlt    
  0x0000000110df6e4e: hlt    
  0x0000000110df6e4f: hlt    
  0x0000000110df6e50: hlt    
  0x0000000110df6e51: hlt    
  0x0000000110df6e52: hlt    
  0x0000000110df6e53: hlt    
  0x0000000110df6e54: hlt    
  0x0000000110df6e55: hlt    
  0x0000000110df6e56: hlt    
  0x0000000110df6e57: hlt    
  0x0000000110df6e58: hlt    
  0x0000000110df6e59: hlt    
  0x0000000110df6e5a: hlt    
  0x0000000110df6e5b: hlt    
  0x0000000110df6e5c: hlt    
  0x0000000110df6e5d: hlt    
  0x0000000110df6e5e: hlt    
  0x0000000110df6e5f: hlt    
[Stub Code]
  0x0000000110df6e60: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df6e6a: jmpq   0x0000000110df6e6a  ;   {runtime_call}
  0x0000000110df6e6f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6e79: jmpq   0x0000000110df6e79  ;   {runtime_call}
  0x0000000110df6e7e: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6e88: jmpq   0x0000000110df6e88  ;   {runtime_call}
  0x0000000110df6e8d: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6e97: jmpq   0x0000000110df6e97  ;   {runtime_call}
  0x0000000110df6e9c: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6ea6: jmpq   0x0000000110df6ea6  ;   {runtime_call}
  0x0000000110df6eab: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6eb5: jmpq   0x0000000110df6eb5  ;   {runtime_call}
  0x0000000110df6eba: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6ec4: jmpq   0x0000000110df6ec4  ;   {runtime_call}
  0x0000000110df6ec9: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6ed3: jmpq   0x0000000110df6ed3  ;   {runtime_call}
  0x0000000110df6ed8: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6ee2: jmpq   0x0000000110df6ee2  ;   {runtime_call}
  0x0000000110df6ee7: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df6ef1: jmpq   0x0000000110df6ef1  ;   {runtime_call}
[Exception Handler]
  0x0000000110df6ef6: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df6efb: callq  0x0000000110df6f00
  0x0000000110df6f00: subq   $0x5,(%rsp)
  0x0000000110df6f05: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df6f0a: hlt    
  0x0000000110df6f0b: hlt    
  0x0000000110df6f0c: hlt    
  0x0000000110df6f0d: hlt    
  0x0000000110df6f0e: hlt    
  0x0000000110df6f0f: hlt    

ImmutableOopMap{rbp=Oop [16]=Oop [64]=Oop [72]=Oop }pc offsets: 1104 
ImmutableOopMap{r10=NarrowOop rdi=Oop rax=Oop [16]=Oop [72]=Oop }pc offsets: 1200 
ImmutableOopMap{[16]=Oop [32]=Oop [64]=Oop [72]=Oop }pc offsets: 1316 
ImmutableOopMap{[16]=Oop [40]=Oop [64]=Oop [72]=Oop }pc offsets: 1412 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }pc offsets: 1448 1596 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop }pc offsets: 1636 
ImmutableOopMap{[0]=Oop [24]=Oop [32]=Oop [64]=Oop }pc offsets: 1672 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }pc offsets: 1768 1792 
ImmutableOopMap{rbp=Oop [16]=Oop [40]=Oop [64]=Oop [72]=Oop }pc offsets: 1824 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [64]=Oop [72]=Oop }pc offsets: 1892 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [72]=Oop }pc offsets: 2132 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2160 
ImmutableOopMap{rbp=Oop [16]=Oop [32]=Oop [72]=Oop }pc offsets: 2196 
ImmutableOopMap{rbp=NarrowOop [16]=Oop [24]=Oop }pc offsets: 2244 
ImmutableOopMap{[0]=NarrowOop [8]=Oop [64]=Oop [72]=Oop }pc offsets: 2272 
ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }pc offsets: 2332 2380 
ImmutableOopMap{[0]=NarrowOop [8]=Oop [32]=Oop [64]=Oop }pc offsets: 2424 2484 
ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop [32]=Oop }pc offsets: 2520 
ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }pc offsets: 2552 
ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=Oop [32]=Oop }pc offsets: 2592 
ImmutableOopMap{[16]=Oop [24]=Oop }pc offsets: 2696 
ImmutableOopMap{[8]=Oop [16]=Oop }pc offsets: 2744 
ImmutableOopMap{[0]=Oop [16]=Oop [32]=Oop [64]=Oop }pc offsets: 2772 
ImmutableOopMap{[8]=Oop [24]=Oop [64]=Oop }pc offsets: 2824 
ImmutableOopMap{[0]=Oop [64]=Oop [72]=Oop }pc offsets: 2848 
ImmutableOopMap{[16]=Oop [64]=Oop [72]=Oop }pc offsets: 2880 
ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }pc offsets: 2920 
ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop }pc offsets: 2984 
ImmutableOopMap{[8]=Oop [16]=Oop [32]=Oop [64]=Oop }pc offsets: 3012 
ImmutableOopMap{[0]=Oop [16]=Oop [32]=Oop }pc offsets: 3048 
ImmutableOopMap{[8]=NarrowOop [16]=Oop [24]=Oop [64]=Oop }pc offsets: 3088 
ImmutableOopMap{[16]=Oop [28]=NarrowOop [32]=Oop [64]=Oop }pc offsets: 3108 
ImmutableOopMap{[0]=NarrowOop [16]=Oop [32]=Oop [64]=Oop }pc offsets: 3164 
ImmutableOopMap{[8]=Oop [32]=Oop [48]=NarrowOop [64]=Oop }pc offsets: 3192 
ImmutableOopMap{[16]=Oop [24]=Oop [64]=Oop }pc offsets: 3232 
ImmutableOopMap{[16]=Oop [32]=Oop [64]=Oop }pc offsets: 3252 
ImmutableOopMap{}pc offsets: 3268 3284 3300 3316 3332 3344 3356 Compiled method (c2)     619   96             java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x0000000110deef10,0x0000000110def238] = 808
 relocation     [0x0000000110def088,0x0000000110def098] = 16
 main code      [0x0000000110def0a0,0x0000000110def120] = 128
 stub code      [0x0000000110def120,0x0000000110def138] = 24
 metadata       [0x0000000110def138,0x0000000110def140] = 8
 scopes data    [0x0000000110def140,0x0000000110def180] = 64
 scopes pcs     [0x0000000110def180,0x0000000110def220] = 160
 dependencies   [0x0000000110def220,0x0000000110def228] = 8
 nul chk table  [0x0000000110def228,0x0000000110def238] = 16
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V  [0x0000000110def0a0, 0x0000000110def138]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0bce8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110def0a0: mov    0x8(%rsi),%r10d
  0x0000000110def0a4: movabs $0x800000000,%r12
  0x0000000110def0ae: add    %r12,%r10
  0x0000000110def0b1: xor    %r12,%r12
  0x0000000110def0b4: cmp    %r10,%rax
  0x0000000110def0b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110def0bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110def0c0: mov    %eax,-0x14000(%rsp)
  0x0000000110def0c7: push   %rbp
  0x0000000110def0c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 170)

  0x0000000110def0cc: mov    0x14(%rsi),%r11d   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)

  0x0000000110def0d0: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x0000000110def10a
  0x0000000110def0d5: movsbl 0x10(%rsi),%ecx
  0x0000000110def0d9: sar    %cl,%r10d
  0x0000000110def0dc: mov    %edx,%ebp
  0x0000000110def0de: sub    %r10d,%ebp         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@13 (line 171)

  0x0000000110def0e1: test   %ebp,%ebp
  0x0000000110def0e3: jg     0x0000000110def0f5  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)

  0x0000000110def0e5: add    $0x20,%rsp
  0x0000000110def0e9: pop    %rbp
  0x0000000110def0ea: mov    0x108(%r15),%r10
  0x0000000110def0f1: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110def0f4: retq   
  0x0000000110def0f5: mov    %rsi,(%rsp)
  0x0000000110def0f9: mov    %edx,0x8(%rsp)
  0x0000000110def0fd: mov    $0xffffff4d,%esi
  0x0000000110def102: nop
  0x0000000110def103: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def108: ud2                       ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)

  0x0000000110def10a: mov    $0xfffffff6,%esi
  0x0000000110def10f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110def114: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)

  0x0000000110def116: hlt    
  0x0000000110def117: hlt    
  0x0000000110def118: hlt    
  0x0000000110def119: hlt    
  0x0000000110def11a: hlt    
  0x0000000110def11b: hlt    
  0x0000000110def11c: hlt    
  0x0000000110def11d: hlt    
  0x0000000110def11e: hlt    
  0x0000000110def11f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110def120: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110def125: callq  0x0000000110def12a
  0x0000000110def12a: subq   $0x5,(%rsp)
  0x0000000110def12f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110def134: hlt    
  0x0000000110def135: hlt    
  0x0000000110def136: hlt    
  0x0000000110def137: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 104 
ImmutableOopMap{}pc offsets: 116 Compiled method (c2)     626   97             java.lang.Math::max (11 bytes)
 total in heap  [0x0000000110de8d90,0x0000000110de8fd8] = 584
 relocation     [0x0000000110de8f08,0x0000000110de8f10] = 8
 main code      [0x0000000110de8f20,0x0000000110de8f60] = 64
 stub code      [0x0000000110de8f60,0x0000000110de8f78] = 24
 metadata       [0x0000000110de8f78,0x0000000110de8f80] = 8
 scopes data    [0x0000000110de8f80,0x0000000110de8f90] = 16
 scopes pcs     [0x0000000110de8f90,0x0000000110de8fd0] = 64
 dependencies   [0x0000000110de8fd0,0x0000000110de8fd8] = 8
----------------------------------------------------------------------
java/lang/Math.max(II)I  [0x0000000110de8f20, 0x0000000110de8f78]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eee8948} 'max' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110de8f20: sub    $0x18,%rsp
  0x0000000110de8f27: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1428)

  0x0000000110de8f2c: cmp    %edx,%esi
  0x0000000110de8f2e: mov    %esi,%eax
  0x0000000110de8f30: cmovl  %edx,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::max@10 (line 1428)

  0x0000000110de8f33: add    $0x10,%rsp
  0x0000000110de8f37: pop    %rbp
  0x0000000110de8f38: mov    0x108(%r15),%r10
  0x0000000110de8f3f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110de8f42: retq   
  0x0000000110de8f43: hlt    
  0x0000000110de8f44: hlt    
  0x0000000110de8f45: hlt    
  0x0000000110de8f46: hlt    
  0x0000000110de8f47: hlt    
  0x0000000110de8f48: hlt    
  0x0000000110de8f49: hlt    
  0x0000000110de8f4a: hlt    
  0x0000000110de8f4b: hlt    
  0x0000000110de8f4c: hlt    
  0x0000000110de8f4d: hlt    
  0x0000000110de8f4e: hlt    
  0x0000000110de8f4f: hlt    
  0x0000000110de8f50: hlt    
  0x0000000110de8f51: hlt    
  0x0000000110de8f52: hlt    
  0x0000000110de8f53: hlt    
  0x0000000110de8f54: hlt    
  0x0000000110de8f55: hlt    
  0x0000000110de8f56: hlt    
  0x0000000110de8f57: hlt    
  0x0000000110de8f58: hlt    
  0x0000000110de8f59: hlt    
  0x0000000110de8f5a: hlt    
  0x0000000110de8f5b: hlt    
  0x0000000110de8f5c: hlt    
  0x0000000110de8f5d: hlt    
  0x0000000110de8f5e: hlt    
  0x0000000110de8f5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110de8f60: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110de8f65: callq  0x0000000110de8f6a
  0x0000000110de8f6a: subq   $0x5,(%rsp)
  0x0000000110de8f6f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110de8f74: hlt    
  0x0000000110de8f75: hlt    
  0x0000000110de8f76: hlt    
  0x0000000110de8f77: hlt    
Compiled method (c2)     632   98             java.lang.Math::min (11 bytes)
 total in heap  [0x0000000110deec90,0x0000000110deeed8] = 584
 relocation     [0x0000000110deee08,0x0000000110deee10] = 8
 main code      [0x0000000110deee20,0x0000000110deee60] = 64
 stub code      [0x0000000110deee60,0x0000000110deee78] = 24
 metadata       [0x0000000110deee78,0x0000000110deee80] = 8
 scopes data    [0x0000000110deee80,0x0000000110deee90] = 16
 scopes pcs     [0x0000000110deee90,0x0000000110deeed0] = 64
 dependencies   [0x0000000110deeed0,0x0000000110deeed8] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x0000000110deee20, 0x0000000110deee78]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eee8cb8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110deee20: sub    $0x18,%rsp
  0x0000000110deee27: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1513)

  0x0000000110deee2c: cmp    %edx,%esi
  0x0000000110deee2e: mov    %edx,%eax
  0x0000000110deee30: cmovle %esi,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1513)

  0x0000000110deee33: add    $0x10,%rsp
  0x0000000110deee37: pop    %rbp
  0x0000000110deee38: mov    0x108(%r15),%r10
  0x0000000110deee3f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110deee42: retq   
  0x0000000110deee43: hlt    
  0x0000000110deee44: hlt    
  0x0000000110deee45: hlt    
  0x0000000110deee46: hlt    
  0x0000000110deee47: hlt    
  0x0000000110deee48: hlt    
  0x0000000110deee49: hlt    
  0x0000000110deee4a: hlt    
  0x0000000110deee4b: hlt    
  0x0000000110deee4c: hlt    
  0x0000000110deee4d: hlt    
  0x0000000110deee4e: hlt    
  0x0000000110deee4f: hlt    
  0x0000000110deee50: hlt    
  0x0000000110deee51: hlt    
  0x0000000110deee52: hlt    
  0x0000000110deee53: hlt    
  0x0000000110deee54: hlt    
  0x0000000110deee55: hlt    
  0x0000000110deee56: hlt    
  0x0000000110deee57: hlt    
  0x0000000110deee58: hlt    
  0x0000000110deee59: hlt    
  0x0000000110deee5a: hlt    
  0x0000000110deee5b: hlt    
  0x0000000110deee5c: hlt    
  0x0000000110deee5d: hlt    
  0x0000000110deee5e: hlt    
  0x0000000110deee5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110deee60: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110deee65: callq  0x0000000110deee6a
  0x0000000110deee6a: subq   $0x5,(%rsp)
  0x0000000110deee6f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110deee74: hlt    
  0x0000000110deee75: hlt    
  0x0000000110deee76: hlt    
  0x0000000110deee77: hlt    
Compiled method (c2)     633   99             java.util.ArrayList$Itr::hasNext (20 bytes)
 total in heap  [0x0000000110df0710,0x0000000110df0a08] = 760
 relocation     [0x0000000110df0888,0x0000000110df0898] = 16
 main code      [0x0000000110df08a0,0x0000000110df0920] = 128
 stub code      [0x0000000110df0920,0x0000000110df0938] = 24
 metadata       [0x0000000110df0938,0x0000000110df0940] = 8
 scopes data    [0x0000000110df0940,0x0000000110df0970] = 48
 scopes pcs     [0x0000000110df0970,0x0000000110df09f0] = 128
 dependencies   [0x0000000110df09f0,0x0000000110df09f8] = 8
 nul chk table  [0x0000000110df09f8,0x0000000110df0a08] = 16
----------------------------------------------------------------------
java/util/ArrayList$Itr.hasNext()Z  [0x0000000110df08a0, 0x0000000110df0938]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f006790} 'hasNext' '()Z' in 'java/util/ArrayList$Itr'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df08a0: mov    0x8(%rsi),%r10d
  0x0000000110df08a4: movabs $0x800000000,%r12
  0x0000000110df08ae: add    %r12,%r10
  0x0000000110df08b1: xor    %r12,%r12
  0x0000000110df08b4: cmp    %r10,%rax
  0x0000000110df08b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df08bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df08c0: mov    %eax,-0x14000(%rsp)
  0x0000000110df08c7: push   %rbp
  0x0000000110df08c8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::hasNext@-1 (line 991)

  0x0000000110df08cc: mov    0x18(%rsi),%r11d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@5 (line 991)

  0x0000000110df08d0: mov    0x10(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x0000000110df08f7
  0x0000000110df08d5: mov    0xc(%rsi),%r8d
  0x0000000110df08d9: cmp    %r10d,%r8d
  0x0000000110df08dc: je     0x0000000110df08f3  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@11 (line 991)

  0x0000000110df08de: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@19 (line 991)

  0x0000000110df08e3: add    $0x10,%rsp
  0x0000000110df08e7: pop    %rbp
  0x0000000110df08e8: mov    0x108(%r15),%r10
  0x0000000110df08ef: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df08f2: retq   
  0x0000000110df08f3: xor    %eax,%eax
  0x0000000110df08f5: jmp    0x0000000110df08e3
  0x0000000110df08f7: mov    $0xfffffff6,%esi
  0x0000000110df08fc: data16 xchg %ax,%ax
  0x0000000110df08ff: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df0904: ud2                       ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)

  0x0000000110df0906: hlt    
  0x0000000110df0907: hlt    
  0x0000000110df0908: hlt    
  0x0000000110df0909: hlt    
  0x0000000110df090a: hlt    
  0x0000000110df090b: hlt    
  0x0000000110df090c: hlt    
  0x0000000110df090d: hlt    
  0x0000000110df090e: hlt    
  0x0000000110df090f: hlt    
  0x0000000110df0910: hlt    
  0x0000000110df0911: hlt    
  0x0000000110df0912: hlt    
  0x0000000110df0913: hlt    
  0x0000000110df0914: hlt    
  0x0000000110df0915: hlt    
  0x0000000110df0916: hlt    
  0x0000000110df0917: hlt    
  0x0000000110df0918: hlt    
  0x0000000110df0919: hlt    
  0x0000000110df091a: hlt    
  0x0000000110df091b: hlt    
  0x0000000110df091c: hlt    
  0x0000000110df091d: hlt    
  0x0000000110df091e: hlt    
  0x0000000110df091f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df0920: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df0925: callq  0x0000000110df092a
  0x0000000110df092a: subq   $0x5,(%rsp)
  0x0000000110df092f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df0934: hlt    
  0x0000000110df0935: hlt    
  0x0000000110df0936: hlt    
  0x0000000110df0937: hlt    

ImmutableOopMap{}pc offsets: 100 Compiled method (c2)     645  100             java.util.Optional::ofNullable (15 bytes)
 total in heap  [0x0000000110df0190,0x0000000110df0560] = 976
 relocation     [0x0000000110df0308,0x0000000110df0320] = 24
 main code      [0x0000000110df0320,0x0000000110df0440] = 288
 stub code      [0x0000000110df0440,0x0000000110df0458] = 24
 metadata       [0x0000000110df0458,0x0000000110df0478] = 32
 scopes data    [0x0000000110df0478,0x0000000110df04b0] = 56
 scopes pcs     [0x0000000110df04b0,0x0000000110df0540] = 144
 dependencies   [0x0000000110df0540,0x0000000110df0548] = 8
 handler table  [0x0000000110df0548,0x0000000110df0560] = 24
----------------------------------------------------------------------
java/util/Optional.ofNullable(Ljava/lang/Object;)Ljava/util/Optional;  [0x0000000110df0320, 0x0000000110df0458]  312 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011efb4bb0} 'ofNullable' '(Ljava/lang/Object;)Ljava/util/Optional;' in 'java/util/Optional'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df0320: mov    %eax,-0x14000(%rsp)
  0x0000000110df0327: push   %rbp
  0x0000000110df0328: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.Optional::ofNullable@-1 (line 133)

  0x0000000110df032c: mov    %rsi,%rbp
  0x0000000110df032f: test   %rsi,%rsi
  0x0000000110df0332: je     0x0000000110df040c
  0x0000000110df0338: mov    0x118(%r15),%rbx
  0x0000000110df033f: mov    %rbx,%r10
  0x0000000110df0342: add    $0x10,%r10
  0x0000000110df0346: cmp    0x128(%r15),%r10
  0x0000000110df034d: jae    0x0000000110df0418  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)

  0x0000000110df0353: mov    %r10,0x118(%r15)
  0x0000000110df035a: prefetchnta 0xc0(%r10)
  0x0000000110df0362: mov    $0x34bd8,%r10d     ;   {metadata('java/util/Optional')}
  0x0000000110df0368: movabs $0x800000000,%r12
  0x0000000110df0372: add    %r12,%r10
  0x0000000110df0375: xor    %r12,%r12
  0x0000000110df0378: mov    0xb8(%r10),%r10
  0x0000000110df037f: mov    %r10,(%rbx)
  0x0000000110df0382: movl   $0x34bd8,0x8(%rbx)  ;   {metadata('java/util/Optional')}
  0x0000000110df0389: mov    %rbp,%r10
  0x0000000110df038c: shr    $0x3,%r10
  0x0000000110df0390: mov    %r10d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)

  0x0000000110df0394: mov    %rbp,%r10
  0x0000000110df0397: mov    %rbx,%r11
  0x0000000110df039a: xor    %r11,%r10
  0x0000000110df039d: shr    $0x14,%r10
  0x0000000110df03a1: test   %r10,%r10
  0x0000000110df03a4: je     0x0000000110df03f9
  0x0000000110df03a6: shr    $0x9,%r11
  0x0000000110df03aa: movabs $0x110569000,%rdi
  0x0000000110df03b4: add    %r11,%rdi
  0x0000000110df03b7: cmpb   $0x20,(%rdi)
  0x0000000110df03ba: je     0x0000000110df03f9
  0x0000000110df03bc: mov    0x70(%r15),%r10
  0x0000000110df03c0: mov    0x80(%r15),%r11
  0x0000000110df03c7: lock addl $0x0,-0x40(%rsp)
  0x0000000110df03cd: cmpb   $0x0,(%rdi)
  0x0000000110df03d0: je     0x0000000110df03f9
  0x0000000110df03d2: movb   $0x0,(%rdi)
  0x0000000110df03d5: test   %r10,%r10
  0x0000000110df03d8: jne    0x0000000110df03ec
  0x0000000110df03da: mov    %r15,%rsi
  0x0000000110df03dd: movabs $0x107aec8ce,%r10
  0x0000000110df03e7: callq  *%r10
  0x0000000110df03ea: jmp    0x0000000110df03f9
  0x0000000110df03ec: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df03f1: add    $0xfffffffffffffff8,%r10
  0x0000000110df03f5: mov    %r10,0x70(%r15)    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::ofNullable@14 (line 133)

  0x0000000110df03f9: mov    %rbx,%rax
  0x0000000110df03fc: add    $0x10,%rsp
  0x0000000110df0400: pop    %rbp
  0x0000000110df0401: mov    0x108(%r15),%r10
  0x0000000110df0408: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df040b: retq   
  0x0000000110df040c: movabs $0x70ff4b4c8,%rbx  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110df0416: jmp    0x0000000110df03f9
  0x0000000110df0418: movabs $0x800034bd8,%rsi  ;   {metadata('java/util/Optional')}
  0x0000000110df0422: nop
  0x0000000110df0423: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df0428: mov    %rax,%rbx
  0x0000000110df042b: jmpq   0x0000000110df0389  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)

  0x0000000110df0430: mov    %rax,%rsi
  0x0000000110df0433: add    $0x10,%rsp
  0x0000000110df0437: pop    %rbp
  0x0000000110df0438: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df043d: hlt    
  0x0000000110df043e: hlt    
  0x0000000110df043f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df0440: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df0445: callq  0x0000000110df044a
  0x0000000110df044a: subq   $0x5,(%rsp)
  0x0000000110df044f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df0454: hlt    
  0x0000000110df0455: hlt    
  0x0000000110df0456: hlt    
  0x0000000110df0457: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 264 Compiled method (c2)     650  101             java.util.ArrayList$Itr::next (66 bytes)
 total in heap  [0x0000000110df4010,0x0000000110df4598] = 1416
 relocation     [0x0000000110df4188,0x0000000110df41a0] = 24
 main code      [0x0000000110df41a0,0x0000000110df42c0] = 288
 stub code      [0x0000000110df42c0,0x0000000110df42d8] = 24
 metadata       [0x0000000110df42d8,0x0000000110df42e8] = 16
 scopes data    [0x0000000110df42e8,0x0000000110df43b8] = 208
 scopes pcs     [0x0000000110df43b8,0x0000000110df4578] = 448
 dependencies   [0x0000000110df4578,0x0000000110df4580] = 8
 nul chk table  [0x0000000110df4580,0x0000000110df4598] = 24
----------------------------------------------------------------------
java/util/ArrayList$Itr.next()Ljava/lang/Object;  [0x0000000110df41a0, 0x0000000110df42d8]  312 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f006898} 'next' '()Ljava/lang/Object;' in 'java/util/ArrayList$Itr'
  #           [sp+0x40]  (sp of caller)
  0x0000000110df41a0: mov    0x8(%rsi),%r10d
  0x0000000110df41a4: movabs $0x800000000,%r12
  0x0000000110df41ae: add    %r12,%r10
  0x0000000110df41b1: xor    %r12,%r12
  0x0000000110df41b4: cmp    %r10,%rax
  0x0000000110df41b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df41bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df41c0: mov    %eax,-0x14000(%rsp)
  0x0000000110df41c7: push   %rbp
  0x0000000110df41c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::next@-1 (line 996)

  0x0000000110df41cc: mov    0x18(%rsi),%r11d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@1 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)

  0x0000000110df41d0: mov    0xc(%r12,%r11,8),%r10d  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; implicit exception: dispatches to 0x0000000110df4292
  0x0000000110df41d5: mov    0x14(%rsi),%ebp    ;*getfield expectedModCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@8 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)

  0x0000000110df41d8: cmp    %ebp,%r10d
  0x0000000110df41db: jne    0x0000000110df4242  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)

  0x0000000110df41dd: mov    0x10(%r12,%r11,8),%r10d  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@14 (line 998)

  0x0000000110df41e2: mov    0xc(%rsi),%r8d     ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@5 (line 997)

  0x0000000110df41e6: cmp    %r10d,%r8d
  0x0000000110df41e9: jge    0x0000000110df425a  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)

  0x0000000110df41eb: mov    0x14(%r12,%r11,8),%r9d  ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@32 (line 1000)

  0x0000000110df41f0: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; implicit exception: dispatches to 0x0000000110df429e
  0x0000000110df41f5: cmp    %ebp,%r8d
  0x0000000110df41f8: jge    0x0000000110df4276  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)

  0x0000000110df41fa: mov    %r8d,0x10(%rsi)    ;*putfield lastRet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@61 (line 1004)

  0x0000000110df41fe: mov    %r8d,%r10d
  0x0000000110df4201: inc    %r10d
  0x0000000110df4204: mov    %r10d,0xc(%rsi)    ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@54 (line 1003)

  0x0000000110df4208: cmp    %ebp,%r8d
  0x0000000110df420b: jae    0x0000000110df422d  ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::next@-1 (line 996)

  0x0000000110df420d: lea    (%r12,%r9,8),%r10
  0x0000000110df4211: mov    0x10(%r10,%r8,4),%r10d
  0x0000000110df4216: mov    %r10,%rax
  0x0000000110df4219: shl    $0x3,%rax
  0x0000000110df421d: add    $0x30,%rsp
  0x0000000110df4221: pop    %rbp
  0x0000000110df4222: mov    0x108(%r15),%r10
  0x0000000110df4229: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df422c: retq   
  0x0000000110df422d: mov    $0xffffffe4,%esi
  0x0000000110df4232: mov    %r9d,%ebp
  0x0000000110df4235: mov    %r8d,(%rsp)
  0x0000000110df4239: xchg   %ax,%ax
  0x0000000110df423b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df4240: ud2                       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)

  0x0000000110df4242: mov    %rsi,(%rsp)
  0x0000000110df4246: mov    %r10d,0x8(%rsp)
  0x0000000110df424b: mov    $0xffffff4d,%esi
  0x0000000110df4250: data16 xchg %ax,%ax
  0x0000000110df4253: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df4258: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)

  0x0000000110df425a: mov    %rsi,%rbp
  0x0000000110df425d: mov    %r8d,0x4(%rsp)
  0x0000000110df4262: mov    %r10d,0x8(%rsp)
  0x0000000110df4267: mov    $0xffffff4d,%esi
  0x0000000110df426c: data16 xchg %ax,%ax
  0x0000000110df426f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df4274: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)

  0x0000000110df4276: mov    %rsi,(%rsp)
  0x0000000110df427a: mov    %r9d,0xc(%rsp)
  0x0000000110df427f: mov    %r8d,0x10(%rsp)
  0x0000000110df4284: mov    $0xffffff4d,%esi
  0x0000000110df4289: xchg   %ax,%ax
  0x0000000110df428b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [12]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df4290: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)

  0x0000000110df4292: mov    $0xfffffff6,%esi
  0x0000000110df4297: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield modCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df429c: ud2                       ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)

  0x0000000110df429e: mov    $0xfffffff6,%esi
  0x0000000110df42a3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df42a8: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)

  0x0000000110df42aa: hlt    
  0x0000000110df42ab: hlt    
  0x0000000110df42ac: hlt    
  0x0000000110df42ad: hlt    
  0x0000000110df42ae: hlt    
  0x0000000110df42af: hlt    
  0x0000000110df42b0: hlt    
  0x0000000110df42b1: hlt    
  0x0000000110df42b2: hlt    
  0x0000000110df42b3: hlt    
  0x0000000110df42b4: hlt    
  0x0000000110df42b5: hlt    
  0x0000000110df42b6: hlt    
  0x0000000110df42b7: hlt    
  0x0000000110df42b8: hlt    
  0x0000000110df42b9: hlt    
  0x0000000110df42ba: hlt    
  0x0000000110df42bb: hlt    
  0x0000000110df42bc: hlt    
  0x0000000110df42bd: hlt    
  0x0000000110df42be: hlt    
  0x0000000110df42bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df42c0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df42c5: callq  0x0000000110df42ca
  0x0000000110df42ca: subq   $0x5,(%rsp)
  0x0000000110df42cf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df42d4: hlt    
  0x0000000110df42d5: hlt    
  0x0000000110df42d6: hlt    
  0x0000000110df42d7: hlt    

ImmutableOopMap{rbp=NarrowOop }pc offsets: 160 
ImmutableOopMap{[0]=Oop }pc offsets: 184 
ImmutableOopMap{rbp=Oop }pc offsets: 212 
ImmutableOopMap{[0]=Oop [12]=NarrowOop }pc offsets: 240 
ImmutableOopMap{}pc offsets: 252 264 Compiled method (c2)     655  102             java.util.ArrayList$Itr::checkForComodification (23 bytes)
 total in heap  [0x0000000110df2490,0x0000000110df27c0] = 816
 relocation     [0x0000000110df2608,0x0000000110df2618] = 16
 main code      [0x0000000110df2620,0x0000000110df26a0] = 128
 stub code      [0x0000000110df26a0,0x0000000110df26b8] = 24
 metadata       [0x0000000110df26b8,0x0000000110df26c0] = 8
 scopes data    [0x0000000110df26c0,0x0000000110df26f8] = 56
 scopes pcs     [0x0000000110df26f8,0x0000000110df27a8] = 176
 dependencies   [0x0000000110df27a8,0x0000000110df27b0] = 8
 nul chk table  [0x0000000110df27b0,0x0000000110df27c0] = 16
----------------------------------------------------------------------
java/util/ArrayList$Itr.checkForComodification()V  [0x0000000110df2620, 0x0000000110df26b8]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f006bb8} 'checkForComodification' '()V' in 'java/util/ArrayList$Itr'
  #           [sp+0x30]  (sp of caller)
  0x0000000110df2620: mov    0x8(%rsi),%r10d
  0x0000000110df2624: movabs $0x800000000,%r12
  0x0000000110df262e: add    %r12,%r10
  0x0000000110df2631: xor    %r12,%r12
  0x0000000110df2634: cmp    %r10,%rax
  0x0000000110df2637: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df263d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df2640: mov    %eax,-0x14000(%rsp)
  0x0000000110df2647: push   %rbp
  0x0000000110df2648: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::checkForComodification@-1 (line 1041)

  0x0000000110df264c: mov    0x18(%rsi),%r11d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@1 (line 1041)

  0x0000000110df2650: mov    0xc(%r12,%r11,8),%r11d  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; implicit exception: dispatches to 0x0000000110df267e
  0x0000000110df2655: mov    0x14(%rsi),%ebp    ;*getfield expectedModCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@8 (line 1041)

  0x0000000110df2658: cmp    %ebp,%r11d
  0x0000000110df265b: jne    0x0000000110df266d  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)

  0x0000000110df265d: add    $0x20,%rsp
  0x0000000110df2661: pop    %rbp
  0x0000000110df2662: mov    0x108(%r15),%r10
  0x0000000110df2669: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df266c: retq   
  0x0000000110df266d: mov    $0xffffff4d,%esi
  0x0000000110df2672: mov    %r11d,(%rsp)
  0x0000000110df2676: nop
  0x0000000110df2677: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df267c: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)

  0x0000000110df267e: mov    $0xfffffff6,%esi
  0x0000000110df2683: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield modCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df2688: ud2                       ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)

  0x0000000110df268a: hlt    
  0x0000000110df268b: hlt    
  0x0000000110df268c: hlt    
  0x0000000110df268d: hlt    
  0x0000000110df268e: hlt    
  0x0000000110df268f: hlt    
  0x0000000110df2690: hlt    
  0x0000000110df2691: hlt    
  0x0000000110df2692: hlt    
  0x0000000110df2693: hlt    
  0x0000000110df2694: hlt    
  0x0000000110df2695: hlt    
  0x0000000110df2696: hlt    
  0x0000000110df2697: hlt    
  0x0000000110df2698: hlt    
  0x0000000110df2699: hlt    
  0x0000000110df269a: hlt    
  0x0000000110df269b: hlt    
  0x0000000110df269c: hlt    
  0x0000000110df269d: hlt    
  0x0000000110df269e: hlt    
  0x0000000110df269f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df26a0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df26a5: callq  0x0000000110df26aa
  0x0000000110df26aa: subq   $0x5,(%rsp)
  0x0000000110df26af: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df26b4: hlt    
  0x0000000110df26b5: hlt    
  0x0000000110df26b6: hlt    
  0x0000000110df26b7: hlt    

ImmutableOopMap{}pc offsets: 92 104 Compiled method (c2)     682  103             FunctionalZipCode::isZipCodeValid (45 bytes)
 total in heap  [0x0000000110df8b10,0x0000000110dfb608] = 11000
 relocation     [0x0000000110df8c88,0x0000000110df8d58] = 208
 constants      [0x0000000110df8d60,0x0000000110df8d80] = 32
 main code      [0x0000000110df8d80,0x0000000110df9ae0] = 3424
 stub code      [0x0000000110df9ae0,0x0000000110df9b30] = 80
 oops           [0x0000000110df9b30,0x0000000110df9b78] = 72
 metadata       [0x0000000110df9b78,0x0000000110df9cf0] = 376
 scopes data    [0x0000000110df9cf0,0x0000000110dfa3e0] = 1776
 scopes pcs     [0x0000000110dfa3e0,0x0000000110dfb4c0] = 4320
 dependencies   [0x0000000110dfb4c0,0x0000000110dfb4d0] = 16
 handler table  [0x0000000110dfb4d0,0x0000000110dfb5d8] = 264
 nul chk table  [0x0000000110dfb5d8,0x0000000110dfb608] = 48
----------------------------------------------------------------------
FunctionalZipCode.isZipCodeValid(Ljava/lang/String;)Z  [0x0000000110df8d80, 0x0000000110df9b30]  3504 bytes
[Constants]
  0x0000000110df8d60 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110df8d64 (offset:    4): 0xffffffff
  0x0000000110df8d68 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110df8d6c (offset:   12): 0xf4f4f4f4
  0x0000000110df8d70 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110df8d74 (offset:   20): 0xf4f4f4f4
  0x0000000110df8d78 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110df8d7c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f169cc0} 'isZipCodeValid' '(Ljava/lang/String;)Z' in 'FunctionalZipCode'
  # this:     rsi:rsi   = 'FunctionalZipCode'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x0000000110df8d80: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110df8d84: movabs $0x800000000,%r12
  0x0000000110df8d8e: add    %r12,%r10
  0x0000000110df8d91: xor    %r12,%r12
  0x0000000110df8d94: cmp    %r10,%rax
  0x0000000110df8d97: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df8d9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df8da0: mov    %eax,-0x14000(%rsp)
  0x0000000110df8da7: push   %rbp
  0x0000000110df8da8: sub    $0x40,%rsp         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8dac: mov    %rsi,(%rsp)
  0x0000000110df8db0: mov    %rdx,0x18(%rsp)
  0x0000000110df8db5: test   %rdx,%rdx
  0x0000000110df8db8: je     0x0000000110df9701
  0x0000000110df8dbe: mov    0x118(%r15),%r13
  0x0000000110df8dc5: mov    %r13,%r10
  0x0000000110df8dc8: add    $0x10,%r10
  0x0000000110df8dcc: cmp    0x128(%r15),%r10
  0x0000000110df8dd3: jae    0x0000000110df9797  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8dd9: mov    %r10,0x118(%r15)
  0x0000000110df8de0: prefetchnta 0xc0(%r10)    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8de8: mov    $0x34bd8,%r10d     ;   {metadata('java/util/Optional')}
  0x0000000110df8dee: movabs $0x800000000,%r12
  0x0000000110df8df8: add    %r12,%r10
  0x0000000110df8dfb: xor    %r12,%r12
  0x0000000110df8dfe: mov    0xb8(%r10),%r10
  0x0000000110df8e05: mov    %r10,0x0(%r13)     ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@27 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e09: movl   $0x34bd8,0x8(%r13)  ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {metadata('java/util/Optional')}
  0x0000000110df8e11: mov    0x18(%rsp),%r10
  0x0000000110df8e16: shr    $0x3,%r10          ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8e1a: mov    %r10d,0xc(%r13)    ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8e1e: mov    0x18(%rsp),%r10
  0x0000000110df8e23: mov    %r13,%r11          ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e26: xor    %r11,%r10
  0x0000000110df8e29: shr    $0x14,%r10
  0x0000000110df8e2d: test   %r10,%r10
  0x0000000110df8e30: je     0x0000000110df8e85  ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8e32: shr    $0x9,%r11
  0x0000000110df8e36: movabs $0x110569000,%rdi
  0x0000000110df8e40: add    %r11,%rdi          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e43: cmpb   $0x20,(%rdi)
  0x0000000110df8e46: je     0x0000000110df8e85
  0x0000000110df8e48: mov    0x70(%r15),%r10    ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e4c: mov    0x80(%r15),%r11    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e53: lock addl $0x0,-0x40(%rsp)  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e59: cmpb   $0x0,(%rdi)
  0x0000000110df8e5c: je     0x0000000110df8e85  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e5e: movb   $0x0,(%rdi)
  0x0000000110df8e61: test   %r10,%r10
  0x0000000110df8e64: jne    0x0000000110df8e78  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e66: mov    %r15,%rsi
  0x0000000110df8e69: movabs $0x107aec8ce,%r10
  0x0000000110df8e73: callq  *%r10
  0x0000000110df8e76: jmp    0x0000000110df8e85
  0x0000000110df8e78: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e7d: add    $0xfffffffffffffff8,%r10  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8e81: mov    %r10,0x70(%r15)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8e85: mov    0xc(%r13),%ebp     ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8e89: test   %ebp,%ebp
  0x0000000110df8e8b: je     0x0000000110df9631
  0x0000000110df8e91: mov    $0x65040,%r11d     ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110df8e97: movabs $0x800000000,%r10
  0x0000000110df8ea1: add    %r11,%r10
  0x0000000110df8ea4: mov    0x20(%r10),%r10
  0x0000000110df8ea8: movabs $0x80005f3b8,%rax  ;   {metadata('java/util/function/Predicate')}
  0x0000000110df8eb2: cmp    %rax,%r10
  0x0000000110df8eb5: jne    0x0000000110df96b1  ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8ebb: mov    0x8(%r12,%rbp,8),%r10d  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8ec0: cmp    $0x1808,%r10d      ;   {metadata('java/lang/String')}
  0x0000000110df8ec7: jne    0x0000000110df99b2  ;*invokeinterface negate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8ecd: lea    (%r12,%rbp,8),%r14  ;*invokestatic isNullOrEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df8ed1: mov    0xc(%r14),%r11d    ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8ed5: mov    0xc(%r12,%r11,8),%ebp  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::negate@0 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; implicit exception: dispatches to 0x0000000110df99c6
  0x0000000110df8eda: movsbl 0x14(%r14),%ecx    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8edf: sar    %cl,%ebp           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df8ee1: test   %ebp,%ebp
  0x0000000110df8ee3: je     0x0000000110df98f4  ;*invokeinterface negate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df8ee9: cmp    $0x5,%ebp
  0x0000000110df8eec: jne    0x0000000110df98b6  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8ef2: mov    0x118(%r15),%rax   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8ef9: mov    %rax,%r10
  0x0000000110df8efc: add    $0x58,%r10
  0x0000000110df8f00: cmp    0x128(%r15),%r10
  0x0000000110df8f07: jae    0x0000000110df97b8  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f0d: mov    %r10,0x118(%r15)
  0x0000000110df8f14: prefetchnta 0xc0(%r10)
  0x0000000110df8f1c: mov    $0x66ca8,%r10d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110df8f22: movabs $0x800000000,%r12
  0x0000000110df8f2c: add    %r12,%r10
  0x0000000110df8f2f: xor    %r12,%r12
  0x0000000110df8f32: mov    0xb8(%r10),%r10
  0x0000000110df8f39: mov    %r10,(%rax)
  0x0000000110df8f3c: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110df8f43: movl   $0x0,0xc(%rax)     ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f4a: movq   $0x0,0x10(%rax)
  0x0000000110df8f52: movq   $0x0,0x18(%rax)
  0x0000000110df8f5a: movq   $0x0,0x20(%rax)    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f62: movl   $0x0,0x28(%rax)    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f69: movq   $0x0,0x30(%rax)
  0x0000000110df8f71: movq   $0x0,0x38(%rax)    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f79: movq   $0x0,0x40(%rax)    ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f81: movq   $0x0,0x48(%rax)
  0x0000000110df8f89: movq   $0x0,0x50(%rax)    ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df8f91: movl   $0xe1fab6ac,0x2c(%rax)  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110df8f98: mov    %rax,%rbx          ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df8f9b: mov    %rbx,%r10          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8f9e: movabs $0x70fd5b560,%r11  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110df8fa8: mov    %r11,%r8
  0x0000000110df8fab: xor    %r10,%r8
  0x0000000110df8fae: shr    $0x14,%r8
  0x0000000110df8fb2: test   %r8,%r8
  0x0000000110df8fb5: je     0x0000000110df9050  ;*invokevirtual isPresent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8fbb: shr    $0x9,%r10
  0x0000000110df8fbf: movabs $0x110569000,%rdi
  0x0000000110df8fc9: add    %r10,%rdi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fcc: cmpb   $0x20,(%rdi)
  0x0000000110df8fcf: je     0x0000000110df9047
  0x0000000110df8fd1: mov    0x70(%r15),%r10    ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fd5: mov    0x80(%r15),%r11    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fdc: lock addl $0x0,-0x40(%rsp)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fe2: cmpb   $0x0,(%rdi)
  0x0000000110df8fe5: je     0x0000000110df900e  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@16 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fe7: movb   $0x0,(%rdi)
  0x0000000110df8fea: test   %r10,%r10
  0x0000000110df8fed: je     0x0000000110df8ffe  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8fef: mov    %rdi,-0x8(%r11,%r10,1)  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8ff4: add    $0xfffffffffffffff8,%r10  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8ff8: mov    %r10,0x70(%r15)    ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@5 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df8ffc: jmp    0x0000000110df900e  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df8ffe: mov    %r15,%rsi
  0x0000000110df9001: movabs $0x107aec8ce,%r10
  0x0000000110df900b: callq  *%r10              ;*invokestatic isNullOrEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df900e: movl   $0x0,0x1c(%rbx)
  0x0000000110df9015: mov    0x2c(%rbx),%r10d
  0x0000000110df9019: movl   $0x0,0xc(%rbx)
  0x0000000110df9020: movl   $0x1,0x18(%rbx)
  0x0000000110df9027: movl   $0x0,0x10(%rbx)
  0x0000000110df902e: movl   $0x0,0x14(%rbx)    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9035: test   %r10d,%r10d
  0x0000000110df9038: je     0x0000000110df998a  ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df903e: mov    %r10,%r11
  0x0000000110df9041: shl    $0x3,%r11
  0x0000000110df9045: jmp    0x0000000110df9057
  0x0000000110df9047: movl   $0x1,0x18(%rbx)
  0x0000000110df904e: jmp    0x0000000110df9057
  0x0000000110df9050: movl   $0x1,0x18(%rbx)    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9057: mov    0xc(%r11),%r10d    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@0 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df905b: mov    0xc(%r12,%r10,8),%ebp  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; implicit exception: dispatches to 0x0000000110df99d2
  0x0000000110df9060: test   %ebp,%ebp
  0x0000000110df9062: jbe    0x0000000110df9906  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9068: mov    %rbx,0x28(%rsp)
  0x0000000110df906d: mov    %r14,0x20(%rsp)
  0x0000000110df9072: mov    %r13,0x10(%rsp)    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@12 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9077: mov    %rbx,%rsi
  0x0000000110df907a: nop
  0x0000000110df907b: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110df9080: mov    0x28(%rsp),%rbx
  0x0000000110df9085: movzbl 0x28(%rbx),%ebp    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9089: test   %ebp,%ebp
  0x0000000110df908b: je     0x0000000110df992e
  0x0000000110df9091: mov    0x118(%r15),%rax
  0x0000000110df9098: mov    %rax,%r10
  0x0000000110df909b: add    $0x48,%r10
  0x0000000110df909f: cmp    0x128(%r15),%r10
  0x0000000110df90a6: jae    0x0000000110df97e7  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df90ac: mov    %r10,0x118(%r15)
  0x0000000110df90b3: prefetchnta 0xc0(%r10)
  0x0000000110df90bb: mov    $0x6aaa8,%r11d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110df90c1: movabs $0x800000000,%r10
  0x0000000110df90cb: add    %r11,%r10
  0x0000000110df90ce: mov    0xb8(%r10),%r10
  0x0000000110df90d5: mov    %r10,(%rax)
  0x0000000110df90d8: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110df90df: movl   $0x0,0xc(%rax)
  0x0000000110df90e6: movq   $0x0,0x10(%rax)
  0x0000000110df90ee: movq   $0x0,0x28(%rax)
  0x0000000110df90f6: movq   $0x0,0x38(%rax)
  0x0000000110df90fe: movq   $0x0,0x40(%rax)    ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9106: mov    0x18(%rbx),%edx    ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@4 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9109: movabs $0xffffffff00000000,%r10
  0x0000000110df9113: mov    %r10,0x18(%rax)    ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@39 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9117: mov    %r10,0x20(%rax)    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df911b: movq   $0x1000000,0x30(%rax)  ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@4 (line 61)

  0x0000000110df9123: mov    %rax,0x28(%rsp)
  0x0000000110df9128: mov    $0xa,%r10d
  0x0000000110df912e: cmp    $0xa,%edx
  0x0000000110df9131: cmovl  %r10d,%edx
  0x0000000110df9135: shl    %edx               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9137: cmp    $0x40000,%edx
  0x0000000110df913d: ja     0x0000000110df987b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@4 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9143: movslq %edx,%rcx          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@5 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9146: mov    0x20(%rsp),%r10
  0x0000000110df914b: shr    $0x3,%r10          ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df914f: mov    %r10d,0x3c(%rax)
  0x0000000110df9153: mov    %rbx,%r10
  0x0000000110df9156: shr    $0x3,%r10
  0x0000000110df915a: mov    %r10d,0x34(%rax)   ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df915e: cmp    $0x40000,%edx
  0x0000000110df9164: ja     0x0000000110df9848  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df916a: mov    0x118(%r15),%r9    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9171: shl    $0x2,%rcx
  0x0000000110df9175: add    $0x17,%rcx         ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9179: mov    %rcx,%r10
  0x0000000110df917c: and    $0xfffffffffffffff8,%r10
  0x0000000110df9180: mov    %r9,%r11
  0x0000000110df9183: add    %r10,%r11
  0x0000000110df9186: cmp    0x128(%r15),%r11
  0x0000000110df918d: jae    0x0000000110df9848  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9193: mov    %r11,0x118(%r15)   ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df919a: prefetchnta 0xc0(%r11)
  0x0000000110df91a2: movq   $0x1,(%r9)
  0x0000000110df91a9: prefetchnta 0x100(%r11)   ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df91b1: movl   $0xc10,0x8(%r9)    ;   {metadata({type array int})}
  0x0000000110df91b9: mov    %edx,0xc(%r9)      ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df91bd: prefetchnta 0x140(%r11)   ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df91c5: mov    %r9,%rdi
  0x0000000110df91c8: add    $0x10,%rdi
  0x0000000110df91cc: prefetchnta 0x180(%r11)   ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df91d4: shr    $0x3,%rcx
  0x0000000110df91d8: add    $0xfffffffffffffffe,%rcx
  0x0000000110df91dc: xor    %rax,%rax
  0x0000000110df91df: cmp    $0x8,%rcx
  0x0000000110df91e3: jg     0x0000000110df91f5
  0x0000000110df91e5: dec    %rcx
  0x0000000110df91e8: js     0x0000000110df91fc
  0x0000000110df91ea: mov    %rax,(%rdi,%rcx,8)
  0x0000000110df91ee: dec    %rcx
  0x0000000110df91f1: jge    0x0000000110df91ea
  0x0000000110df91f3: jmp    0x0000000110df91fc
  0x0000000110df91f5: shl    $0x3,%rcx
  0x0000000110df91f9: rep rex.W stos %al,%es:(%rdi)  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df91fc: mov    0x28(%rsp),%r10    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9201: mov    %r9,%r8
  0x0000000110df9204: shr    $0x3,%r8
  0x0000000110df9208: mov    0x28(%rsp),%r11
  0x0000000110df920d: mov    %r8d,0x38(%r11)    ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9211: mov    %r9,%r11
  0x0000000110df9214: xor    %r10,%r11
  0x0000000110df9217: shr    $0x14,%r11
  0x0000000110df921b: test   %r11,%r11
  0x0000000110df921e: je     0x0000000110df9273  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9220: shr    $0x9,%r10
  0x0000000110df9224: movabs $0x110569000,%rdi
  0x0000000110df922e: add    %r10,%rdi          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9231: cmpb   $0x20,(%rdi)
  0x0000000110df9234: je     0x0000000110df9273
  0x0000000110df9236: mov    0x70(%r15),%r10    ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df923a: mov    0x80(%r15),%r11    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9241: lock addl $0x0,-0x40(%rsp)  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9247: cmpb   $0x0,(%rdi)
  0x0000000110df924a: je     0x0000000110df9273  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df924c: movb   $0x0,(%rdi)        ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df924f: test   %r10,%r10
  0x0000000110df9252: jne    0x0000000110df9266  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9254: mov    %r15,%rsi
  0x0000000110df9257: movabs $0x107aec8ce,%r10
  0x0000000110df9261: callq  *%r10              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9264: jmp    0x0000000110df9273
  0x0000000110df9266: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df926b: add    $0xfffffffffffffff8,%r10  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df926f: mov    %r10,0x70(%r15)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9273: mov    0x1c(%rbx),%edx    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@16 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9276: cmp    $0x40000,%edx
  0x0000000110df927c: ja     0x0000000110df9873  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@4 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9282: movslq %edx,%rcx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@13 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df9285: cmp    $0x40000,%edx
  0x0000000110df928b: ja     0x0000000110df9804  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9291: mov    0x118(%r15),%rbp   ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9298: shl    $0x2,%rcx
  0x0000000110df929c: add    $0x17,%rcx         ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df92a0: mov    %rcx,%r10
  0x0000000110df92a3: and    $0xfffffffffffffff8,%r10
  0x0000000110df92a7: mov    %rbp,%r11
  0x0000000110df92aa: add    %r10,%r11
  0x0000000110df92ad: cmp    0x128(%r15),%r11
  0x0000000110df92b4: jae    0x0000000110df9804
  0x0000000110df92ba: mov    %r11,0x118(%r15)
  0x0000000110df92c1: prefetchnta 0xc0(%r11)
  0x0000000110df92c9: movq   $0x1,0x0(%rbp)
  0x0000000110df92d1: prefetchnta 0x100(%r11)
  0x0000000110df92d9: movl   $0xc10,0x8(%rbp)   ;   {metadata({type array int})}
  0x0000000110df92e0: mov    %edx,0xc(%rbp)
  0x0000000110df92e3: prefetchnta 0x140(%r11)
  0x0000000110df92eb: mov    %rbp,%rdi
  0x0000000110df92ee: add    $0x10,%rdi
  0x0000000110df92f2: prefetchnta 0x180(%r11)
  0x0000000110df92fa: shr    $0x3,%rcx
  0x0000000110df92fe: add    $0xfffffffffffffffe,%rcx
  0x0000000110df9302: xor    %rax,%rax
  0x0000000110df9305: cmp    $0x8,%rcx
  0x0000000110df9309: jg     0x0000000110df931b
  0x0000000110df930b: dec    %rcx
  0x0000000110df930e: js     0x0000000110df9322
  0x0000000110df9310: mov    %rax,(%rdi,%rcx,8)
  0x0000000110df9314: dec    %rcx
  0x0000000110df9317: jge    0x0000000110df9310
  0x0000000110df9319: jmp    0x0000000110df9322
  0x0000000110df931b: shl    $0x3,%rcx
  0x0000000110df931f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9322: cmpb   $0x0,0x30(%r15)
  0x0000000110df9327: jne    0x0000000110df971f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df932d: mov    %rbp,%r10
  0x0000000110df9330: shr    $0x3,%r10
  0x0000000110df9334: mov    0x28(%rsp),%r11
  0x0000000110df9339: mov    %r10d,0x40(%r11)   ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df933d: mov    %r11,%r10          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9340: mov    %rbp,%r11
  0x0000000110df9343: xor    %r10,%r11
  0x0000000110df9346: shr    $0x14,%r11
  0x0000000110df934a: test   %r11,%r11
  0x0000000110df934d: je     0x0000000110df93a2  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df934f: shr    $0x9,%r10
  0x0000000110df9353: movabs $0x110569000,%rdi
  0x0000000110df935d: add    %r10,%rdi          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9360: cmpb   $0x20,(%rdi)
  0x0000000110df9363: je     0x0000000110df93a2
  0x0000000110df9365: mov    0x80(%r15),%r10    ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df936c: mov    0x70(%r15),%r11    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9370: lock addl $0x0,-0x40(%rsp)  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9376: cmpb   $0x0,(%rdi)
  0x0000000110df9379: je     0x0000000110df93a2  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df937b: movb   $0x0,(%rdi)        ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df937e: test   %r11,%r11
  0x0000000110df9381: jne    0x0000000110df9395  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9383: mov    %r15,%rsi
  0x0000000110df9386: movabs $0x107aec8ce,%r10
  0x0000000110df9390: callq  *%r10              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9393: jmp    0x0000000110df93a2
  0x0000000110df9395: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df939a: add    $0xfffffffffffffff8,%r11  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df939e: mov    %r11,0x70(%r15)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df93a2: mov    0x14(%rbx),%edx    ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df93a5: cmp    $0x40000,%edx
  0x0000000110df93ab: ja     0x0000000110df986b  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@12 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df93b1: movslq %edx,%rcx          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@24 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df93b4: cmp    $0x40000,%edx
  0x0000000110df93ba: ja     0x0000000110df982b  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df93c0: mov    0x118(%r15),%rbx   ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df93c7: shl    $0x2,%rcx
  0x0000000110df93cb: add    $0x17,%rcx         ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df93cf: mov    %rcx,%r10
  0x0000000110df93d2: and    $0xfffffffffffffff8,%r10
  0x0000000110df93d6: mov    %rbx,%r11
  0x0000000110df93d9: add    %r10,%r11
  0x0000000110df93dc: cmp    0x128(%r15),%r11
  0x0000000110df93e3: jae    0x0000000110df982b
  0x0000000110df93e9: mov    %r11,0x118(%r15)
  0x0000000110df93f0: prefetchnta 0xc0(%r11)
  0x0000000110df93f8: movq   $0x1,(%rbx)
  0x0000000110df93ff: prefetchnta 0x100(%r11)
  0x0000000110df9407: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110df940e: mov    %edx,0xc(%rbx)
  0x0000000110df9411: prefetchnta 0x140(%r11)
  0x0000000110df9419: mov    %rbx,%rdi
  0x0000000110df941c: add    $0x10,%rdi
  0x0000000110df9420: prefetchnta 0x180(%r11)
  0x0000000110df9428: shr    $0x3,%rcx
  0x0000000110df942c: add    $0xfffffffffffffffe,%rcx
  0x0000000110df9430: xor    %rax,%rax
  0x0000000110df9433: cmp    $0x8,%rcx
  0x0000000110df9437: jg     0x0000000110df9449
  0x0000000110df9439: dec    %rcx
  0x0000000110df943c: js     0x0000000110df9450
  0x0000000110df943e: mov    %rax,(%rdi,%rcx,8)
  0x0000000110df9442: dec    %rcx
  0x0000000110df9445: jge    0x0000000110df943e
  0x0000000110df9447: jmp    0x0000000110df9450
  0x0000000110df9449: shl    $0x3,%rcx
  0x0000000110df944d: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9450: cmpb   $0x0,0x30(%r15)
  0x0000000110df9455: jne    0x0000000110df975b  ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df945b: mov    %rbx,%r9
  0x0000000110df945e: shr    $0x3,%r9           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@24 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9462: mov    0x28(%rsp),%r10
  0x0000000110df9467: mov    %r9d,0x44(%r10)    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df946b: mov    %rbx,%r11
  0x0000000110df946e: xor    %r10,%r11
  0x0000000110df9471: shr    $0x14,%r11
  0x0000000110df9475: test   %r11,%r11
  0x0000000110df9478: je     0x0000000110df94d6  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df947a: shr    $0x9,%r10
  0x0000000110df947e: movabs $0x110569000,%rdi
  0x0000000110df9488: add    %r10,%rdi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df948b: cmpb   $0x20,(%rdi)
  0x0000000110df948e: je     0x0000000110df94d6
  0x0000000110df9490: mov    0x80(%r15),%r10    ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9497: mov    0x70(%r15),%r11
  0x0000000110df949b: lock addl $0x0,-0x40(%rsp)
  0x0000000110df94a1: cmpb   $0x0,(%rdi)
  0x0000000110df94a4: je     0x0000000110df94cd
  0x0000000110df94a6: movb   $0x0,(%rdi)
  0x0000000110df94a9: test   %r11,%r11
  0x0000000110df94ac: je     0x0000000110df94bd  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94ae: mov    %rdi,-0x8(%r10,%r11,1)  ;*invokevirtual matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94b3: add    $0xfffffffffffffff8,%r11  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94b7: mov    %r11,0x70(%r15)    ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94bb: jmp    0x0000000110df94cd  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94bd: mov    %r15,%rsi
  0x0000000110df94c0: movabs $0x107aec8ce,%r10
  0x0000000110df94ca: callq  *%r10              ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@7 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df94cd: mov    0x28(%rsp),%r10
  0x0000000110df94d2: mov    0x44(%r10),%r9d    ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)
                                                ; - java.util.regex.Matcher::<init>@1 (line 242)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df94d6: mov    0x28(%rsp),%r10
  0x0000000110df94db: movl   $0xffffffff,0x24(%r10)  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df94e3: mov    0x38(%r10),%r8d    ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df94e7: movl   $0xffffffff,0x1c(%r10)
  0x0000000110df94ef: movl   $0x0,0x20(%r10)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df94f7: mov    0xc(%r12,%r8,8),%r10d  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                ; - FunctionalZipCode::isZipCodeValid@4 (line 61)
                                                ; implicit exception: dispatches to 0x0000000110df99fa
  0x0000000110df94fc: test   %r10d,%r10d
  0x0000000110df94ff: jbe    0x0000000110df95af  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@24 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9505: mov    %r10d,%ecx
  0x0000000110df9508: dec    %ecx
  0x0000000110df950a: cmp    %r10d,%ecx
  0x0000000110df950d: jae    0x0000000110df9883  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9513: lea    (%r12,%r8,8),%rcx
  0x0000000110df9517: mov    %ecx,%r8d
  0x0000000110df951a: shr    $0x2,%r8d
  0x0000000110df951e: and    $0x3,%r8d
  0x0000000110df9522: mov    $0xffffffff,%r11d
  0x0000000110df9528: sub    %r8d,%r11d
  0x0000000110df952b: and    $0x3,%r11d
  0x0000000110df952f: inc    %r11d
  0x0000000110df9532: cmp    %r10d,%r11d
  0x0000000110df9535: cmovg  %r10d,%r11d
  0x0000000110df9539: xor    %edx,%edx
  0x0000000110df953b: movl   $0xffffffff,0x10(%rcx,%rdx,4)
  0x0000000110df9543: inc    %edx               ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9545: cmp    %r11d,%edx
  0x0000000110df9548: jl     0x0000000110df953b  ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df954a: mov    %r10d,%ebx
  0x0000000110df954d: add    $0xfffffffd,%ebx   ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9550: cmp    %ebx,%edx
  0x0000000110df9552: jge    0x0000000110df959b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9554: vmovq  -0x7fc(%rip),%xmm0        # 0x0000000110df8d60
                                                ;   {section_word}
  0x0000000110df955c: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110df9560: mov    $0xfa0,%edi
  0x0000000110df9565: mov    %r10d,%r8d
  0x0000000110df9568: sub    %edx,%r8d
  0x0000000110df956b: add    $0xfffffffd,%r8d
  0x0000000110df956f: cmp    %r8d,%edi
  0x0000000110df9572: mov    $0xfa0,%esi
  0x0000000110df9577: cmovg  %r8d,%esi
  0x0000000110df957b: add    %edx,%esi
  0x0000000110df957d: data16 xchg %ax,%ax       ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9580: vmovdqu %xmm0,0x10(%rcx,%rdx,4)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9586: add    $0x4,%edx          ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9589: cmp    %esi,%edx
  0x0000000110df958b: jl     0x0000000110df9580  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df958d: mov    0x108(%r15),%r14   ; ImmutableOopMap{r9=NarrowOop rcx=Oop [0]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9594: test   %eax,(%r14)        ;*invokestatic lambda$isZipCodeValid$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {poll}
  0x0000000110df9597: cmp    %ebx,%edx
  0x0000000110df9599: jl     0x0000000110df9565  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df959b: cmp    %r10d,%edx
  0x0000000110df959e: jge    0x0000000110df95af  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df95a0: movl   $0xffffffff,0x10(%rcx,%rdx,4)
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df95a8: inc    %edx
  0x0000000110df95aa: cmp    %r10d,%edx
  0x0000000110df95ad: jl     0x0000000110df95a0  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df95af: mov    0x28(%rsp),%r10
  0x0000000110df95b4: mov    0x40(%r10),%r10d   ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df95b8: mov    0xc(%r12,%r10,8),%ebp  ;*invokestatic not {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; implicit exception: dispatches to 0x0000000110df9a16
  0x0000000110df95bd: test   %ebp,%ebp
  0x0000000110df95bf: ja     0x0000000110df9946  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df95c5: mov    0xc(%r12,%r9,8),%ebp  ;*invokestatic not {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; implicit exception: dispatches to 0x0000000110df9a32
  0x0000000110df95ca: test   %ebp,%ebp
  0x0000000110df95cc: ja     0x0000000110df995e  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df95d2: mov    0x28(%rsp),%r10
  0x0000000110df95d7: movl   $0x0,0x28(%r10)
  0x0000000110df95df: mov    0x3c(%r10),%r11d
  0x0000000110df95e3: movl   $0x0,0xc(%r10)
  0x0000000110df95eb: mov    %r11,%rsi
  0x0000000110df95ee: shl    $0x3,%rsi          ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df95f2: data16 xchg %ax,%ax
  0x0000000110df95f5: movabs $0xffffffffffffffff,%rax
  0x0000000110df95ff: callq  0x0000000110d90180  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {virtual_call}
  0x0000000110df9604: mov    0x28(%rsp),%r10
  0x0000000110df9609: mov    %eax,0x10(%r10)    ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df960d: incl   0x2c(%r10)
  0x0000000110df9611: mov    0xc(%r10),%edx
  0x0000000110df9615: mov    $0x1,%ecx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df961a: mov    0x28(%rsp),%rsi
  0x0000000110df961f: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110df9624: test   %eax,%eax
  0x0000000110df9626: je     0x0000000110df96f2  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110df962c: mov    0x10(%rsp),%r13    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9631: mov    0xc(%r13),%r10d
  0x0000000110df9635: test   %r10d,%r10d
  0x0000000110df9638: jne    0x0000000110df9690  ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df963a: mov    (%rsp),%r10
  0x0000000110df963e: mov    0xc(%r10),%r10d
  0x0000000110df9642: test   %r10d,%r10d
  0x0000000110df9645: je     0x0000000110df9976  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df964b: mov    0x18(%rsp),%r10
  0x0000000110df9650: test   %r10,%r10
  0x0000000110df9653: je     0x0000000110df9710  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9659: mov    %r10,%rcx
  0x0000000110df965c: movabs $0x70fd69f08,%rdx  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@1
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ;   {oop("{}"{0x000000070fd69f08})}
  0x0000000110df9666: movabs $0x70fd69ec8,%rsi  ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ;   {oop("invalid zip code: {}"{0x000000070fd69ec8})}
  0x0000000110df9670: data16 xchg %ax,%ax
  0x0000000110df9673: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=1}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ;   {optimized virtual_call}
  0x0000000110df9678: movabs $0x70fd44b40,%r10  ;   {oop(a 'java/lang/Class'{0x000000070fd44b40} = 'Logger')}
  0x0000000110df9682: incl   0x70(%r10)         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9686: movabs $0x70ff4b4c8,%r13  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110df9690: mov    0xc(%r13),%r10d
  0x0000000110df9694: shl    $0x3,%r10
  0x0000000110df9698: test   %r10,%r10
  0x0000000110df969b: setne  %al
  0x0000000110df969e: movzbl %al,%eax           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df96a1: add    $0x40,%rsp
  0x0000000110df96a5: pop    %rbp
  0x0000000110df96a6: mov    0x108(%r15),%r10
  0x0000000110df96ad: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df96b0: retq                      ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::ofNullable@1 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df96b1: movabs $0x800065040,%rsi  ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110df96bb: push   %rax
  0x0000000110df96bc: mov    %rax,%rax
  0x0000000110df96bf: mov    0x28(%rsi),%rdi
  0x0000000110df96c3: mov    (%rdi),%ecx
  0x0000000110df96c5: add    $0x8,%rdi
  0x0000000110df96c9: test   %rax,%rax
  0x0000000110df96cc: repnz scas %es:(%rdi),%rax
  0x0000000110df96cf: pop    %rax
  0x0000000110df96d0: jne    0x0000000110df96da
  0x0000000110df96d6: mov    %rax,0x20(%rsi)
  0x0000000110df96da: je     0x0000000110df8ebb  ;*invokeinterface negate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df96e0: mov    $0xffffffdf,%esi   ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df96e5: mov    %r13,0x10(%rsp)
  0x0000000110df96ea: nop
  0x0000000110df96eb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop [24]=Oop }
                                                ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df96f0: ud2    
  0x0000000110df96f2: movabs $0x70ff4b4c8,%r13  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110df96fc: jmpq   0x0000000110df9631
  0x0000000110df9701: movabs $0x70ff4b4c8,%r13  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110df970b: jmpq   0x0000000110df8e85
  0x0000000110df9710: movabs $0x70ff049f0,%rcx  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {oop("null"{0x000000070ff049f0})}
  0x0000000110df971a: jmpq   0x0000000110df965c
  0x0000000110df971f: mov    0x28(%rsp),%r10
  0x0000000110df9724: mov    0x40(%r10),%r11d   ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9728: test   %r11d,%r11d
  0x0000000110df972b: je     0x0000000110df932d  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9731: mov    0x38(%r15),%r10
  0x0000000110df9735: mov    %r11,%rdi
  0x0000000110df9738: shl    $0x3,%rdi          ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df973c: test   %r10,%r10
  0x0000000110df973f: je     0x0000000110df98ca  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9745: mov    0x48(%r15),%r11
  0x0000000110df9749: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df974e: add    $0xfffffffffffffff8,%r10  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9752: mov    %r10,0x38(%r15)    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@1 (line 1406)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9756: jmpq   0x0000000110df932d
  0x0000000110df975b: mov    0x28(%rsp),%r10
  0x0000000110df9760: mov    0x44(%r10),%r10d   ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9764: test   %r10d,%r10d
  0x0000000110df9767: je     0x0000000110df945b
  0x0000000110df976d: mov    0x38(%r15),%r11
  0x0000000110df9771: mov    %r10,%rdi
  0x0000000110df9774: shl    $0x3,%rdi
  0x0000000110df9778: test   %r11,%r11
  0x0000000110df977b: je     0x0000000110df98df
  0x0000000110df9781: mov    0x48(%r15),%r10
  0x0000000110df9785: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110df978a: add    $0xfffffffffffffff8,%r11  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df978e: mov    %r11,0x38(%r15)    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@0 (line 219)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9792: jmpq   0x0000000110df945b
  0x0000000110df9797: movabs $0x800034bd8,%rsi  ;   {metadata('java/util/Optional')}
  0x0000000110df97a1: mov    (%rsp),%rbp
  0x0000000110df97a5: mov    %rdx,0x10(%rsp)
  0x0000000110df97aa: nop
  0x0000000110df97ab: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df97b0: mov    %rax,%r13
  0x0000000110df97b3: jmpq   0x0000000110df8e11
  0x0000000110df97b8: mov    %r14,0x10(%rsp)
  0x0000000110df97bd: mov    %r13,0x8(%rsp)
  0x0000000110df97c2: mov    0x18(%rsp),%rbp
  0x0000000110df97c7: movabs $0x800066ca8,%rsi  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {metadata('java/util/regex/Pattern')}
  0x0000000110df97d1: xchg   %ax,%ax
  0x0000000110df97d3: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df97d8: mov    0x8(%rsp),%r13
  0x0000000110df97dd: mov    0x10(%rsp),%r14
  0x0000000110df97e2: jmpq   0x0000000110df8f91
  0x0000000110df97e7: mov    %rbx,%rbp
  0x0000000110df97ea: movabs $0x80006aaa8,%rsi  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@63 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {metadata('java/util/regex/Matcher')}
  0x0000000110df97f4: data16 xchg %ax,%ax
  0x0000000110df97f7: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df97fc: mov    %rbp,%rbx
  0x0000000110df97ff: jmpq   0x0000000110df9106  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9804: rex.W pushq 0x28(%rsp)
  0x0000000110df9809: rex.W popq 0x8(%rsp)
  0x0000000110df980e: mov    %rbx,%rbp          ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9811: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110df981b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110df9820: mov    %rbp,%rbx
  0x0000000110df9823: mov    %rax,%rbp
  0x0000000110df9826: jmpq   0x0000000110df9322  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df982b: mov    0x28(%rsp),%rbp
  0x0000000110df9830: movabs $0x80006af30,%rsi  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110df983a: nop
  0x0000000110df983b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110df9840: mov    %rax,%rbx
  0x0000000110df9843: jmpq   0x0000000110df9450  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9848: mov    %rax,0x8(%rsp)
  0x0000000110df984d: mov    %rbx,%rbp          ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110df9850: movabs $0x800000c10,%rsi  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {metadata({type array int})}
  0x0000000110df985a: nop
  0x0000000110df985b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110df9860: mov    %rbp,%rbx
  0x0000000110df9863: mov    %rax,%r9
  0x0000000110df9866: jmpq   0x0000000110df91fc
  0x0000000110df986b: movslq %edx,%rcx
  0x0000000110df986e: jmpq   0x0000000110df93b4
  0x0000000110df9873: movslq %edx,%rcx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9876: jmpq   0x0000000110df9285
  0x0000000110df987b: movslq %edx,%rcx          ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df987e: jmpq   0x0000000110df9146  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9883: mov    $0xffffff7e,%esi   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                ; - FunctionalZipCode::isZipCodeValid@4 (line 61)

  0x0000000110df9888: mov    (%rsp),%rbp
  0x0000000110df988c: mov    0x18(%rsp),%r11
  0x0000000110df9891: mov    %r11,(%rsp)
  0x0000000110df9895: mov    0x10(%rsp),%r11
  0x0000000110df989a: mov    %r11,0x8(%rsp)
  0x0000000110df989f: rex.W pushq 0x28(%rsp)
  0x0000000110df98a4: rex.W popq 0x10(%rsp)
  0x0000000110df98a9: mov    %r10d,0x20(%rsp)
  0x0000000110df98ae: nop
  0x0000000110df98af: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df98b4: ud2    
  0x0000000110df98b6: mov    $0xffffff4d,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98bb: mov    %r13,0x10(%rsp)
  0x0000000110df98c0: data16 xchg %ax,%ax
  0x0000000110df98c3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@5 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df98c8: ud2                       ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98ca: mov    %r15,%rsi
  0x0000000110df98cd: movabs $0x107aec8aa,%r10
  0x0000000110df98d7: callq  *%r10              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98da: jmpq   0x0000000110df932d  ;*invokestatic matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98df: mov    %r15,%rsi
  0x0000000110df98e2: movabs $0x107aec8aa,%r10
  0x0000000110df98ec: callq  *%r10              ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98ef: jmpq   0x0000000110df945b
  0x0000000110df98f4: mov    $0xffffff4d,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df98f9: mov    %r13,0x10(%rsp)
  0x0000000110df98fe: nop
  0x0000000110df98ff: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9904: ud2                       ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9906: mov    $0xffffff4d,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df990b: rex.W pushq 0x18(%rsp)
  0x0000000110df9910: rex.W popq 0x8(%rsp)
  0x0000000110df9915: mov    %r13,0x10(%rsp)
  0x0000000110df991a: mov    %r14,0x18(%rsp)
  0x0000000110df991f: mov    %rbx,0x28(%rsp)
  0x0000000110df9924: data16 xchg %ax,%ax
  0x0000000110df9927: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df992c: ud2    
  0x0000000110df992e: mov    $0xffffff4d,%esi   ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9933: rex.W pushq 0x18(%rsp)
  0x0000000110df9938: rex.W popq 0x8(%rsp)
  0x0000000110df993d: xchg   %ax,%ax
  0x0000000110df993f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9944: ud2                       ;*invokestatic not {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9946: mov    $0xffffff4d,%esi   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df994b: rex.W pushq 0x18(%rsp)
  0x0000000110df9950: rex.W popq 0x8(%rsp)
  0x0000000110df9955: xchg   %ax,%ax
  0x0000000110df9957: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df995c: ud2                       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df995e: mov    $0xffffff4d,%esi   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9963: rex.W pushq 0x18(%rsp)
  0x0000000110df9968: rex.W popq 0x8(%rsp)
  0x0000000110df996d: xchg   %ax,%ax
  0x0000000110df996f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9974: ud2                       ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9976: mov    $0xfffffff6,%esi   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df997b: mov    0x18(%rsp),%rbp
  0x0000000110df9980: data16 xchg %ax,%ax
  0x0000000110df9983: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9988: ud2                       ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df998a: mov    $0xfffffff6,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df998f: mov    (%rsp),%rbp
  0x0000000110df9993: rex.W pushq 0x18(%rsp)
  0x0000000110df9998: rex.W popq (%rsp)
  0x0000000110df999c: mov    %r13,0x8(%rsp)
  0x0000000110df99a1: mov    %r14,0x10(%rsp)
  0x0000000110df99a6: mov    %rbx,0x20(%rsp)
  0x0000000110df99ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df99b0: ud2    
  0x0000000110df99b2: mov    $0xffffffde,%esi   ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df99b7: mov    %r13,0x10(%rsp)
  0x0000000110df99bc: data16 xchg %ax,%ax
  0x0000000110df99bf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop [24]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df99c4: ud2                       ;*synchronization entry
                                                ; - FunctionalZipCode::isZipCodeValid@-1 (line 61)

  0x0000000110df99c6: mov    $0xfffffff6,%esi
  0x0000000110df99cb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df99d0: ud2                       ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df99d2: mov    $0xfffffff6,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df99d7: mov    (%rsp),%rbp
  0x0000000110df99db: rex.W pushq 0x18(%rsp)
  0x0000000110df99e0: rex.W popq (%rsp)
  0x0000000110df99e4: mov    %r13,0x8(%rsp)
  0x0000000110df99e9: mov    %r14,0x10(%rsp)
  0x0000000110df99ee: mov    %rbx,0x20(%rsp)
  0x0000000110df99f3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df99f8: ud2                       ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                ; - FunctionalZipCode::isZipCodeValid@4 (line 61)

  0x0000000110df99fa: mov    $0xfffffff6,%esi   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df99ff: mov    (%rsp),%rbp
  0x0000000110df9a03: mov    0x10(%rsp),%r10
  0x0000000110df9a08: mov    %r10,0x8(%rsp)
  0x0000000110df9a0d: xchg   %ax,%ax
  0x0000000110df9a0f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [40]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9a14: ud2                       ;*invokestatic not {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9a16: mov    $0xfffffff6,%esi   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9a1b: mov    (%rsp),%rbp
  0x0000000110df9a1f: mov    0x10(%rsp),%r10
  0x0000000110df9a24: mov    %r10,0x8(%rsp)
  0x0000000110df9a29: xchg   %ax,%ax
  0x0000000110df9a2b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [40]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9a30: ud2                       ;*invokestatic not {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9a32: mov    $0xfffffff6,%esi   ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9a37: mov    (%rsp),%rbp
  0x0000000110df9a3b: mov    0x10(%rsp),%r10
  0x0000000110df9a40: mov    %r10,0x8(%rsp)
  0x0000000110df9a45: xchg   %ax,%ax
  0x0000000110df9a47: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [40]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9a4c: ud2                       ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ; - java.util.Optional::<init>@6 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9a4e: mov    %rax,%rsi
  0x0000000110df9a51: jmp    0x0000000110df9ac8  ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@6 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9a53: mov    %rax,%rsi
  0x0000000110df9a56: jmp    0x0000000110df9ac8
  0x0000000110df9a58: jmp    0x0000000110df9ac0  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::ofNullable@14 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9a5a: jmp    0x0000000110df9ac0  ;*synchronization entry
                                                ; - FunctionalZipCode::isZipCodeValid@-1 (line 61)

  0x0000000110df9a5c: jmp    0x0000000110df9ac0  ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@6 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9a5e: mov    %rax,%rsi
  0x0000000110df9a61: jmp    0x0000000110df9ac8
  0x0000000110df9a63: mov    0x8(%rax),%r11d
  0x0000000110df9a67: cmp    $0x5728,%r11d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110df9a6e: jne    0x0000000110df9ab6  ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110df9a70: movabs $0x70fc0b3a8,%rdx  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@12 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110df9a7a: mov    0x28(%rsp),%rsi
  0x0000000110df9a7f: mov    (%rsp),%rbp
  0x0000000110df9a83: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110df9a88: mov    $0xffffffec,%esi
  0x0000000110df9a8d: mov    0x18(%rsp),%r11
  0x0000000110df9a92: mov    %r11,(%rsp)
  0x0000000110df9a96: mov    0x10(%rsp),%r11
  0x0000000110df9a9b: mov    %r11,0x8(%rsp)
  0x0000000110df9aa0: mov    0x20(%rsp),%r11
  0x0000000110df9aa5: mov    %r11,0x10(%rsp)
  0x0000000110df9aaa: mov    %rax,0x20(%rsp)
  0x0000000110df9aaf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df9ab4: ud2    
  0x0000000110df9ab6: mov    %rax,%rsi
  0x0000000110df9ab9: jmp    0x0000000110df9ac8
  0x0000000110df9abb: mov    %rax,%rsi
  0x0000000110df9abe: jmp    0x0000000110df9ac8  ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@6 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9ac0: mov    %rax,%rsi
  0x0000000110df9ac3: jmp    0x0000000110df9ac8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)
                                                ; - java.util.Optional::<init>@6 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110df9ac5: mov    %rax,%rsi          ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110df9ac8: add    $0x40,%rsp
  0x0000000110df9acc: pop    %rbp
  0x0000000110df9acd: jmpq   0x0000000110dc8700  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df9ad2: hlt    
  0x0000000110df9ad3: hlt    
  0x0000000110df9ad4: hlt    
  0x0000000110df9ad5: hlt    
  0x0000000110df9ad6: hlt    
  0x0000000110df9ad7: hlt    
  0x0000000110df9ad8: hlt    
  0x0000000110df9ad9: hlt    
  0x0000000110df9ada: hlt    
  0x0000000110df9adb: hlt    
  0x0000000110df9adc: hlt    
  0x0000000110df9add: hlt    
  0x0000000110df9ade: hlt    
  0x0000000110df9adf: hlt    
[Stub Code]
  0x0000000110df9ae0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df9aea: jmpq   0x0000000110df9aea  ;   {runtime_call}
  0x0000000110df9aef: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df9af9: jmpq   0x0000000110df9af9  ;   {runtime_call}
  0x0000000110df9afe: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df9b08: jmpq   0x0000000110df9b08  ;   {runtime_call}
  0x0000000110df9b0d: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110df9b17: jmpq   0x0000000110df9b17  ;   {runtime_call}
[Exception Handler]
  0x0000000110df9b1c: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df9b21: callq  0x0000000110df9b26
  0x0000000110df9b26: subq   $0x5,(%rsp)
  0x0000000110df9b2b: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}

ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 768 
ImmutableOopMap{r9=NarrowOop rcx=Oop [0]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2068 
ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2180 
ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }pc offsets: 2212 
ImmutableOopMap{}pc offsets: 2296 
ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop [24]=Oop }pc offsets: 2416 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop }pc offsets: 2608 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop }pc offsets: 2648 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop }pc offsets: 2684 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2720 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2752 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2784 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }pc offsets: 2868 
ImmutableOopMap{[0]=Oop [16]=Oop [24]=Oop }pc offsets: 2888 2948 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop }pc offsets: 2988 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }pc offsets: 3012 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop }pc offsets: 3036 3060 
ImmutableOopMap{rbp=Oop }pc offsets: 3080 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop }pc offsets: 3120 
ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop [24]=Oop }pc offsets: 3140 
ImmutableOopMap{}pc offsets: 3152 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop }pc offsets: 3192 
ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [40]=Oop }pc offsets: 3220 3248 3276 
ImmutableOopMap{rbp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 3336 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }pc offsets: 3380 Compiled method (c2)     749  104             java.util.function.Predicate::not (12 bytes)
 total in heap  [0x0000000110df1f90,0x0000000110df2460] = 1232
 relocation     [0x0000000110df2108,0x0000000110df2128] = 32
 main code      [0x0000000110df2140,0x0000000110df2280] = 320
 stub code      [0x0000000110df2280,0x0000000110df2298] = 24
 oops           [0x0000000110df2298,0x0000000110df22a8] = 16
 metadata       [0x0000000110df22a8,0x0000000110df22f0] = 72
 scopes data    [0x0000000110df22f0,0x0000000110df2370] = 128
 scopes pcs     [0x0000000110df2370,0x0000000110df2430] = 192
 dependencies   [0x0000000110df2430,0x0000000110df2438] = 8
 handler table  [0x0000000110df2438,0x0000000110df2450] = 24
 nul chk table  [0x0000000110df2450,0x0000000110df2460] = 16
----------------------------------------------------------------------
java/util/function/Predicate.not(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;  [0x0000000110df2140, 0x0000000110df2298]  344 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f186f70} 'not' '(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;' in 'java/util/function/Predicate'
  # parm0:    rsi:rsi   = 'java/util/function/Predicate'
  #           [sp+0x30]  (sp of caller)
  0x0000000110df2140: mov    %eax,-0x14000(%rsp)
  0x0000000110df2147: push   %rbp
  0x0000000110df2148: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.function.Predicate::not@-1 (line 137)

  0x0000000110df214c: mov    %rsi,%rbp
  0x0000000110df214f: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x0000000110df2256
  0x0000000110df2153: cmp    $0x65040,%r11d     ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110df215a: jne    0x0000000110df2248
  0x0000000110df2160: mov    0x118(%r15),%rbx
  0x0000000110df2167: mov    %rbx,%r10
  0x0000000110df216a: add    $0x10,%r10
  0x0000000110df216e: cmp    0x128(%r15),%r10
  0x0000000110df2175: jae    0x0000000110df2231  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)

  0x0000000110df217b: mov    %r10,0x118(%r15)
  0x0000000110df2182: prefetchnta 0xc0(%r10)
  0x0000000110df218a: mov    $0x66440,%r11d     ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df2190: movabs $0x800000000,%r10
  0x0000000110df219a: add    %r11,%r10
  0x0000000110df219d: mov    0xb8(%r10),%r10
  0x0000000110df21a4: mov    %r10,(%rbx)
  0x0000000110df21a7: movl   $0x66440,0x8(%rbx)  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df21ae: mov    %rbp,%r11
  0x0000000110df21b1: shr    $0x3,%r11
  0x0000000110df21b5: mov    %r11d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)

  0x0000000110df21b9: mov    %rbp,%r10
  0x0000000110df21bc: mov    %rbx,%r11
  0x0000000110df21bf: xor    %r11,%r10
  0x0000000110df21c2: shr    $0x14,%r10
  0x0000000110df21c6: test   %r10,%r10
  0x0000000110df21c9: je     0x0000000110df221e
  0x0000000110df21cb: shr    $0x9,%r11
  0x0000000110df21cf: movabs $0x110569000,%rdi
  0x0000000110df21d9: add    %r11,%rdi
  0x0000000110df21dc: cmpb   $0x20,(%rdi)
  0x0000000110df21df: je     0x0000000110df221e
  0x0000000110df21e1: mov    0x70(%r15),%r10
  0x0000000110df21e5: mov    0x80(%r15),%r11
  0x0000000110df21ec: lock addl $0x0,-0x40(%rsp)
  0x0000000110df21f2: cmpb   $0x0,(%rdi)
  0x0000000110df21f5: je     0x0000000110df221e
  0x0000000110df21f7: movb   $0x0,(%rdi)
  0x0000000110df21fa: test   %r10,%r10
  0x0000000110df21fd: jne    0x0000000110df2211
  0x0000000110df21ff: mov    %r15,%rsi
  0x0000000110df2202: movabs $0x107aec8ce,%r10
  0x0000000110df220c: callq  *%r10
  0x0000000110df220f: jmp    0x0000000110df221e
  0x0000000110df2211: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df2216: add    $0xfffffffffffffff8,%r10
  0x0000000110df221a: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@-1
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)

  0x0000000110df221e: mov    %rbx,%rax
  0x0000000110df2221: add    $0x20,%rsp
  0x0000000110df2225: pop    %rbp
  0x0000000110df2226: mov    0x108(%r15),%r10
  0x0000000110df222d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df2230: retq   
  0x0000000110df2231: movabs $0x800066440,%rsi  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df223b: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df2240: mov    %rax,%rbx
  0x0000000110df2243: jmpq   0x0000000110df21ae
  0x0000000110df2248: mov    $0xffffffde,%esi
  0x0000000110df224d: xchg   %ax,%ax
  0x0000000110df224f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface negate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df2254: ud2                       ;*invokeinterface negate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::not@6 (line 138)

  0x0000000110df2256: mov    $0xffffff4d,%esi
  0x0000000110df225b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.function.Predicate::not@1 (line 137)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df2260: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)

  0x0000000110df2262: mov    %rax,%rsi
  0x0000000110df2265: add    $0x20,%rsp
  0x0000000110df2269: pop    %rbp
  0x0000000110df226a: jmpq   0x0000000110dc8700  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df226f: hlt    
  0x0000000110df2270: hlt    
  0x0000000110df2271: hlt    
  0x0000000110df2272: hlt    
  0x0000000110df2273: hlt    
  0x0000000110df2274: hlt    
  0x0000000110df2275: hlt    
  0x0000000110df2276: hlt    
  0x0000000110df2277: hlt    
  0x0000000110df2278: hlt    
  0x0000000110df2279: hlt    
  0x0000000110df227a: hlt    
  0x0000000110df227b: hlt    
  0x0000000110df227c: hlt    
  0x0000000110df227d: hlt    
  0x0000000110df227e: hlt    
  0x0000000110df227f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df2280: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df2285: callq  0x0000000110df228a
  0x0000000110df228a: subq   $0x5,(%rsp)
  0x0000000110df228f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df2294: hlt    
  0x0000000110df2295: hlt    
  0x0000000110df2296: hlt    
  0x0000000110df2297: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 256 276 288 Compiled method (c2)     754  105             java.util.function.Predicate::negate (7 bytes)
 total in heap  [0x0000000110df1b10,0x0000000110df1f40] = 1072
 relocation     [0x0000000110df1c88,0x0000000110df1ca0] = 24
 main code      [0x0000000110df1ca0,0x0000000110df1de0] = 320
 stub code      [0x0000000110df1de0,0x0000000110df1df8] = 24
 oops           [0x0000000110df1df8,0x0000000110df1e00] = 8
 metadata       [0x0000000110df1e00,0x0000000110df1e30] = 48
 scopes data    [0x0000000110df1e30,0x0000000110df1e90] = 96
 scopes pcs     [0x0000000110df1e90,0x0000000110df1f20] = 144
 dependencies   [0x0000000110df1f20,0x0000000110df1f28] = 8
 handler table  [0x0000000110df1f28,0x0000000110df1f40] = 24
----------------------------------------------------------------------
java/util/function/Predicate.negate()Ljava/util/function/Predicate;  [0x0000000110df1ca0, 0x0000000110df1df8]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f186d38} 'negate' '()Ljava/util/function/Predicate;' in 'java/util/function/Predicate'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df1ca0: mov    0x8(%rsi),%r10d
  0x0000000110df1ca4: movabs $0x800000000,%r12
  0x0000000110df1cae: add    %r12,%r10
  0x0000000110df1cb1: xor    %r12,%r12
  0x0000000110df1cb4: cmp    %r10,%rax
  0x0000000110df1cb7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df1cbd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df1cc0: mov    %eax,-0x14000(%rsp)
  0x0000000110df1cc7: push   %rbp
  0x0000000110df1cc8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.function.Predicate::negate@-1 (line 80)

  0x0000000110df1ccc: mov    %rsi,%rbp
  0x0000000110df1ccf: mov    0x118(%r15),%rbx
  0x0000000110df1cd6: mov    %rbx,%r10
  0x0000000110df1cd9: add    $0x10,%r10
  0x0000000110df1cdd: cmp    0x128(%r15),%r10
  0x0000000110df1ce4: jae    0x0000000110df1da0  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)

  0x0000000110df1cea: mov    %r10,0x118(%r15)
  0x0000000110df1cf1: prefetchnta 0xc0(%r10)
  0x0000000110df1cf9: mov    $0x66440,%r11d     ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df1cff: movabs $0x800000000,%r10
  0x0000000110df1d09: add    %r11,%r10
  0x0000000110df1d0c: mov    0xb8(%r10),%r10
  0x0000000110df1d13: mov    %r10,(%rbx)
  0x0000000110df1d16: movl   $0x66440,0x8(%rbx)  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df1d1d: mov    %rbp,%r11
  0x0000000110df1d20: shr    $0x3,%r11
  0x0000000110df1d24: mov    %r11d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)

  0x0000000110df1d28: mov    %rbp,%r10
  0x0000000110df1d2b: mov    %rbx,%r11
  0x0000000110df1d2e: xor    %r11,%r10
  0x0000000110df1d31: shr    $0x14,%r10
  0x0000000110df1d35: test   %r10,%r10
  0x0000000110df1d38: je     0x0000000110df1d8d
  0x0000000110df1d3a: shr    $0x9,%r11
  0x0000000110df1d3e: movabs $0x110569000,%rdi
  0x0000000110df1d48: add    %r11,%rdi
  0x0000000110df1d4b: cmpb   $0x20,(%rdi)
  0x0000000110df1d4e: je     0x0000000110df1d8d
  0x0000000110df1d50: mov    0x70(%r15),%r10
  0x0000000110df1d54: mov    0x80(%r15),%r11
  0x0000000110df1d5b: lock addl $0x0,-0x40(%rsp)
  0x0000000110df1d61: cmpb   $0x0,(%rdi)
  0x0000000110df1d64: je     0x0000000110df1d8d
  0x0000000110df1d66: movb   $0x0,(%rdi)
  0x0000000110df1d69: test   %r10,%r10
  0x0000000110df1d6c: jne    0x0000000110df1d80
  0x0000000110df1d6e: mov    %r15,%rsi
  0x0000000110df1d71: movabs $0x107aec8ce,%r10
  0x0000000110df1d7b: callq  *%r10
  0x0000000110df1d7e: jmp    0x0000000110df1d8d
  0x0000000110df1d80: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df1d85: add    $0xfffffffffffffff8,%r10
  0x0000000110df1d89: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@-1
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)

  0x0000000110df1d8d: mov    %rbx,%rax
  0x0000000110df1d90: add    $0x10,%rsp
  0x0000000110df1d94: pop    %rbp
  0x0000000110df1d95: mov    0x108(%r15),%r10
  0x0000000110df1d9c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df1d9f: retq   
  0x0000000110df1da0: movabs $0x800066440,%rsi  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df1daa: nop
  0x0000000110df1dab: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df1db0: mov    %rax,%rbx
  0x0000000110df1db3: jmpq   0x0000000110df1d1d  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)

  0x0000000110df1db8: mov    %rax,%rsi
  0x0000000110df1dbb: add    $0x10,%rsp
  0x0000000110df1dbf: pop    %rbp
  0x0000000110df1dc0: jmpq   0x0000000110dc8700  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df1dc5: hlt    
  0x0000000110df1dc6: hlt    
  0x0000000110df1dc7: hlt    
  0x0000000110df1dc8: hlt    
  0x0000000110df1dc9: hlt    
  0x0000000110df1dca: hlt    
  0x0000000110df1dcb: hlt    
  0x0000000110df1dcc: hlt    
  0x0000000110df1dcd: hlt    
  0x0000000110df1dce: hlt    
  0x0000000110df1dcf: hlt    
  0x0000000110df1dd0: hlt    
  0x0000000110df1dd1: hlt    
  0x0000000110df1dd2: hlt    
  0x0000000110df1dd3: hlt    
  0x0000000110df1dd4: hlt    
  0x0000000110df1dd5: hlt    
  0x0000000110df1dd6: hlt    
  0x0000000110df1dd7: hlt    
  0x0000000110df1dd8: hlt    
  0x0000000110df1dd9: hlt    
  0x0000000110df1dda: hlt    
  0x0000000110df1ddb: hlt    
  0x0000000110df1ddc: hlt    
  0x0000000110df1ddd: hlt    
  0x0000000110df1dde: hlt    
  0x0000000110df1ddf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df1de0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df1de5: callq  0x0000000110df1dea
  0x0000000110df1dea: subq   $0x5,(%rsp)
  0x0000000110df1def: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df1df4: hlt    
  0x0000000110df1df5: hlt    
  0x0000000110df1df6: hlt    
  0x0000000110df1df7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 272 Compiled method (c2)     758  106             java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda (9 bytes)
 total in heap  [0x0000000110df3c10,0x0000000110df3fd0] = 960
 relocation     [0x0000000110df3d88,0x0000000110df3da0] = 24
 main code      [0x0000000110df3da0,0x0000000110df3ec0] = 288
 stub code      [0x0000000110df3ec0,0x0000000110df3ed8] = 24
 oops           [0x0000000110df3ed8,0x0000000110df3ee0] = 8
 metadata       [0x0000000110df3ee0,0x0000000110df3ef8] = 24
 scopes data    [0x0000000110df3ef8,0x0000000110df3f20] = 40
 scopes pcs     [0x0000000110df3f20,0x0000000110df3fb0] = 144
 dependencies   [0x0000000110df3fb0,0x0000000110df3fb8] = 8
 handler table  [0x0000000110df3fb8,0x0000000110df3fd0] = 24
----------------------------------------------------------------------
java/util/function/Predicate$$Lambda$2.get$Lambda(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;  [0x0000000110df3da0, 0x0000000110df3ed8]  312 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f17f6e0} 'get$Lambda' '(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;' in 'java/util/function/Predicate$$Lambda$2'
  # parm0:    rsi:rsi   = 'java/util/function/Predicate'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df3da0: mov    %eax,-0x14000(%rsp)
  0x0000000110df3da7: push   %rbp
  0x0000000110df3da8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@-1

  0x0000000110df3dac: mov    %rsi,%rbp
  0x0000000110df3daf: mov    0x118(%r15),%rbx
  0x0000000110df3db6: mov    %rbx,%r10
  0x0000000110df3db9: add    $0x10,%r10
  0x0000000110df3dbd: cmp    0x128(%r15),%r10
  0x0000000110df3dc4: jae    0x0000000110df3e85  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5

  0x0000000110df3dca: mov    %r10,0x118(%r15)
  0x0000000110df3dd1: prefetchnta 0xc0(%r10)
  0x0000000110df3dd9: mov    $0x66440,%r11d     ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df3ddf: movabs $0x800000000,%r10
  0x0000000110df3de9: add    %r11,%r10
  0x0000000110df3dec: mov    0xb8(%r10),%r10
  0x0000000110df3df3: mov    %r10,(%rbx)
  0x0000000110df3df6: movl   $0x66440,0x8(%rbx)  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df3dfd: mov    %rbp,%r11
  0x0000000110df3e00: shr    $0x3,%r11
  0x0000000110df3e04: mov    %r11d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0

  0x0000000110df3e08: mov    %rbp,%r10
  0x0000000110df3e0b: mov    %rbx,%r11
  0x0000000110df3e0e: xor    %r11,%r10
  0x0000000110df3e11: shr    $0x14,%r10
  0x0000000110df3e15: test   %r10,%r10
  0x0000000110df3e18: je     0x0000000110df3e72
  0x0000000110df3e1a: test   %rbp,%rbp
  0x0000000110df3e1d: je     0x0000000110df3e72
  0x0000000110df3e1f: shr    $0x9,%r11
  0x0000000110df3e23: movabs $0x110569000,%rdi
  0x0000000110df3e2d: add    %r11,%rdi
  0x0000000110df3e30: cmpb   $0x20,(%rdi)
  0x0000000110df3e33: je     0x0000000110df3e72
  0x0000000110df3e35: mov    0x70(%r15),%r10
  0x0000000110df3e39: mov    0x80(%r15),%r11
  0x0000000110df3e40: lock addl $0x0,-0x40(%rsp)
  0x0000000110df3e46: cmpb   $0x0,(%rdi)
  0x0000000110df3e49: je     0x0000000110df3e72
  0x0000000110df3e4b: movb   $0x0,(%rdi)
  0x0000000110df3e4e: test   %r10,%r10
  0x0000000110df3e51: jne    0x0000000110df3e65
  0x0000000110df3e53: mov    %r15,%rsi
  0x0000000110df3e56: movabs $0x107aec8ce,%r10
  0x0000000110df3e60: callq  *%r10
  0x0000000110df3e63: jmp    0x0000000110df3e72
  0x0000000110df3e65: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df3e6a: add    $0xfffffffffffffff8,%r10
  0x0000000110df3e6e: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@-1

  0x0000000110df3e72: mov    %rbx,%rax
  0x0000000110df3e75: add    $0x10,%rsp
  0x0000000110df3e79: pop    %rbp
  0x0000000110df3e7a: mov    0x108(%r15),%r10
  0x0000000110df3e81: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df3e84: retq   
  0x0000000110df3e85: movabs $0x800066440,%rsi  ;   {metadata('java/util/function/Predicate$$Lambda$2')}
  0x0000000110df3e8f: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df3e94: mov    %rax,%rbx
  0x0000000110df3e97: jmpq   0x0000000110df3dfd  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@0

  0x0000000110df3e9c: mov    %rax,%rsi
  0x0000000110df3e9f: add    $0x10,%rsp
  0x0000000110df3ea3: pop    %rbp
  0x0000000110df3ea4: jmpq   0x0000000110dc8700  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df3ea9: hlt    
  0x0000000110df3eaa: hlt    
  0x0000000110df3eab: hlt    
  0x0000000110df3eac: hlt    
  0x0000000110df3ead: hlt    
  0x0000000110df3eae: hlt    
  0x0000000110df3eaf: hlt    
  0x0000000110df3eb0: hlt    
  0x0000000110df3eb1: hlt    
  0x0000000110df3eb2: hlt    
  0x0000000110df3eb3: hlt    
  0x0000000110df3eb4: hlt    
  0x0000000110df3eb5: hlt    
  0x0000000110df3eb6: hlt    
  0x0000000110df3eb7: hlt    
  0x0000000110df3eb8: hlt    
  0x0000000110df3eb9: hlt    
  0x0000000110df3eba: hlt    
  0x0000000110df3ebb: hlt    
  0x0000000110df3ebc: hlt    
  0x0000000110df3ebd: hlt    
  0x0000000110df3ebe: hlt    
  0x0000000110df3ebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df3ec0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df3ec5: callq  0x0000000110df3eca
  0x0000000110df3eca: subq   $0x5,(%rsp)
  0x0000000110df3ecf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df3ed4: hlt    
  0x0000000110df3ed5: hlt    
  0x0000000110df3ed6: hlt    
  0x0000000110df3ed7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 244 Compiled method (c2)     762  107             java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init> (10 bytes)
 total in heap  [0x0000000110df3890,0x0000000110df3bc0] = 816
 relocation     [0x0000000110df3a08,0x0000000110df3a18] = 16
 main code      [0x0000000110df3a20,0x0000000110df3b40] = 288
 stub code      [0x0000000110df3b40,0x0000000110df3b58] = 24
 oops           [0x0000000110df3b58,0x0000000110df3b60] = 8
 metadata       [0x0000000110df3b60,0x0000000110df3b68] = 8
 scopes data    [0x0000000110df3b68,0x0000000110df3b78] = 16
 scopes pcs     [0x0000000110df3b78,0x0000000110df3bb8] = 64
 dependencies   [0x0000000110df3bb8,0x0000000110df3bc0] = 8
----------------------------------------------------------------------
java/util/function/Predicate$$Lambda$2.<init>(Ljava/util/function/Predicate;)V  [0x0000000110df3a20, 0x0000000110df3b58]  312 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f17f640} '<init>' '(Ljava/util/function/Predicate;)V' in 'java/util/function/Predicate$$Lambda$2'
  # this:     rsi:rsi   = 'java/util/function/Predicate$$Lambda$2'
  # parm0:    rdx:rdx   = 'java/util/function/Predicate'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df3a20: mov    0x8(%rsi),%r10d
  0x0000000110df3a24: movabs $0x800000000,%r12
  0x0000000110df3a2e: add    %r12,%r10
  0x0000000110df3a31: xor    %r12,%r12
  0x0000000110df3a34: cmp    %r10,%rax
  0x0000000110df3a37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df3a3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df3a40: sub    $0x18,%rsp
  0x0000000110df3a47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@-1

  0x0000000110df3a4c: mov    %rdx,%rbx
  0x0000000110df3a4f: cmpb   $0x0,0x30(%r15)
  0x0000000110df3a54: jne    0x0000000110df3ae2
  0x0000000110df3a5a: mov    %rsi,%rbp
  0x0000000110df3a5d: mov    %rbp,%r10
  0x0000000110df3a60: mov    %rbx,%r8
  0x0000000110df3a63: shr    $0x3,%r8
  0x0000000110df3a67: mov    %r8d,0xc(%rbp)
  0x0000000110df3a6b: mov    %rbx,%r11
  0x0000000110df3a6e: xor    %r10,%r11
  0x0000000110df3a71: shr    $0x14,%r11
  0x0000000110df3a75: test   %r11,%r11
  0x0000000110df3a78: je     0x0000000110df3ad2
  0x0000000110df3a7a: test   %rbx,%rbx
  0x0000000110df3a7d: je     0x0000000110df3ad2
  0x0000000110df3a7f: shr    $0x9,%r10
  0x0000000110df3a83: movabs $0x110569000,%rdi
  0x0000000110df3a8d: add    %r10,%rdi
  0x0000000110df3a90: cmpb   $0x20,(%rdi)
  0x0000000110df3a93: je     0x0000000110df3ad2
  0x0000000110df3a95: mov    0x70(%r15),%r10
  0x0000000110df3a99: mov    0x80(%r15),%r11
  0x0000000110df3aa0: lock addl $0x0,-0x40(%rsp)
  0x0000000110df3aa6: cmpb   $0x0,(%rdi)
  0x0000000110df3aa9: je     0x0000000110df3ad2
  0x0000000110df3aab: movb   $0x0,(%rdi)
  0x0000000110df3aae: test   %r10,%r10
  0x0000000110df3ab1: jne    0x0000000110df3ac5
  0x0000000110df3ab3: mov    %r15,%rsi
  0x0000000110df3ab6: movabs $0x107aec8ce,%r10
  0x0000000110df3ac0: callq  *%r10
  0x0000000110df3ac3: jmp    0x0000000110df3ad2
  0x0000000110df3ac5: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df3aca: add    $0xfffffffffffffff8,%r10
  0x0000000110df3ace: mov    %r10,0x70(%r15)
  0x0000000110df3ad2: add    $0x10,%rsp
  0x0000000110df3ad6: pop    %rbp
  0x0000000110df3ad7: mov    0x108(%r15),%r10
  0x0000000110df3ade: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df3ae1: retq   
  0x0000000110df3ae2: mov    %rsi,%rbp
  0x0000000110df3ae5: mov    0xc(%rsi),%r10d
  0x0000000110df3ae9: test   %r10d,%r10d
  0x0000000110df3aec: je     0x0000000110df3a5d
  0x0000000110df3af2: mov    0x38(%r15),%r11
  0x0000000110df3af6: mov    %r10,%rdi
  0x0000000110df3af9: shl    $0x3,%rdi
  0x0000000110df3afd: test   %r11,%r11
  0x0000000110df3b00: je     0x0000000110df3b18
  0x0000000110df3b02: mov    0x48(%r15),%r10
  0x0000000110df3b06: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110df3b0b: add    $0xfffffffffffffff8,%r11
  0x0000000110df3b0f: mov    %r11,0x38(%r15)
  0x0000000110df3b13: jmpq   0x0000000110df3a5d
  0x0000000110df3b18: mov    %r15,%rsi
  0x0000000110df3b1b: movabs $0x107aec8aa,%r10
  0x0000000110df3b25: callq  *%r10
  0x0000000110df3b28: jmpq   0x0000000110df3a5d  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6

  0x0000000110df3b2d: hlt    
  0x0000000110df3b2e: hlt    
  0x0000000110df3b2f: hlt    
  0x0000000110df3b30: hlt    
  0x0000000110df3b31: hlt    
  0x0000000110df3b32: hlt    
  0x0000000110df3b33: hlt    
  0x0000000110df3b34: hlt    
  0x0000000110df3b35: hlt    
  0x0000000110df3b36: hlt    
  0x0000000110df3b37: hlt    
  0x0000000110df3b38: hlt    
  0x0000000110df3b39: hlt    
  0x0000000110df3b3a: hlt    
  0x0000000110df3b3b: hlt    
  0x0000000110df3b3c: hlt    
  0x0000000110df3b3d: hlt    
  0x0000000110df3b3e: hlt    
  0x0000000110df3b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df3b40: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df3b45: callq  0x0000000110df3b4a
  0x0000000110df3b4a: subq   $0x5,(%rsp)
  0x0000000110df3b4f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df3b54: hlt    
  0x0000000110df3b55: hlt    
  0x0000000110df3b56: hlt    
  0x0000000110df3b57: hlt    
Compiled method (c2)     765  108             java.lang.invoke.Invokers$Holder::linkToTargetMethod (10 bytes)
 total in heap  [0x0000000110df3490,0x0000000110df3808] = 888
 relocation     [0x0000000110df3608,0x0000000110df3628] = 32
 main code      [0x0000000110df3640,0x0000000110df36c0] = 128
 stub code      [0x0000000110df36c0,0x0000000110df36f8] = 56
 metadata       [0x0000000110df36f8,0x0000000110df3708] = 16
 scopes data    [0x0000000110df3708,0x0000000110df3748] = 64
 scopes pcs     [0x0000000110df3748,0x0000000110df37d8] = 144
 dependencies   [0x0000000110df37d8,0x0000000110df37e0] = 8
 handler table  [0x0000000110df37e0,0x0000000110df37f8] = 24
 nul chk table  [0x0000000110df37f8,0x0000000110df3808] = 16
----------------------------------------------------------------------
java/lang/invoke/Invokers$Holder.linkToTargetMethod(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110df3640, 0x0000000110df36f8]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0f3340} 'linkToTargetMethod' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110df3640: mov    %eax,-0x14000(%rsp)
  0x0000000110df3647: push   %rbp
  0x0000000110df3648: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1

  0x0000000110df364c: mov    %rdx,%r10
  0x0000000110df364f: mov    %rsi,%rdx
  0x0000000110df3652: mov    0x8(%rcx),%r8d     ; implicit exception: dispatches to 0x0000000110df36a3
  0x0000000110df3656: cmp    $0xc0e0,%r8d       ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110df365d: jne    0x0000000110df367c
  0x0000000110df365f: mov    %rcx,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110df3662: mov    %r10,%rcx
  0x0000000110df3665: xchg   %ax,%ax
  0x0000000110df3667: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ;   {optimized virtual_call}
  0x0000000110df366c: add    $0x20,%rsp
  0x0000000110df3670: pop    %rbp
  0x0000000110df3671: mov    0x108(%r15),%r10
  0x0000000110df3678: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df367b: retq   
  0x0000000110df367c: mov    $0xffffffde,%esi
  0x0000000110df3681: mov    %rdx,%rbp
  0x0000000110df3684: mov    %r10,(%rsp)
  0x0000000110df3688: mov    %rcx,0x8(%rsp)
  0x0000000110df368d: xchg   %ax,%ax
  0x0000000110df368f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df3694: ud2                       ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6

  0x0000000110df3696: mov    %rax,%rsi
  0x0000000110df3699: add    $0x20,%rsp
  0x0000000110df369d: pop    %rbp
  0x0000000110df369e: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110df36a3: mov    $0xfffffff4,%esi
  0x0000000110df36a8: mov    %rdx,%rbp
  0x0000000110df36ab: mov    %r10,(%rsp)
  0x0000000110df36af: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df36b4: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110df36b6: hlt    
  0x0000000110df36b7: hlt    
  0x0000000110df36b8: hlt    
  0x0000000110df36b9: hlt    
  0x0000000110df36ba: hlt    
  0x0000000110df36bb: hlt    
  0x0000000110df36bc: hlt    
  0x0000000110df36bd: hlt    
  0x0000000110df36be: hlt    
  0x0000000110df36bf: hlt    
[Stub Code]
  0x0000000110df36c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df36ca: jmpq   0x0000000110df36ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110df36cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df36d4: callq  0x0000000110df36d9
  0x0000000110df36d9: subq   $0x5,(%rsp)
  0x0000000110df36de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
[Deopt MH Handler Code]
  0x0000000110df36e3: callq  0x0000000110df36e8
  0x0000000110df36e8: subq   $0x5,(%rsp)
  0x0000000110df36ed: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df36f2: hlt    
  0x0000000110df36f3: hlt    
  0x0000000110df36f4: hlt    
  0x0000000110df36f5: hlt    
  0x0000000110df36f6: hlt    
  0x0000000110df36f7: hlt    

ImmutableOopMap{}pc offsets: 44 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 84 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 116 Compiled method (c2)     767  109             java.lang.invoke.DirectMethodHandle$Holder::invokeStatic (15 bytes)
 total in heap  [0x0000000110df3090,0x0000000110df3428] = 920
 relocation     [0x0000000110df3208,0x0000000110df3228] = 32
 main code      [0x0000000110df3240,0x0000000110df32c0] = 128
 stub code      [0x0000000110df32c0,0x0000000110df32e8] = 40
 metadata       [0x0000000110df32e8,0x0000000110df3300] = 24
 scopes data    [0x0000000110df3300,0x0000000110df3358] = 88
 scopes pcs     [0x0000000110df3358,0x0000000110df33f8] = 160
 dependencies   [0x0000000110df33f8,0x0000000110df3400] = 8
 handler table  [0x0000000110df3400,0x0000000110df3418] = 24
 nul chk table  [0x0000000110df3418,0x0000000110df3428] = 16
----------------------------------------------------------------------
java/lang/invoke/DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110df3240, 0x0000000110df32e8]  168 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0a0048} 'invokeStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/DirectMethodHandle$Holder'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110df3240: mov    %eax,-0x14000(%rsp)
  0x0000000110df3247: push   %rbp
  0x0000000110df3248: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@-1

  0x0000000110df324c: mov    %rcx,%r10
  0x0000000110df324f: mov    0x8(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000110df32ab
  0x0000000110df3253: cmp    $0xc0e0,%r8d       ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110df325a: jne    0x0000000110df3284  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110df325c: mov    0x1c(%rsi),%r8d
  0x0000000110df3260: mov    %r8,%rcx
  0x0000000110df3263: shl    $0x3,%rcx          ;*getfield member {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@4 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110df3267: mov    %rdx,%rsi
  0x0000000110df326a: mov    %r10,%rdx
  0x0000000110df326d: xchg   %ax,%ax
  0x0000000110df326f: callq  0x0000000110d90400  ; ImmutableOopMap{}
                                                ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ;   {static_call}
  0x0000000110df3274: add    $0x20,%rsp
  0x0000000110df3278: pop    %rbp
  0x0000000110df3279: mov    0x108(%r15),%r10
  0x0000000110df3280: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df3283: retq   
  0x0000000110df3284: mov    %rdx,%rbp
  0x0000000110df3287: mov    %rcx,(%rsp)
  0x0000000110df328b: mov    %rsi,0x8(%rsp)
  0x0000000110df3290: mov    $0xffffff6e,%esi
  0x0000000110df3295: xchg   %ax,%ax
  0x0000000110df3297: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df329c: ud2                       ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11

  0x0000000110df329e: mov    %rax,%rsi
  0x0000000110df32a1: add    $0x20,%rsp
  0x0000000110df32a5: pop    %rbp
  0x0000000110df32a6: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110df32ab: mov    $0xffffff64,%esi
  0x0000000110df32b0: mov    %rdx,%rbp
  0x0000000110df32b3: mov    %rcx,(%rsp)
  0x0000000110df32b7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df32bc: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.DirectMethodHandle::internalMemberName@1 (line 310)
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1

  0x0000000110df32be: hlt    
  0x0000000110df32bf: hlt    
[Stub Code]
  0x0000000110df32c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df32ca: jmpq   0x0000000110df32ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110df32cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df32d4: callq  0x0000000110df32d9
  0x0000000110df32d9: subq   $0x5,(%rsp)
  0x0000000110df32de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df32e3: hlt    
  0x0000000110df32e4: hlt    
  0x0000000110df32e5: hlt    
  0x0000000110df32e6: hlt    
  0x0000000110df32e7: hlt    

ImmutableOopMap{}pc offsets: 52 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 92 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 124 Compiled method (c2)     771  110             FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda (10 bytes)
 total in heap  [0x0000000110df2b10,0x0000000110df3068] = 1368
 relocation     [0x0000000110df2c88,0x0000000110df2ca0] = 24
 main code      [0x0000000110df2ca0,0x0000000110df2ea0] = 512
 stub code      [0x0000000110df2ea0,0x0000000110df2eb8] = 24
 oops           [0x0000000110df2eb8,0x0000000110df2ec0] = 8
 metadata       [0x0000000110df2ec0,0x0000000110df2ed8] = 24
 scopes data    [0x0000000110df2ed8,0x0000000110df2f08] = 48
 scopes pcs     [0x0000000110df2f08,0x0000000110df3048] = 320
 dependencies   [0x0000000110df3048,0x0000000110df3050] = 8
 handler table  [0x0000000110df3050,0x0000000110df3068] = 24
----------------------------------------------------------------------
FunctionalZipCode$$Lambda$8.get$Lambda(LFunctionalZipCode;Ljava/lang/String;)Ljava/util/function/Supplier;  [0x0000000110df2ca0, 0x0000000110df2eb8]  536 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f17c730} 'get$Lambda' '(LFunctionalZipCode;Ljava/lang/String;)Ljava/util/function/Supplier;' in 'FunctionalZipCode$$Lambda$8'
  # parm0:    rsi:rsi   = 'FunctionalZipCode'
  # parm1:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x0000000110df2ca0: mov    %eax,-0x14000(%rsp)
  0x0000000110df2ca7: push   %rbp
  0x0000000110df2ca8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@-1

  0x0000000110df2cac: mov    %rdx,(%rsp)
  0x0000000110df2cb0: mov    %rsi,%rbp
  0x0000000110df2cb3: mov    0x118(%r15),%rbx
  0x0000000110df2cba: mov    %rbx,%r10
  0x0000000110df2cbd: add    $0x18,%r10
  0x0000000110df2cc1: cmp    0x128(%r15),%r10
  0x0000000110df2cc8: jae    0x0000000110df2e4e  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2cce: mov    %r10,0x118(%r15)
  0x0000000110df2cd5: prefetchnta 0xc0(%r10)
  0x0000000110df2cdd: mov    $0x70440,%r11d     ;   {metadata('FunctionalZipCode$$Lambda$8')}
  0x0000000110df2ce3: movabs $0x800000000,%r10
  0x0000000110df2ced: add    %r11,%r10
  0x0000000110df2cf0: mov    0xb8(%r10),%r10
  0x0000000110df2cf7: mov    %r10,(%rbx)
  0x0000000110df2cfa: movl   $0x70440,0x8(%rbx)  ;   {metadata('FunctionalZipCode$$Lambda$8')}
  0x0000000110df2d01: movq   $0x0,0x10(%rbx)
  0x0000000110df2d09: mov    %rbp,%r11
  0x0000000110df2d0c: shr    $0x3,%r11
  0x0000000110df2d10: mov    %r11d,0xc(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@0

  0x0000000110df2d14: mov    %rbp,%r10
  0x0000000110df2d17: mov    %rbx,%r11
  0x0000000110df2d1a: xor    %r11,%r10
  0x0000000110df2d1d: shr    $0x14,%r10
  0x0000000110df2d21: test   %r10,%r10
  0x0000000110df2d24: je     0x0000000110df2d7e
  0x0000000110df2d26: test   %rbp,%rbp
  0x0000000110df2d29: je     0x0000000110df2d7e
  0x0000000110df2d2b: shr    $0x9,%r11
  0x0000000110df2d2f: movabs $0x110569000,%rdi
  0x0000000110df2d39: add    %r11,%rdi
  0x0000000110df2d3c: cmpb   $0x20,(%rdi)
  0x0000000110df2d3f: je     0x0000000110df2d7e
  0x0000000110df2d41: mov    0x70(%r15),%r10
  0x0000000110df2d45: mov    0x80(%r15),%r11
  0x0000000110df2d4c: lock addl $0x0,-0x40(%rsp)
  0x0000000110df2d52: cmpb   $0x0,(%rdi)
  0x0000000110df2d55: je     0x0000000110df2d7e
  0x0000000110df2d57: movb   $0x0,(%rdi)
  0x0000000110df2d5a: test   %r10,%r10
  0x0000000110df2d5d: jne    0x0000000110df2d71
  0x0000000110df2d5f: mov    %r15,%rsi
  0x0000000110df2d62: movabs $0x107aec8ce,%r10
  0x0000000110df2d6c: callq  *%r10
  0x0000000110df2d6f: jmp    0x0000000110df2d7e
  0x0000000110df2d71: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df2d76: add    $0xfffffffffffffff8,%r10
  0x0000000110df2d7a: mov    %r10,0x70(%r15)
  0x0000000110df2d7e: cmpb   $0x0,0x30(%r15)
  0x0000000110df2d83: jne    0x0000000110df2e1b
  0x0000000110df2d89: mov    %rbx,%r10
  0x0000000110df2d8c: mov    (%rsp),%r8
  0x0000000110df2d90: mov    %r8,%r11
  0x0000000110df2d93: shr    $0x3,%r11
  0x0000000110df2d97: mov    %r11d,0x10(%rbx)
  0x0000000110df2d9b: mov    %r8,%r11
  0x0000000110df2d9e: xor    %r10,%r11
  0x0000000110df2da1: shr    $0x14,%r11
  0x0000000110df2da5: test   %r11,%r11
  0x0000000110df2da8: je     0x0000000110df2e08
  0x0000000110df2daa: test   %r8,%r8
  0x0000000110df2dad: je     0x0000000110df2e08
  0x0000000110df2daf: shr    $0x9,%r10
  0x0000000110df2db3: movabs $0x110569000,%r8
  0x0000000110df2dbd: add    %r10,%r8
  0x0000000110df2dc0: cmpb   $0x20,(%r8)
  0x0000000110df2dc4: je     0x0000000110df2e08
  0x0000000110df2dc6: mov    0x70(%r15),%r10    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2dca: mov    0x80(%r15),%r11
  0x0000000110df2dd1: lock addl $0x0,-0x40(%rsp)
  0x0000000110df2dd7: cmpb   $0x0,(%r8)
  0x0000000110df2ddb: je     0x0000000110df2e08
  0x0000000110df2ddd: movb   $0x0,(%r8)
  0x0000000110df2de1: test   %r10,%r10
  0x0000000110df2de4: jne    0x0000000110df2dfb  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2de6: mov    %r8,%rdi           ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2de9: mov    %r15,%rsi
  0x0000000110df2dec: movabs $0x107aec8ce,%r10
  0x0000000110df2df6: callq  *%r10
  0x0000000110df2df9: jmp    0x0000000110df2e08
  0x0000000110df2dfb: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e00: add    $0xfffffffffffffff8,%r10  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e04: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@-1

  0x0000000110df2e08: mov    %rbx,%rax
  0x0000000110df2e0b: add    $0x20,%rsp
  0x0000000110df2e0f: pop    %rbp
  0x0000000110df2e10: mov    0x108(%r15),%r10
  0x0000000110df2e17: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df2e1a: retq   
  0x0000000110df2e1b: mov    0x10(%rbx),%r11d
  0x0000000110df2e1f: test   %r11d,%r11d
  0x0000000110df2e22: je     0x0000000110df2d89
  0x0000000110df2e28: mov    0x38(%r15),%r10
  0x0000000110df2e2c: mov    %r11,%rdi
  0x0000000110df2e2f: shl    $0x3,%rdi
  0x0000000110df2e33: test   %r10,%r10
  0x0000000110df2e36: je     0x0000000110df2e68  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e38: mov    0x48(%r15),%r11
  0x0000000110df2e3c: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e41: add    $0xfffffffffffffff8,%r10  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e45: mov    %r10,0x38(%r15)    ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e49: jmpq   0x0000000110df2d89
  0x0000000110df2e4e: movabs $0x800070440,%rsi  ;   {metadata('FunctionalZipCode$$Lambda$8')}
  0x0000000110df2e58: data16 xchg %ax,%ax
  0x0000000110df2e5b: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@0
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110df2e60: mov    %rax,%rbx
  0x0000000110df2e63: jmpq   0x0000000110df2d09  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e68: mov    %r15,%rsi
  0x0000000110df2e6b: movabs $0x107aec8aa,%r10
  0x0000000110df2e75: callq  *%r10              ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6

  0x0000000110df2e78: jmpq   0x0000000110df2d89  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@0

  0x0000000110df2e7d: mov    %rax,%rsi
  0x0000000110df2e80: add    $0x20,%rsp
  0x0000000110df2e84: pop    %rbp
  0x0000000110df2e85: jmpq   0x0000000110dc8700  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110df2e8a: hlt    
  0x0000000110df2e8b: hlt    
  0x0000000110df2e8c: hlt    
  0x0000000110df2e8d: hlt    
  0x0000000110df2e8e: hlt    
  0x0000000110df2e8f: hlt    
  0x0000000110df2e90: hlt    
  0x0000000110df2e91: hlt    
  0x0000000110df2e92: hlt    
  0x0000000110df2e93: hlt    
  0x0000000110df2e94: hlt    
  0x0000000110df2e95: hlt    
  0x0000000110df2e96: hlt    
  0x0000000110df2e97: hlt    
  0x0000000110df2e98: hlt    
  0x0000000110df2e99: hlt    
  0x0000000110df2e9a: hlt    
  0x0000000110df2e9b: hlt    
  0x0000000110df2e9c: hlt    
  0x0000000110df2e9d: hlt    
  0x0000000110df2e9e: hlt    
  0x0000000110df2e9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df2ea0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df2ea5: callq  0x0000000110df2eaa
  0x0000000110df2eaa: subq   $0x5,(%rsp)
  0x0000000110df2eaf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df2eb4: hlt    
  0x0000000110df2eb5: hlt    
  0x0000000110df2eb6: hlt    
  0x0000000110df2eb7: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 448 Compiled method (c2)     777  111             FunctionalZipCode$$Lambda$8/0x0000000800070440::<init> (15 bytes)
 total in heap  [0x0000000110df5990,0x0000000110df5e38] = 1192
 relocation     [0x0000000110df5b08,0x0000000110df5b18] = 16
 main code      [0x0000000110df5b20,0x0000000110df5d00] = 480
 stub code      [0x0000000110df5d00,0x0000000110df5d18] = 24
 oops           [0x0000000110df5d18,0x0000000110df5d20] = 8
 metadata       [0x0000000110df5d20,0x0000000110df5d28] = 8
 scopes data    [0x0000000110df5d28,0x0000000110df5d40] = 24
 scopes pcs     [0x0000000110df5d40,0x0000000110df5e30] = 240
 dependencies   [0x0000000110df5e30,0x0000000110df5e38] = 8
----------------------------------------------------------------------
FunctionalZipCode$$Lambda$8.<init>(LFunctionalZipCode;Ljava/lang/String;)V  [0x0000000110df5b20, 0x0000000110df5d18]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f17c690} '<init>' '(LFunctionalZipCode;Ljava/lang/String;)V' in 'FunctionalZipCode$$Lambda$8'
  # this:     rsi:rsi   = 'FunctionalZipCode$$Lambda$8'
  # parm0:    rdx:rdx   = 'FunctionalZipCode'
  # parm1:    rcx:rcx   = 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110df5b20: mov    0x8(%rsi),%r10d
  0x0000000110df5b24: movabs $0x800000000,%r12
  0x0000000110df5b2e: add    %r12,%r10
  0x0000000110df5b31: xor    %r12,%r12
  0x0000000110df5b34: cmp    %r10,%rax
  0x0000000110df5b37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df5b3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df5b40: sub    $0x18,%rsp
  0x0000000110df5b47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@-1

  0x0000000110df5b4c: mov    %rcx,%rbp
  0x0000000110df5b4f: mov    %rdx,%rbx
  0x0000000110df5b52: cmpb   $0x0,0x30(%r15)
  0x0000000110df5b57: jne    0x0000000110df5c6b
  0x0000000110df5b5d: mov    %rsi,%r13
  0x0000000110df5b60: mov    %r13,%r10
  0x0000000110df5b63: mov    %rbx,%r8
  0x0000000110df5b66: shr    $0x3,%r8
  0x0000000110df5b6a: mov    %r8d,0xc(%r13)
  0x0000000110df5b6e: mov    %rbx,%r11
  0x0000000110df5b71: xor    %r10,%r11
  0x0000000110df5b74: shr    $0x14,%r11
  0x0000000110df5b78: test   %r11,%r11
  0x0000000110df5b7b: je     0x0000000110df5bd5
  0x0000000110df5b7d: test   %rbx,%rbx
  0x0000000110df5b80: je     0x0000000110df5bd5
  0x0000000110df5b82: shr    $0x9,%r10
  0x0000000110df5b86: movabs $0x110569000,%rdi
  0x0000000110df5b90: add    %r10,%rdi
  0x0000000110df5b93: cmpb   $0x20,(%rdi)
  0x0000000110df5b96: je     0x0000000110df5bd5
  0x0000000110df5b98: mov    0x70(%r15),%r10
  0x0000000110df5b9c: mov    0x80(%r15),%r11
  0x0000000110df5ba3: lock addl $0x0,-0x40(%rsp)
  0x0000000110df5ba9: cmpb   $0x0,(%rdi)
  0x0000000110df5bac: je     0x0000000110df5bd5
  0x0000000110df5bae: movb   $0x0,(%rdi)
  0x0000000110df5bb1: test   %r10,%r10
  0x0000000110df5bb4: jne    0x0000000110df5bc8
  0x0000000110df5bb6: mov    %r15,%rsi
  0x0000000110df5bb9: movabs $0x107aec8ce,%r10
  0x0000000110df5bc3: callq  *%r10
  0x0000000110df5bc6: jmp    0x0000000110df5bd5
  0x0000000110df5bc8: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110df5bcd: add    $0xfffffffffffffff8,%r10
  0x0000000110df5bd1: mov    %r10,0x70(%r15)
  0x0000000110df5bd5: cmpb   $0x0,0x30(%r15)
  0x0000000110df5bda: jne    0x0000000110df5ca1
  0x0000000110df5be0: mov    %r13,%r10
  0x0000000110df5be3: mov    %rbp,%r11
  0x0000000110df5be6: shr    $0x3,%r11
  0x0000000110df5bea: mov    %r11d,0x10(%r13)
  0x0000000110df5bee: mov    %rbp,%r11
  0x0000000110df5bf1: xor    %r10,%r11
  0x0000000110df5bf4: shr    $0x14,%r11
  0x0000000110df5bf8: test   %r11,%r11
  0x0000000110df5bfb: je     0x0000000110df5c5b
  0x0000000110df5bfd: test   %rbp,%rbp
  0x0000000110df5c00: je     0x0000000110df5c5b
  0x0000000110df5c02: shr    $0x9,%r10
  0x0000000110df5c06: movabs $0x110569000,%r8
  0x0000000110df5c10: add    %r10,%r8
  0x0000000110df5c13: cmpb   $0x20,(%r8)
  0x0000000110df5c17: je     0x0000000110df5c5b
  0x0000000110df5c19: mov    0x70(%r15),%r10    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5c1d: mov    0x80(%r15),%r11
  0x0000000110df5c24: lock addl $0x0,-0x40(%rsp)
  0x0000000110df5c2a: cmpb   $0x0,(%r8)
  0x0000000110df5c2e: je     0x0000000110df5c5b
  0x0000000110df5c30: movb   $0x0,(%r8)
  0x0000000110df5c34: test   %r10,%r10
  0x0000000110df5c37: jne    0x0000000110df5c4e  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5c39: mov    %r8,%rdi           ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5c3c: mov    %r15,%rsi
  0x0000000110df5c3f: movabs $0x107aec8ce,%r10
  0x0000000110df5c49: callq  *%r10
  0x0000000110df5c4c: jmp    0x0000000110df5c5b
  0x0000000110df5c4e: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5c53: add    $0xfffffffffffffff8,%r10  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5c57: mov    %r10,0x70(%r15)    ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5c5b: add    $0x10,%rsp
  0x0000000110df5c5f: pop    %rbp
  0x0000000110df5c60: mov    0x108(%r15),%r10
  0x0000000110df5c67: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df5c6a: retq   
  0x0000000110df5c6b: mov    %rsi,%r13
  0x0000000110df5c6e: mov    0xc(%rsi),%r10d
  0x0000000110df5c72: test   %r10d,%r10d
  0x0000000110df5c75: je     0x0000000110df5b60
  0x0000000110df5c7b: mov    0x38(%r15),%r11
  0x0000000110df5c7f: mov    %r10,%rdi
  0x0000000110df5c82: shl    $0x3,%rdi
  0x0000000110df5c86: test   %r11,%r11
  0x0000000110df5c89: je     0x0000000110df5cd4
  0x0000000110df5c8b: mov    0x48(%r15),%r10
  0x0000000110df5c8f: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110df5c94: add    $0xfffffffffffffff8,%r11
  0x0000000110df5c98: mov    %r11,0x38(%r15)
  0x0000000110df5c9c: jmpq   0x0000000110df5b60
  0x0000000110df5ca1: mov    0x10(%r13),%r11d
  0x0000000110df5ca5: test   %r11d,%r11d
  0x0000000110df5ca8: je     0x0000000110df5be0
  0x0000000110df5cae: mov    0x38(%r15),%r10
  0x0000000110df5cb2: mov    %r11,%rdi
  0x0000000110df5cb5: shl    $0x3,%rdi
  0x0000000110df5cb9: test   %r10,%r10
  0x0000000110df5cbc: je     0x0000000110df5ce9  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5cbe: mov    0x48(%r15),%r11
  0x0000000110df5cc2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5cc7: add    $0xfffffffffffffff8,%r10  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5ccb: mov    %r10,0x38(%r15)    ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5ccf: jmpq   0x0000000110df5be0
  0x0000000110df5cd4: mov    %r15,%rsi
  0x0000000110df5cd7: movabs $0x107aec8aa,%r10
  0x0000000110df5ce1: callq  *%r10
  0x0000000110df5ce4: jmpq   0x0000000110df5b60  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@6

  0x0000000110df5ce9: mov    %r15,%rsi
  0x0000000110df5cec: movabs $0x107aec8aa,%r10
  0x0000000110df5cf6: callq  *%r10
  0x0000000110df5cf9: jmpq   0x0000000110df5be0  ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::<init>@11

  0x0000000110df5cfe: hlt    
  0x0000000110df5cff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110df5d00: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110df5d05: callq  0x0000000110df5d0a
  0x0000000110df5d0a: subq   $0x5,(%rsp)
  0x0000000110df5d0f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df5d14: hlt    
  0x0000000110df5d15: hlt    
  0x0000000110df5d16: hlt    
  0x0000000110df5d17: hlt    
Compiled method (c2)     781  112             java.util.Optional::or (32 bytes)
 total in heap  [0x0000000110df5410,0x0000000110df5960] = 1360
 relocation     [0x0000000110df5588,0x0000000110df55b8] = 48
 main code      [0x0000000110df55c0,0x0000000110df56c0] = 256
 stub code      [0x0000000110df56c0,0x0000000110df56e8] = 40
 oops           [0x0000000110df56e8,0x0000000110df5700] = 24
 metadata       [0x0000000110df5700,0x0000000110df5730] = 48
 scopes data    [0x0000000110df5730,0x0000000110df57e8] = 184
 scopes pcs     [0x0000000110df57e8,0x0000000110df5928] = 320
 dependencies   [0x0000000110df5928,0x0000000110df5930] = 8
 handler table  [0x0000000110df5930,0x0000000110df5948] = 24
 nul chk table  [0x0000000110df5948,0x0000000110df5960] = 24
----------------------------------------------------------------------
java/util/Optional.or(Ljava/util/function/Supplier;)Ljava/util/Optional;  [0x0000000110df55c0, 0x0000000110df56e8]  296 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011efb52f8} 'or' '(Ljava/util/function/Supplier;)Ljava/util/Optional;' in 'java/util/Optional'
  # this:     rsi:rsi   = 'java/util/Optional'
  # parm0:    rdx:rdx   = 'java/util/function/Supplier'
  #           [sp+0x40]  (sp of caller)
  0x0000000110df55c0: mov    0x8(%rsi),%r10d
  0x0000000110df55c4: movabs $0x800000000,%r12
  0x0000000110df55ce: add    %r12,%r10
  0x0000000110df55d1: xor    %r12,%r12
  0x0000000110df55d4: cmp    %r10,%rax
  0x0000000110df55d7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110df55dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110df55e0: mov    %eax,-0x14000(%rsp)
  0x0000000110df55e7: push   %rbp
  0x0000000110df55e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.Optional::or@-1 (line 313)

  0x0000000110df55ec: mov    0x8(%rdx),%r10d    ; implicit exception: dispatches to 0x0000000110df5697
  0x0000000110df55f0: mov    0xc(%rsi),%r8d
  0x0000000110df55f4: test   %r8d,%r8d
  0x0000000110df55f7: jne    0x0000000110df564e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::or@9 (line 314)

  0x0000000110df55f9: cmp    $0x70440,%r10d     ;   {metadata('FunctionalZipCode$$Lambda$8')}
  0x0000000110df5600: jne    0x0000000110df567a  ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df5602: mov    0xc(%rdx),%r10d    ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@1
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df5606: mov    0x10(%rdx),%ebp    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@5
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df5609: mov    0xc(%r12,%r10,8),%r10d  ; implicit exception: dispatches to 0x0000000110df56b2
  0x0000000110df560e: test   %r10d,%r10d
  0x0000000110df5611: je     0x0000000110df566d  ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df5613: test   %ebp,%ebp
  0x0000000110df5615: je     0x0000000110df5661  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@4 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df5617: lea    (%r12,%rbp,8),%rcx
  0x0000000110df561b: movabs $0x70fd69f08,%rdx  ;   {oop("{}"{0x000000070fd69f08})}
  0x0000000110df5625: movabs $0x70fd69ec8,%rsi  ;   {oop("invalid zip code: {}"{0x000000070fd69ec8})}
  0x0000000110df562f: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=1}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ;   {optimized virtual_call}
  0x0000000110df5634: movabs $0x70ff4b4c8,%rax  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110df563e: movabs $0x70fd44b40,%r10  ;   {oop(a 'java/lang/Class'{0x000000070fd44b40} = 'Logger')}
  0x0000000110df5648: incl   0x70(%r10)         ;*putstatic errors {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@22 (line 8)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df564c: jmp    0x0000000110df5651
  0x0000000110df564e: mov    %rsi,%rax          ;*synchronization entry
                                                ; - java.util.Optional::or@-1 (line 313)

  0x0000000110df5651: add    $0x30,%rsp
  0x0000000110df5655: pop    %rbp
  0x0000000110df5656: mov    0x108(%r15),%r10
  0x0000000110df565d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110df5660: retq   
  0x0000000110df5661: movabs $0x70ff049f0,%rcx  ;   {oop("null"{0x000000070ff049f0})}
  0x0000000110df566b: jmp    0x0000000110df561b
  0x0000000110df566d: mov    $0xfffffff6,%esi
  0x0000000110df5672: nop
  0x0000000110df5673: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df5678: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df567a: mov    $0xffffffde,%esi
  0x0000000110df567f: mov    %rdx,%rbp
  0x0000000110df5682: nop
  0x0000000110df5683: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::or@15 (line 318)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df5688: ud2                       ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df568a: mov    %rax,%rsi
  0x0000000110df568d: add    $0x30,%rsp
  0x0000000110df5691: pop    %rbp
  0x0000000110df5692: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110df5697: mov    %rsi,%rbp
  0x0000000110df569a: mov    %rdx,0x8(%rsp)
  0x0000000110df569f: mov    %rdx,0x10(%rsp)
  0x0000000110df56a4: mov    $0xffffff4d,%esi
  0x0000000110df56a9: xchg   %ax,%ax
  0x0000000110df56ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.Optional::or@1 (line 313)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df56b0: ud2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.Optional::or@1 (line 313)

  0x0000000110df56b2: mov    $0xfffffff6,%esi
  0x0000000110df56b7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*invokespecial lambda$isZipCodeValid$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110df56bc: ud2                       ;*invokespecial lambda$isZipCodeValid$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)

  0x0000000110df56be: hlt    
  0x0000000110df56bf: hlt    
[Stub Code]
  0x0000000110df56c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110df56ca: jmpq   0x0000000110df56ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110df56cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110df56d4: callq  0x0000000110df56d9
  0x0000000110df56d9: subq   $0x5,(%rsp)
  0x0000000110df56de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110df56e3: hlt    
  0x0000000110df56e4: hlt    
  0x0000000110df56e5: hlt    
  0x0000000110df56e6: hlt    
  0x0000000110df56e7: hlt    

ImmutableOopMap{}pc offsets: 116 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 184 
ImmutableOopMap{rbp=Oop }pc offsets: 200 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 240 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 252 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(DLjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110de86a0, 0x0000000110de86c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c49d8} 'linkToStatic' '(DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110de86a0: mov    0x24(%rsi),%ebx
  0x0000000110de86a3: shl    $0x3,%rbx
  0x0000000110de86a7: mov    0x10(%rbx),%rbx
  0x0000000110de86ab: test   %rbx,%rbx
  0x0000000110de86ae: je     0x0000000110de86b7
  0x0000000110de86b4: jmpq   *0x38(%rbx)
  0x0000000110de86b7: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de86bc: hlt    
  0x0000000110de86bd: hlt    
  0x0000000110de86be: hlt    
  0x0000000110de86bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(ILjava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x0000000110de7d20, 0x0000000110de7d40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c4fe0} 'linkToStatic' '(ILjava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110de7d20: mov    0x24(%r9),%ebx
  0x0000000110de7d24: shl    $0x3,%rbx
  0x0000000110de7d28: mov    0x10(%rbx),%rbx
  0x0000000110de7d2c: test   %rbx,%rbx
  0x0000000110de7d2f: je     0x0000000110de7d38
  0x0000000110de7d35: jmpq   *0x38(%rbx)
  0x0000000110de7d38: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de7d3d: hlt    
  0x0000000110de7d3e: hlt    
  0x0000000110de7d3f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(ILjava/lang/Object;II)I  [0x0000000110de7b20, 0x0000000110de7b50]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c50f8} 'invokeBasic' '(ILjava/lang/Object;II)I' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = int
  # parm3:    r9        = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110de7b20: mov    0x14(%rsi),%ebx
  0x0000000110de7b23: shl    $0x3,%rbx
  0x0000000110de7b27: mov    0x28(%rbx),%ebx
  0x0000000110de7b2a: shl    $0x3,%rbx
  0x0000000110de7b2e: mov    0x24(%rbx),%ebx
  0x0000000110de7b31: shl    $0x3,%rbx
  0x0000000110de7b35: mov    0x10(%rbx),%rbx
  0x0000000110de7b39: test   %rbx,%rbx
  0x0000000110de7b3c: je     0x0000000110de7b45
  0x0000000110de7b42: jmpq   *0x38(%rbx)
  0x0000000110de7b45: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de7b4a: hlt    
  0x0000000110de7b4b: hlt    
  0x0000000110de7b4c: hlt    
  0x0000000110de7b4d: hlt    
  0x0000000110de7b4e: hlt    
  0x0000000110de7b4f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;ILjava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x0000000110de7920, 0x0000000110de7940]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c5210} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110de7920: cmp    (%rsi),%rax
  0x0000000110de7923: mov    0x24(%rdi),%ebx
  0x0000000110de7926: shl    $0x3,%rbx
  0x0000000110de792a: mov    0x10(%rbx),%rbx
  0x0000000110de792e: test   %rbx,%rbx
  0x0000000110de7931: je     0x0000000110de793a
  0x0000000110de7937: jmpq   *0x38(%rbx)
  0x0000000110de793a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de793f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110de7720, 0x0000000110de7748]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c6928} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x0000000110de7720: mov    0x20(%rsp),%rbx
  0x0000000110de7725: mov    0x24(%rbx),%ebx
  0x0000000110de7728: shl    $0x3,%rbx
  0x0000000110de772c: mov    0x10(%rbx),%rbx
  0x0000000110de7730: test   %rbx,%rbx
  0x0000000110de7733: je     0x0000000110de773c
  0x0000000110de7739: jmpq   *0x38(%rbx)
  0x0000000110de773c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de7741: hlt    
  0x0000000110de7742: hlt    
  0x0000000110de7743: hlt    
  0x0000000110de7744: hlt    
  0x0000000110de7745: hlt    
  0x0000000110de7746: hlt    
  0x0000000110de7747: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110de7520, 0x0000000110de7550]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c6a90} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  0x0000000110de7520: mov    0x14(%rsi),%ebx
  0x0000000110de7523: shl    $0x3,%rbx
  0x0000000110de7527: mov    0x28(%rbx),%ebx
  0x0000000110de752a: shl    $0x3,%rbx
  0x0000000110de752e: mov    0x24(%rbx),%ebx
  0x0000000110de7531: shl    $0x3,%rbx
  0x0000000110de7535: mov    0x10(%rbx),%rbx
  0x0000000110de7539: test   %rbx,%rbx
  0x0000000110de753c: je     0x0000000110de7545
  0x0000000110de7542: jmpq   *0x38(%rbx)
  0x0000000110de7545: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110de754a: hlt    
  0x0000000110de754b: hlt    
  0x0000000110de754c: hlt    
  0x0000000110de754d: hlt    
  0x0000000110de754e: hlt    
  0x0000000110de754f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110deec20, 0x0000000110deec48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c7d08} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/invoke/MemberName'
  0x0000000110deec20: mov    0x28(%rsp),%rbx
  0x0000000110deec25: mov    0x24(%rbx),%ebx
  0x0000000110deec28: shl    $0x3,%rbx
  0x0000000110deec2c: mov    0x10(%rbx),%rbx
  0x0000000110deec30: test   %rbx,%rbx
  0x0000000110deec33: je     0x0000000110deec3c
  0x0000000110deec39: jmpq   *0x38(%rbx)
  0x0000000110deec3c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110deec41: hlt    
  0x0000000110deec42: hlt    
  0x0000000110deec43: hlt    
  0x0000000110deec44: hlt    
  0x0000000110deec45: hlt    
  0x0000000110deec46: hlt    
  0x0000000110deec47: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110df29a0, 0x0000000110df29d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c7e70} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  0x0000000110df29a0: mov    0x14(%rsi),%ebx
  0x0000000110df29a3: shl    $0x3,%rbx
  0x0000000110df29a7: mov    0x28(%rbx),%ebx
  0x0000000110df29aa: shl    $0x3,%rbx
  0x0000000110df29ae: mov    0x24(%rbx),%ebx
  0x0000000110df29b1: shl    $0x3,%rbx
  0x0000000110df29b5: mov    0x10(%rbx),%rbx
  0x0000000110df29b9: test   %rbx,%rbx
  0x0000000110df29bc: je     0x0000000110df29c5
  0x0000000110df29c2: jmpq   *0x38(%rbx)
  0x0000000110df29c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df29ca: hlt    
  0x0000000110df29cb: hlt    
  0x0000000110df29cc: hlt    
  0x0000000110df29cd: hlt    
  0x0000000110df29ce: hlt    
  0x0000000110df29cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IILjava/lang/invoke/MemberName;)I  [0x0000000110df53a0, 0x0000000110df53c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c8078} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110df53a0: mov    0x24(%rcx),%ebx
  0x0000000110df53a3: shl    $0x3,%rbx
  0x0000000110df53a7: mov    0x10(%rbx),%rbx
  0x0000000110df53ab: test   %rbx,%rbx
  0x0000000110df53ae: je     0x0000000110df53b7
  0x0000000110df53b4: jmpq   *0x38(%rbx)
  0x0000000110df53b7: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df53bc: hlt    
  0x0000000110df53bd: hlt    
  0x0000000110df53be: hlt    
  0x0000000110df53bf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110df51a0, 0x0000000110df51c8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c90d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x0000000110df51a0: mov    0x30(%rsp),%rbx
  0x0000000110df51a5: mov    0x24(%rbx),%ebx
  0x0000000110df51a8: shl    $0x3,%rbx
  0x0000000110df51ac: mov    0x10(%rbx),%rbx
  0x0000000110df51b0: test   %rbx,%rbx
  0x0000000110df51b3: je     0x0000000110df51bc
  0x0000000110df51b9: jmpq   *0x38(%rbx)
  0x0000000110df51bc: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df51c1: hlt    
  0x0000000110df51c2: hlt    
  0x0000000110df51c3: hlt    
  0x0000000110df51c4: hlt    
  0x0000000110df51c5: hlt    
  0x0000000110df51c6: hlt    
  0x0000000110df51c7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(II)I  [0x0000000110df4fa0, 0x0000000110df4fd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c91e8} 'invokeBasic' '(II)I' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110df4fa0: mov    0x14(%rsi),%ebx
  0x0000000110df4fa3: shl    $0x3,%rbx
  0x0000000110df4fa7: mov    0x28(%rbx),%ebx
  0x0000000110df4faa: shl    $0x3,%rbx
  0x0000000110df4fae: mov    0x24(%rbx),%ebx
  0x0000000110df4fb1: shl    $0x3,%rbx
  0x0000000110df4fb5: mov    0x10(%rbx),%rbx
  0x0000000110df4fb9: test   %rbx,%rbx
  0x0000000110df4fbc: je     0x0000000110df4fc5
  0x0000000110df4fc2: jmpq   *0x38(%rbx)
  0x0000000110df4fc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df4fca: hlt    
  0x0000000110df4fcb: hlt    
  0x0000000110df4fcc: hlt    
  0x0000000110df4fcd: hlt    
  0x0000000110df4fce: hlt    
  0x0000000110df4fcf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x0000000110df4da0, 0x0000000110df4dc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c9300} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110df4da0: cmp    (%rsi),%rax
  0x0000000110df4da3: mov    0x24(%r8),%ebx
  0x0000000110df4da7: shl    $0x3,%rbx
  0x0000000110df4dab: mov    0x10(%rbx),%rbx
  0x0000000110df4daf: test   %rbx,%rbx
  0x0000000110df4db2: je     0x0000000110df4dbb
  0x0000000110df4db8: jmpq   *0x38(%rbx)
  0x0000000110df4dbb: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110df4ba0, 0x0000000110df4bd0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1c9468} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  0x0000000110df4ba0: mov    0x14(%rsi),%ebx
  0x0000000110df4ba3: shl    $0x3,%rbx
  0x0000000110df4ba7: mov    0x28(%rbx),%ebx
  0x0000000110df4baa: shl    $0x3,%rbx
  0x0000000110df4bae: mov    0x24(%rbx),%ebx
  0x0000000110df4bb1: shl    $0x3,%rbx
  0x0000000110df4bb5: mov    0x10(%rbx),%rbx
  0x0000000110df4bb9: test   %rbx,%rbx
  0x0000000110df4bbc: je     0x0000000110df4bc5
  0x0000000110df4bc2: jmpq   *0x38(%rbx)
  0x0000000110df4bc5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df4bca: hlt    
  0x0000000110df4bcb: hlt    
  0x0000000110df4bcc: hlt    
  0x0000000110df4bcd: hlt    
  0x0000000110df4bce: hlt    
  0x0000000110df4bcf: hlt    
Compiled method (c2)     815  126             java.lang.String::hashCode (49 bytes)
 total in heap  [0x0000000110dfe990,0x0000000110dff068] = 1752
 relocation     [0x0000000110dfeb08,0x0000000110dfeb20] = 24
 main code      [0x0000000110dfeb20,0x0000000110dfed40] = 544
 stub code      [0x0000000110dfed40,0x0000000110dfed58] = 24
 metadata       [0x0000000110dfed58,0x0000000110dfed70] = 24
 scopes data    [0x0000000110dfed70,0x0000000110dfee50] = 224
 scopes pcs     [0x0000000110dfee50,0x0000000110dff050] = 512
 dependencies   [0x0000000110dff050,0x0000000110dff058] = 8
 nul chk table  [0x0000000110dff058,0x0000000110dff068] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x0000000110dfeb20, 0x0000000110dfed58]  568 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed6fbd0} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x0000000110dfeb20: mov    0x8(%rsi),%r10d
  0x0000000110dfeb24: movabs $0x800000000,%r12
  0x0000000110dfeb2e: add    %r12,%r10
  0x0000000110dfeb31: xor    %r12,%r12
  0x0000000110dfeb34: cmp    %r10,%rax
  0x0000000110dfeb37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dfeb3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dfeb40: mov    %eax,-0x14000(%rsp)
  0x0000000110dfeb47: push   %rbp
  0x0000000110dfeb48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x0000000110dfeb4c: mov    0x10(%rsi),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x0000000110dfeb4f: test   %eax,%eax
  0x0000000110dfeb51: je     0x0000000110dfeb63  ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x0000000110dfeb53: add    $0x20,%rsp
  0x0000000110dfeb57: pop    %rbp
  0x0000000110dfeb58: mov    0x108(%r15),%r10
  0x0000000110dfeb5f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dfeb62: retq   
  0x0000000110dfeb63: mov    0xc(%rsi),%r9d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x0000000110dfeb67: mov    0xc(%r12,%r9,8),%r11d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x0000000110dfed26
  0x0000000110dfeb6c: test   %r11d,%r11d
  0x0000000110dfeb6f: jbe    0x0000000110dfecef  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x0000000110dfeb75: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000110dfeb79: test   %ebp,%ebp
  0x0000000110dfeb7b: jne    0x0000000110dfed12  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000110dfeb81: mov    %r11d,%ecx
  0x0000000110dfeb84: dec    %ecx
  0x0000000110dfeb86: cmp    %r11d,%ecx
  0x0000000110dfeb89: jae    0x0000000110dfecf6
  0x0000000110dfeb8f: movzbl 0x10(%r12,%r9,8),%r8d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfeb95: mov    %r11d,%r10d
  0x0000000110dfeb98: add    $0xfffffff9,%r10d
  0x0000000110dfeb9c: shl    $0x3,%r9           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x0000000110dfeba0: mov    $0x80000000,%edi
  0x0000000110dfeba5: cmp    %r10d,%ecx
  0x0000000110dfeba8: cmovl  %edi,%r10d
  0x0000000110dfebac: mov    $0x1,%ecx
  0x0000000110dfebb1: cmp    $0x1,%r10d
  0x0000000110dfebb5: jle    0x0000000110dfecbf
  0x0000000110dfebbb: mov    %r8d,%edi
  0x0000000110dfebbe: shl    $0x5,%edi
  0x0000000110dfebc1: sub    %r8d,%edi          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfebc4: jmp    0x0000000110dfebd0
  0x0000000110dfebc6: vmovq  %xmm0,%rsi
  0x0000000110dfebcb: vmovd  %xmm1,%r11d
  0x0000000110dfebd0: mov    %r10d,%ebx
  0x0000000110dfebd3: sub    %ecx,%ebx
  0x0000000110dfebd5: mov    $0x1f40,%edx
  0x0000000110dfebda: cmp    %edx,%ebx
  0x0000000110dfebdc: mov    $0x1f40,%r8d
  0x0000000110dfebe2: cmovg  %r8d,%ebx
  0x0000000110dfebe6: add    %ecx,%ebx
  0x0000000110dfebe8: vmovq  %rsi,%xmm0
  0x0000000110dfebed: vmovd  %r11d,%xmm1
  0x0000000110dfebf2: data16 nopw 0x0(%rax,%rax,1)
  0x0000000110dfebfc: data16 data16 xchg %ax,%ax  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfec00: movslq %ecx,%r8           ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfec03: movzbl 0x10(%r9,%r8,1),%eax
  0x0000000110dfec09: movzbl 0x17(%r9,%r8,1),%ebp
  0x0000000110dfec0f: movzbl 0x11(%r9,%r8,1),%r11d
  0x0000000110dfec15: movzbl 0x16(%r9,%r8,1),%esi
  0x0000000110dfec1b: movzbl 0x15(%r9,%r8,1),%edx
  0x0000000110dfec21: add    %eax,%edi
  0x0000000110dfec23: movzbl 0x13(%r9,%r8,1),%eax
  0x0000000110dfec29: mov    %edi,%r13d
  0x0000000110dfec2c: shl    $0x5,%r13d
  0x0000000110dfec30: sub    %edi,%r13d
  0x0000000110dfec33: add    %r11d,%r13d
  0x0000000110dfec36: movzbl 0x12(%r9,%r8,1),%r14d
  0x0000000110dfec3c: movzbl 0x14(%r9,%r8,1),%r11d
  0x0000000110dfec42: mov    %r13d,%edi
  0x0000000110dfec45: shl    $0x5,%edi
  0x0000000110dfec48: sub    %r13d,%edi
  0x0000000110dfec4b: add    %r14d,%edi
  0x0000000110dfec4e: mov    %edi,%r8d
  0x0000000110dfec51: shl    $0x5,%r8d
  0x0000000110dfec55: sub    %edi,%r8d
  0x0000000110dfec58: add    %eax,%r8d
  0x0000000110dfec5b: mov    %r8d,%eax
  0x0000000110dfec5e: shl    $0x5,%eax
  0x0000000110dfec61: sub    %r8d,%eax
  0x0000000110dfec64: add    %r11d,%eax
  0x0000000110dfec67: mov    %eax,%r8d
  0x0000000110dfec6a: shl    $0x5,%r8d
  0x0000000110dfec6e: sub    %eax,%r8d
  0x0000000110dfec71: add    %edx,%r8d
  0x0000000110dfec74: mov    %r8d,%r11d
  0x0000000110dfec77: shl    $0x5,%r11d
  0x0000000110dfec7b: sub    %r8d,%r11d
  0x0000000110dfec7e: add    %esi,%r11d
  0x0000000110dfec81: mov    %r11d,%r8d
  0x0000000110dfec84: shl    $0x5,%r8d
  0x0000000110dfec88: sub    %r11d,%r8d
  0x0000000110dfec8b: add    %ebp,%r8d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfec8e: mov    %r8d,%edi
  0x0000000110dfec91: shl    $0x5,%edi
  0x0000000110dfec94: sub    %r8d,%edi          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfec97: add    $0x8,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfec9a: cmp    %ebx,%ecx
  0x0000000110dfec9c: jl     0x0000000110dfec00  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfeca2: mov    0x108(%r15),%r11   ; ImmutableOopMap{r9=Oop xmm0=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfeca9: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {poll}
  0x0000000110dfecac: cmp    %r10d,%ecx
  0x0000000110dfecaf: jl     0x0000000110dfebc6
  0x0000000110dfecb5: vmovq  %xmm0,%rsi
  0x0000000110dfecba: vmovd  %xmm1,%r11d
  0x0000000110dfecbf: cmp    %r11d,%ecx
  0x0000000110dfecc2: jge    0x0000000110dfecea  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfecc4: movzbl 0x10(%r9,%rcx,1),%r10d
  0x0000000110dfecca: mov    %r8d,%eax
  0x0000000110dfeccd: shl    $0x5,%eax
  0x0000000110dfecd0: sub    %r8d,%eax
  0x0000000110dfecd3: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfecd6: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfecd8: cmp    %r11d,%ecx
  0x0000000110dfecdb: jge    0x0000000110dfece2  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfecdd: mov    %eax,%r8d
  0x0000000110dfece0: jmp    0x0000000110dfecc4
  0x0000000110dfece2: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x0000000110dfece5: jmpq   0x0000000110dfeb53
  0x0000000110dfecea: mov    %r8d,%eax
  0x0000000110dfeced: jmp    0x0000000110dfece2
  0x0000000110dfecef: xor    %eax,%eax
  0x0000000110dfecf1: jmpq   0x0000000110dfeb53
  0x0000000110dfecf6: mov    %rsi,%rbp
  0x0000000110dfecf9: mov    %r11d,0x4(%rsp)
  0x0000000110dfecfe: mov    %r9d,0x8(%rsp)
  0x0000000110dfed03: mov    $0xffffff7e,%esi
  0x0000000110dfed08: data16 xchg %ax,%ax
  0x0000000110dfed0b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfed10: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000110dfed12: mov    %rsi,0x8(%rsp)
  0x0000000110dfed17: mov    $0xffffff4d,%esi
  0x0000000110dfed1c: data16 xchg %ax,%ax
  0x0000000110dfed1f: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfed24: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000110dfed26: mov    $0xfffffff6,%esi
  0x0000000110dfed2b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfed30: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)

  0x0000000110dfed32: hlt    
  0x0000000110dfed33: hlt    
  0x0000000110dfed34: hlt    
  0x0000000110dfed35: hlt    
  0x0000000110dfed36: hlt    
  0x0000000110dfed37: hlt    
  0x0000000110dfed38: hlt    
  0x0000000110dfed39: hlt    
  0x0000000110dfed3a: hlt    
  0x0000000110dfed3b: hlt    
  0x0000000110dfed3c: hlt    
  0x0000000110dfed3d: hlt    
  0x0000000110dfed3e: hlt    
  0x0000000110dfed3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dfed40: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dfed45: callq  0x0000000110dfed4a
  0x0000000110dfed4a: subq   $0x5,(%rsp)
  0x0000000110dfed4f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dfed54: hlt    
  0x0000000110dfed55: hlt    
  0x0000000110dfed56: hlt    
  0x0000000110dfed57: hlt    

ImmutableOopMap{r9=Oop xmm0=Oop }pc offsets: 393 
ImmutableOopMap{rbp=Oop [8]=NarrowOop }pc offsets: 496 
ImmutableOopMap{[8]=Oop }pc offsets: 516 
ImmutableOopMap{}pc offsets: 528 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110df49a0, 0x0000000110df49c8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1ca990} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/invoke/MemberName'
  0x0000000110df49a0: mov    0x38(%rsp),%rbx
  0x0000000110df49a5: mov    0x24(%rbx),%ebx
  0x0000000110df49a8: shl    $0x3,%rbx
  0x0000000110df49ac: mov    0x10(%rbx),%rbx
  0x0000000110df49b0: test   %rbx,%rbx
  0x0000000110df49b3: je     0x0000000110df49bc
  0x0000000110df49b9: jmpq   *0x38(%rbx)
  0x0000000110df49bc: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df49c1: hlt    
  0x0000000110df49c2: hlt    
  0x0000000110df49c3: hlt    
  0x0000000110df49c4: hlt    
  0x0000000110df49c5: hlt    
  0x0000000110df49c6: hlt    
  0x0000000110df49c7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000110df47a0, 0x0000000110df47d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1caaf8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  0x0000000110df47a0: mov    0x14(%rsi),%ebx
  0x0000000110df47a3: shl    $0x3,%rbx
  0x0000000110df47a7: mov    0x28(%rbx),%ebx
  0x0000000110df47aa: shl    $0x3,%rbx
  0x0000000110df47ae: mov    0x24(%rbx),%ebx
  0x0000000110df47b1: shl    $0x3,%rbx
  0x0000000110df47b5: mov    0x10(%rbx),%rbx
  0x0000000110df47b9: test   %rbx,%rbx
  0x0000000110df47bc: je     0x0000000110df47c5
  0x0000000110df47c2: jmpq   *0x38(%rbx)
  0x0000000110df47c5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110df47ca: hlt    
  0x0000000110df47cb: hlt    
  0x0000000110df47cc: hlt    
  0x0000000110df47cd: hlt    
  0x0000000110df47ce: hlt    
  0x0000000110df47cf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dfe320, 0x0000000110dfe348]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cbeb8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = int
  # parm13:   [sp+0x38]   = 'java/lang/invoke/MemberName'
  0x0000000110dfe320: mov    0x40(%rsp),%rbx
  0x0000000110dfe325: mov    0x24(%rbx),%ebx
  0x0000000110dfe328: shl    $0x3,%rbx
  0x0000000110dfe32c: mov    0x10(%rbx),%rbx
  0x0000000110dfe330: test   %rbx,%rbx
  0x0000000110dfe333: je     0x0000000110dfe33c
  0x0000000110dfe339: jmpq   *0x38(%rbx)
  0x0000000110dfe33c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfe341: hlt    
  0x0000000110dfe342: hlt    
  0x0000000110dfe343: hlt    
  0x0000000110dfe344: hlt    
  0x0000000110dfe345: hlt    
  0x0000000110dfe346: hlt    
  0x0000000110dfe347: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;  [0x0000000110dfe120, 0x0000000110dfe150]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cc020} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  # parm12:   [sp+0x38]   = int
  0x0000000110dfe120: mov    0x14(%rsi),%ebx
  0x0000000110dfe123: shl    $0x3,%rbx
  0x0000000110dfe127: mov    0x28(%rbx),%ebx
  0x0000000110dfe12a: shl    $0x3,%rbx
  0x0000000110dfe12e: mov    0x24(%rbx),%ebx
  0x0000000110dfe131: shl    $0x3,%rbx
  0x0000000110dfe135: mov    0x10(%rbx),%rbx
  0x0000000110dfe139: test   %rbx,%rbx
  0x0000000110dfe13c: je     0x0000000110dfe145
  0x0000000110dfe142: jmpq   *0x38(%rbx)
  0x0000000110dfe145: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfe14a: hlt    
  0x0000000110dfe14b: hlt    
  0x0000000110dfe14c: hlt    
  0x0000000110dfe14d: hlt    
  0x0000000110dfe14e: hlt    
  0x0000000110dfe14f: hlt    
Compiled method (c2)     832  131             java.util.Arrays::copyOfRange (63 bytes)
 total in heap  [0x0000000110dfc290,0x0000000110dfc8b0] = 1568
 relocation     [0x0000000110dfc408,0x0000000110dfc420] = 24
 main code      [0x0000000110dfc420,0x0000000110dfc660] = 576
 stub code      [0x0000000110dfc660,0x0000000110dfc678] = 24
 metadata       [0x0000000110dfc678,0x0000000110dfc688] = 16
 scopes data    [0x0000000110dfc688,0x0000000110dfc710] = 136
 scopes pcs     [0x0000000110dfc710,0x0000000110dfc880] = 368
 dependencies   [0x0000000110dfc880,0x0000000110dfc888] = 8
 handler table  [0x0000000110dfc888,0x0000000110dfc8a0] = 24
 nul chk table  [0x0000000110dfc8a0,0x0000000110dfc8b0] = 16
----------------------------------------------------------------------
java/util/Arrays.copyOfRange([BII)[B  [0x0000000110dfc420, 0x0000000110dfc678]  600 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ef23e90} 'copyOfRange' '([BII)[B' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110dfc420: mov    %eax,-0x14000(%rsp)
  0x0000000110dfc427: push   %rbp
  0x0000000110dfc428: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 4027)

  0x0000000110dfc42c: mov    %rsi,%r11
  0x0000000110dfc42f: mov    %ecx,%r10d
  0x0000000110dfc432: sub    %edx,%r10d         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@2 (line 4027)

  0x0000000110dfc435: test   %r10d,%r10d
  0x0000000110dfc438: jl     0x0000000110dfc60e  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)

  0x0000000110dfc43e: cmp    $0x100000,%r10d
  0x0000000110dfc445: ja     0x0000000110dfc5ba
  0x0000000110dfc44b: movslq %r10d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x0000000110dfc44e: mov    %rsi,%r9
  0x0000000110dfc451: mov    0xc(%rsi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; implicit exception: dispatches to 0x0000000110dfc62e
  0x0000000110dfc454: test   %edx,%edx
  0x0000000110dfc456: jl     0x0000000110dfc5f1  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)

  0x0000000110dfc45c: mov    %ebx,%edi
  0x0000000110dfc45e: sub    %edx,%edi          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@52 (line 4031)

  0x0000000110dfc460: mov    %r10d,%ecx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x0000000110dfc463: cmp    %ecx,%edi
  0x0000000110dfc465: mov    %ecx,%ebp
  0x0000000110dfc467: cmovl  %edi,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)

  0x0000000110dfc46a: mov    %edx,%edi
  0x0000000110dfc46c: add    %ebp,%edi
  0x0000000110dfc46e: cmp    %edi,%ebx
  0x0000000110dfc470: jb     0x0000000110dfc5f1
  0x0000000110dfc476: cmp    %ebp,%ecx
  0x0000000110dfc478: jb     0x0000000110dfc5f1
  0x0000000110dfc47e: test   %ebp,%ebp
  0x0000000110dfc480: jl     0x0000000110dfc5f1  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)

  0x0000000110dfc486: add    $0x17,%r8
  0x0000000110dfc48a: cmp    $0x100000,%r10d
  0x0000000110dfc491: ja     0x0000000110dfc579
  0x0000000110dfc497: mov    %r8,%r11
  0x0000000110dfc49a: and    $0xfffffffffffffff8,%r11
  0x0000000110dfc49e: mov    0x118(%r15),%rbx
  0x0000000110dfc4a5: mov    %rbx,%rcx
  0x0000000110dfc4a8: add    %r11,%rcx
  0x0000000110dfc4ab: cmp    0x128(%r15),%rcx
  0x0000000110dfc4b2: jae    0x0000000110dfc579
  0x0000000110dfc4b8: mov    %rcx,0x118(%r15)
  0x0000000110dfc4bf: prefetchnta 0xc0(%rcx)
  0x0000000110dfc4c6: movq   $0x1,(%rbx)
  0x0000000110dfc4cd: prefetchnta 0x100(%rcx)
  0x0000000110dfc4d4: movl   $0x820,0x8(%rbx)   ;   {metadata({type array byte})}
  0x0000000110dfc4db: mov    %r10d,0xc(%rbx)
  0x0000000110dfc4df: prefetchnta 0x140(%rcx)
  0x0000000110dfc4e6: prefetchnta 0x180(%rcx)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x0000000110dfc4ed: mov    %rbx,%r11
  0x0000000110dfc4f0: add    $0x10,%r11
  0x0000000110dfc4f4: shr    $0x3,%r8
  0x0000000110dfc4f8: test   %ebp,%ebp
  0x0000000110dfc4fa: je     0x0000000110dfc5c2
  0x0000000110dfc500: lea    0x10(%r9,%rdx,1),%rsi
  0x0000000110dfc505: movslq %ebp,%rdx
  0x0000000110dfc508: cmp    %r10d,%ebp
  0x0000000110dfc50b: jl     0x0000000110dfc539
  0x0000000110dfc50d: mov    %rsi,%rdi
  0x0000000110dfc510: mov    %r11,%rsi
  0x0000000110dfc513: vzeroupper 
  0x0000000110dfc516: movabs $0x110d9ecc0,%r10
  0x0000000110dfc520: callq  *%r10              ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)

  0x0000000110dfc523: mov    %rbx,%rax
  0x0000000110dfc526: vzeroupper 
  0x0000000110dfc529: add    $0x30,%rsp
  0x0000000110dfc52d: pop    %rbp
  0x0000000110dfc52e: mov    0x108(%r15),%r10
  0x0000000110dfc535: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dfc538: retq   
  0x0000000110dfc539: mov    %rdx,%r10
  0x0000000110dfc53c: add    $0x10,%r10
  0x0000000110dfc540: mov    %r10,%r9
  0x0000000110dfc543: and    $0xfffffffffffffff8,%r9
  0x0000000110dfc547: mov    %rbx,%rdi
  0x0000000110dfc54a: add    %r9,%rdi
  0x0000000110dfc54d: shr    $0x3,%r10
  0x0000000110dfc551: sub    %r10,%r8
  0x0000000110dfc554: mov    %r8,%rcx
  0x0000000110dfc557: xor    %rax,%rax
  0x0000000110dfc55a: cmp    $0x8,%rcx
  0x0000000110dfc55e: jg     0x0000000110dfc570
  0x0000000110dfc560: dec    %rcx
  0x0000000110dfc563: js     0x0000000110dfc577
  0x0000000110dfc565: mov    %rax,(%rdi,%rcx,8)
  0x0000000110dfc569: dec    %rcx
  0x0000000110dfc56c: jge    0x0000000110dfc565
  0x0000000110dfc56e: jmp    0x0000000110dfc577
  0x0000000110dfc570: shl    $0x3,%rcx
  0x0000000110dfc574: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dfc577: jmp    0x0000000110dfc50d
  0x0000000110dfc579: mov    %r8,0x10(%rsp)
  0x0000000110dfc57e: mov    %r10d,0x4(%rsp)
  0x0000000110dfc583: mov    %rsi,0x8(%rsp)
  0x0000000110dfc588: mov    %edx,(%rsp)
  0x0000000110dfc58b: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110dfc595: mov    %r10d,%edx
  0x0000000110dfc598: vzeroupper 
  0x0000000110dfc59b: callq  0x0000000110dc7980  ; ImmutableOopMap{[8]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110dfc5a0: mov    (%rsp),%edx
  0x0000000110dfc5a3: mov    0x8(%rsp),%r9
  0x0000000110dfc5a8: mov    0x4(%rsp),%r10d
  0x0000000110dfc5ad: mov    0x10(%rsp),%r8
  0x0000000110dfc5b2: mov    %rax,%rbx
  0x0000000110dfc5b5: jmpq   0x0000000110dfc4ed
  0x0000000110dfc5ba: movslq %r10d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x0000000110dfc5bd: jmpq   0x0000000110dfc44e
  0x0000000110dfc5c2: add    $0xfffffffffffffffe,%r8
  0x0000000110dfc5c6: mov    %r8,%rcx
  0x0000000110dfc5c9: mov    %r11,%rdi
  0x0000000110dfc5cc: xor    %rax,%rax
  0x0000000110dfc5cf: cmp    $0x8,%rcx
  0x0000000110dfc5d3: jg     0x0000000110dfc5e5
  0x0000000110dfc5d5: dec    %rcx
  0x0000000110dfc5d8: js     0x0000000110dfc5ec
  0x0000000110dfc5da: mov    %rax,(%rdi,%rcx,8)
  0x0000000110dfc5de: dec    %rcx
  0x0000000110dfc5e1: jge    0x0000000110dfc5da
  0x0000000110dfc5e3: jmp    0x0000000110dfc5ec
  0x0000000110dfc5e5: shl    $0x3,%rcx
  0x0000000110dfc5e9: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dfc5ec: jmpq   0x0000000110dfc523  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)

  0x0000000110dfc5f1: mov    $0xffffffcc,%esi
  0x0000000110dfc5f6: mov    %r9,%rbp
  0x0000000110dfc5f9: mov    %edx,(%rsp)
  0x0000000110dfc5fc: mov    %r10d,0x8(%rsp)
  0x0000000110dfc601: data16 xchg %ax,%ax
  0x0000000110dfc604: vzeroupper 
  0x0000000110dfc607: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfc60c: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)

  0x0000000110dfc60e: mov    $0xffffff4d,%esi
  0x0000000110dfc613: mov    %r11,%rbp
  0x0000000110dfc616: mov    %edx,(%rsp)
  0x0000000110dfc619: mov    %ecx,0x4(%rsp)
  0x0000000110dfc61d: mov    %r10d,0xc(%rsp)
  0x0000000110dfc622: xchg   %ax,%ax
  0x0000000110dfc624: vzeroupper 
  0x0000000110dfc627: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfc62c: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)

  0x0000000110dfc62e: mov    $0xfffffff6,%esi
  0x0000000110dfc633: nop
  0x0000000110dfc634: vzeroupper 
  0x0000000110dfc637: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfc63c: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x0000000110dfc63e: mov    %rax,%rsi
  0x0000000110dfc641: vzeroupper 
  0x0000000110dfc644: add    $0x30,%rsp
  0x0000000110dfc648: pop    %rbp
  0x0000000110dfc649: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110dfc64e: hlt    
  0x0000000110dfc64f: hlt    
  0x0000000110dfc650: hlt    
  0x0000000110dfc651: hlt    
  0x0000000110dfc652: hlt    
  0x0000000110dfc653: hlt    
  0x0000000110dfc654: hlt    
  0x0000000110dfc655: hlt    
  0x0000000110dfc656: hlt    
  0x0000000110dfc657: hlt    
  0x0000000110dfc658: hlt    
  0x0000000110dfc659: hlt    
  0x0000000110dfc65a: hlt    
  0x0000000110dfc65b: hlt    
  0x0000000110dfc65c: hlt    
  0x0000000110dfc65d: hlt    
  0x0000000110dfc65e: hlt    
  0x0000000110dfc65f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dfc660: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dfc665: callq  0x0000000110dfc66a
  0x0000000110dfc66a: subq   $0x5,(%rsp)
  0x0000000110dfc66f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dfc674: hlt    
  0x0000000110dfc675: hlt    
  0x0000000110dfc676: hlt    
  0x0000000110dfc677: hlt    

ImmutableOopMap{[8]=Oop }pc offsets: 384 
ImmutableOopMap{rbp=Oop }pc offsets: 492 524 
ImmutableOopMap{}pc offsets: 540 Compiled method (c2)     839  132             java.lang.StringLatin1::newString (17 bytes)
 total in heap  [0x0000000110dfb990,0x0000000110dfc278] = 2280
 relocation     [0x0000000110dfbb08,0x0000000110dfbb30] = 40
 main code      [0x0000000110dfbb40,0x0000000110dfbf00] = 960
 stub code      [0x0000000110dfbf00,0x0000000110dfbf18] = 24
 metadata       [0x0000000110dfbf18,0x0000000110dfbf40] = 40
 scopes data    [0x0000000110dfbf40,0x0000000110dfc030] = 240
 scopes pcs     [0x0000000110dfc030,0x0000000110dfc230] = 512
 dependencies   [0x0000000110dfc230,0x0000000110dfc238] = 8
 handler table  [0x0000000110dfc238,0x0000000110dfc268] = 48
 nul chk table  [0x0000000110dfc268,0x0000000110dfc278] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.newString([BII)Ljava/lang/String;  [0x0000000110dfbb40, 0x0000000110dfbf18]  984 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec4948} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000110dfbb40: mov    %eax,-0x14000(%rsp)
  0x0000000110dfbb47: push   %rbp
  0x0000000110dfbb48: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1 (line 715)

  0x0000000110dfbb4c: mov    %ecx,%ebp
  0x0000000110dfbb4e: mov    %edx,0x18(%rsp)
  0x0000000110dfbb52: mov    %rsi,0x10(%rsp)
  0x0000000110dfbb57: mov    0x118(%r15),%r13
  0x0000000110dfbb5e: mov    %r13,%r10
  0x0000000110dfbb61: add    $0x18,%r10
  0x0000000110dfbb65: cmp    0x128(%r15),%r10
  0x0000000110dfbb6c: jae    0x0000000110dfbdc8  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)

  0x0000000110dfbb72: mov    %r10,0x118(%r15)
  0x0000000110dfbb79: prefetchnta 0xc0(%r10)
  0x0000000110dfbb81: mov    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110dfbb87: movabs $0x800000000,%r10
  0x0000000110dfbb91: add    %r11,%r10
  0x0000000110dfbb94: mov    0xb8(%r10),%r10
  0x0000000110dfbb9b: mov    %r10,0x0(%r13)
  0x0000000110dfbb9f: movl   $0x1808,0x8(%r13)  ;   {metadata('java/lang/String')}
  0x0000000110dfbba7: movl   $0x0,0xc(%r13)
  0x0000000110dfbbaf: movq   $0x0,0x10(%r13)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)

  0x0000000110dfbbb7: mov    %ebp,%r10d
  0x0000000110dfbbba: test   %r10d,%r10d
  0x0000000110dfbbbd: jl     0x0000000110dfbea6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbc3: cmp    $0x100000,%r10d
  0x0000000110dfbbca: ja     0x0000000110dfbe34
  0x0000000110dfbbd0: movslq %r10d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbd3: mov    0x10(%rsp),%r9
  0x0000000110dfbbd8: mov    0xc(%r9),%ebx      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; implicit exception: dispatches to 0x0000000110dfbec6
  0x0000000110dfbbdc: mov    0x18(%rsp),%r11d
  0x0000000110dfbbe1: test   %r11d,%r11d
  0x0000000110dfbbe4: jl     0x0000000110dfbe6b  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbea: mov    %ebx,%ecx
  0x0000000110dfbbec: sub    %r11d,%ecx         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@52 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbef: mov    %r10d,%edx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbf2: cmp    %edx,%ecx
  0x0000000110dfbbf4: mov    %edx,%ebp
  0x0000000110dfbbf6: cmovl  %ecx,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbbf9: mov    %r11d,%edi
  0x0000000110dfbbfc: add    %ebp,%edi
  0x0000000110dfbbfe: cmp    %edi,%ebx
  0x0000000110dfbc00: jb     0x0000000110dfbe6b
  0x0000000110dfbc06: cmp    %ebp,%edx
  0x0000000110dfbc08: jb     0x0000000110dfbe6b
  0x0000000110dfbc0e: test   %ebp,%ebp
  0x0000000110dfbc10: jl     0x0000000110dfbe6b  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbc16: add    $0x17,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbc1a: cmp    $0x100000,%r10d
  0x0000000110dfbc21: ja     0x0000000110dfbde4
  0x0000000110dfbc27: mov    0x118(%r15),%r14
  0x0000000110dfbc2e: mov    %r8,%rcx
  0x0000000110dfbc31: and    $0xfffffffffffffff8,%rcx
  0x0000000110dfbc35: mov    %r14,%rbx
  0x0000000110dfbc38: add    %rcx,%rbx
  0x0000000110dfbc3b: cmp    0x128(%r15),%rbx
  0x0000000110dfbc42: jae    0x0000000110dfbde4  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)

  0x0000000110dfbc48: mov    %rbx,0x118(%r15)
  0x0000000110dfbc4f: prefetchnta 0xc0(%rbx)
  0x0000000110dfbc56: movq   $0x1,(%r14)
  0x0000000110dfbc5d: prefetchnta 0x100(%rbx)
  0x0000000110dfbc64: movl   $0x820,0x8(%r14)   ;   {metadata({type array byte})}
  0x0000000110dfbc6c: mov    %r10d,0xc(%r14)
  0x0000000110dfbc70: prefetchnta 0x140(%rbx)
  0x0000000110dfbc77: prefetchnta 0x180(%rbx)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbc7e: mov    %r14,%rsi
  0x0000000110dfbc81: add    $0x10,%rsi
  0x0000000110dfbc85: shr    $0x3,%r8
  0x0000000110dfbc89: mov    %r14,%rbx
  0x0000000110dfbc8c: shr    $0x3,%rbx
  0x0000000110dfbc90: test   %ebp,%ebp
  0x0000000110dfbc92: je     0x0000000110dfbe3c
  0x0000000110dfbc98: lea    0x10(%r9,%r11,1),%r11
  0x0000000110dfbc9d: movslq %ebp,%rdx
  0x0000000110dfbca0: cmp    %r10d,%ebp
  0x0000000110dfbca3: jl     0x0000000110dfbd4e
  0x0000000110dfbca9: mov    %r11,%rdi
  0x0000000110dfbcac: vzeroupper 
  0x0000000110dfbcaf: movabs $0x110d9ecc0,%r10
  0x0000000110dfbcb9: callq  *%r10
  0x0000000110dfbcbc: cmpb   $0x0,0x30(%r15)
  0x0000000110dfbcc1: jne    0x0000000110dfbd91
  0x0000000110dfbcc7: mov    %ebx,0xc(%r13)
  0x0000000110dfbccb: mov    %r14,%r10
  0x0000000110dfbcce: mov    %r13,%r11
  0x0000000110dfbcd1: xor    %r11,%r10
  0x0000000110dfbcd4: shr    $0x14,%r10
  0x0000000110dfbcd8: test   %r10,%r10
  0x0000000110dfbcdb: je     0x0000000110dfbd33
  0x0000000110dfbcdd: shr    $0x9,%r11
  0x0000000110dfbce1: movabs $0x110569000,%rdi
  0x0000000110dfbceb: add    %r11,%rdi
  0x0000000110dfbcee: cmpb   $0x20,(%rdi)
  0x0000000110dfbcf1: je     0x0000000110dfbd33
  0x0000000110dfbcf3: mov    0x80(%r15),%r10
  0x0000000110dfbcfa: mov    0x70(%r15),%r11
  0x0000000110dfbcfe: lock addl $0x0,-0x40(%rsp)
  0x0000000110dfbd04: cmpb   $0x0,(%rdi)
  0x0000000110dfbd07: je     0x0000000110dfbd33
  0x0000000110dfbd09: movb   $0x0,(%rdi)
  0x0000000110dfbd0c: test   %r11,%r11
  0x0000000110dfbd0f: jne    0x0000000110dfbd26
  0x0000000110dfbd11: mov    %r15,%rsi
  0x0000000110dfbd14: vzeroupper 
  0x0000000110dfbd17: movabs $0x107aec8ce,%r10
  0x0000000110dfbd21: callq  *%r10
  0x0000000110dfbd24: jmp    0x0000000110dfbd33
  0x0000000110dfbd26: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110dfbd2b: add    $0xfffffffffffffff8,%r11
  0x0000000110dfbd2f: mov    %r11,0x70(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)

  0x0000000110dfbd33: movb   $0x0,0x14(%r13)    ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1 (line 715)

  0x0000000110dfbd38: mov    %r13,%rax
  0x0000000110dfbd3b: vzeroupper 
  0x0000000110dfbd3e: add    $0x40,%rsp
  0x0000000110dfbd42: pop    %rbp
  0x0000000110dfbd43: mov    0x108(%r15),%r10
  0x0000000110dfbd4a: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dfbd4d: retq   
  0x0000000110dfbd4e: mov    %rdx,%r10
  0x0000000110dfbd51: add    $0x10,%r10
  0x0000000110dfbd55: mov    %r10,%r9
  0x0000000110dfbd58: and    $0xfffffffffffffff8,%r9
  0x0000000110dfbd5c: mov    %r14,%rdi
  0x0000000110dfbd5f: add    %r9,%rdi
  0x0000000110dfbd62: shr    $0x3,%r10
  0x0000000110dfbd66: sub    %r10,%r8
  0x0000000110dfbd69: mov    %r8,%rcx
  0x0000000110dfbd6c: xor    %rax,%rax
  0x0000000110dfbd6f: cmp    $0x8,%rcx
  0x0000000110dfbd73: jg     0x0000000110dfbd85
  0x0000000110dfbd75: dec    %rcx
  0x0000000110dfbd78: js     0x0000000110dfbd8c
  0x0000000110dfbd7a: mov    %rax,(%rdi,%rcx,8)
  0x0000000110dfbd7e: dec    %rcx
  0x0000000110dfbd81: jge    0x0000000110dfbd7a
  0x0000000110dfbd83: jmp    0x0000000110dfbd8c
  0x0000000110dfbd85: shl    $0x3,%rcx
  0x0000000110dfbd89: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dfbd8c: jmpq   0x0000000110dfbca9
  0x0000000110dfbd91: mov    0xc(%r13),%r11d
  0x0000000110dfbd95: test   %r11d,%r11d
  0x0000000110dfbd98: je     0x0000000110dfbcc7
  0x0000000110dfbd9e: mov    0x38(%r15),%r10
  0x0000000110dfbda2: mov    %r11,%rdi
  0x0000000110dfbda5: shl    $0x3,%rdi
  0x0000000110dfbda9: test   %r10,%r10
  0x0000000110dfbdac: je     0x0000000110dfbe8e
  0x0000000110dfbdb2: mov    0x48(%r15),%r11
  0x0000000110dfbdb6: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110dfbdbb: add    $0xfffffffffffffff8,%r10
  0x0000000110dfbdbf: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)

  0x0000000110dfbdc3: jmpq   0x0000000110dfbcc7
  0x0000000110dfbdc8: movabs $0x800001808,%rsi  ;   {metadata('java/lang/String')}
  0x0000000110dfbdd2: xchg   %ax,%ax
  0x0000000110dfbdd4: vzeroupper 
  0x0000000110dfbdd7: callq  0x0000000110dc6380  ; ImmutableOopMap{[16]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110dfbddc: mov    %rax,%r13
  0x0000000110dfbddf: jmpq   0x0000000110dfbbb7
  0x0000000110dfbde4: mov    %r8,0x18(%rsp)
  0x0000000110dfbde9: mov    %r13,0x10(%rsp)
  0x0000000110dfbdee: mov    %r10d,0xc(%rsp)
  0x0000000110dfbdf3: mov    %r11d,0x8(%rsp)
  0x0000000110dfbdf8: mov    %r9,(%rsp)
  0x0000000110dfbdfc: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110dfbe06: mov    %r10d,%edx
  0x0000000110dfbe09: data16 xchg %ax,%ax
  0x0000000110dfbe0c: vzeroupper 
  0x0000000110dfbe0f: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110dfbe14: mov    (%rsp),%r9
  0x0000000110dfbe18: mov    0x8(%rsp),%r11d
  0x0000000110dfbe1d: mov    0xc(%rsp),%r10d
  0x0000000110dfbe22: mov    0x10(%rsp),%r13
  0x0000000110dfbe27: mov    0x18(%rsp),%r8
  0x0000000110dfbe2c: mov    %rax,%r14
  0x0000000110dfbe2f: jmpq   0x0000000110dfbc7e
  0x0000000110dfbe34: movslq %r10d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbe37: jmpq   0x0000000110dfbbd3
  0x0000000110dfbe3c: add    $0xfffffffffffffffe,%r8
  0x0000000110dfbe40: mov    %r8,%rcx
  0x0000000110dfbe43: mov    %rsi,%rdi
  0x0000000110dfbe46: xor    %rax,%rax
  0x0000000110dfbe49: cmp    $0x8,%rcx
  0x0000000110dfbe4d: jg     0x0000000110dfbe5f
  0x0000000110dfbe4f: dec    %rcx
  0x0000000110dfbe52: js     0x0000000110dfbe66
  0x0000000110dfbe54: mov    %rax,(%rdi,%rcx,8)
  0x0000000110dfbe58: dec    %rcx
  0x0000000110dfbe5b: jge    0x0000000110dfbe54
  0x0000000110dfbe5d: jmp    0x0000000110dfbe66
  0x0000000110dfbe5f: shl    $0x3,%rcx
  0x0000000110dfbe63: rep rex.W stos %al,%es:(%rdi)
  0x0000000110dfbe66: jmpq   0x0000000110dfbcbc  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbe6b: mov    $0xffffffcc,%esi
  0x0000000110dfbe70: mov    %r13,(%rsp)
  0x0000000110dfbe74: mov    %r9,0x8(%rsp)
  0x0000000110dfbe79: mov    %r11d,0x10(%rsp)
  0x0000000110dfbe7e: mov    %r10d,0x18(%rsp)
  0x0000000110dfbe83: nop
  0x0000000110dfbe84: vzeroupper 
  0x0000000110dfbe87: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfbe8c: ud2    
  0x0000000110dfbe8e: mov    %r15,%rsi
  0x0000000110dfbe91: vzeroupper 
  0x0000000110dfbe94: movabs $0x107aec8aa,%r10
  0x0000000110dfbe9e: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)

  0x0000000110dfbea1: jmpq   0x0000000110dfbcc7  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 4027)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbea6: mov    0x18(%rsp),%ebp
  0x0000000110dfbeaa: add    %r10d,%ebp         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@8 (line 715)

  0x0000000110dfbead: mov    $0xffffff4d,%esi
  0x0000000110dfbeb2: mov    %r13,0x8(%rsp)
  0x0000000110dfbeb7: mov    %r10d,0x20(%rsp)
  0x0000000110dfbebc: vzeroupper 
  0x0000000110dfbebf: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfbec4: ud2    
  0x0000000110dfbec6: mov    $0xfffffff6,%esi
  0x0000000110dfbecb: nop
  0x0000000110dfbecc: vzeroupper 
  0x0000000110dfbecf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dfbed4: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)

  0x0000000110dfbed6: mov    %rax,%rsi
  0x0000000110dfbed9: jmp    0x0000000110dfbede
  0x0000000110dfbedb: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)

  0x0000000110dfbede: vzeroupper 
  0x0000000110dfbee1: add    $0x40,%rsp
  0x0000000110dfbee5: pop    %rbp
  0x0000000110dfbee6: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110dfbeeb: hlt    
  0x0000000110dfbeec: hlt    
  0x0000000110dfbeed: hlt    
  0x0000000110dfbeee: hlt    
  0x0000000110dfbeef: hlt    
  0x0000000110dfbef0: hlt    
  0x0000000110dfbef1: hlt    
  0x0000000110dfbef2: hlt    
  0x0000000110dfbef3: hlt    
  0x0000000110dfbef4: hlt    
  0x0000000110dfbef5: hlt    
  0x0000000110dfbef6: hlt    
  0x0000000110dfbef7: hlt    
  0x0000000110dfbef8: hlt    
  0x0000000110dfbef9: hlt    
  0x0000000110dfbefa: hlt    
  0x0000000110dfbefb: hlt    
  0x0000000110dfbefc: hlt    
  0x0000000110dfbefd: hlt    
  0x0000000110dfbefe: hlt    
  0x0000000110dfbeff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dfbf00: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dfbf05: callq  0x0000000110dfbf0a
  0x0000000110dfbf0a: subq   $0x5,(%rsp)
  0x0000000110dfbf0f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dfbf14: hlt    
  0x0000000110dfbf15: hlt    
  0x0000000110dfbf16: hlt    
  0x0000000110dfbf17: hlt    

ImmutableOopMap{[16]=Oop }pc offsets: 668 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 724 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 844 
ImmutableOopMap{[8]=Oop [16]=Oop }pc offsets: 900 
ImmutableOopMap{}pc offsets: 916 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dfdf20, 0x0000000110dfdf48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cd368} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = int
  # parm13:   [sp+0x38]   = int
  # parm14:   [sp+0x40]   = 'java/lang/invoke/MemberName'
  0x0000000110dfdf20: mov    0x48(%rsp),%rbx
  0x0000000110dfdf25: mov    0x24(%rbx),%ebx
  0x0000000110dfdf28: shl    $0x3,%rbx
  0x0000000110dfdf2c: mov    0x10(%rbx),%rbx
  0x0000000110dfdf30: test   %rbx,%rbx
  0x0000000110dfdf33: je     0x0000000110dfdf3c
  0x0000000110dfdf39: jmpq   *0x38(%rbx)
  0x0000000110dfdf3c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfdf41: hlt    
  0x0000000110dfdf42: hlt    
  0x0000000110dfdf43: hlt    
  0x0000000110dfdf44: hlt    
  0x0000000110dfdf45: hlt    
  0x0000000110dfdf46: hlt    
  0x0000000110dfdf47: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Object;  [0x0000000110dfdd20, 0x0000000110dfdd50]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cdb00} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  # parm12:   [sp+0x38]   = int
  # parm13:   [sp+0x40]   = int
  0x0000000110dfdd20: mov    0x14(%rsi),%ebx
  0x0000000110dfdd23: shl    $0x3,%rbx
  0x0000000110dfdd27: mov    0x28(%rbx),%ebx
  0x0000000110dfdd2a: shl    $0x3,%rbx
  0x0000000110dfdd2e: mov    0x24(%rbx),%ebx
  0x0000000110dfdd31: shl    $0x3,%rbx
  0x0000000110dfdd35: mov    0x10(%rbx),%rbx
  0x0000000110dfdd39: test   %rbx,%rbx
  0x0000000110dfdd3c: je     0x0000000110dfdd45
  0x0000000110dfdd42: jmpq   *0x38(%rbx)
  0x0000000110dfdd45: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfdd4a: hlt    
  0x0000000110dfdd4b: hlt    
  0x0000000110dfdd4c: hlt    
  0x0000000110dfdd4d: hlt    
  0x0000000110dfdd4e: hlt    
  0x0000000110dfdd4f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dfd820, 0x0000000110dfd848]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1ced70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = int
  # parm13:   [sp+0x38]   = int
  # parm14:   [sp+0x40]   = 'java/lang/Object'
  # parm15:   [sp+0x48]   = 'java/lang/invoke/MemberName'
  0x0000000110dfd820: mov    0x50(%rsp),%rbx
  0x0000000110dfd825: mov    0x24(%rbx),%ebx
  0x0000000110dfd828: shl    $0x3,%rbx
  0x0000000110dfd82c: mov    0x10(%rbx),%rbx
  0x0000000110dfd830: test   %rbx,%rbx
  0x0000000110dfd833: je     0x0000000110dfd83c
  0x0000000110dfd839: jmpq   *0x38(%rbx)
  0x0000000110dfd83c: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfd841: hlt    
  0x0000000110dfd842: hlt    
  0x0000000110dfd843: hlt    
  0x0000000110dfd844: hlt    
  0x0000000110dfd845: hlt    
  0x0000000110dfd846: hlt    
  0x0000000110dfd847: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(D)Ljava/lang/Object;  [0x0000000110dfd620, 0x0000000110dfd650]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cee88} 'invokeBasic' '(D)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  #           [sp+0x0]  (sp of caller)
  0x0000000110dfd620: mov    0x14(%rsi),%ebx
  0x0000000110dfd623: shl    $0x3,%rbx
  0x0000000110dfd627: mov    0x28(%rbx),%ebx
  0x0000000110dfd62a: shl    $0x3,%rbx
  0x0000000110dfd62e: mov    0x24(%rbx),%ebx
  0x0000000110dfd631: shl    $0x3,%rbx
  0x0000000110dfd635: mov    0x10(%rbx),%rbx
  0x0000000110dfd639: test   %rbx,%rbx
  0x0000000110dfd63c: je     0x0000000110dfd645
  0x0000000110dfd642: jmpq   *0x38(%rbx)
  0x0000000110dfd645: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfd64a: hlt    
  0x0000000110dfd64b: hlt    
  0x0000000110dfd64c: hlt    
  0x0000000110dfd64d: hlt    
  0x0000000110dfd64e: hlt    
  0x0000000110dfd64f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;DLjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110dfd220, 0x0000000110dfd240]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cefa0} 'linkToSpecial' '(Ljava/lang/Object;DLjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    xmm0:xmm0   = double
  # parm2:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110dfd220: cmp    (%rsi),%rax
  0x0000000110dfd223: mov    0x24(%rdx),%ebx
  0x0000000110dfd226: shl    $0x3,%rbx
  0x0000000110dfd22a: mov    0x10(%rbx),%rbx
  0x0000000110dfd22e: test   %rbx,%rbx
  0x0000000110dfd231: je     0x0000000110dfd23a
  0x0000000110dfd237: jmpq   *0x38(%rbx)
  0x0000000110dfd23a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfd23f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;  [0x0000000110dfd020, 0x0000000110dfd050]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cf108} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  # parm10:   [sp+0x28]   = 'java/lang/Object'
  # parm11:   [sp+0x30]   = 'java/lang/Object'
  # parm12:   [sp+0x38]   = int
  # parm13:   [sp+0x40]   = int
  # parm14:   [sp+0x48]   = 'java/lang/Object'
  0x0000000110dfd020: mov    0x14(%rsi),%ebx
  0x0000000110dfd023: shl    $0x3,%rbx
  0x0000000110dfd027: mov    0x28(%rbx),%ebx
  0x0000000110dfd02a: shl    $0x3,%rbx
  0x0000000110dfd02e: mov    0x24(%rbx),%ebx
  0x0000000110dfd031: shl    $0x3,%rbx
  0x0000000110dfd035: mov    0x10(%rbx),%rbx
  0x0000000110dfd039: test   %rbx,%rbx
  0x0000000110dfd03c: je     0x0000000110dfd045
  0x0000000110dfd042: jmpq   *0x38(%rbx)
  0x0000000110dfd045: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfd04a: hlt    
  0x0000000110dfd04b: hlt    
  0x0000000110dfd04c: hlt    
  0x0000000110dfd04d: hlt    
  0x0000000110dfd04e: hlt    
  0x0000000110dfd04f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(DI)Ljava/lang/Object;  [0x0000000110dfcaa0, 0x0000000110dfcad0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cf918} 'invokeBasic' '(DI)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    xmm0:xmm0   = double
  # parm1:    rdx       = int
  #           [sp+0x0]  (sp of caller)
  0x0000000110dfcaa0: mov    0x14(%rsi),%ebx
  0x0000000110dfcaa3: shl    $0x3,%rbx
  0x0000000110dfcaa7: mov    0x28(%rbx),%ebx
  0x0000000110dfcaaa: shl    $0x3,%rbx
  0x0000000110dfcaae: mov    0x24(%rbx),%ebx
  0x0000000110dfcab1: shl    $0x3,%rbx
  0x0000000110dfcab5: mov    0x10(%rbx),%rbx
  0x0000000110dfcab9: test   %rbx,%rbx
  0x0000000110dfcabc: je     0x0000000110dfcac5
  0x0000000110dfcac2: jmpq   *0x38(%rbx)
  0x0000000110dfcac5: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110dfcaca: hlt    
  0x0000000110dfcacb: hlt    
  0x0000000110dfcacc: hlt    
  0x0000000110dfcacd: hlt    
  0x0000000110dfcace: hlt    
  0x0000000110dfcacf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;DILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000110e02220, 0x0000000110e02240]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f1cfa30} 'linkToSpecial' '(Ljava/lang/Object;DILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    xmm0:xmm0   = double
  # parm2:    rdx       = int
  # parm3:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x0000000110e02220: cmp    (%rsi),%rax
  0x0000000110e02223: mov    0x24(%rcx),%ebx
  0x0000000110e02226: shl    $0x3,%rbx
  0x0000000110e0222a: mov    0x10(%rbx),%rbx
  0x0000000110e0222e: test   %rbx,%rbx
  0x0000000110e02231: je     0x0000000110e0223a
  0x0000000110e02237: jmpq   *0x38(%rbx)
  0x0000000110e0223a: jmpq   0x0000000110da9880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000110e0223f: hlt    
Time elapsed: 546.742 ms valid codes = 6000
Warmup phase
Compiled method (c2)     867  141             FunctionalZipCode::runTest (46 bytes)
 total in heap  [0x0000000110dff890,0x0000000110e00228] = 2456
 relocation     [0x0000000110dffa08,0x0000000110dffa48] = 64
 main code      [0x0000000110dffa60,0x0000000110dffca0] = 576
 stub code      [0x0000000110dffca0,0x0000000110dffcc8] = 40
 oops           [0x0000000110dffcc8,0x0000000110dffcd0] = 8
 metadata       [0x0000000110dffcd0,0x0000000110dffd00] = 48
 scopes data    [0x0000000110dffd00,0x0000000110dffeb0] = 432
 scopes pcs     [0x0000000110dffeb0,0x0000000110e001c0] = 784
 dependencies   [0x0000000110e001c0,0x0000000110e001c8] = 8
 handler table  [0x0000000110e001c8,0x0000000110e001f8] = 48
 nul chk table  [0x0000000110e001f8,0x0000000110e00228] = 48
----------------------------------------------------------------------
FunctionalZipCode.runTest()I  [0x0000000110dffa60, 0x0000000110dffcc8]  616 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f169bd8} 'runTest' '()I' in 'FunctionalZipCode'
  #           [sp+0x50]  (sp of caller)
  0x0000000110dffa60: mov    0x8(%rsi),%r10d
  0x0000000110dffa64: movabs $0x800000000,%r12
  0x0000000110dffa6e: add    %r12,%r10
  0x0000000110dffa71: xor    %r12,%r12
  0x0000000110dffa74: cmp    %r10,%rax
  0x0000000110dffa77: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dffa7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dffa80: mov    %eax,-0x14000(%rsp)
  0x0000000110dffa87: push   %rbp
  0x0000000110dffa88: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode::runTest@-1 (line 51)

  0x0000000110dffa8c: mov    %rsi,(%rsp)
  0x0000000110dffa90: movabs $0x70fe103f8,%r10  ;   {oop(a 'java/lang/Class'{0x000000070fe103f8} = 'FunctionalZipCode')}
  0x0000000110dffa9a: mov    0x70(%r10),%r10d
  0x0000000110dffa9e: mov    %r10,%rsi
  0x0000000110dffaa1: shl    $0x3,%rsi
  0x0000000110dffaa5: movabs $0xffffffffffffffff,%rax
  0x0000000110dffaaf: callq  0x0000000110d90180  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=1}
                                                ; - FunctionalZipCode::runTest@5 (line 52)
                                                ;   {virtual_call}
  0x0000000110dffab4: mov    0x8(%rax),%r10d    ; implicit exception: dispatches to 0x0000000110dffc7c
  0x0000000110dffab8: cmp    $0x3efb0,%r10d     ;   {metadata('java/util/ArrayList$Itr')}
  0x0000000110dffabf: jne    0x0000000110dffc16
  0x0000000110dffac5: mov    %rax,%r8           ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffac8: mov    0x18(%r8),%r10d    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@5 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffacc: mov    0x10(%r12,%r10,8),%r9d  ; implicit exception: dispatches to 0x0000000110dffc8a
  0x0000000110dffad1: mov    0xc(%r8),%r11d     ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@1 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffad5: cmp    %r9d,%r11d
  0x0000000110dffad8: je     0x0000000110dffb97  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@11 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffade: xor    %eax,%eax          ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@20 (line 52)

  0x0000000110dffae0: mov    0xc(%r12,%r10,8),%ecx  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ; implicit exception: dispatches to 0x0000000110dffc46
  0x0000000110dffae5: mov    0x14(%r8),%ebp     ;*getfield expectedModCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@8 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffae9: cmp    %ebp,%ecx
  0x0000000110dffaeb: jne    0x0000000110dffbbe  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffaf1: mov    0x10(%r12,%r10,8),%ebp  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@14 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffaf6: cmp    %ebp,%r11d
  0x0000000110dffaf9: jge    0x0000000110dffbda  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffaff: mov    0x14(%r12,%r10,8),%r9d  ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@32 (line 1000)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb04: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ; implicit exception: dispatches to 0x0000000110dffc52
  0x0000000110dffb09: cmp    %ebp,%r11d
  0x0000000110dffb0c: jge    0x0000000110dffbf6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb12: mov    %r11d,0x10(%r8)    ;*putfield lastRet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@61 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb16: mov    %r11d,%r10d
  0x0000000110dffb19: inc    %r10d
  0x0000000110dffb1c: mov    %r10d,0xc(%r8)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@54 (line 1003)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb20: cmp    %ebp,%r11d
  0x0000000110dffb23: jae    0x0000000110dffb9b
  0x0000000110dffb25: lea    (%r12,%r9,8),%r10
  0x0000000110dffb29: mov    0x10(%r10,%r11,4),%ebp  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb2e: test   %ebp,%ebp
  0x0000000110dffb30: je     0x0000000110dffb93
  0x0000000110dffb32: mov    0x8(%r12,%rbp,8),%r11d
  0x0000000110dffb37: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110dffb3e: jne    0x0000000110dffc2e
  0x0000000110dffb44: lea    (%r12,%rbp,8),%rdx  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@26 (line 52)

  0x0000000110dffb48: mov    %eax,0x8(%rsp)
  0x0000000110dffb4c: mov    %r8,%rbp           ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffb4f: mov    (%rsp),%rsi
  0x0000000110dffb53: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*invokevirtual isZipCodeValid {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {optimized virtual_call}
  0x0000000110dffb58: mov    %rbp,%r8
  0x0000000110dffb5b: mov    0x18(%r8),%r10d    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@5 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffb5f: mov    0x10(%r12,%r10,8),%ecx  ; implicit exception: dispatches to 0x0000000110dffc5e
  0x0000000110dffb64: mov    0xc(%r8),%r11d     ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@1 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffb68: mov    0x8(%rsp),%r9d
  0x0000000110dffb6d: inc    %r9d
  0x0000000110dffb70: test   %eax,%eax
  0x0000000110dffb72: mov    0x8(%rsp),%eax
  0x0000000110dffb76: cmovne %r9d,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@41 (line 56)

  0x0000000110dffb7a: cmp    %ecx,%r11d
  0x0000000110dffb7d: jne    0x0000000110dffae0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@17 (line 52)

  0x0000000110dffb83: add    $0x40,%rsp
  0x0000000110dffb87: pop    %rbp
  0x0000000110dffb88: mov    0x108(%r15),%r10
  0x0000000110dffb8f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dffb92: retq   
  0x0000000110dffb93: xor    %edx,%edx
  0x0000000110dffb95: jmp    0x0000000110dffb48
  0x0000000110dffb97: xor    %eax,%eax
  0x0000000110dffb99: jmp    0x0000000110dffb83
  0x0000000110dffb9b: mov    $0xffffffe4,%esi
  0x0000000110dffba0: mov    (%rsp),%rbp
  0x0000000110dffba4: mov    %eax,(%rsp)
  0x0000000110dffba7: mov    %r8,0x8(%rsp)
  0x0000000110dffbac: mov    %r9d,0x4(%rsp)
  0x0000000110dffbb1: mov    %r11d,0x10(%rsp)
  0x0000000110dffbb6: nop
  0x0000000110dffbb7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [4]=NarrowOop [8]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffbbc: ud2                       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffbbe: mov    $0xffffff4d,%esi
  0x0000000110dffbc3: mov    %eax,0x8(%rsp)
  0x0000000110dffbc7: mov    %r8,0x18(%rsp)
  0x0000000110dffbcc: mov    %ecx,0xc(%rsp)
  0x0000000110dffbd0: data16 xchg %ax,%ax
  0x0000000110dffbd3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffbd8: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffbda: mov    $0xffffff4d,%esi
  0x0000000110dffbdf: mov    %eax,0x8(%rsp)
  0x0000000110dffbe3: mov    %r8,0x18(%rsp)
  0x0000000110dffbe8: mov    %r11d,0x20(%rsp)
  0x0000000110dffbed: xchg   %ax,%ax
  0x0000000110dffbef: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffbf4: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffbf6: mov    $0xffffff4d,%esi
  0x0000000110dffbfb: mov    %eax,0x8(%rsp)
  0x0000000110dffbff: mov    %r8,0x18(%rsp)
  0x0000000110dffc04: mov    %r9d,0x20(%rsp)
  0x0000000110dffc09: mov    %r11d,0x24(%rsp)
  0x0000000110dffc0e: nop
  0x0000000110dffc0f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop [32]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc14: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffc16: mov    $0xffffffde,%esi
  0x0000000110dffc1b: mov    (%rsp),%rbp
  0x0000000110dffc1f: mov    %rax,0x8(%rsp)
  0x0000000110dffc24: data16 xchg %ax,%ax
  0x0000000110dffc27: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc2c: ud2    
  0x0000000110dffc2e: mov    $0xffffffde,%esi
  0x0000000110dffc33: mov    %eax,0x8(%rsp)
  0x0000000110dffc37: mov    %r8,0x10(%rsp)
  0x0000000110dffc3c: data16 xchg %ax,%ax
  0x0000000110dffc3f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@26 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc44: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@26 (line 52)

  0x0000000110dffc46: mov    $0xfffffff6,%esi
  0x0000000110dffc4b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield modCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc50: ud2                       ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffc52: mov    $0xfffffff6,%esi
  0x0000000110dffc57: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc5c: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110dffc5e: mov    $0xfffffff6,%esi
  0x0000000110dffc63: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc68: ud2                       ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@5 (line 52)

  0x0000000110dffc6a: mov    %rax,%rsi
  0x0000000110dffc6d: jmp    0x0000000110dffc72
  0x0000000110dffc6f: mov    %rax,%rsi          ;*invokevirtual isZipCodeValid {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110dffc72: add    $0x40,%rsp
  0x0000000110dffc76: pop    %rbp
  0x0000000110dffc77: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110dffc7c: mov    $0xfffffff6,%esi
  0x0000000110dffc81: xchg   %ax,%ax
  0x0000000110dffc83: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc88: ud2                       ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffc8a: mov    $0xfffffff6,%esi
  0x0000000110dffc8f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dffc94: ud2                       ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110dffc96: hlt    
  0x0000000110dffc97: hlt    
  0x0000000110dffc98: hlt    
  0x0000000110dffc99: hlt    
  0x0000000110dffc9a: hlt    
  0x0000000110dffc9b: hlt    
  0x0000000110dffc9c: hlt    
  0x0000000110dffc9d: hlt    
  0x0000000110dffc9e: hlt    
  0x0000000110dffc9f: hlt    
[Stub Code]
  0x0000000110dffca0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110dffcaa: jmpq   0x0000000110dffcaa  ;   {runtime_call}
[Exception Handler]
  0x0000000110dffcaf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110dffcb4: callq  0x0000000110dffcb9
  0x0000000110dffcb9: subq   $0x5,(%rsp)
  0x0000000110dffcbe: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dffcc3: hlt    
  0x0000000110dffcc4: hlt    
  0x0000000110dffcc5: hlt    
  0x0000000110dffcc6: hlt    
  0x0000000110dffcc7: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 84 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 248 
ImmutableOopMap{rbp=Oop [4]=NarrowOop [8]=Oop }pc offsets: 348 
ImmutableOopMap{[0]=Oop [24]=Oop }pc offsets: 376 404 
ImmutableOopMap{[0]=Oop [24]=Oop [32]=NarrowOop }pc offsets: 436 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 460 
ImmutableOopMap{rbp=NarrowOop [0]=Oop [16]=Oop }pc offsets: 484 
ImmutableOopMap{}pc offsets: 496 508 520 552 564 Compiled method (c2)     881  142             java.util.function.Predicate$$Lambda$2/0x0000000800066440::test (9 bytes)
 total in heap  [0x0000000110dff290,0x0000000110dff838] = 1448
 relocation     [0x0000000110dff408,0x0000000110dff430] = 40
 main code      [0x0000000110dff440,0x0000000110dff580] = 320
 stub code      [0x0000000110dff580,0x0000000110dff598] = 24
 oops           [0x0000000110dff598,0x0000000110dff5b0] = 24
 metadata       [0x0000000110dff5b0,0x0000000110dff5e8] = 56
 scopes data    [0x0000000110dff5e8,0x0000000110dff690] = 168
 scopes pcs     [0x0000000110dff690,0x0000000110dff810] = 384
 dependencies   [0x0000000110dff810,0x0000000110dff818] = 8
 nul chk table  [0x0000000110dff818,0x0000000110dff838] = 32
----------------------------------------------------------------------
java/util/function/Predicate$$Lambda$2.test(Ljava/lang/Object;)Z  [0x0000000110dff440, 0x0000000110dff598]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f17f788} 'test' '(Ljava/lang/Object;)Z' in 'java/util/function/Predicate$$Lambda$2'
  # this:     rsi:rsi   = 'java/util/function/Predicate$$Lambda$2'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110dff440: mov    0x8(%rsi),%r10d
  0x0000000110dff444: movabs $0x800000000,%r12
  0x0000000110dff44e: add    %r12,%r10
  0x0000000110dff451: xor    %r12,%r12
  0x0000000110dff454: cmp    %r10,%rax
  0x0000000110dff457: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110dff45d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110dff460: mov    %eax,-0x14000(%rsp)
  0x0000000110dff467: push   %rbp
  0x0000000110dff468: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@-1

  0x0000000110dff46c: mov    0xc(%rsi),%r11d    ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@1

  0x0000000110dff470: mov    0x8(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x0000000110dff53e
  0x0000000110dff475: movabs $0x800000000,%rsi
  0x0000000110dff47f: add    %r10,%rsi
  0x0000000110dff482: mov    0x20(%rsi),%r8
  0x0000000110dff486: movabs $0x80005f3b8,%rax  ;   {metadata('java/util/function/Predicate')}
  0x0000000110dff490: cmp    %rax,%r8
  0x0000000110dff493: jne    0x0000000110dff4d7  ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff495: cmp    $0x65040,%r10d     ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110dff49c: jne    0x0000000110dff50e  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff49e: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110dff54e
  0x0000000110dff4a2: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110dff4a9: jne    0x0000000110dff52e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff4af: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff4b3: mov    0xc(%r12,%r11,8),%ebp  ; implicit exception: dispatches to 0x0000000110dff55a
  0x0000000110dff4b8: movsbl 0x14(%rdx),%ecx
  0x0000000110dff4bc: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff4be: test   %ebp,%ebp
  0x0000000110dff4c0: je     0x0000000110dff522  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff4c2: mov    $0x1,%eax
  0x0000000110dff4c7: add    $0x20,%rsp
  0x0000000110dff4cb: pop    %rbp
  0x0000000110dff4cc: mov    0x108(%r15),%r10
  0x0000000110dff4d3: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110dff4d6: retq   
  0x0000000110dff4d7: push   %rax
  0x0000000110dff4d8: mov    %rax,%rax
  0x0000000110dff4db: mov    0x28(%rsi),%rdi
  0x0000000110dff4df: mov    (%rdi),%ecx
  0x0000000110dff4e1: add    $0x8,%rdi
  0x0000000110dff4e5: test   %rax,%rax
  0x0000000110dff4e8: repnz scas %es:(%rdi),%rax
  0x0000000110dff4eb: pop    %rax
  0x0000000110dff4ec: jne    0x0000000110dff4f6
  0x0000000110dff4f2: mov    %rax,0x20(%rsi)
  0x0000000110dff4f6: je     0x0000000110dff495
  0x0000000110dff4f8: mov    $0xffffffdf,%esi
  0x0000000110dff4fd: mov    %r11d,%ebp
  0x0000000110dff500: mov    %rdx,(%rsp)
  0x0000000110dff504: data16 xchg %ax,%ax
  0x0000000110dff507: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff50c: ud2                       ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff50e: mov    $0xffffffde,%esi
  0x0000000110dff513: mov    %r11d,%ebp
  0x0000000110dff516: mov    %rdx,(%rsp)
  0x0000000110dff51a: nop
  0x0000000110dff51b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff520: ud2                       ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff522: mov    $0xffffff4d,%esi
  0x0000000110dff527: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff52c: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff52e: mov    $0xffffffde,%esi
  0x0000000110dff533: mov    %rdx,%rbp
  0x0000000110dff536: nop
  0x0000000110dff537: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff53c: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff53e: mov    $0xfffffff6,%esi
  0x0000000110dff543: mov    %rdx,%rbp
  0x0000000110dff546: nop
  0x0000000110dff547: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff54c: ud2                       ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff54e: mov    $0xfffffff4,%esi
  0x0000000110dff553: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff558: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff55a: mov    $0xfffffff6,%esi
  0x0000000110dff55f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110dff564: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5

  0x0000000110dff566: hlt    
  0x0000000110dff567: hlt    
  0x0000000110dff568: hlt    
  0x0000000110dff569: hlt    
  0x0000000110dff56a: hlt    
  0x0000000110dff56b: hlt    
  0x0000000110dff56c: hlt    
  0x0000000110dff56d: hlt    
  0x0000000110dff56e: hlt    
  0x0000000110dff56f: hlt    
  0x0000000110dff570: hlt    
  0x0000000110dff571: hlt    
  0x0000000110dff572: hlt    
  0x0000000110dff573: hlt    
  0x0000000110dff574: hlt    
  0x0000000110dff575: hlt    
  0x0000000110dff576: hlt    
  0x0000000110dff577: hlt    
  0x0000000110dff578: hlt    
  0x0000000110dff579: hlt    
  0x0000000110dff57a: hlt    
  0x0000000110dff57b: hlt    
  0x0000000110dff57c: hlt    
  0x0000000110dff57d: hlt    
  0x0000000110dff57e: hlt    
  0x0000000110dff57f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110dff580: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110dff585: callq  0x0000000110dff58a
  0x0000000110dff58a: subq   $0x5,(%rsp)
  0x0000000110dff58f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110dff594: hlt    
  0x0000000110dff595: hlt    
  0x0000000110dff596: hlt    
  0x0000000110dff597: hlt    

ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 204 224 
ImmutableOopMap{}pc offsets: 236 
ImmutableOopMap{rbp=Oop }pc offsets: 252 268 
ImmutableOopMap{}pc offsets: 280 292 Compiled method (c2)     886  143             java.util.function.Predicate::lambda$negate$1 (16 bytes)
 total in heap  [0x0000000110e05590,0x0000000110e05a08] = 1144
 relocation     [0x0000000110e05708,0x0000000110e05728] = 32
 main code      [0x0000000110e05740,0x0000000110e05800] = 192
 stub code      [0x0000000110e05800,0x0000000110e05818] = 24
 oops           [0x0000000110e05818,0x0000000110e05828] = 16
 metadata       [0x0000000110e05828,0x0000000110e05858] = 48
 scopes data    [0x0000000110e05858,0x0000000110e058d8] = 128
 scopes pcs     [0x0000000110e058d8,0x0000000110e059e8] = 272
 dependencies   [0x0000000110e059e8,0x0000000110e059f0] = 8
 nul chk table  [0x0000000110e059f0,0x0000000110e05a08] = 24
----------------------------------------------------------------------
java/util/function/Predicate.lambda$negate$1(Ljava/lang/Object;)Z  [0x0000000110e05740, 0x0000000110e05818]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1871c0} 'lambda$negate$1' '(Ljava/lang/Object;)Z' in 'java/util/function/Predicate'
  # this:     rsi:rsi   = 'java/util/function/Predicate'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e05740: mov    0x8(%rsi),%r10d
  0x0000000110e05744: movabs $0x800000000,%r12
  0x0000000110e0574e: add    %r12,%r10
  0x0000000110e05751: xor    %r12,%r12
  0x0000000110e05754: cmp    %r10,%rax
  0x0000000110e05757: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e0575d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e05760: mov    %eax,-0x14000(%rsp)
  0x0000000110e05767: push   %rbp
  0x0000000110e05768: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.function.Predicate::lambda$negate$1@-1 (line 80)

  0x0000000110e0576c: mov    0x8(%rsi),%r10d
  0x0000000110e05770: cmp    $0x65040,%r10d     ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110e05777: jne    0x0000000110e057ae  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e05779: mov    0x8(%rdx),%r10d    ; implicit exception: dispatches to 0x0000000110e057de
  0x0000000110e0577d: cmp    $0x1808,%r10d      ;   {metadata('java/lang/String')}
  0x0000000110e05784: jne    0x0000000110e057ce  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e05786: mov    0xc(%rdx),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e0578a: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x0000000110e057ea
  0x0000000110e0578f: movsbl 0x14(%rdx),%ecx
  0x0000000110e05793: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e05795: test   %ebp,%ebp
  0x0000000110e05797: je     0x0000000110e057c2  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e05799: mov    $0x1,%eax
  0x0000000110e0579e: add    $0x20,%rsp
  0x0000000110e057a2: pop    %rbp
  0x0000000110e057a3: mov    0x108(%r15),%r10
  0x0000000110e057aa: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e057ad: retq   
  0x0000000110e057ae: mov    %rsi,%rbp
  0x0000000110e057b1: mov    %rdx,(%rsp)
  0x0000000110e057b5: mov    $0xffffffde,%esi
  0x0000000110e057ba: nop
  0x0000000110e057bb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e057c0: ud2                       ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e057c2: mov    $0xffffff4d,%esi
  0x0000000110e057c7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e057cc: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e057ce: mov    $0xffffffde,%esi
  0x0000000110e057d3: mov    %rdx,%rbp
  0x0000000110e057d6: nop
  0x0000000110e057d7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e057dc: ud2    
  0x0000000110e057de: mov    $0xfffffff4,%esi
  0x0000000110e057e3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e057e8: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e057ea: mov    $0xfffffff6,%esi
  0x0000000110e057ef: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e057f4: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)

  0x0000000110e057f6: hlt    
  0x0000000110e057f7: hlt    
  0x0000000110e057f8: hlt    
  0x0000000110e057f9: hlt    
  0x0000000110e057fa: hlt    
  0x0000000110e057fb: hlt    
  0x0000000110e057fc: hlt    
  0x0000000110e057fd: hlt    
  0x0000000110e057fe: hlt    
  0x0000000110e057ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e05800: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e05805: callq  0x0000000110e0580a
  0x0000000110e0580a: subq   $0x5,(%rsp)
  0x0000000110e0580f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e05814: hlt    
  0x0000000110e05815: hlt    
  0x0000000110e05816: hlt    
  0x0000000110e05817: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 128 
ImmutableOopMap{}pc offsets: 140 
ImmutableOopMap{rbp=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 168 180 Compiled method (c2)     890  144             FunctionalZipCode$$Lambda$1/0x0000000800065040::test (8 bytes)
 total in heap  [0x0000000110e05a90,0x0000000110e05e70] = 992
 relocation     [0x0000000110e05c08,0x0000000110e05c20] = 24
 main code      [0x0000000110e05c20,0x0000000110e05cc0] = 160
 stub code      [0x0000000110e05cc0,0x0000000110e05cd8] = 24
 oops           [0x0000000110e05cd8,0x0000000110e05ce8] = 16
 metadata       [0x0000000110e05ce8,0x0000000110e05d08] = 32
 scopes data    [0x0000000110e05d08,0x0000000110e05d70] = 104
 scopes pcs     [0x0000000110e05d70,0x0000000110e05e50] = 224
 dependencies   [0x0000000110e05e50,0x0000000110e05e58] = 8
 nul chk table  [0x0000000110e05e58,0x0000000110e05e70] = 24
----------------------------------------------------------------------
FunctionalZipCode$$Lambda$1.test(Ljava/lang/Object;)Z  [0x0000000110e05c20, 0x0000000110e05cd8]  184 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1706b8} 'test' '(Ljava/lang/Object;)Z' in 'FunctionalZipCode$$Lambda$1'
  # this:     rsi:rsi   = 'FunctionalZipCode$$Lambda$1'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e05c20: mov    0x8(%rsi),%r10d
  0x0000000110e05c24: movabs $0x800000000,%r12
  0x0000000110e05c2e: add    %r12,%r10
  0x0000000110e05c31: xor    %r12,%r12
  0x0000000110e05c34: cmp    %r10,%rax
  0x0000000110e05c37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e05c3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e05c40: mov    %eax,-0x14000(%rsp)
  0x0000000110e05c47: push   %rbp
  0x0000000110e05c48: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@-1

  0x0000000110e05c4c: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e05c9a
  0x0000000110e05c50: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e05c57: jne    0x0000000110e05c8a  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1

  0x0000000110e05c59: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4

  0x0000000110e05c5d: mov    0xc(%r12,%r11,8),%ebp  ; implicit exception: dispatches to 0x0000000110e05ca6
  0x0000000110e05c62: movsbl 0x14(%rdx),%ecx
  0x0000000110e05c66: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4

  0x0000000110e05c68: test   %ebp,%ebp
  0x0000000110e05c6a: je     0x0000000110e05c7e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4

  0x0000000110e05c6c: xor    %eax,%eax
  0x0000000110e05c6e: add    $0x10,%rsp
  0x0000000110e05c72: pop    %rbp
  0x0000000110e05c73: mov    0x108(%r15),%r10
  0x0000000110e05c7a: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e05c7d: retq   
  0x0000000110e05c7e: mov    $0xffffff4d,%esi
  0x0000000110e05c83: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e05c88: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4

  0x0000000110e05c8a: mov    $0xffffffde,%esi
  0x0000000110e05c8f: mov    %rdx,%rbp
  0x0000000110e05c92: nop
  0x0000000110e05c93: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e05c98: ud2    
  0x0000000110e05c9a: mov    $0xfffffff4,%esi
  0x0000000110e05c9f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e05ca4: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1

  0x0000000110e05ca6: mov    $0xfffffff6,%esi
  0x0000000110e05cab: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e05cb0: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4

  0x0000000110e05cb2: hlt    
  0x0000000110e05cb3: hlt    
  0x0000000110e05cb4: hlt    
  0x0000000110e05cb5: hlt    
  0x0000000110e05cb6: hlt    
  0x0000000110e05cb7: hlt    
  0x0000000110e05cb8: hlt    
  0x0000000110e05cb9: hlt    
  0x0000000110e05cba: hlt    
  0x0000000110e05cbb: hlt    
  0x0000000110e05cbc: hlt    
  0x0000000110e05cbd: hlt    
  0x0000000110e05cbe: hlt    
  0x0000000110e05cbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e05cc0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e05cc5: callq  0x0000000110e05cca
  0x0000000110e05cca: subq   $0x5,(%rsp)
  0x0000000110e05ccf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e05cd4: hlt    
  0x0000000110e05cd5: hlt    
  0x0000000110e05cd6: hlt    
  0x0000000110e05cd7: hlt    

ImmutableOopMap{}pc offsets: 104 
ImmutableOopMap{rbp=Oop }pc offsets: 120 
ImmutableOopMap{}pc offsets: 132 144 Compiled method (c2)     892  145             Strings::isNullOrEmpty (17 bytes)
 total in heap  [0x0000000110e05e90,0x0000000110e061e0] = 848
 relocation     [0x0000000110e06008,0x0000000110e06018] = 16
 main code      [0x0000000110e06020,0x0000000110e06080] = 96
 stub code      [0x0000000110e06080,0x0000000110e06098] = 24
 oops           [0x0000000110e06098,0x0000000110e060a0] = 8
 metadata       [0x0000000110e060a0,0x0000000110e060b0] = 16
 scopes data    [0x0000000110e060b0,0x0000000110e06100] = 80
 scopes pcs     [0x0000000110e06100,0x0000000110e061c0] = 192
 dependencies   [0x0000000110e061c0,0x0000000110e061c8] = 8
 nul chk table  [0x0000000110e061c8,0x0000000110e061e0] = 24
----------------------------------------------------------------------
Strings.isNullOrEmpty(Ljava/lang/String;)Z  [0x0000000110e06020, 0x0000000110e06098]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f172418} 'isNullOrEmpty' '(Ljava/lang/String;)Z' in 'Strings'
  # parm0:    rsi:rsi   = 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e06020: mov    %eax,-0x14000(%rsp)
  0x0000000110e06027: push   %rbp
  0x0000000110e06028: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - Strings::isNullOrEmpty@-1 (line 3)

  0x0000000110e0602c: mov    0xc(%rsi),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; implicit exception: dispatches to 0x0000000110e0606a
  0x0000000110e06030: mov    0xc(%r12,%r11,8),%ebp  ; implicit exception: dispatches to 0x0000000110e0605e
  0x0000000110e06035: movsbl 0x14(%rsi),%ecx
  0x0000000110e06039: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)

  0x0000000110e0603b: test   %ebp,%ebp
  0x0000000110e0603d: je     0x0000000110e06051  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)

  0x0000000110e0603f: xor    %eax,%eax
  0x0000000110e06041: add    $0x20,%rsp
  0x0000000110e06045: pop    %rbp
  0x0000000110e06046: mov    0x108(%r15),%r10
  0x0000000110e0604d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e06050: retq   
  0x0000000110e06051: mov    $0xffffff4d,%esi
  0x0000000110e06056: nop
  0x0000000110e06057: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0605c: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)

  0x0000000110e0605e: mov    $0xfffffff6,%esi
  0x0000000110e06063: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e06068: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)

  0x0000000110e0606a: mov    %rsi,(%rsp)
  0x0000000110e0606e: mov    $0xffffff4d,%esi
  0x0000000110e06073: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@1 (line 3)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e06078: ud2                       ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@1 (line 3)

  0x0000000110e0607a: hlt    
  0x0000000110e0607b: hlt    
  0x0000000110e0607c: hlt    
  0x0000000110e0607d: hlt    
  0x0000000110e0607e: hlt    
  0x0000000110e0607f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e06080: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e06085: callq  0x0000000110e0608a
  0x0000000110e0608a: subq   $0x5,(%rsp)
  0x0000000110e0608f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e06094: hlt    
  0x0000000110e06095: hlt    
  0x0000000110e06096: hlt    
  0x0000000110e06097: hlt    

ImmutableOopMap{}pc offsets: 60 72 
ImmutableOopMap{[0]=Oop }pc offsets: 88 Compiled method (c2)     896  146             java.lang.String::isEmpty (14 bytes)
 total in heap  [0x0000000110e06210,0x0000000110e06528] = 792
 relocation     [0x0000000110e06388,0x0000000110e06398] = 16
 main code      [0x0000000110e063a0,0x0000000110e06420] = 128
 stub code      [0x0000000110e06420,0x0000000110e06438] = 24
 metadata       [0x0000000110e06438,0x0000000110e06440] = 8
 scopes data    [0x0000000110e06440,0x0000000110e06470] = 48
 scopes pcs     [0x0000000110e06470,0x0000000110e06510] = 160
 dependencies   [0x0000000110e06510,0x0000000110e06518] = 8
 nul chk table  [0x0000000110e06518,0x0000000110e06528] = 16
----------------------------------------------------------------------
java/lang/String.isEmpty()Z  [0x0000000110e063a0, 0x0000000110e06438]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed6e3e8} 'isEmpty' '()Z' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e063a0: mov    0x8(%rsi),%r10d
  0x0000000110e063a4: movabs $0x800000000,%r12
  0x0000000110e063ae: add    %r12,%r10
  0x0000000110e063b1: xor    %r12,%r12
  0x0000000110e063b4: cmp    %r10,%rax
  0x0000000110e063b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e063bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e063c0: mov    %eax,-0x14000(%rsp)
  0x0000000110e063c7: push   %rbp
  0x0000000110e063c8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)

  0x0000000110e063cc: mov    0xc(%rsi),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)

  0x0000000110e063d0: mov    0xc(%r12,%r10,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; implicit exception: dispatches to 0x0000000110e063fe
  0x0000000110e063d5: test   %r10d,%r10d
  0x0000000110e063d8: jbe    0x0000000110e063ec  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)

  0x0000000110e063da: xor    %eax,%eax
  0x0000000110e063dc: add    $0x10,%rsp
  0x0000000110e063e0: pop    %rbp
  0x0000000110e063e1: mov    0x108(%r15),%r10
  0x0000000110e063e8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e063eb: retq   
  0x0000000110e063ec: mov    $0xffffff4d,%esi
  0x0000000110e063f1: mov    %r10d,%ebp
  0x0000000110e063f4: data16 xchg %ax,%ax
  0x0000000110e063f7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e063fc: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)

  0x0000000110e063fe: mov    $0xfffffff6,%esi
  0x0000000110e06403: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e06408: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)

  0x0000000110e0640a: hlt    
  0x0000000110e0640b: hlt    
  0x0000000110e0640c: hlt    
  0x0000000110e0640d: hlt    
  0x0000000110e0640e: hlt    
  0x0000000110e0640f: hlt    
  0x0000000110e06410: hlt    
  0x0000000110e06411: hlt    
  0x0000000110e06412: hlt    
  0x0000000110e06413: hlt    
  0x0000000110e06414: hlt    
  0x0000000110e06415: hlt    
  0x0000000110e06416: hlt    
  0x0000000110e06417: hlt    
  0x0000000110e06418: hlt    
  0x0000000110e06419: hlt    
  0x0000000110e0641a: hlt    
  0x0000000110e0641b: hlt    
  0x0000000110e0641c: hlt    
  0x0000000110e0641d: hlt    
  0x0000000110e0641e: hlt    
  0x0000000110e0641f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e06420: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e06425: callq  0x0000000110e0642a
  0x0000000110e0642a: subq   $0x5,(%rsp)
  0x0000000110e0642f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e06434: hlt    
  0x0000000110e06435: hlt    
  0x0000000110e06436: hlt    
  0x0000000110e06437: hlt    

ImmutableOopMap{}pc offsets: 92 104 Compiled method (c2)     900  147             java.util.regex.Pattern::Range (36 bytes)
 total in heap  [0x0000000110e06590,0x0000000110e06968] = 984
 relocation     [0x0000000110e06708,0x0000000110e06720] = 24
 main code      [0x0000000110e06720,0x0000000110e067e0] = 192
 stub code      [0x0000000110e067e0,0x0000000110e067f8] = 24
 oops           [0x0000000110e067f8,0x0000000110e06800] = 8
 metadata       [0x0000000110e06800,0x0000000110e06830] = 48
 scopes data    [0x0000000110e06830,0x0000000110e068a8] = 120
 scopes pcs     [0x0000000110e068a8,0x0000000110e06948] = 160
 dependencies   [0x0000000110e06948,0x0000000110e06950] = 8
 handler table  [0x0000000110e06950,0x0000000110e06968] = 24
----------------------------------------------------------------------
java/util/regex/Pattern.Range(II)Ljava/util/regex/Pattern$CharPredicate;  [0x0000000110e06720, 0x0000000110e067f8]  216 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f1a47d8} 'Range' '(II)Ljava/util/regex/Pattern$CharPredicate;' in 'java/util/regex/Pattern'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e06720: mov    %eax,-0x14000(%rsp)
  0x0000000110e06727: push   %rbp
  0x0000000110e06728: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::Range@-1 (line 5799)

  0x0000000110e0672c: mov    %esi,(%rsp)
  0x0000000110e0672f: mov    %edx,%ebp
  0x0000000110e06731: cmp    $0xd800,%edx
  0x0000000110e06737: jge    0x0000000110e067ba  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::Range@4 (line 5799)

  0x0000000110e0673d: mov    0x118(%r15),%rax
  0x0000000110e06744: mov    %rax,%r10
  0x0000000110e06747: add    $0x18,%r10
  0x0000000110e0674b: cmp    0x128(%r15),%r10
  0x0000000110e06752: jae    0x0000000110e067a9
  0x0000000110e06754: mov    %r10,0x118(%r15)
  0x0000000110e0675b: prefetchnta 0xc0(%r10)
  0x0000000110e06763: mov    $0x70040,%r11d     ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e06769: movabs $0x800000000,%r10
  0x0000000110e06773: add    %r11,%r10
  0x0000000110e06776: mov    0xb8(%r10),%r10
  0x0000000110e0677d: mov    %r10,(%rax)
  0x0000000110e06780: movl   $0x70040,0x8(%rax)  ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e06787: movl   $0x0,0x14(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - java.util.regex.Pattern::Range@22 (line 5802)

  0x0000000110e0678e: mov    (%rsp),%r11d
  0x0000000110e06792: mov    %r11d,0xc(%rax)    ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init>@6
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@6
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - java.util.regex.Pattern::Range@22 (line 5802)

  0x0000000110e06796: mov    %ebp,0x10(%rax)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@-1
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - java.util.regex.Pattern::Range@22 (line 5802)

  0x0000000110e06799: add    $0x20,%rsp
  0x0000000110e0679d: pop    %rbp
  0x0000000110e0679e: mov    0x108(%r15),%r10
  0x0000000110e067a5: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e067a8: retq   
  0x0000000110e067a9: movabs $0x800070040,%rsi  ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e067b3: callq  0x0000000110dc6380  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - java.util.regex.Pattern::Range@22 (line 5802)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e067b8: jmp    0x0000000110e0678e
  0x0000000110e067ba: mov    $0xffffff4d,%esi
  0x0000000110e067bf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::Range@4 (line 5799)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e067c4: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - java.util.regex.Pattern::Range@22 (line 5802)

  0x0000000110e067c6: mov    %rax,%rsi
  0x0000000110e067c9: add    $0x20,%rsp
  0x0000000110e067cd: pop    %rbp
  0x0000000110e067ce: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e067d3: hlt    
  0x0000000110e067d4: hlt    
  0x0000000110e067d5: hlt    
  0x0000000110e067d6: hlt    
  0x0000000110e067d7: hlt    
  0x0000000110e067d8: hlt    
  0x0000000110e067d9: hlt    
  0x0000000110e067da: hlt    
  0x0000000110e067db: hlt    
  0x0000000110e067dc: hlt    
  0x0000000110e067dd: hlt    
  0x0000000110e067de: hlt    
  0x0000000110e067df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e067e0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e067e5: callq  0x0000000110e067ea
  0x0000000110e067ea: subq   $0x5,(%rsp)
  0x0000000110e067ef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e067f4: hlt    
  0x0000000110e067f5: hlt    
  0x0000000110e067f6: hlt    
  0x0000000110e067f7: hlt    

ImmutableOopMap{}pc offsets: 152 164 Compiled method (c2)     903  148             java.lang.invoke.Invokers$Holder::linkToTargetMethod (10 bytes)
 total in heap  [0x0000000110e06990,0x0000000110e06d08] = 888
 relocation     [0x0000000110e06b08,0x0000000110e06b28] = 32
 main code      [0x0000000110e06b40,0x0000000110e06bc0] = 128
 stub code      [0x0000000110e06bc0,0x0000000110e06bf8] = 56
 metadata       [0x0000000110e06bf8,0x0000000110e06c08] = 16
 scopes data    [0x0000000110e06c08,0x0000000110e06c48] = 64
 scopes pcs     [0x0000000110e06c48,0x0000000110e06cd8] = 144
 dependencies   [0x0000000110e06cd8,0x0000000110e06ce0] = 8
 handler table  [0x0000000110e06ce0,0x0000000110e06cf8] = 24
 nul chk table  [0x0000000110e06cf8,0x0000000110e06d08] = 16
----------------------------------------------------------------------
java/lang/invoke/Invokers$Holder.linkToTargetMethod(IILjava/lang/Object;)Ljava/lang/Object;  [0x0000000110e06b40, 0x0000000110e06bf8]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f0f2ea8} 'linkToTargetMethod' '(IILjava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e06b40: mov    %eax,-0x14000(%rsp)
  0x0000000110e06b47: push   %rbp
  0x0000000110e06b48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1

  0x0000000110e06b4c: mov    %edx,%r10d
  0x0000000110e06b4f: mov    %esi,%edx
  0x0000000110e06b51: mov    0x8(%rcx),%r8d     ; implicit exception: dispatches to 0x0000000110e06ba3
  0x0000000110e06b55: cmp    $0xc0e0,%r8d       ;   {metadata('java/lang/invoke/DirectMethodHandle')}
  0x0000000110e06b5c: jne    0x0000000110e06b7c
  0x0000000110e06b5e: mov    %rcx,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110e06b61: mov    %r10d,%ecx
  0x0000000110e06b64: data16 xchg %ax,%ax
  0x0000000110e06b67: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ;   {optimized virtual_call}
  0x0000000110e06b6c: add    $0x20,%rsp
  0x0000000110e06b70: pop    %rbp
  0x0000000110e06b71: mov    0x108(%r15),%r10
  0x0000000110e06b78: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e06b7b: retq   
  0x0000000110e06b7c: mov    $0xffffff6e,%esi
  0x0000000110e06b81: mov    %edx,%ebp
  0x0000000110e06b83: mov    %r10d,(%rsp)
  0x0000000110e06b87: mov    %rcx,0x8(%rsp)
  0x0000000110e06b8c: data16 xchg %ax,%ax
  0x0000000110e06b8f: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e06b94: ud2                       ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6

  0x0000000110e06b96: mov    %rax,%rsi
  0x0000000110e06b99: add    $0x20,%rsp
  0x0000000110e06b9d: pop    %rbp
  0x0000000110e06b9e: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e06ba3: mov    $0xffffff64,%esi
  0x0000000110e06ba8: mov    %edx,%ebp
  0x0000000110e06baa: mov    %r10d,(%rsp)
  0x0000000110e06bae: nop
  0x0000000110e06baf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e06bb4: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@1

  0x0000000110e06bb6: hlt    
  0x0000000110e06bb7: hlt    
  0x0000000110e06bb8: hlt    
  0x0000000110e06bb9: hlt    
  0x0000000110e06bba: hlt    
  0x0000000110e06bbb: hlt    
  0x0000000110e06bbc: hlt    
  0x0000000110e06bbd: hlt    
  0x0000000110e06bbe: hlt    
  0x0000000110e06bbf: hlt    
[Stub Code]
  0x0000000110e06bc0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e06bca: jmpq   0x0000000110e06bca  ;   {runtime_call}
[Exception Handler]
  0x0000000110e06bcf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e06bd4: callq  0x0000000110e06bd9
  0x0000000110e06bd9: subq   $0x5,(%rsp)
  0x0000000110e06bde: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
[Deopt MH Handler Code]
  0x0000000110e06be3: callq  0x0000000110e06be8
  0x0000000110e06be8: subq   $0x5,(%rsp)
  0x0000000110e06bed: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e06bf2: hlt    
  0x0000000110e06bf3: hlt    
  0x0000000110e06bf4: hlt    
  0x0000000110e06bf5: hlt    
  0x0000000110e06bf6: hlt    
  0x0000000110e06bf7: hlt    

ImmutableOopMap{}pc offsets: 44 
ImmutableOopMap{[8]=Oop }pc offsets: 84 
ImmutableOopMap{}pc offsets: 116 Compiled method (c2)     905  149             java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda (10 bytes)
 total in heap  [0x0000000110e06d90,0x0000000110e070c0] = 816
 relocation     [0x0000000110e06f08,0x0000000110e06f20] = 24
 main code      [0x0000000110e06f20,0x0000000110e06fc0] = 160
 stub code      [0x0000000110e06fc0,0x0000000110e06fd8] = 24
 oops           [0x0000000110e06fd8,0x0000000110e06fe0] = 8
 metadata       [0x0000000110e06fe0,0x0000000110e06ff8] = 24
 scopes data    [0x0000000110e06ff8,0x0000000110e07020] = 40
 scopes pcs     [0x0000000110e07020,0x0000000110e070a0] = 128
 dependencies   [0x0000000110e070a0,0x0000000110e070a8] = 8
 handler table  [0x0000000110e070a8,0x0000000110e070c0] = 24
----------------------------------------------------------------------
java/util/regex/Pattern$$Lambda$7.get$Lambda(II)Ljava/util/regex/Pattern$BmpCharPredicate;  [0x0000000110e06f20, 0x0000000110e06fd8]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f17cf28} 'get$Lambda' '(II)Ljava/util/regex/Pattern$BmpCharPredicate;' in 'java/util/regex/Pattern$$Lambda$7'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e06f20: mov    %eax,-0x14000(%rsp)
  0x0000000110e06f27: push   %rbp
  0x0000000110e06f28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@-1

  0x0000000110e06f2c: mov    %edx,(%rsp)
  0x0000000110e06f2f: mov    %esi,%ebp
  0x0000000110e06f31: mov    0x118(%r15),%rax
  0x0000000110e06f38: mov    %rax,%r10
  0x0000000110e06f3b: add    $0x18,%r10
  0x0000000110e06f3f: cmp    0x128(%r15),%r10
  0x0000000110e06f46: jae    0x0000000110e06f9d
  0x0000000110e06f48: mov    %r10,0x118(%r15)
  0x0000000110e06f4f: prefetchnta 0xc0(%r10)
  0x0000000110e06f57: mov    $0x70040,%r11d     ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e06f5d: movabs $0x800000000,%r10
  0x0000000110e06f67: add    %r11,%r10
  0x0000000110e06f6a: mov    0xb8(%r10),%r10
  0x0000000110e06f71: mov    %r10,(%rax)
  0x0000000110e06f74: movl   $0x70040,0x8(%rax)  ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e06f7b: movl   $0x0,0x14(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0

  0x0000000110e06f82: mov    %ebp,0xc(%rax)     ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init>@6
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@6

  0x0000000110e06f85: mov    (%rsp),%r11d
  0x0000000110e06f89: mov    %r11d,0x10(%rax)   ;*synchronization entry
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@-1

  0x0000000110e06f8d: add    $0x20,%rsp
  0x0000000110e06f91: pop    %rbp
  0x0000000110e06f92: mov    0x108(%r15),%r10
  0x0000000110e06f99: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e06f9c: retq   
  0x0000000110e06f9d: movabs $0x800070040,%rsi  ;   {metadata('java/util/regex/Pattern$$Lambda$7')}
  0x0000000110e06fa7: callq  0x0000000110dc6380  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e06fac: jmp    0x0000000110e06f82  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::get$Lambda@0

  0x0000000110e06fae: mov    %rax,%rsi
  0x0000000110e06fb1: add    $0x20,%rsp
  0x0000000110e06fb5: pop    %rbp
  0x0000000110e06fb6: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e06fbb: hlt    
  0x0000000110e06fbc: hlt    
  0x0000000110e06fbd: hlt    
  0x0000000110e06fbe: hlt    
  0x0000000110e06fbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e06fc0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e06fc5: callq  0x0000000110e06fca
  0x0000000110e06fca: subq   $0x5,(%rsp)
  0x0000000110e06fcf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e06fd4: hlt    
  0x0000000110e06fd5: hlt    
  0x0000000110e06fd6: hlt    
  0x0000000110e06fd7: hlt    

ImmutableOopMap{}pc offsets: 140 Compiled method (c2)     907  150             java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init> (15 bytes)
 total in heap  [0x0000000110e07110,0x0000000110e07398] = 648
 relocation     [0x0000000110e07288,0x0000000110e07298] = 16
 main code      [0x0000000110e072a0,0x0000000110e07300] = 96
 stub code      [0x0000000110e07300,0x0000000110e07318] = 24
 oops           [0x0000000110e07318,0x0000000110e07320] = 8
 metadata       [0x0000000110e07320,0x0000000110e07328] = 8
 scopes data    [0x0000000110e07328,0x0000000110e07340] = 24
 scopes pcs     [0x0000000110e07340,0x0000000110e07390] = 80
 dependencies   [0x0000000110e07390,0x0000000110e07398] = 8
----------------------------------------------------------------------
java/util/regex/Pattern$$Lambda$7.<init>(II)V  [0x0000000110e072a0, 0x0000000110e07318]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f17ce88} '<init>' '(II)V' in 'java/util/regex/Pattern$$Lambda$7'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$$Lambda$7'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110e072a0: mov    0x8(%rsi),%r10d
  0x0000000110e072a4: movabs $0x800000000,%r12
  0x0000000110e072ae: add    %r12,%r10
  0x0000000110e072b1: xor    %r12,%r12
  0x0000000110e072b4: cmp    %r10,%rax
  0x0000000110e072b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e072bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e072c0: sub    $0x18,%rsp
  0x0000000110e072c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init>@-1

  0x0000000110e072cc: mov    %edx,0xc(%rsi)     ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init>@6

  0x0000000110e072cf: mov    %ecx,0x10(%rsi)    ;*putfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$$Lambda$7/0x0000000800070040::<init>@11

  0x0000000110e072d2: add    $0x10,%rsp
  0x0000000110e072d6: pop    %rbp
  0x0000000110e072d7: mov    0x108(%r15),%r10
  0x0000000110e072de: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e072e1: retq   
  0x0000000110e072e2: hlt    
  0x0000000110e072e3: hlt    
  0x0000000110e072e4: hlt    
  0x0000000110e072e5: hlt    
  0x0000000110e072e6: hlt    
  0x0000000110e072e7: hlt    
  0x0000000110e072e8: hlt    
  0x0000000110e072e9: hlt    
  0x0000000110e072ea: hlt    
  0x0000000110e072eb: hlt    
  0x0000000110e072ec: hlt    
  0x0000000110e072ed: hlt    
  0x0000000110e072ee: hlt    
  0x0000000110e072ef: hlt    
  0x0000000110e072f0: hlt    
  0x0000000110e072f1: hlt    
  0x0000000110e072f2: hlt    
  0x0000000110e072f3: hlt    
  0x0000000110e072f4: hlt    
  0x0000000110e072f5: hlt    
  0x0000000110e072f6: hlt    
  0x0000000110e072f7: hlt    
  0x0000000110e072f8: hlt    
  0x0000000110e072f9: hlt    
  0x0000000110e072fa: hlt    
  0x0000000110e072fb: hlt    
  0x0000000110e072fc: hlt    
  0x0000000110e072fd: hlt    
  0x0000000110e072fe: hlt    
  0x0000000110e072ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e07300: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e07305: callq  0x0000000110e0730a
  0x0000000110e0730a: subq   $0x5,(%rsp)
  0x0000000110e0730f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e07314: hlt    
  0x0000000110e07315: hlt    
  0x0000000110e07316: hlt    
  0x0000000110e07317: hlt    
Compiled method (c2)     911  151             java.util.regex.Pattern::closure (365 bytes)
 total in heap  [0x0000000110e03410,0x0000000110e03e98] = 2696
 relocation     [0x0000000110e03588,0x0000000110e035c0] = 56
 main code      [0x0000000110e035c0,0x0000000110e03920] = 864
 stub code      [0x0000000110e03920,0x0000000110e03938] = 24
 oops           [0x0000000110e03938,0x0000000110e03940] = 8
 metadata       [0x0000000110e03940,0x0000000110e03990] = 80
 scopes data    [0x0000000110e03990,0x0000000110e03b50] = 448
 scopes pcs     [0x0000000110e03b50,0x0000000110e03e60] = 784
 dependencies   [0x0000000110e03e60,0x0000000110e03e68] = 8
 handler table  [0x0000000110e03e68,0x0000000110e03e80] = 24
 nul chk table  [0x0000000110e03e80,0x0000000110e03e98] = 24
----------------------------------------------------------------------
java/util/regex/Pattern.closure(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;  [0x0000000110e035c0, 0x0000000110e03938]  888 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a3220} 'closure' '(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$Node'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e035c0: mov    0x8(%rsi),%r10d
  0x0000000110e035c4: movabs $0x800000000,%r12
  0x0000000110e035ce: add    %r12,%r10
  0x0000000110e035d1: xor    %r12,%r12
  0x0000000110e035d4: cmp    %r10,%rax
  0x0000000110e035d7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e035dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e035e0: mov    %eax,-0x14000(%rsp)
  0x0000000110e035e7: push   %rbp
  0x0000000110e035e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::closure@-1 (line 3267)

  0x0000000110e035ec: mov    0x20(%rsi),%r11d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@5 (line 1892)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)

  0x0000000110e035f0: mov    0x50(%rsi),%r10d   ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@1 (line 1892)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)

  0x0000000110e035f4: mov    0xc(%r12,%r10,8),%r9d  ; implicit exception: dispatches to 0x0000000110e038de
  0x0000000110e035f9: cmp    %r9d,%r11d
  0x0000000110e035fc: jae    0x0000000110e0381c
  0x0000000110e03602: lea    (%r12,%r10,8),%r8
  0x0000000110e03606: mov    0x10(%r8,%r11,4),%ecx  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)

  0x0000000110e0360b: mov    $0x4,%ebp
  0x0000000110e03610: and    0x10(%rsi),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)

  0x0000000110e03613: test   %ebp,%ebp
  0x0000000110e03615: jne    0x0000000110e03887  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)

  0x0000000110e0361b: cmp    $0x2b,%ecx
  0x0000000110e0361e: jne    0x0000000110e0385a  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::closure@6 (line 3268)

  0x0000000110e03624: mov    %r11d,%ebp
  0x0000000110e03627: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03629: mov    %ebp,0x20(%rsi)    ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0362c: cmp    %r9d,%ebp
  0x0000000110e0362f: jae    0x0000000110e0383e
  0x0000000110e03635: movslq %r11d,%r10
  0x0000000110e03638: mov    0x14(%r8,%r10,4),%ebp  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0363d: cmp    $0x3f,%ebp
  0x0000000110e03640: je     0x0000000110e038a2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03646: cmp    $0x2b,%ebp
  0x0000000110e03649: je     0x0000000110e038ba  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0364f: mov    %rdx,%rbp
  0x0000000110e03652: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e038ee
  0x0000000110e03656: cmp    $0x68ef8,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharProperty')}
  0x0000000110e0365d: jne    0x0000000110e038d2
  0x0000000110e03663: mov    0x118(%r15),%rbx
  0x0000000110e0366a: mov    %rbx,%r10
  0x0000000110e0366d: add    $0x18,%r10
  0x0000000110e03671: cmp    0x128(%r15),%r10
  0x0000000110e03678: jae    0x0000000110e03804  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0367e: mov    %r10,0x118(%r15)
  0x0000000110e03685: prefetchnta 0xc0(%r10)
  0x0000000110e0368d: mov    $0x699a0,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e03693: movabs $0x800000000,%r10
  0x0000000110e0369d: add    %r11,%r10
  0x0000000110e036a0: mov    0xb8(%r10),%r10
  0x0000000110e036a7: mov    %r10,(%rbx)
  0x0000000110e036aa: movl   $0x699a0,0x8(%rbx)  ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e036b1: movq   $0x0,0x10(%rbx)
  0x0000000110e036b9: movl   $0xe1fab729,0xc(%rbx)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e036c0: mov    %rbx,%r10
  0x0000000110e036c3: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e036cd: xor    %r10,%r11
  0x0000000110e036d0: shr    $0x14,%r11
  0x0000000110e036d4: test   %r11,%r11
  0x0000000110e036d7: je     0x0000000110e0372c
  0x0000000110e036d9: shr    $0x9,%r10
  0x0000000110e036dd: movabs $0x110569000,%rdi
  0x0000000110e036e7: add    %r10,%rdi
  0x0000000110e036ea: cmpb   $0x20,(%rdi)
  0x0000000110e036ed: je     0x0000000110e0372c
  0x0000000110e036ef: mov    0x70(%r15),%r10
  0x0000000110e036f3: mov    0x80(%r15),%r11
  0x0000000110e036fa: lock addl $0x0,-0x40(%rsp)
  0x0000000110e03700: cmpb   $0x0,(%rdi)
  0x0000000110e03703: je     0x0000000110e0372c
  0x0000000110e03705: movb   $0x0,(%rdi)
  0x0000000110e03708: test   %r10,%r10
  0x0000000110e0370b: jne    0x0000000110e0371f
  0x0000000110e0370d: mov    %r15,%rsi
  0x0000000110e03710: movabs $0x107aec8ce,%r10
  0x0000000110e0371a: callq  *%r10
  0x0000000110e0371d: jmp    0x0000000110e0372c
  0x0000000110e0371f: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e03724: add    $0xfffffffffffffff8,%r10
  0x0000000110e03728: mov    %r10,0x70(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0372c: cmpb   $0x0,0x30(%r15)
  0x0000000110e03731: jne    0x0000000110e037cd  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03737: mov    0x10(%rbp),%r11d   ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0373b: mov    %r11d,0x14(%rbx)
  0x0000000110e0373f: mov    %rbx,%r10
  0x0000000110e03742: mov    %r11,%r8
  0x0000000110e03745: shl    $0x3,%r8
  0x0000000110e03749: xor    %r10,%r8
  0x0000000110e0374c: shr    $0x14,%r8
  0x0000000110e03750: test   %r8,%r8
  0x0000000110e03753: je     0x0000000110e037b3
  0x0000000110e03755: test   %r11d,%r11d
  0x0000000110e03758: je     0x0000000110e037b3
  0x0000000110e0375a: shr    $0x9,%r10
  0x0000000110e0375e: movabs $0x110569000,%r8
  0x0000000110e03768: add    %r10,%r8
  0x0000000110e0376b: cmpb   $0x20,(%r8)
  0x0000000110e0376f: je     0x0000000110e037b3
  0x0000000110e03771: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03775: mov    0x80(%r15),%r11
  0x0000000110e0377c: lock addl $0x0,-0x40(%rsp)
  0x0000000110e03782: cmpb   $0x0,(%r8)
  0x0000000110e03786: je     0x0000000110e037b3
  0x0000000110e03788: movb   $0x0,(%r8)
  0x0000000110e0378c: test   %r10,%r10
  0x0000000110e0378f: jne    0x0000000110e037a6  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03791: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03794: mov    %r15,%rsi
  0x0000000110e03797: movabs $0x107aec8ce,%r10
  0x0000000110e037a1: callq  *%r10
  0x0000000110e037a4: jmp    0x0000000110e037b3
  0x0000000110e037a6: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037ab: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037af: mov    %r10,0x70(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037b3: movl   $0x1,0x10(%rbx)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@-1 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037ba: mov    %rbx,%rax
  0x0000000110e037bd: add    $0x30,%rsp
  0x0000000110e037c1: pop    %rbp
  0x0000000110e037c2: mov    0x108(%r15),%r10
  0x0000000110e037c9: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e037cc: retq   
  0x0000000110e037cd: mov    0x14(%rbx),%r10d
  0x0000000110e037d1: test   %r10d,%r10d
  0x0000000110e037d4: je     0x0000000110e03737
  0x0000000110e037da: mov    0x38(%r15),%r11
  0x0000000110e037de: mov    %r10,%rdi
  0x0000000110e037e1: shl    $0x3,%rdi
  0x0000000110e037e5: test   %r11,%r11
  0x0000000110e037e8: je     0x0000000110e03872  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037ee: mov    0x48(%r15),%r10
  0x0000000110e037f2: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037f7: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037fb: mov    %r11,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e037ff: jmpq   0x0000000110e03737  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03804: movabs $0x8000699a0,%rsi  ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e0380e: nop
  0x0000000110e0380f: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e03814: mov    %rax,%rbx
  0x0000000110e03817: jmpq   0x0000000110e036b9
  0x0000000110e0381c: mov    %rdx,(%rsp)
  0x0000000110e03820: mov    %rsi,0x8(%rsp)
  0x0000000110e03825: mov    %r10d,0x10(%rsp)
  0x0000000110e0382a: mov    %r11d,0x14(%rsp)
  0x0000000110e0382f: mov    $0xffffffe4,%esi
  0x0000000110e03834: data16 xchg %ax,%ax
  0x0000000110e03837: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0383c: ud2    
  0x0000000110e0383e: mov    %rdx,0x8(%rsp)
  0x0000000110e03843: mov    %rsi,0x10(%rsp)
  0x0000000110e03848: mov    %r10d,0x18(%rsp)
  0x0000000110e0384d: mov    $0xffffffe4,%esi
  0x0000000110e03852: nop
  0x0000000110e03853: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop [24]=NarrowOop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e03858: ud2                       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e0385a: mov    %rsi,%rbp
  0x0000000110e0385d: mov    %rdx,(%rsp)
  0x0000000110e03861: mov    %ecx,0x8(%rsp)
  0x0000000110e03865: mov    $0xffffff4d,%esi
  0x0000000110e0386a: nop
  0x0000000110e0386b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::closure@6 (line 3268)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e03870: ud2                       ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03872: mov    %r15,%rsi
  0x0000000110e03875: movabs $0x107aec8aa,%r10
  0x0000000110e0387f: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e03882: jmpq   0x0000000110e03737
  0x0000000110e03887: mov    %rdx,0x8(%rsp)
  0x0000000110e0388c: mov    %rsi,0x10(%rsp)
  0x0000000110e03891: mov    %ecx,0x18(%rsp)
  0x0000000110e03895: mov    $0xffffff4d,%esi
  0x0000000110e0389a: nop
  0x0000000110e0389b: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::peek@12 (line 1893)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038a0: ud2                       ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e038a2: mov    %rsi,(%rsp)
  0x0000000110e038a6: mov    %rdx,0x8(%rsp)
  0x0000000110e038ab: mov    $0xffffff4d,%esi
  0x0000000110e038b0: data16 xchg %ax,%ax
  0x0000000110e038b3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038b8: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e038ba: mov    %rsi,(%rsp)
  0x0000000110e038be: mov    %rdx,0x8(%rsp)
  0x0000000110e038c3: mov    $0xffffff4d,%esi
  0x0000000110e038c8: data16 xchg %ax,%ax
  0x0000000110e038cb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038d0: ud2    
  0x0000000110e038d2: mov    $0xffffffde,%esi
  0x0000000110e038d7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@60 (line 3252)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038dc: ud2                       ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@60 (line 3252)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e038de: mov    $0xfffffff6,%esi
  0x0000000110e038e3: mov    %r11d,%ebp
  0x0000000110e038e6: nop
  0x0000000110e038e7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::peek@8 (line 1892)
                                                ; - java.util.regex.Pattern::closure@1 (line 3267)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038ec: ud2    
  0x0000000110e038ee: mov    $0xfffffff4,%esi
  0x0000000110e038f3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@60 (line 3252)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e038f8: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)

  0x0000000110e038fa: mov    %rax,%rsi
  0x0000000110e038fd: add    $0x30,%rsp
  0x0000000110e03901: pop    %rbp
  0x0000000110e03902: jmpq   0x0000000110dc8700  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ; - java.util.regex.Pattern::closure@121 (line 3282)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e03907: hlt    
  0x0000000110e03908: hlt    
  0x0000000110e03909: hlt    
  0x0000000110e0390a: hlt    
  0x0000000110e0390b: hlt    
  0x0000000110e0390c: hlt    
  0x0000000110e0390d: hlt    
  0x0000000110e0390e: hlt    
  0x0000000110e0390f: hlt    
  0x0000000110e03910: hlt    
  0x0000000110e03911: hlt    
  0x0000000110e03912: hlt    
  0x0000000110e03913: hlt    
  0x0000000110e03914: hlt    
  0x0000000110e03915: hlt    
  0x0000000110e03916: hlt    
  0x0000000110e03917: hlt    
  0x0000000110e03918: hlt    
  0x0000000110e03919: hlt    
  0x0000000110e0391a: hlt    
  0x0000000110e0391b: hlt    
  0x0000000110e0391c: hlt    
  0x0000000110e0391d: hlt    
  0x0000000110e0391e: hlt    
  0x0000000110e0391f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e03920: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e03925: callq  0x0000000110e0392a
  0x0000000110e0392a: subq   $0x5,(%rsp)
  0x0000000110e0392f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e03934: hlt    
  0x0000000110e03935: hlt    
  0x0000000110e03936: hlt    
  0x0000000110e03937: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 596 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=NarrowOop }pc offsets: 636 
ImmutableOopMap{[8]=Oop [16]=Oop [24]=NarrowOop }pc offsets: 664 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 688 
ImmutableOopMap{[8]=Oop [16]=Oop }pc offsets: 736 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 760 784 
ImmutableOopMap{rbp=Oop }pc offsets: 796 
ImmutableOopMap{}pc offsets: 812 824 Compiled method (c2)     924  152             java.util.regex.Pattern::curly (115 bytes)
 total in heap  [0x0000000110e02a10,0x0000000110e03388] = 2424
 relocation     [0x0000000110e02b88,0x0000000110e02bb8] = 48
 main code      [0x0000000110e02bc0,0x0000000110e02ee0] = 800
 stub code      [0x0000000110e02ee0,0x0000000110e02ef8] = 24
 oops           [0x0000000110e02ef8,0x0000000110e02f00] = 8
 metadata       [0x0000000110e02f00,0x0000000110e02f40] = 64
 scopes data    [0x0000000110e02f40,0x0000000110e03090] = 336
 scopes pcs     [0x0000000110e03090,0x0000000110e03350] = 704
 dependencies   [0x0000000110e03350,0x0000000110e03358] = 8
 handler table  [0x0000000110e03358,0x0000000110e03370] = 24
 nul chk table  [0x0000000110e03370,0x0000000110e03388] = 24
----------------------------------------------------------------------
java/util/regex/Pattern.curly(Ljava/util/regex/Pattern$Node;I)Ljava/util/regex/Pattern$Node;  [0x0000000110e02bc0, 0x0000000110e02ef8]  824 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a2f90} 'curly' '(Ljava/util/regex/Pattern$Node;I)Ljava/util/regex/Pattern$Node;' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$Node'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110e02bc0: mov    0x8(%rsi),%r10d
  0x0000000110e02bc4: movabs $0x800000000,%r12
  0x0000000110e02bce: add    %r12,%r10
  0x0000000110e02bd1: xor    %r12,%r12
  0x0000000110e02bd4: cmp    %r10,%rax
  0x0000000110e02bd7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e02bdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e02be0: mov    %eax,-0x14000(%rsp)
  0x0000000110e02be7: push   %rbp
  0x0000000110e02be8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::curly@-1 (line 3244)

  0x0000000110e02bec: mov    %ecx,0x10(%rsp)
  0x0000000110e02bf0: mov    0x20(%rsi),%r11d   ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@6 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02bf4: mov    0x50(%rsi),%r8d    ;*getfield temp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@1 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02bf8: mov    %r11d,%r10d
  0x0000000110e02bfb: inc    %r10d              ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@10 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02bfe: mov    %r10d,0x20(%rsi)   ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@12 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02c02: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x0000000110e02ea2
  0x0000000110e02c07: cmp    %r9d,%r10d
  0x0000000110e02c0a: jae    0x0000000110e02e0c
  0x0000000110e02c10: lea    (%r12,%r8,8),%r10
  0x0000000110e02c14: movslq %r11d,%r11
  0x0000000110e02c17: mov    0x14(%r10,%r11,4),%r11d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02c1c: mov    $0x4,%ebp
  0x0000000110e02c21: and    0x10(%rsi),%ebp    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@5 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02c24: test   %ebp,%ebp
  0x0000000110e02c26: jne    0x0000000110e02e47  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02c2c: cmp    $0x3f,%r11d
  0x0000000110e02c30: je     0x0000000110e02e62  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)

  0x0000000110e02c36: cmp    $0x2b,%r11d
  0x0000000110e02c3a: je     0x0000000110e02e7e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)

  0x0000000110e02c40: mov    %rdx,%rbp
  0x0000000110e02c43: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e02eb2
  0x0000000110e02c47: cmp    $0x68ef8,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharProperty')}
  0x0000000110e02c4e: jne    0x0000000110e02e96
  0x0000000110e02c54: mov    0x118(%r15),%rbx
  0x0000000110e02c5b: mov    %rbx,%r10
  0x0000000110e02c5e: add    $0x18,%r10
  0x0000000110e02c62: cmp    0x128(%r15),%r10
  0x0000000110e02c69: jae    0x0000000110e02df3  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02c6f: mov    %r10,0x118(%r15)
  0x0000000110e02c76: prefetchnta 0xc0(%r10)
  0x0000000110e02c7e: mov    $0x699a0,%r11d     ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e02c84: movabs $0x800000000,%r10
  0x0000000110e02c8e: add    %r11,%r10
  0x0000000110e02c91: mov    0xb8(%r10),%r10
  0x0000000110e02c98: mov    %r10,(%rbx)
  0x0000000110e02c9b: movl   $0x699a0,0x8(%rbx)  ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e02ca2: movq   $0x0,0x10(%rbx)
  0x0000000110e02caa: movl   $0xe1fab729,0xc(%rbx)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)
                                                ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e02cb1: mov    %rbx,%r10
  0x0000000110e02cb4: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e02cbe: xor    %r10,%r11
  0x0000000110e02cc1: shr    $0x14,%r11
  0x0000000110e02cc5: test   %r11,%r11
  0x0000000110e02cc8: je     0x0000000110e02d1d
  0x0000000110e02cca: shr    $0x9,%r10
  0x0000000110e02cce: movabs $0x110569000,%rdi
  0x0000000110e02cd8: add    %r10,%rdi
  0x0000000110e02cdb: cmpb   $0x20,(%rdi)
  0x0000000110e02cde: je     0x0000000110e02d1d
  0x0000000110e02ce0: mov    0x70(%r15),%r10
  0x0000000110e02ce4: mov    0x80(%r15),%r11
  0x0000000110e02ceb: lock addl $0x0,-0x40(%rsp)
  0x0000000110e02cf1: cmpb   $0x0,(%rdi)
  0x0000000110e02cf4: je     0x0000000110e02d1d
  0x0000000110e02cf6: movb   $0x0,(%rdi)
  0x0000000110e02cf9: test   %r10,%r10
  0x0000000110e02cfc: jne    0x0000000110e02d10
  0x0000000110e02cfe: mov    %r15,%rsi
  0x0000000110e02d01: movabs $0x107aec8ce,%r10
  0x0000000110e02d0b: callq  *%r10
  0x0000000110e02d0e: jmp    0x0000000110e02d1d
  0x0000000110e02d10: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e02d15: add    $0xfffffffffffffff8,%r10
  0x0000000110e02d19: mov    %r10,0x70(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d1d: cmpb   $0x0,0x30(%r15)
  0x0000000110e02d22: jne    0x0000000110e02dc0  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d28: mov    0x10(%rbp),%r11d   ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d2c: mov    %r11d,0x14(%rbx)
  0x0000000110e02d30: mov    %rbx,%r10
  0x0000000110e02d33: mov    %r11,%r8
  0x0000000110e02d36: shl    $0x3,%r8
  0x0000000110e02d3a: xor    %r10,%r8
  0x0000000110e02d3d: shr    $0x14,%r8
  0x0000000110e02d41: test   %r8,%r8
  0x0000000110e02d44: je     0x0000000110e02da4
  0x0000000110e02d46: test   %r11d,%r11d
  0x0000000110e02d49: je     0x0000000110e02da4
  0x0000000110e02d4b: shr    $0x9,%r10
  0x0000000110e02d4f: movabs $0x110569000,%r8
  0x0000000110e02d59: add    %r10,%r8
  0x0000000110e02d5c: cmpb   $0x20,(%r8)
  0x0000000110e02d60: je     0x0000000110e02da4
  0x0000000110e02d62: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d66: mov    0x80(%r15),%r11
  0x0000000110e02d6d: lock addl $0x0,-0x40(%rsp)
  0x0000000110e02d73: cmpb   $0x0,(%r8)
  0x0000000110e02d77: je     0x0000000110e02da4
  0x0000000110e02d79: movb   $0x0,(%r8)
  0x0000000110e02d7d: test   %r10,%r10
  0x0000000110e02d80: jne    0x0000000110e02d97  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d82: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d85: mov    %r15,%rsi
  0x0000000110e02d88: movabs $0x107aec8ce,%r10
  0x0000000110e02d92: callq  *%r10
  0x0000000110e02d95: jmp    0x0000000110e02da4
  0x0000000110e02d97: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02d9c: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02da0: mov    %r10,0x70(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02da4: mov    0x10(%rsp),%r11d
  0x0000000110e02da9: mov    %r11d,0x10(%rbx)   ;*synchronization entry
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@-1 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02dad: mov    %rbx,%rax
  0x0000000110e02db0: add    $0x30,%rsp
  0x0000000110e02db4: pop    %rbp
  0x0000000110e02db5: mov    0x108(%r15),%r10
  0x0000000110e02dbc: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e02dbf: retq   
  0x0000000110e02dc0: mov    0x14(%rbx),%r10d
  0x0000000110e02dc4: test   %r10d,%r10d
  0x0000000110e02dc7: je     0x0000000110e02d28
  0x0000000110e02dcd: mov    0x38(%r15),%r11
  0x0000000110e02dd1: mov    %r10,%rdi
  0x0000000110e02dd4: shl    $0x3,%rdi
  0x0000000110e02dd8: test   %r11,%r11
  0x0000000110e02ddb: je     0x0000000110e02e32  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02ddd: mov    0x48(%r15),%r10
  0x0000000110e02de1: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02de6: add    $0xfffffffffffffff8,%r11  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02dea: mov    %r11,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02dee: jmpq   0x0000000110e02d28  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)

  0x0000000110e02df3: movabs $0x8000699a0,%rsi  ;   {metadata('java/util/regex/Pattern$BmpCharPropertyGreedy')}
  0x0000000110e02dfd: xchg   %ax,%ax
  0x0000000110e02dff: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e02e04: mov    %rax,%rbx
  0x0000000110e02e07: jmpq   0x0000000110e02caa
  0x0000000110e02e0c: mov    %rdx,(%rsp)
  0x0000000110e02e10: mov    %ecx,0x8(%rsp)
  0x0000000110e02e14: mov    %rsi,0x10(%rsp)
  0x0000000110e02e19: mov    %r8d,0xc(%rsp)
  0x0000000110e02e1e: mov    %r10d,0x18(%rsp)
  0x0000000110e02e23: mov    $0xffffffe4,%esi
  0x0000000110e02e28: data16 xchg %ax,%ax
  0x0000000110e02e2b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [12]=NarrowOop [16]=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02e30: ud2                       ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02e32: mov    %r15,%rsi
  0x0000000110e02e35: movabs $0x107aec8aa,%r10
  0x0000000110e02e3f: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)

  0x0000000110e02e42: jmpq   0x0000000110e02d28  ;*synchronization entry
                                                ; - java.util.regex.Pattern::has@-1 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02e47: mov    %rdx,0x8(%rsp)
  0x0000000110e02e4c: mov    %rsi,0x18(%rsp)
  0x0000000110e02e51: mov    %r11d,0x14(%rsp)
  0x0000000110e02e56: mov    $0xffffff4d,%esi
  0x0000000110e02e5b: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::has@6 (line 1866)
                                                ; - java.util.regex.Pattern::next@19 (line 1922)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02e60: ud2                       ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)

  0x0000000110e02e62: mov    %rsi,%rbp
  0x0000000110e02e65: mov    %rdx,(%rsp)
  0x0000000110e02e69: mov    %ecx,0x8(%rsp)
  0x0000000110e02e6d: mov    %r11d,0x10(%rsp)
  0x0000000110e02e72: mov    $0xffffff4d,%esi
  0x0000000110e02e77: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02e7c: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@8 (line 3245)

  0x0000000110e02e7e: mov    %rsi,%rbp
  0x0000000110e02e81: mov    %rdx,(%rsp)
  0x0000000110e02e85: mov    %r11d,0xc(%rsp)
  0x0000000110e02e8a: mov    $0xffffff4d,%esi
  0x0000000110e02e8f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@35 (line 3248)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02e94: ud2    
  0x0000000110e02e96: mov    $0xffffffde,%esi
  0x0000000110e02e9b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@60 (line 3252)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02ea0: ud2    
  0x0000000110e02ea2: mov    $0xfffffff6,%esi
  0x0000000110e02ea7: mov    %r10d,%ebp
  0x0000000110e02eaa: nop
  0x0000000110e02eab: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::next@15 (line 1921)
                                                ; - java.util.regex.Pattern::curly@1 (line 3244)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02eb0: ud2    
  0x0000000110e02eb2: mov    $0xfffffff4,%esi
  0x0000000110e02eb7: mov    %ecx,%ebp
  0x0000000110e02eb9: xchg   %ax,%ax
  0x0000000110e02ebb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@60 (line 3252)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e02ec0: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::curly@66 (line 3253)

  0x0000000110e02ec2: mov    %rax,%rsi
  0x0000000110e02ec5: add    $0x30,%rsp
  0x0000000110e02ec9: pop    %rbp
  0x0000000110e02eca: jmpq   0x0000000110dc8700  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ; - java.util.regex.Pattern::curly@75 (line 3253)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e02ecf: hlt    
  0x0000000110e02ed0: hlt    
  0x0000000110e02ed1: hlt    
  0x0000000110e02ed2: hlt    
  0x0000000110e02ed3: hlt    
  0x0000000110e02ed4: hlt    
  0x0000000110e02ed5: hlt    
  0x0000000110e02ed6: hlt    
  0x0000000110e02ed7: hlt    
  0x0000000110e02ed8: hlt    
  0x0000000110e02ed9: hlt    
  0x0000000110e02eda: hlt    
  0x0000000110e02edb: hlt    
  0x0000000110e02edc: hlt    
  0x0000000110e02edd: hlt    
  0x0000000110e02ede: hlt    
  0x0000000110e02edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e02ee0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e02ee5: callq  0x0000000110e02eea
  0x0000000110e02eea: subq   $0x5,(%rsp)
  0x0000000110e02eef: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e02ef4: hlt    
  0x0000000110e02ef5: hlt    
  0x0000000110e02ef6: hlt    
  0x0000000110e02ef7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 580 
ImmutableOopMap{[0]=Oop [12]=NarrowOop [16]=Oop }pc offsets: 624 
ImmutableOopMap{[8]=Oop [24]=Oop }pc offsets: 672 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 700 724 
ImmutableOopMap{rbp=Oop }pc offsets: 736 
ImmutableOopMap{}pc offsets: 752 768 Compiled method (c2)     933  153             java.util.regex.Pattern$BmpCharPropertyGreedy::<init> (7 bytes)
 total in heap  [0x0000000110e08e90,0x0000000110e093e0] = 1360
 relocation     [0x0000000110e09008,0x0000000110e09020] = 24
 main code      [0x0000000110e09020,0x0000000110e09220] = 512
 stub code      [0x0000000110e09220,0x0000000110e09238] = 24
 oops           [0x0000000110e09238,0x0000000110e09240] = 8
 metadata       [0x0000000110e09240,0x0000000110e09258] = 24
 scopes data    [0x0000000110e09258,0x0000000110e09298] = 64
 scopes pcs     [0x0000000110e09298,0x0000000110e093c8] = 304
 dependencies   [0x0000000110e093c8,0x0000000110e093d0] = 8
 nul chk table  [0x0000000110e093d0,0x0000000110e093e0] = 16
----------------------------------------------------------------------
java/util/regex/Pattern$BmpCharPropertyGreedy.<init>(Ljava/util/regex/Pattern$BmpCharProperty;I)V  [0x0000000110e09020, 0x0000000110e09238]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1ae408} '<init>' '(Ljava/util/regex/Pattern$BmpCharProperty;I)V' in 'java/util/regex/Pattern$BmpCharPropertyGreedy'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$BmpCharPropertyGreedy'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$BmpCharProperty'
  # parm1:    rcx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110e09020: mov    0x8(%rsi),%r10d
  0x0000000110e09024: movabs $0x800000000,%r12
  0x0000000110e0902e: add    %r12,%r10
  0x0000000110e09031: xor    %r12,%r12
  0x0000000110e09034: cmp    %r10,%rax
  0x0000000110e09037: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e0903d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e09040: mov    %eax,-0x14000(%rsp)
  0x0000000110e09047: push   %rbp
  0x0000000110e09048: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@-1 (line 4331)

  0x0000000110e0904c: mov    %ecx,%ebp
  0x0000000110e0904e: mov    %rdx,%rbx
  0x0000000110e09051: cmpb   $0x0,0x30(%r15)
  0x0000000110e09056: jne    0x0000000110e0916c
  0x0000000110e0905c: mov    %rsi,%r13
  0x0000000110e0905f: movl   $0xe1fab729,0xc(%r13)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e09067: mov    %r13,%r10
  0x0000000110e0906a: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e09074: xor    %r10,%r11
  0x0000000110e09077: shr    $0x14,%r11
  0x0000000110e0907b: test   %r11,%r11
  0x0000000110e0907e: je     0x0000000110e090d3
  0x0000000110e09080: shr    $0x9,%r10
  0x0000000110e09084: movabs $0x110569000,%rdi
  0x0000000110e0908e: add    %r10,%rdi
  0x0000000110e09091: cmpb   $0x20,(%rdi)
  0x0000000110e09094: je     0x0000000110e090d3
  0x0000000110e09096: mov    0x70(%r15),%r10
  0x0000000110e0909a: mov    0x80(%r15),%r11
  0x0000000110e090a1: lock addl $0x0,-0x40(%rsp)
  0x0000000110e090a7: cmpb   $0x0,(%rdi)
  0x0000000110e090aa: je     0x0000000110e090d3
  0x0000000110e090ac: movb   $0x0,(%rdi)
  0x0000000110e090af: test   %r10,%r10
  0x0000000110e090b2: jne    0x0000000110e090c6
  0x0000000110e090b4: mov    %r15,%rsi
  0x0000000110e090b7: movabs $0x107aec8ce,%r10
  0x0000000110e090c1: callq  *%r10
  0x0000000110e090c4: jmp    0x0000000110e090d3
  0x0000000110e090c6: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e090cb: add    $0xfffffffffffffff8,%r10
  0x0000000110e090cf: mov    %r10,0x70(%r15)
  0x0000000110e090d3: mov    0x10(%rbx),%ebx    ; implicit exception: dispatches to 0x0000000110e091ff
  0x0000000110e090d6: cmpb   $0x0,0x30(%r15)
  0x0000000110e090db: jne    0x0000000110e091a2
  0x0000000110e090e1: mov    %ebx,0x14(%r13)
  0x0000000110e090e5: mov    %rbx,%r10
  0x0000000110e090e8: shl    $0x3,%r10
  0x0000000110e090ec: mov    %r13,%r11
  0x0000000110e090ef: xor    %r11,%r10
  0x0000000110e090f2: shr    $0x14,%r10
  0x0000000110e090f6: test   %r10,%r10
  0x0000000110e090f9: je     0x0000000110e09158
  0x0000000110e090fb: test   %ebx,%ebx
  0x0000000110e090fd: je     0x0000000110e09158
  0x0000000110e090ff: shr    $0x9,%r11
  0x0000000110e09103: movabs $0x110569000,%r8
  0x0000000110e0910d: add    %r11,%r8
  0x0000000110e09110: cmpb   $0x20,(%r8)
  0x0000000110e09114: je     0x0000000110e09158
  0x0000000110e09116: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e0911a: mov    0x80(%r15),%r11
  0x0000000110e09121: lock addl $0x0,-0x40(%rsp)
  0x0000000110e09127: cmpb   $0x0,(%r8)
  0x0000000110e0912b: je     0x0000000110e09158
  0x0000000110e0912d: movb   $0x0,(%r8)
  0x0000000110e09131: test   %r10,%r10
  0x0000000110e09134: jne    0x0000000110e0914b  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e09136: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e09139: mov    %r15,%rsi
  0x0000000110e0913c: movabs $0x107aec8ce,%r10
  0x0000000110e09146: callq  *%r10
  0x0000000110e09149: jmp    0x0000000110e09158
  0x0000000110e0914b: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e09150: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e09154: mov    %r10,0x70(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e09158: mov    %ebp,0x10(%r13)    ;*synchronization entry
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@-1 (line 4331)

  0x0000000110e0915c: add    $0x10,%rsp
  0x0000000110e09160: pop    %rbp
  0x0000000110e09161: mov    0x108(%r15),%r10
  0x0000000110e09168: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e0916b: retq   
  0x0000000110e0916c: mov    %rsi,%r13
  0x0000000110e0916f: mov    0xc(%rsi),%r10d
  0x0000000110e09173: test   %r10d,%r10d
  0x0000000110e09176: je     0x0000000110e0905f
  0x0000000110e0917c: mov    0x38(%r15),%r11
  0x0000000110e09180: mov    %r10,%rdi
  0x0000000110e09183: shl    $0x3,%rdi
  0x0000000110e09187: test   %r11,%r11
  0x0000000110e0918a: je     0x0000000110e091d5
  0x0000000110e0918c: mov    0x48(%r15),%r10
  0x0000000110e09190: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e09195: add    $0xfffffffffffffff8,%r11
  0x0000000110e09199: mov    %r11,0x38(%r15)
  0x0000000110e0919d: jmpq   0x0000000110e0905f
  0x0000000110e091a2: mov    0x14(%r13),%r11d
  0x0000000110e091a6: test   %r11d,%r11d
  0x0000000110e091a9: je     0x0000000110e090e1
  0x0000000110e091af: mov    0x38(%r15),%r10
  0x0000000110e091b3: mov    %r11,%rdi
  0x0000000110e091b6: shl    $0x3,%rdi
  0x0000000110e091ba: test   %r10,%r10
  0x0000000110e091bd: je     0x0000000110e091ea  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091bf: mov    0x48(%r15),%r11
  0x0000000110e091c3: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091c8: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091cc: mov    %r10,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091d0: jmpq   0x0000000110e090e1
  0x0000000110e091d5: mov    %r15,%rsi
  0x0000000110e091d8: movabs $0x107aec8aa,%r10
  0x0000000110e091e2: callq  *%r10
  0x0000000110e091e5: jmpq   0x0000000110e0905f  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091ea: mov    %r15,%rsi
  0x0000000110e091ed: movabs $0x107aec8aa,%r10
  0x0000000110e091f7: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091fa: jmpq   0x0000000110e090e1  ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e091ff: mov    $0xfffffff6,%esi
  0x0000000110e09204: data16 xchg %ax,%ax
  0x0000000110e09207: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield predicate {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0920c: ud2                       ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)
                                                ; - java.util.regex.Pattern$BmpCharPropertyGreedy::<init>@3 (line 4331)

  0x0000000110e0920e: hlt    
  0x0000000110e0920f: hlt    
  0x0000000110e09210: hlt    
  0x0000000110e09211: hlt    
  0x0000000110e09212: hlt    
  0x0000000110e09213: hlt    
  0x0000000110e09214: hlt    
  0x0000000110e09215: hlt    
  0x0000000110e09216: hlt    
  0x0000000110e09217: hlt    
  0x0000000110e09218: hlt    
  0x0000000110e09219: hlt    
  0x0000000110e0921a: hlt    
  0x0000000110e0921b: hlt    
  0x0000000110e0921c: hlt    
  0x0000000110e0921d: hlt    
  0x0000000110e0921e: hlt    
  0x0000000110e0921f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e09220: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e09225: callq  0x0000000110e0922a
  0x0000000110e0922a: subq   $0x5,(%rsp)
  0x0000000110e0922f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e09234: hlt    
  0x0000000110e09235: hlt    
  0x0000000110e09236: hlt    
  0x0000000110e09237: hlt    

ImmutableOopMap{}pc offsets: 492 Compiled method (c2)     939  154             java.util.regex.Pattern$CharPropertyGreedy::<init> (18 bytes)
 total in heap  [0x0000000110e09410,0x0000000110e09948] = 1336
 relocation     [0x0000000110e09588,0x0000000110e095a0] = 24
 main code      [0x0000000110e095a0,0x0000000110e097a0] = 512
 stub code      [0x0000000110e097a0,0x0000000110e097b8] = 24
 oops           [0x0000000110e097b8,0x0000000110e097c0] = 8
 metadata       [0x0000000110e097c0,0x0000000110e097d8] = 24
 scopes data    [0x0000000110e097d8,0x0000000110e09810] = 56
 scopes pcs     [0x0000000110e09810,0x0000000110e09930] = 288
 dependencies   [0x0000000110e09930,0x0000000110e09938] = 8
 nul chk table  [0x0000000110e09938,0x0000000110e09948] = 16
----------------------------------------------------------------------
java/util/regex/Pattern$CharPropertyGreedy.<init>(Ljava/util/regex/Pattern$CharProperty;I)V  [0x0000000110e095a0, 0x0000000110e097b8]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1aead8} '<init>' '(Ljava/util/regex/Pattern$CharProperty;I)V' in 'java/util/regex/Pattern$CharPropertyGreedy'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$CharPropertyGreedy'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$CharProperty'
  # parm1:    rcx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110e095a0: mov    0x8(%rsi),%r10d
  0x0000000110e095a4: movabs $0x800000000,%r12
  0x0000000110e095ae: add    %r12,%r10
  0x0000000110e095b1: xor    %r12,%r12
  0x0000000110e095b4: cmp    %r10,%rax
  0x0000000110e095b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e095bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e095c0: mov    %eax,-0x14000(%rsp)
  0x0000000110e095c7: push   %rbp
  0x0000000110e095c8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@-1 (line 4287)

  0x0000000110e095cc: mov    %ecx,%ebp
  0x0000000110e095ce: mov    %rdx,%rbx
  0x0000000110e095d1: cmpb   $0x0,0x30(%r15)
  0x0000000110e095d6: jne    0x0000000110e096ec
  0x0000000110e095dc: mov    %rsi,%r13
  0x0000000110e095df: movl   $0xe1fab729,0xc(%r13)  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e095e7: mov    %r13,%r10
  0x0000000110e095ea: movabs $0x70fd5b948,%r11  ;   {oop(a 'java/util/regex/Pattern$Node'{0x000000070fd5b948})}
  0x0000000110e095f4: xor    %r10,%r11
  0x0000000110e095f7: shr    $0x14,%r11
  0x0000000110e095fb: test   %r11,%r11
  0x0000000110e095fe: je     0x0000000110e09653
  0x0000000110e09600: shr    $0x9,%r10
  0x0000000110e09604: movabs $0x110569000,%rdi
  0x0000000110e0960e: add    %r10,%rdi
  0x0000000110e09611: cmpb   $0x20,(%rdi)
  0x0000000110e09614: je     0x0000000110e09653
  0x0000000110e09616: mov    0x70(%r15),%r10
  0x0000000110e0961a: mov    0x80(%r15),%r11
  0x0000000110e09621: lock addl $0x0,-0x40(%rsp)
  0x0000000110e09627: cmpb   $0x0,(%rdi)
  0x0000000110e0962a: je     0x0000000110e09653
  0x0000000110e0962c: movb   $0x0,(%rdi)
  0x0000000110e0962f: test   %r10,%r10
  0x0000000110e09632: jne    0x0000000110e09646
  0x0000000110e09634: mov    %r15,%rsi
  0x0000000110e09637: movabs $0x107aec8ce,%r10
  0x0000000110e09641: callq  *%r10
  0x0000000110e09644: jmp    0x0000000110e09653
  0x0000000110e09646: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e0964b: add    $0xfffffffffffffff8,%r10
  0x0000000110e0964f: mov    %r10,0x70(%r15)
  0x0000000110e09653: mov    0x10(%rbx),%ebx    ; implicit exception: dispatches to 0x0000000110e0977f
  0x0000000110e09656: cmpb   $0x0,0x30(%r15)
  0x0000000110e0965b: jne    0x0000000110e09722
  0x0000000110e09661: mov    %ebx,0x14(%r13)
  0x0000000110e09665: mov    %rbx,%r10
  0x0000000110e09668: shl    $0x3,%r10
  0x0000000110e0966c: mov    %r13,%r11
  0x0000000110e0966f: xor    %r11,%r10
  0x0000000110e09672: shr    $0x14,%r10
  0x0000000110e09676: test   %r10,%r10
  0x0000000110e09679: je     0x0000000110e096d8
  0x0000000110e0967b: test   %ebx,%ebx
  0x0000000110e0967d: je     0x0000000110e096d8
  0x0000000110e0967f: shr    $0x9,%r11
  0x0000000110e09683: movabs $0x110569000,%r8
  0x0000000110e0968d: add    %r11,%r8
  0x0000000110e09690: cmpb   $0x20,(%r8)
  0x0000000110e09694: je     0x0000000110e096d8
  0x0000000110e09696: mov    0x70(%r15),%r10    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e0969a: mov    0x80(%r15),%r11
  0x0000000110e096a1: lock addl $0x0,-0x40(%rsp)
  0x0000000110e096a7: cmpb   $0x0,(%r8)
  0x0000000110e096ab: je     0x0000000110e096d8
  0x0000000110e096ad: movb   $0x0,(%r8)
  0x0000000110e096b1: test   %r10,%r10
  0x0000000110e096b4: jne    0x0000000110e096cb  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e096b6: mov    %r8,%rdi           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e096b9: mov    %r15,%rsi
  0x0000000110e096bc: movabs $0x107aec8ce,%r10
  0x0000000110e096c6: callq  *%r10
  0x0000000110e096c9: jmp    0x0000000110e096d8
  0x0000000110e096cb: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e096d0: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e096d4: mov    %r10,0x70(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e096d8: mov    %ebp,0x10(%r13)
  0x0000000110e096dc: add    $0x10,%rsp
  0x0000000110e096e0: pop    %rbp
  0x0000000110e096e1: mov    0x108(%r15),%r10
  0x0000000110e096e8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e096eb: retq   
  0x0000000110e096ec: mov    %rsi,%r13
  0x0000000110e096ef: mov    0xc(%rsi),%r10d
  0x0000000110e096f3: test   %r10d,%r10d
  0x0000000110e096f6: je     0x0000000110e095df
  0x0000000110e096fc: mov    0x38(%r15),%r11
  0x0000000110e09700: mov    %r10,%rdi
  0x0000000110e09703: shl    $0x3,%rdi
  0x0000000110e09707: test   %r11,%r11
  0x0000000110e0970a: je     0x0000000110e09755
  0x0000000110e0970c: mov    0x48(%r15),%r10
  0x0000000110e09710: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e09715: add    $0xfffffffffffffff8,%r11
  0x0000000110e09719: mov    %r11,0x38(%r15)
  0x0000000110e0971d: jmpq   0x0000000110e095df
  0x0000000110e09722: mov    0x14(%r13),%r11d
  0x0000000110e09726: test   %r11d,%r11d
  0x0000000110e09729: je     0x0000000110e09661
  0x0000000110e0972f: mov    0x38(%r15),%r10
  0x0000000110e09733: mov    %r11,%rdi
  0x0000000110e09736: shl    $0x3,%rdi
  0x0000000110e0973a: test   %r10,%r10
  0x0000000110e0973d: je     0x0000000110e0976a  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e0973f: mov    0x48(%r15),%r11
  0x0000000110e09743: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e09748: add    $0xfffffffffffffff8,%r10  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e0974c: mov    %r10,0x38(%r15)    ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e09750: jmpq   0x0000000110e09661
  0x0000000110e09755: mov    %r15,%rsi
  0x0000000110e09758: movabs $0x107aec8aa,%r10
  0x0000000110e09762: callq  *%r10
  0x0000000110e09765: jmpq   0x0000000110e095df  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::<init>@8 (line 3559)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@1 (line 4287)

  0x0000000110e0976a: mov    %r15,%rsi
  0x0000000110e0976d: movabs $0x107aec8aa,%r10
  0x0000000110e09777: callq  *%r10              ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e0977a: jmpq   0x0000000110e09661  ;*getfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)

  0x0000000110e0977f: mov    $0xfffffff6,%esi
  0x0000000110e09784: data16 xchg %ax,%ax
  0x0000000110e09787: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield predicate {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@6 (line 4288)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0978c: ud2                       ;*putfield predicate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::<init>@9 (line 4288)

  0x0000000110e0978e: hlt    
  0x0000000110e0978f: hlt    
  0x0000000110e09790: hlt    
  0x0000000110e09791: hlt    
  0x0000000110e09792: hlt    
  0x0000000110e09793: hlt    
  0x0000000110e09794: hlt    
  0x0000000110e09795: hlt    
  0x0000000110e09796: hlt    
  0x0000000110e09797: hlt    
  0x0000000110e09798: hlt    
  0x0000000110e09799: hlt    
  0x0000000110e0979a: hlt    
  0x0000000110e0979b: hlt    
  0x0000000110e0979c: hlt    
  0x0000000110e0979d: hlt    
  0x0000000110e0979e: hlt    
  0x0000000110e0979f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e097a0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e097a5: callq  0x0000000110e097aa
  0x0000000110e097aa: subq   $0x5,(%rsp)
  0x0000000110e097af: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e097b4: hlt    
  0x0000000110e097b5: hlt    
  0x0000000110e097b6: hlt    
  0x0000000110e097b7: hlt    

ImmutableOopMap{}pc offsets: 492 Compiled method (c2)     943  155             java.util.regex.Pattern$CharPropertyGreedy::study (45 bytes)
 total in heap  [0x0000000110e09990,0x0000000110e09f50] = 1472
 relocation     [0x0000000110e09b08,0x0000000110e09b38] = 48
 main code      [0x0000000110e09b40,0x0000000110e09c80] = 320
 stub code      [0x0000000110e09c80,0x0000000110e09ca8] = 40
 metadata       [0x0000000110e09ca8,0x0000000110e09cc8] = 32
 scopes data    [0x0000000110e09cc8,0x0000000110e09d78] = 176
 scopes pcs     [0x0000000110e09d78,0x0000000110e09f18] = 416
 dependencies   [0x0000000110e09f18,0x0000000110e09f20] = 8
 handler table  [0x0000000110e09f20,0x0000000110e09f38] = 24
 nul chk table  [0x0000000110e09f38,0x0000000110e09f50] = 24
----------------------------------------------------------------------
java/util/regex/Pattern$CharPropertyGreedy.study(Ljava/util/regex/Pattern$TreeInfo;)Z  [0x0000000110e09b40, 0x0000000110e09ca8]  360 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1aed40} 'study' '(Ljava/util/regex/Pattern$TreeInfo;)Z' in 'java/util/regex/Pattern$CharPropertyGreedy'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$CharPropertyGreedy'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern$TreeInfo'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e09b40: mov    0x8(%rsi),%r10d
  0x0000000110e09b44: movabs $0x800000000,%r12
  0x0000000110e09b4e: add    %r12,%r10
  0x0000000110e09b51: xor    %r12,%r12
  0x0000000110e09b54: cmp    %r10,%rax
  0x0000000110e09b57: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e09b5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e09b60: mov    %eax,-0x14000(%rsp)
  0x0000000110e09b67: push   %rbp
  0x0000000110e09b68: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@-1 (line 4319)

  0x0000000110e09b6c: movzbl 0x14(%rdx),%r11d   ;*getfield maxValid {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@14 (line 4320)
                                                ; implicit exception: dispatches to 0x0000000110e09c47
  0x0000000110e09b71: mov    0x10(%rsi),%r10d
  0x0000000110e09b75: add    %r10d,0xc(%rdx)    ;*putfield minLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@10 (line 4319)

  0x0000000110e09b79: test   %r11d,%r11d
  0x0000000110e09b7c: je     0x0000000110e09c12  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@17 (line 4320)

  0x0000000110e09b82: mov    0xc(%rsi),%ebp     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@37 (line 4324)

  0x0000000110e09b85: addl   $0x7fffffff,0x10(%rdx)  ;*putfield maxLength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@28 (line 4321)

  0x0000000110e09b8c: movb   $0x0,0x15(%rdx)    ;*putfield deterministic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@33 (line 4323)

  0x0000000110e09b90: mov    0x8(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x0000000110e09c56
  0x0000000110e09b95: cmp    $0x68488,%r10d     ;   {metadata('java/util/regex/Pattern$LastNode')}
  0x0000000110e09b9c: jne    0x0000000110e09bf0
  0x0000000110e09b9e: lea    (%r12,%rbp,8),%r10  ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09ba2: mov    0xc(%r10),%ebp     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@1 (line 3574)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09ba6: xor    %eax,%eax
  0x0000000110e09ba8: test   %ebp,%ebp
  0x0000000110e09baa: je     0x0000000110e09be0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@4 (line 3574)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09bac: mov    0x8(%r12,%rbp,8),%r10d
  0x0000000110e09bb1: cmp    $0x68040,%r10d     ;   {metadata('java/util/regex/Pattern$Node')}
  0x0000000110e09bb8: jne    0x0000000110e09c02
  0x0000000110e09bba: lea    (%r12,%rbp,8),%r10  ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09bbe: mov    0xc(%r10),%ebp     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@1 (line 3574)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09bc2: test   %ebp,%ebp
  0x0000000110e09bc4: je     0x0000000110e09be0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@4 (line 3574)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09bc6: mov    0x8(%r12,%rbp,8),%r10d
  0x0000000110e09bcb: cmp    $0x68040,%r10d     ;   {metadata('java/util/regex/Pattern$Node')}
  0x0000000110e09bd2: jne    0x0000000110e09c2a  ;*synchronization entry
                                                ; - java.util.regex.Pattern$Node::study@-1 (line 3574)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09bd4: lea    (%r12,%rbp,8),%rsi
  0x0000000110e09bd8: data16 xchg %ax,%ax
  0x0000000110e09bdb: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)
                                                ;   {optimized virtual_call}
  0x0000000110e09be0: add    $0x20,%rsp
  0x0000000110e09be4: pop    %rbp
  0x0000000110e09be5: mov    0x108(%r15),%r10
  0x0000000110e09bec: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e09bef: retq   
  0x0000000110e09bf0: mov    $0xffffffde,%esi
  0x0000000110e09bf5: mov    %rdx,(%rsp)
  0x0000000110e09bf9: xchg   %ax,%ax
  0x0000000110e09bfb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c00: ud2    
  0x0000000110e09c02: mov    $0xffffffde,%esi
  0x0000000110e09c07: mov    %rdx,(%rsp)
  0x0000000110e09c0b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c10: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@17 (line 4320)

  0x0000000110e09c12: mov    %rsi,%rbp
  0x0000000110e09c15: mov    %rdx,(%rsp)
  0x0000000110e09c19: mov    %r11d,0x8(%rsp)
  0x0000000110e09c1e: mov    $0xffffff4d,%esi
  0x0000000110e09c23: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@17 (line 4320)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c28: ud2    
  0x0000000110e09c2a: mov    $0xffffffde,%esi
  0x0000000110e09c2f: mov    %rdx,(%rsp)
  0x0000000110e09c33: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [0]=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c38: ud2                       ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09c3a: mov    %rax,%rsi
  0x0000000110e09c3d: add    $0x20,%rsp
  0x0000000110e09c41: pop    %rbp
  0x0000000110e09c42: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e09c47: mov    $0xfffffff6,%esi
  0x0000000110e09c4c: data16 xchg %ax,%ax
  0x0000000110e09c4f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield minLength {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@2 (line 4319)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c54: ud2    
  0x0000000110e09c56: mov    $0xfffffff6,%esi
  0x0000000110e09c5b: mov    %rdx,%rbp
  0x0000000110e09c5e: nop
  0x0000000110e09c5f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e09c64: ud2                       ;*invokevirtual study {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$Node::study@12 (line 3575)
                                                ; - java.util.regex.Pattern$CharPropertyGreedy::study@41 (line 4324)

  0x0000000110e09c66: hlt    
  0x0000000110e09c67: hlt    
  0x0000000110e09c68: hlt    
  0x0000000110e09c69: hlt    
  0x0000000110e09c6a: hlt    
  0x0000000110e09c6b: hlt    
  0x0000000110e09c6c: hlt    
  0x0000000110e09c6d: hlt    
  0x0000000110e09c6e: hlt    
  0x0000000110e09c6f: hlt    
  0x0000000110e09c70: hlt    
  0x0000000110e09c71: hlt    
  0x0000000110e09c72: hlt    
  0x0000000110e09c73: hlt    
  0x0000000110e09c74: hlt    
  0x0000000110e09c75: hlt    
  0x0000000110e09c76: hlt    
  0x0000000110e09c77: hlt    
  0x0000000110e09c78: hlt    
  0x0000000110e09c79: hlt    
  0x0000000110e09c7a: hlt    
  0x0000000110e09c7b: hlt    
  0x0000000110e09c7c: hlt    
  0x0000000110e09c7d: hlt    
  0x0000000110e09c7e: hlt    
  0x0000000110e09c7f: hlt    
[Stub Code]
  0x0000000110e09c80: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e09c8a: jmpq   0x0000000110e09c8a  ;   {runtime_call}
[Exception Handler]
  0x0000000110e09c8f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e09c94: callq  0x0000000110e09c99
  0x0000000110e09c99: subq   $0x5,(%rsp)
  0x0000000110e09c9e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e09ca3: hlt    
  0x0000000110e09ca4: hlt    
  0x0000000110e09ca5: hlt    
  0x0000000110e09ca6: hlt    
  0x0000000110e09ca7: hlt    

ImmutableOopMap{}pc offsets: 160 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 192 208 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 232 
ImmutableOopMap{rbp=NarrowOop [0]=Oop }pc offsets: 248 
ImmutableOopMap{}pc offsets: 276 
ImmutableOopMap{rbp=Oop }pc offsets: 292 Compiled method (c2)     966  156             FunctionalZipCode$$Lambda$4/0x0000000800067440::test (8 bytes)
 total in heap  [0x0000000110e09f90,0x0000000110e0bcf8] = 7528
 relocation     [0x0000000110e0a108,0x0000000110e0a1a0] = 152
 constants      [0x0000000110e0a1a0,0x0000000110e0a1c0] = 32
 main code      [0x0000000110e0a1c0,0x0000000110e0ad60] = 2976
 stub code      [0x0000000110e0ad60,0x0000000110e0ada8] = 72
 oops           [0x0000000110e0ada8,0x0000000110e0adc0] = 24
 metadata       [0x0000000110e0adc0,0x0000000110e0ae50] = 144
 scopes data    [0x0000000110e0ae50,0x0000000110e0b1e8] = 920
 scopes pcs     [0x0000000110e0b1e8,0x0000000110e0bbe8] = 2560
 dependencies   [0x0000000110e0bbe8,0x0000000110e0bbf0] = 8
 handler table  [0x0000000110e0bbf0,0x0000000110e0bcc8] = 216
 nul chk table  [0x0000000110e0bcc8,0x0000000110e0bcf8] = 48
----------------------------------------------------------------------
FunctionalZipCode$$Lambda$4.test(Ljava/lang/Object;)Z  [0x0000000110e0a1c0, 0x0000000110e0ada8]  3048 bytes
[Constants]
  0x0000000110e0a1a0 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e0a1a4 (offset:    4): 0xffffffff
  0x0000000110e0a1a8 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0a1ac (offset:   12): 0xf4f4f4f4
  0x0000000110e0a1b0 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0a1b4 (offset:   20): 0xf4f4f4f4
  0x0000000110e0a1b8 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0a1bc (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f17e6b8} 'test' '(Ljava/lang/Object;)Z' in 'FunctionalZipCode$$Lambda$4'
  # this:     rsi:rsi   = 'FunctionalZipCode$$Lambda$4'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e0a1c0: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110e0a1c4: movabs $0x800000000,%r12
  0x0000000110e0a1ce: add    %r12,%r10
  0x0000000110e0a1d1: xor    %r12,%r12
  0x0000000110e0a1d4: cmp    %r10,%rax
  0x0000000110e0a1d7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e0a1dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e0a1e0: mov    %eax,-0x14000(%rsp)
  0x0000000110e0a1e7: push   %rbp
  0x0000000110e0a1e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@-1

  0x0000000110e0a1ec: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e0ac9e
  0x0000000110e0a1f0: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e0a1f7: jne    0x0000000110e0ac8e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@1

  0x0000000110e0a1fd: mov    %rdx,(%rsp)
  0x0000000110e0a201: mov    0x118(%r15),%rax
  0x0000000110e0a208: mov    %rax,%r10
  0x0000000110e0a20b: add    $0x58,%r10
  0x0000000110e0a20f: cmp    0x128(%r15),%r10
  0x0000000110e0a216: jae    0x0000000110e0ab30  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a21c: mov    %r10,0x118(%r15)
  0x0000000110e0a223: prefetchnta 0xc0(%r10)
  0x0000000110e0a22b: mov    $0x66ca8,%r11d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0a231: movabs $0x800000000,%r10
  0x0000000110e0a23b: add    %r11,%r10
  0x0000000110e0a23e: mov    0xb8(%r10),%r10
  0x0000000110e0a245: mov    %r10,(%rax)
  0x0000000110e0a248: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0a24f: movl   $0x0,0xc(%rax)
  0x0000000110e0a256: movq   $0x0,0x10(%rax)
  0x0000000110e0a25e: movq   $0x0,0x18(%rax)
  0x0000000110e0a266: movq   $0x0,0x20(%rax)
  0x0000000110e0a26e: movl   $0x0,0x28(%rax)
  0x0000000110e0a275: movq   $0x0,0x30(%rax)
  0x0000000110e0a27d: movq   $0x0,0x38(%rax)
  0x0000000110e0a285: movq   $0x0,0x40(%rax)
  0x0000000110e0a28d: movq   $0x0,0x48(%rax)
  0x0000000110e0a295: movq   $0x0,0x50(%rax)
  0x0000000110e0a29d: movl   $0xe1fab6ac,0x2c(%rax)  ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110e0a2a4: mov    %rax,%rbx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a2a7: mov    %rbx,%r10
  0x0000000110e0a2aa: movabs $0x70fd5b560,%r11  ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110e0a2b4: mov    %r11,%r8
  0x0000000110e0a2b7: xor    %r10,%r8
  0x0000000110e0a2ba: shr    $0x14,%r8
  0x0000000110e0a2be: test   %r8,%r8
  0x0000000110e0a2c1: je     0x0000000110e0a359
  0x0000000110e0a2c7: shr    $0x9,%r10
  0x0000000110e0a2cb: movabs $0x110569000,%rdi
  0x0000000110e0a2d5: add    %r10,%rdi
  0x0000000110e0a2d8: cmpb   $0x20,(%rdi)
  0x0000000110e0a2db: je     0x0000000110e0a350
  0x0000000110e0a2dd: mov    0x70(%r15),%r10
  0x0000000110e0a2e1: mov    0x80(%r15),%r11
  0x0000000110e0a2e8: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a2ee: cmpb   $0x0,(%rdi)
  0x0000000110e0a2f1: je     0x0000000110e0a31a
  0x0000000110e0a2f3: movb   $0x0,(%rdi)
  0x0000000110e0a2f6: test   %r10,%r10
  0x0000000110e0a2f9: je     0x0000000110e0a30a
  0x0000000110e0a2fb: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e0a300: add    $0xfffffffffffffff8,%r10
  0x0000000110e0a304: mov    %r10,0x70(%r15)
  0x0000000110e0a308: jmp    0x0000000110e0a31a
  0x0000000110e0a30a: mov    %r15,%rsi
  0x0000000110e0a30d: movabs $0x107aec8ce,%r10
  0x0000000110e0a317: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a31a: movl   $0x0,0x1c(%rbx)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a321: mov    0x2c(%rbx),%r11d   ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a325: movl   $0x0,0xc(%rbx)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a32c: movl   $0x1,0x18(%rbx)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a333: movl   $0x0,0x10(%rbx)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a33a: movl   $0x0,0x14(%rbx)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a341: test   %r11d,%r11d
  0x0000000110e0a344: je     0x0000000110e0ac76  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a34a: shl    $0x3,%r11          ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a34e: jmp    0x0000000110e0a360
  0x0000000110e0a350: movl   $0x1,0x18(%rbx)
  0x0000000110e0a357: jmp    0x0000000110e0a360
  0x0000000110e0a359: movl   $0x1,0x18(%rbx)    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a360: mov    0xc(%r11),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a364: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; implicit exception: dispatches to 0x0000000110e0acaa
  0x0000000110e0a369: test   %ebp,%ebp
  0x0000000110e0a36b: jbe    0x0000000110e0ac3e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a371: mov    %rbx,0x8(%rsp)     ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a376: mov    %rbx,%rsi
  0x0000000110e0a379: xchg   %ax,%ax
  0x0000000110e0a37b: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {optimized virtual_call}
  0x0000000110e0a380: mov    0x8(%rsp),%r10
  0x0000000110e0a385: movzbl 0x28(%r10),%ebp    ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a38a: test   %ebp,%ebp
  0x0000000110e0a38c: je     0x0000000110e0ac52
  0x0000000110e0a392: mov    0x118(%r15),%rax
  0x0000000110e0a399: mov    %rax,%r10
  0x0000000110e0a39c: add    $0x48,%r10
  0x0000000110e0a3a0: cmp    0x128(%r15),%r10
  0x0000000110e0a3a7: jae    0x0000000110e0ab49  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a3ad: mov    %r10,0x118(%r15)
  0x0000000110e0a3b4: prefetchnta 0xc0(%r10)
  0x0000000110e0a3bc: mov    $0x6aaa8,%r10d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0a3c2: movabs $0x800000000,%r12
  0x0000000110e0a3cc: add    %r12,%r10
  0x0000000110e0a3cf: xor    %r12,%r12
  0x0000000110e0a3d2: mov    0xb8(%r10),%r10
  0x0000000110e0a3d9: mov    %r10,(%rax)
  0x0000000110e0a3dc: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0a3e3: movl   $0x0,0xc(%rax)
  0x0000000110e0a3ea: movq   $0x0,0x10(%rax)
  0x0000000110e0a3f2: movq   $0x0,0x28(%rax)
  0x0000000110e0a3fa: movq   $0x0,0x38(%rax)
  0x0000000110e0a402: movq   $0x0,0x40(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a40a: mov    0x8(%rsp),%r10
  0x0000000110e0a40f: shr    $0x3,%r10
  0x0000000110e0a413: movabs $0xffffffff00000000,%r11
  0x0000000110e0a41d: mov    %r11,0x18(%rax)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a421: mov    %r11,0x20(%rax)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a425: movl   $0x1000000,0x30(%rax)  ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a42c: mov    %r10d,0x34(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a430: mov    %rax,0x10(%rsp)
  0x0000000110e0a435: mov    0x8(%rsp),%r10
  0x0000000110e0a43a: mov    %rax,%r11
  0x0000000110e0a43d: xor    %r11,%r10
  0x0000000110e0a440: shr    $0x14,%r10
  0x0000000110e0a444: test   %r10,%r10
  0x0000000110e0a447: je     0x0000000110e0a49c
  0x0000000110e0a449: shr    $0x9,%r11
  0x0000000110e0a44d: movabs $0x110569000,%rdi
  0x0000000110e0a457: add    %r11,%rdi
  0x0000000110e0a45a: cmpb   $0x20,(%rdi)
  0x0000000110e0a45d: je     0x0000000110e0a49c
  0x0000000110e0a45f: mov    0x70(%r15),%r10
  0x0000000110e0a463: mov    0x80(%r15),%r11
  0x0000000110e0a46a: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a470: cmpb   $0x0,(%rdi)
  0x0000000110e0a473: je     0x0000000110e0a49c
  0x0000000110e0a475: movb   $0x0,(%rdi)
  0x0000000110e0a478: test   %r10,%r10
  0x0000000110e0a47b: jne    0x0000000110e0a48f  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a47d: mov    %r15,%rsi
  0x0000000110e0a480: movabs $0x107aec8ce,%r10
  0x0000000110e0a48a: callq  *%r10
  0x0000000110e0a48d: jmp    0x0000000110e0a49c
  0x0000000110e0a48f: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a494: add    $0xfffffffffffffff8,%r10
  0x0000000110e0a498: mov    %r10,0x70(%r15)
  0x0000000110e0a49c: cmpb   $0x0,0x30(%r15)
  0x0000000110e0a4a1: jne    0x0000000110e0aa7c
  0x0000000110e0a4a7: mov    0x10(%rsp),%r10
  0x0000000110e0a4ac: mov    (%rsp),%r8
  0x0000000110e0a4b0: mov    %r8,%r11
  0x0000000110e0a4b3: shr    $0x3,%r11
  0x0000000110e0a4b7: mov    0x10(%rsp),%r9
  0x0000000110e0a4bc: mov    %r11d,0x3c(%r9)
  0x0000000110e0a4c0: mov    %r8,%r11
  0x0000000110e0a4c3: xor    %r10,%r11
  0x0000000110e0a4c6: shr    $0x14,%r11
  0x0000000110e0a4ca: test   %r11,%r11
  0x0000000110e0a4cd: je     0x0000000110e0a522
  0x0000000110e0a4cf: shr    $0x9,%r10
  0x0000000110e0a4d3: movabs $0x110569000,%rdi
  0x0000000110e0a4dd: add    %r10,%rdi
  0x0000000110e0a4e0: cmpb   $0x20,(%rdi)
  0x0000000110e0a4e3: je     0x0000000110e0a522
  0x0000000110e0a4e5: mov    0x80(%r15),%r10
  0x0000000110e0a4ec: mov    0x70(%r15),%r11
  0x0000000110e0a4f0: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a4f6: cmpb   $0x0,(%rdi)
  0x0000000110e0a4f9: je     0x0000000110e0a522
  0x0000000110e0a4fb: movb   $0x0,(%rdi)
  0x0000000110e0a4fe: test   %r11,%r11
  0x0000000110e0a501: jne    0x0000000110e0a515  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a503: mov    %r15,%rsi
  0x0000000110e0a506: movabs $0x107aec8ce,%r10
  0x0000000110e0a510: callq  *%r10
  0x0000000110e0a513: jmp    0x0000000110e0a522
  0x0000000110e0a515: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a51a: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a51e: mov    %r11,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a522: mov    0x8(%rsp),%r10
  0x0000000110e0a527: mov    0x18(%r10),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a52b: mov    $0xa,%r11d
  0x0000000110e0a531: cmp    $0xa,%edx
  0x0000000110e0a534: cmovl  %r11d,%edx
  0x0000000110e0a538: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a53a: cmp    $0x40000,%edx
  0x0000000110e0a540: ja     0x0000000110e0abc4
  0x0000000110e0a546: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a549: cmp    $0x40000,%edx
  0x0000000110e0a54f: ja     0x0000000110e0ab84  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a555: mov    0x118(%r15),%rbx
  0x0000000110e0a55c: shl    $0x2,%rcx
  0x0000000110e0a560: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a564: mov    %rcx,%r10
  0x0000000110e0a567: and    $0xfffffffffffffff8,%r10
  0x0000000110e0a56b: mov    %rbx,%r11
  0x0000000110e0a56e: add    %r10,%r11
  0x0000000110e0a571: cmp    0x128(%r15),%r11
  0x0000000110e0a578: jae    0x0000000110e0ab84
  0x0000000110e0a57e: mov    %r11,0x118(%r15)
  0x0000000110e0a585: prefetchnta 0xc0(%r11)
  0x0000000110e0a58d: movq   $0x1,(%rbx)
  0x0000000110e0a594: prefetchnta 0x100(%r11)
  0x0000000110e0a59c: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0a5a3: mov    %edx,0xc(%rbx)
  0x0000000110e0a5a6: prefetchnta 0x140(%r11)
  0x0000000110e0a5ae: mov    %rbx,%rdi
  0x0000000110e0a5b1: add    $0x10,%rdi
  0x0000000110e0a5b5: prefetchnta 0x180(%r11)
  0x0000000110e0a5bd: shr    $0x3,%rcx
  0x0000000110e0a5c1: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0a5c5: xor    %rax,%rax
  0x0000000110e0a5c8: cmp    $0x8,%rcx
  0x0000000110e0a5cc: jg     0x0000000110e0a5de
  0x0000000110e0a5ce: dec    %rcx
  0x0000000110e0a5d1: js     0x0000000110e0a5e5
  0x0000000110e0a5d3: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0a5d7: dec    %rcx
  0x0000000110e0a5da: jge    0x0000000110e0a5d3
  0x0000000110e0a5dc: jmp    0x0000000110e0a5e5
  0x0000000110e0a5de: shl    $0x3,%rcx
  0x0000000110e0a5e2: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0a5e5: cmpb   $0x0,0x30(%r15)
  0x0000000110e0a5ea: jne    0x0000000110e0aaf4
  0x0000000110e0a5f0: mov    0x10(%rsp),%r10
  0x0000000110e0a5f5: mov    %rbx,%r11
  0x0000000110e0a5f8: xor    %r10,%r11
  0x0000000110e0a5fb: mov    %rbx,%r9
  0x0000000110e0a5fe: shr    $0x3,%r9
  0x0000000110e0a602: mov    0x10(%rsp),%r8
  0x0000000110e0a607: mov    %r9d,0x38(%r8)
  0x0000000110e0a60b: shr    $0x14,%r11
  0x0000000110e0a60f: test   %r11,%r11
  0x0000000110e0a612: je     0x0000000110e0a667
  0x0000000110e0a614: shr    $0x9,%r10
  0x0000000110e0a618: movabs $0x110569000,%rdi
  0x0000000110e0a622: add    %r10,%rdi
  0x0000000110e0a625: cmpb   $0x20,(%rdi)
  0x0000000110e0a628: je     0x0000000110e0a667
  0x0000000110e0a62a: mov    0x80(%r15),%r10
  0x0000000110e0a631: mov    0x70(%r15),%r11
  0x0000000110e0a635: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a63b: cmpb   $0x0,(%rdi)
  0x0000000110e0a63e: je     0x0000000110e0a667
  0x0000000110e0a640: movb   $0x0,(%rdi)
  0x0000000110e0a643: test   %r11,%r11
  0x0000000110e0a646: jne    0x0000000110e0a65a  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a648: mov    %r15,%rsi
  0x0000000110e0a64b: movabs $0x107aec8ce,%r10
  0x0000000110e0a655: callq  *%r10
  0x0000000110e0a658: jmp    0x0000000110e0a667
  0x0000000110e0a65a: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a65f: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a663: mov    %r11,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a667: mov    0x8(%rsp),%r10
  0x0000000110e0a66c: mov    0x1c(%r10),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a670: cmp    $0x40000,%edx
  0x0000000110e0a676: ja     0x0000000110e0abbc
  0x0000000110e0a67c: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a67f: cmp    $0x40000,%edx
  0x0000000110e0a685: ja     0x0000000110e0ab65  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a68b: mov    0x118(%r15),%rbx
  0x0000000110e0a692: shl    $0x2,%rcx
  0x0000000110e0a696: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a69a: mov    %rcx,%r10
  0x0000000110e0a69d: and    $0xfffffffffffffff8,%r10
  0x0000000110e0a6a1: mov    %rbx,%r11
  0x0000000110e0a6a4: add    %r10,%r11
  0x0000000110e0a6a7: cmp    0x128(%r15),%r11
  0x0000000110e0a6ae: jae    0x0000000110e0ab65
  0x0000000110e0a6b4: mov    %r11,0x118(%r15)
  0x0000000110e0a6bb: prefetchnta 0xc0(%r11)
  0x0000000110e0a6c3: movq   $0x1,(%rbx)
  0x0000000110e0a6ca: prefetchnta 0x100(%r11)
  0x0000000110e0a6d2: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0a6d9: mov    %edx,0xc(%rbx)
  0x0000000110e0a6dc: prefetchnta 0x140(%r11)
  0x0000000110e0a6e4: mov    %rbx,%rdi
  0x0000000110e0a6e7: add    $0x10,%rdi
  0x0000000110e0a6eb: prefetchnta 0x180(%r11)
  0x0000000110e0a6f3: shr    $0x3,%rcx
  0x0000000110e0a6f7: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0a6fb: xor    %rax,%rax
  0x0000000110e0a6fe: cmp    $0x8,%rcx
  0x0000000110e0a702: jg     0x0000000110e0a714
  0x0000000110e0a704: dec    %rcx
  0x0000000110e0a707: js     0x0000000110e0a71b
  0x0000000110e0a709: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0a70d: dec    %rcx
  0x0000000110e0a710: jge    0x0000000110e0a709
  0x0000000110e0a712: jmp    0x0000000110e0a71b
  0x0000000110e0a714: shl    $0x3,%rcx
  0x0000000110e0a718: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0a71b: cmpb   $0x0,0x30(%r15)
  0x0000000110e0a720: jne    0x0000000110e0aa40
  0x0000000110e0a726: mov    0x10(%rsp),%r10
  0x0000000110e0a72b: mov    %rbx,%r11
  0x0000000110e0a72e: xor    %r10,%r11
  0x0000000110e0a731: mov    %rbx,%r8
  0x0000000110e0a734: shr    $0x3,%r8
  0x0000000110e0a738: mov    0x10(%rsp),%r9
  0x0000000110e0a73d: mov    %r8d,0x40(%r9)
  0x0000000110e0a741: shr    $0x14,%r11
  0x0000000110e0a745: test   %r11,%r11
  0x0000000110e0a748: je     0x0000000110e0a79d
  0x0000000110e0a74a: shr    $0x9,%r10
  0x0000000110e0a74e: movabs $0x110569000,%rdi
  0x0000000110e0a758: add    %r10,%rdi
  0x0000000110e0a75b: cmpb   $0x20,(%rdi)
  0x0000000110e0a75e: je     0x0000000110e0a79d
  0x0000000110e0a760: mov    0x80(%r15),%r10
  0x0000000110e0a767: mov    0x70(%r15),%r11
  0x0000000110e0a76b: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a771: cmpb   $0x0,(%rdi)
  0x0000000110e0a774: je     0x0000000110e0a79d
  0x0000000110e0a776: movb   $0x0,(%rdi)
  0x0000000110e0a779: test   %r11,%r11
  0x0000000110e0a77c: jne    0x0000000110e0a790  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a77e: mov    %r15,%rsi
  0x0000000110e0a781: movabs $0x107aec8ce,%r10
  0x0000000110e0a78b: callq  *%r10
  0x0000000110e0a78e: jmp    0x0000000110e0a79d
  0x0000000110e0a790: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a795: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a799: mov    %r11,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a79d: mov    0x8(%rsp),%r10
  0x0000000110e0a7a2: mov    0x14(%r10),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a7a6: cmp    $0x40000,%edx
  0x0000000110e0a7ac: ja     0x0000000110e0abcc
  0x0000000110e0a7b2: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a7b5: cmp    $0x40000,%edx
  0x0000000110e0a7bb: ja     0x0000000110e0aba0  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a7c1: mov    0x118(%r15),%rbx
  0x0000000110e0a7c8: shl    $0x2,%rcx
  0x0000000110e0a7cc: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a7d0: mov    %rcx,%r10
  0x0000000110e0a7d3: and    $0xfffffffffffffff8,%r10
  0x0000000110e0a7d7: mov    %rbx,%r11
  0x0000000110e0a7da: add    %r10,%r11
  0x0000000110e0a7dd: cmp    0x128(%r15),%r11
  0x0000000110e0a7e4: jae    0x0000000110e0aba0
  0x0000000110e0a7ea: mov    %r11,0x118(%r15)
  0x0000000110e0a7f1: prefetchnta 0xc0(%r11)
  0x0000000110e0a7f9: movq   $0x1,(%rbx)
  0x0000000110e0a800: prefetchnta 0x100(%r11)
  0x0000000110e0a808: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0a80f: mov    %edx,0xc(%rbx)
  0x0000000110e0a812: prefetchnta 0x140(%r11)
  0x0000000110e0a81a: mov    %rbx,%rdi
  0x0000000110e0a81d: add    $0x10,%rdi
  0x0000000110e0a821: prefetchnta 0x180(%r11)
  0x0000000110e0a829: shr    $0x3,%rcx
  0x0000000110e0a82d: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0a831: xor    %rax,%rax
  0x0000000110e0a834: cmp    $0x8,%rcx
  0x0000000110e0a838: jg     0x0000000110e0a84a
  0x0000000110e0a83a: dec    %rcx
  0x0000000110e0a83d: js     0x0000000110e0a851
  0x0000000110e0a83f: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0a843: dec    %rcx
  0x0000000110e0a846: jge    0x0000000110e0a83f
  0x0000000110e0a848: jmp    0x0000000110e0a851
  0x0000000110e0a84a: shl    $0x3,%rcx
  0x0000000110e0a84e: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0a851: cmpb   $0x0,0x30(%r15)
  0x0000000110e0a856: jne    0x0000000110e0aab8
  0x0000000110e0a85c: mov    0x10(%rsp),%r10
  0x0000000110e0a861: mov    %rbx,%r11
  0x0000000110e0a864: xor    %r10,%r11
  0x0000000110e0a867: mov    %rbx,%r9
  0x0000000110e0a86a: shr    $0x3,%r9
  0x0000000110e0a86e: mov    0x10(%rsp),%r8
  0x0000000110e0a873: mov    %r9d,0x44(%r8)
  0x0000000110e0a877: shr    $0x14,%r11
  0x0000000110e0a87b: test   %r11,%r11
  0x0000000110e0a87e: je     0x0000000110e0a8dc
  0x0000000110e0a880: shr    $0x9,%r10
  0x0000000110e0a884: movabs $0x110569000,%rdi
  0x0000000110e0a88e: add    %r10,%rdi
  0x0000000110e0a891: cmpb   $0x20,(%rdi)
  0x0000000110e0a894: je     0x0000000110e0a8dc
  0x0000000110e0a896: mov    0x80(%r15),%r10    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a89d: mov    0x70(%r15),%r11
  0x0000000110e0a8a1: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0a8a7: cmpb   $0x0,(%rdi)
  0x0000000110e0a8aa: je     0x0000000110e0a8d3
  0x0000000110e0a8ac: movb   $0x0,(%rdi)
  0x0000000110e0a8af: test   %r11,%r11
  0x0000000110e0a8b2: je     0x0000000110e0a8c3
  0x0000000110e0a8b4: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8b9: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8bd: mov    %r11,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8c1: jmp    0x0000000110e0a8d3  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8c3: mov    %r15,%rsi
  0x0000000110e0a8c6: movabs $0x107aec8ce,%r10
  0x0000000110e0a8d0: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8d3: mov    0x10(%rsp),%r10
  0x0000000110e0a8d8: mov    0x44(%r10),%r9d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8dc: mov    0x10(%rsp),%r10
  0x0000000110e0a8e1: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8e9: mov    0x38(%r10),%r11d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8ed: movl   $0xffffffff,0x1c(%r10)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8f5: movl   $0x0,0x20(%r10)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a8fd: mov    0xc(%r12,%r11,8),%ecx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; implicit exception: dispatches to 0x0000000110e0acc2
  0x0000000110e0a902: test   %ecx,%ecx
  0x0000000110e0a904: jbe    0x0000000110e0a9be  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a90a: mov    %ecx,%r8d
  0x0000000110e0a90d: dec    %r8d
  0x0000000110e0a910: cmp    %ecx,%r8d
  0x0000000110e0a913: jae    0x0000000110e0abd4
  0x0000000110e0a919: lea    (%r12,%r11,8),%rbx
  0x0000000110e0a91d: mov    %ebx,%r10d
  0x0000000110e0a920: shr    $0x2,%r10d
  0x0000000110e0a924: and    $0x3,%r10d
  0x0000000110e0a928: mov    $0xffffffff,%r8d
  0x0000000110e0a92e: sub    %r10d,%r8d
  0x0000000110e0a931: and    $0x3,%r8d
  0x0000000110e0a935: inc    %r8d
  0x0000000110e0a938: cmp    %ecx,%r8d
  0x0000000110e0a93b: cmovg  %ecx,%r8d
  0x0000000110e0a93f: xor    %edi,%edi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a941: movl   $0xffffffff,0x10(%rbx,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a949: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a94b: cmp    %r8d,%edi
  0x0000000110e0a94e: jl     0x0000000110e0a941  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a950: mov    %ecx,%edx
  0x0000000110e0a952: add    $0xfffffffd,%edx
  0x0000000110e0a955: cmp    %edx,%edi
  0x0000000110e0a957: jge    0x0000000110e0a9ac
  0x0000000110e0a959: vmovq  -0x7c1(%rip),%xmm0        # 0x0000000110e0a1a0
                                                ;   {section_word}
  0x0000000110e0a961: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e0a965: mov    $0xfa0,%eax
  0x0000000110e0a96a: mov    %ecx,%r10d
  0x0000000110e0a96d: sub    %edi,%r10d
  0x0000000110e0a970: add    $0xfffffffd,%r10d
  0x0000000110e0a974: cmp    %r10d,%eax
  0x0000000110e0a977: mov    $0xfa0,%r11d
  0x0000000110e0a97d: cmovg  %r10d,%r11d
  0x0000000110e0a981: add    %edi,%r11d
  0x0000000110e0a984: nopl   0x0(%rax,%rax,1)
  0x0000000110e0a98c: data16 data16 xchg %ax,%ax  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a990: vmovdqu %xmm0,0x10(%rbx,%rdi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a996: add    $0x4,%edi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a999: cmp    %r11d,%edi
  0x0000000110e0a99c: jl     0x0000000110e0a990  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a99e: mov    0x108(%r15),%r8    ; ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9a5: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {poll}
  0x0000000110e0a9a8: cmp    %edx,%edi
  0x0000000110e0a9aa: jl     0x0000000110e0a96a
  0x0000000110e0a9ac: cmp    %ecx,%edi
  0x0000000110e0a9ae: jge    0x0000000110e0a9be  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9b0: movl   $0xffffffff,0x10(%rbx,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9b8: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9ba: cmp    %ecx,%edi
  0x0000000110e0a9bc: jl     0x0000000110e0a9b0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9be: mov    0x10(%rsp),%r10
  0x0000000110e0a9c3: mov    0x40(%r10),%r11d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9c7: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; implicit exception: dispatches to 0x0000000110e0acd2
  0x0000000110e0a9cc: test   %ebp,%ebp
  0x0000000110e0a9ce: ja     0x0000000110e0ac5e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9d4: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ; implicit exception: dispatches to 0x0000000110e0acde
  0x0000000110e0a9d9: test   %ebp,%ebp
  0x0000000110e0a9db: ja     0x0000000110e0ac6a  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9e1: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@100 (line 414)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9e9: mov    0x3c(%r10),%r10d
  0x0000000110e0a9ed: mov    0x10(%rsp),%r11
  0x0000000110e0a9f2: movl   $0x0,0xc(%r11)     ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0a9fa: mov    %r10,%rsi
  0x0000000110e0a9fd: shl    $0x3,%rsi
  0x0000000110e0aa01: movabs $0xffffffffffffffff,%rax
  0x0000000110e0aa0b: callq  0x0000000110d90180  ; ImmutableOopMap{[16]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {virtual_call}
  0x0000000110e0aa10: mov    0x10(%rsp),%r10
  0x0000000110e0aa15: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa19: incl   0x2c(%r10)         ;*synchronization entry
                                                ; - java.util.regex.Matcher::matches@-1 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa1d: mov    0xc(%r10),%edx     ;*getfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@2 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa21: mov    $0x1,%ecx
  0x0000000110e0aa26: mov    0x10(%rsp),%rsi
  0x0000000110e0aa2b: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {optimized virtual_call}
  0x0000000110e0aa30: add    $0x30,%rsp
  0x0000000110e0aa34: pop    %rbp
  0x0000000110e0aa35: mov    0x108(%r15),%r10
  0x0000000110e0aa3c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e0aa3f: retq   
  0x0000000110e0aa40: mov    0x10(%rsp),%r10
  0x0000000110e0aa45: mov    0x40(%r10),%r10d
  0x0000000110e0aa49: test   %r10d,%r10d
  0x0000000110e0aa4c: je     0x0000000110e0a726
  0x0000000110e0aa52: mov    0x38(%r15),%r11
  0x0000000110e0aa56: mov    %r10,%rdi
  0x0000000110e0aa59: shl    $0x3,%rdi
  0x0000000110e0aa5d: test   %r11,%r11
  0x0000000110e0aa60: je     0x0000000110e0abff  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa66: mov    0x48(%r15),%r10
  0x0000000110e0aa6a: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa6f: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa73: mov    %r11,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aa77: jmpq   0x0000000110e0a726
  0x0000000110e0aa7c: mov    0x10(%rsp),%r10
  0x0000000110e0aa81: mov    0x3c(%r10),%r11d
  0x0000000110e0aa85: test   %r11d,%r11d
  0x0000000110e0aa88: je     0x0000000110e0a4a7
  0x0000000110e0aa8e: mov    0x38(%r15),%r10
  0x0000000110e0aa92: mov    %r11,%rdi
  0x0000000110e0aa95: shl    $0x3,%rdi
  0x0000000110e0aa99: test   %r10,%r10
  0x0000000110e0aa9c: je     0x0000000110e0abea  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aaa2: mov    0x48(%r15),%r11
  0x0000000110e0aaa6: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aaab: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aaaf: mov    %r10,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aab3: jmpq   0x0000000110e0a4a7
  0x0000000110e0aab8: mov    0x10(%rsp),%r10
  0x0000000110e0aabd: mov    0x44(%r10),%r11d
  0x0000000110e0aac1: test   %r11d,%r11d
  0x0000000110e0aac4: je     0x0000000110e0a85c
  0x0000000110e0aaca: mov    0x38(%r15),%r10
  0x0000000110e0aace: mov    %r11,%rdi
  0x0000000110e0aad1: shl    $0x3,%rdi
  0x0000000110e0aad5: test   %r10,%r10
  0x0000000110e0aad8: je     0x0000000110e0ac14  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aade: mov    0x48(%r15),%r11
  0x0000000110e0aae2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aae7: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aaeb: mov    %r10,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aaef: jmpq   0x0000000110e0a85c
  0x0000000110e0aaf4: mov    0x10(%rsp),%r10
  0x0000000110e0aaf9: mov    0x38(%r10),%r11d
  0x0000000110e0aafd: test   %r11d,%r11d
  0x0000000110e0ab00: je     0x0000000110e0a5f0
  0x0000000110e0ab06: mov    0x38(%r15),%r10
  0x0000000110e0ab0a: mov    %r11,%rdi
  0x0000000110e0ab0d: shl    $0x3,%rdi
  0x0000000110e0ab11: test   %r10,%r10
  0x0000000110e0ab14: je     0x0000000110e0ac29  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab1a: mov    0x48(%r15),%r11
  0x0000000110e0ab1e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab23: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab27: mov    %r10,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab2b: jmpq   0x0000000110e0a5f0
  0x0000000110e0ab30: movabs $0x800066ca8,%rsi  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0ab3a: mov    %rdx,%rbp
  0x0000000110e0ab3d: xchg   %ax,%ax
  0x0000000110e0ab3f: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0ab44: jmpq   0x0000000110e0a29d
  0x0000000110e0ab49: mov    0x8(%rsp),%rbp
  0x0000000110e0ab4e: movabs $0x80006aaa8,%rsi  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0ab58: data16 xchg %ax,%ax
  0x0000000110e0ab5b: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0ab60: jmpq   0x0000000110e0a40a  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab65: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0ab6f: mov    0x10(%rsp),%rbp
  0x0000000110e0ab74: data16 xchg %ax,%ax
  0x0000000110e0ab77: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0ab7c: mov    %rax,%rbx
  0x0000000110e0ab7f: jmpq   0x0000000110e0a71b  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ab84: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0ab8e: mov    0x10(%rsp),%rbp
  0x0000000110e0ab93: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0ab98: mov    %rax,%rbx
  0x0000000110e0ab9b: jmpq   0x0000000110e0a5e5  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0aba0: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0abaa: mov    0x10(%rsp),%rbp
  0x0000000110e0abaf: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0abb4: mov    %rax,%rbx
  0x0000000110e0abb7: jmpq   0x0000000110e0a851
  0x0000000110e0abbc: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abbf: jmpq   0x0000000110e0a67f
  0x0000000110e0abc4: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abc7: jmpq   0x0000000110e0a549
  0x0000000110e0abcc: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abcf: jmpq   0x0000000110e0a7b5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abd4: mov    $0xffffff7e,%esi
  0x0000000110e0abd9: mov    %r10,(%rsp)
  0x0000000110e0abdd: mov    %ecx,0x8(%rsp)
  0x0000000110e0abe1: xchg   %ax,%ax
  0x0000000110e0abe3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0abe8: ud2                       ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abea: mov    %r15,%rsi
  0x0000000110e0abed: movabs $0x107aec8aa,%r10
  0x0000000110e0abf7: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abfa: jmpq   0x0000000110e0a4a7  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0abff: mov    %r15,%rsi
  0x0000000110e0ac02: movabs $0x107aec8aa,%r10
  0x0000000110e0ac0c: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac0f: jmpq   0x0000000110e0a726  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac14: mov    %r15,%rsi
  0x0000000110e0ac17: movabs $0x107aec8aa,%r10
  0x0000000110e0ac21: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac24: jmpq   0x0000000110e0a85c  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac29: mov    %r15,%rsi
  0x0000000110e0ac2c: movabs $0x107aec8aa,%r10
  0x0000000110e0ac36: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac39: jmpq   0x0000000110e0a5f0  ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac3e: mov    $0xffffff4d,%esi
  0x0000000110e0ac43: mov    %rbx,0x10(%rsp)
  0x0000000110e0ac48: data16 xchg %ax,%ax
  0x0000000110e0ac4b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac50: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac52: mov    $0xffffff4d,%esi
  0x0000000110e0ac57: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac5c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac5e: mov    $0xffffff4d,%esi
  0x0000000110e0ac63: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac68: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac6a: mov    $0xffffff4d,%esi
  0x0000000110e0ac6f: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac74: ud2    
  0x0000000110e0ac76: mov    $0xfffffff6,%esi
  0x0000000110e0ac7b: mov    (%rsp),%rbp
  0x0000000110e0ac7f: mov    %rbx,0x8(%rsp)
  0x0000000110e0ac84: data16 xchg %ax,%ax
  0x0000000110e0ac87: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac8c: ud2                       ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ac8e: mov    $0xffffffde,%esi
  0x0000000110e0ac93: mov    %rdx,%rbp
  0x0000000110e0ac96: nop
  0x0000000110e0ac97: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ac9c: ud2    
  0x0000000110e0ac9e: mov    $0xfffffff4,%esi
  0x0000000110e0aca3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@1
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0aca8: ud2    
  0x0000000110e0acaa: mov    $0xfffffff6,%esi
  0x0000000110e0acaf: mov    (%rsp),%rbp
  0x0000000110e0acb3: mov    %rbx,0x8(%rsp)
  0x0000000110e0acb8: data16 xchg %ax,%ax
  0x0000000110e0acbb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0acc0: ud2    
  0x0000000110e0acc2: mov    $0xfffffff6,%esi
  0x0000000110e0acc7: mov    %r10,%rbp
  0x0000000110e0acca: nop
  0x0000000110e0accb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0acd0: ud2    
  0x0000000110e0acd2: mov    $0xfffffff6,%esi
  0x0000000110e0acd7: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0acdc: ud2    
  0x0000000110e0acde: mov    $0xfffffff6,%esi
  0x0000000110e0ace3: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ace8: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0acea: mov    %rax,%rsi
  0x0000000110e0aced: jmp    0x0000000110e0ad47  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0acef: mov    %rax,%rsi
  0x0000000110e0acf2: jmp    0x0000000110e0ad47  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0acf4: jmp    0x0000000110e0ad3f  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0acf6: jmp    0x0000000110e0ad3f  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0acf8: jmp    0x0000000110e0ad3f
  0x0000000110e0acfa: mov    0x8(%rax),%r10d
  0x0000000110e0acfe: cmp    $0x5728,%r10d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e0ad05: jne    0x0000000110e0ad3a  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ad07: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e0ad11: mov    0x8(%rsp),%rsi
  0x0000000110e0ad16: mov    (%rsp),%rbp
  0x0000000110e0ad1a: nop
  0x0000000110e0ad1b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {optimized virtual_call}
  0x0000000110e0ad20: mov    $0xffffffec,%esi
  0x0000000110e0ad25: rex.W pushq 0x8(%rsp)
  0x0000000110e0ad2a: rex.W popq (%rsp)
  0x0000000110e0ad2e: mov    %rax,0x8(%rsp)
  0x0000000110e0ad33: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ad38: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ad3a: mov    %rax,%rsi
  0x0000000110e0ad3d: jmp    0x0000000110e0ad47  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ad3f: mov    %rax,%rsi
  0x0000000110e0ad42: jmp    0x0000000110e0ad47  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ad44: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4

  0x0000000110e0ad47: add    $0x30,%rsp
  0x0000000110e0ad4b: pop    %rbp
  0x0000000110e0ad4c: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; - FunctionalZipCode$$Lambda$4/0x0000000800067440::test@4
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e0ad51: hlt    
  0x0000000110e0ad52: hlt    
  0x0000000110e0ad53: hlt    
  0x0000000110e0ad54: hlt    
  0x0000000110e0ad55: hlt    
  0x0000000110e0ad56: hlt    
  0x0000000110e0ad57: hlt    
  0x0000000110e0ad58: hlt    
  0x0000000110e0ad59: hlt    
  0x0000000110e0ad5a: hlt    
  0x0000000110e0ad5b: hlt    
  0x0000000110e0ad5c: hlt    
  0x0000000110e0ad5d: hlt    
  0x0000000110e0ad5e: hlt    
  0x0000000110e0ad5f: hlt    
[Stub Code]
  0x0000000110e0ad60: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e0ad6a: jmpq   0x0000000110e0ad6a  ;   {runtime_call}
  0x0000000110e0ad6f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0ad79: jmpq   0x0000000110e0ad79  ;   {runtime_call}
  0x0000000110e0ad7e: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0ad88: jmpq   0x0000000110e0ad88  ;   {runtime_call}
[Exception Handler]
  0x0000000110e0ad8d: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e0ad92: callq  0x0000000110e0ad97
  0x0000000110e0ad97: subq   $0x5,(%rsp)
  0x0000000110e0ad9c: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e0ada1: hlt    
  0x0000000110e0ada2: hlt    
  0x0000000110e0ada3: hlt    
  0x0000000110e0ada4: hlt    
  0x0000000110e0ada5: hlt    
  0x0000000110e0ada6: hlt    
  0x0000000110e0ada7: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 448 
ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }pc offsets: 2021 
ImmutableOopMap{[16]=Oop }pc offsets: 2128 
ImmutableOopMap{}pc offsets: 2160 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 2436 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2464 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2492 2520 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2548 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 2600 2704 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 2716 
ImmutableOopMap{[16]=Oop }pc offsets: 2728 2740 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2764 
ImmutableOopMap{rbp=Oop }pc offsets: 2780 
ImmutableOopMap{}pc offsets: 2792 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2816 
ImmutableOopMap{rbp=Oop }pc offsets: 2832 
ImmutableOopMap{[16]=Oop }pc offsets: 2844 2856 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2912 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2936 Compiled method (c2)    1027  157             FunctionalZipCode::lambda$isZipCodeValid$1 (7 bytes)
 total in heap  [0x0000000110e0bd10,0x0000000110e0d9b8] = 7336
 relocation     [0x0000000110e0be88,0x0000000110e0bf18] = 144
 constants      [0x0000000110e0bf20,0x0000000110e0bf40] = 32
 main code      [0x0000000110e0bf40,0x0000000110e0caa0] = 2912
 stub code      [0x0000000110e0caa0,0x0000000110e0cae8] = 72
 oops           [0x0000000110e0cae8,0x0000000110e0caf8] = 16
 metadata       [0x0000000110e0caf8,0x0000000110e0cb78] = 128
 scopes data    [0x0000000110e0cb78,0x0000000110e0cee0] = 872
 scopes pcs     [0x0000000110e0cee0,0x0000000110e0d8b0] = 2512
 dependencies   [0x0000000110e0d8b0,0x0000000110e0d8b8] = 8
 handler table  [0x0000000110e0d8b8,0x0000000110e0d990] = 216
 nul chk table  [0x0000000110e0d990,0x0000000110e0d9b8] = 40
----------------------------------------------------------------------
FunctionalZipCode.lambda$isZipCodeValid$1(Ljava/lang/String;)Z  [0x0000000110e0bf40, 0x0000000110e0cae8]  2984 bytes
[Constants]
  0x0000000110e0bf20 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e0bf24 (offset:    4): 0xffffffff
  0x0000000110e0bf28 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0bf2c (offset:   12): 0xf4f4f4f4
  0x0000000110e0bf30 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0bf34 (offset:   20): 0xf4f4f4f4
  0x0000000110e0bf38 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0bf3c (offset:   28): 0xf4f4f4f4
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f169e08} 'lambda$isZipCodeValid$1' '(Ljava/lang/String;)Z' in 'FunctionalZipCode'
  # parm0:    rsi:rsi   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e0bf40: mov    %eax,-0x14000(%rsp)  ;   {no_reloc}
  0x0000000110e0bf47: push   %rbp
  0x0000000110e0bf48: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@-1 (line 64)

  0x0000000110e0bf4c: mov    %rsi,(%rsp)
  0x0000000110e0bf50: test   %rsi,%rsi
  0x0000000110e0bf53: je     0x0000000110e0c92c
  0x0000000110e0bf59: mov    0x118(%r15),%rax
  0x0000000110e0bf60: mov    %rax,%r10
  0x0000000110e0bf63: add    $0x58,%r10
  0x0000000110e0bf67: cmp    0x128(%r15),%r10
  0x0000000110e0bf6e: jae    0x0000000110e0c8a0  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0bf74: mov    %r10,0x118(%r15)
  0x0000000110e0bf7b: prefetchnta 0xc0(%r10)
  0x0000000110e0bf83: mov    $0x66ca8,%r10d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0bf89: movabs $0x800000000,%r12
  0x0000000110e0bf93: add    %r12,%r10
  0x0000000110e0bf96: xor    %r12,%r12
  0x0000000110e0bf99: mov    0xb8(%r10),%r10
  0x0000000110e0bfa0: mov    %r10,(%rax)
  0x0000000110e0bfa3: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0bfaa: movl   $0x0,0xc(%rax)
  0x0000000110e0bfb1: movq   $0x0,0x10(%rax)
  0x0000000110e0bfb9: movq   $0x0,0x18(%rax)
  0x0000000110e0bfc1: movq   $0x0,0x20(%rax)
  0x0000000110e0bfc9: movl   $0x0,0x28(%rax)
  0x0000000110e0bfd0: movq   $0x0,0x30(%rax)
  0x0000000110e0bfd8: movq   $0x0,0x38(%rax)
  0x0000000110e0bfe0: movq   $0x0,0x40(%rax)
  0x0000000110e0bfe8: movq   $0x0,0x48(%rax)
  0x0000000110e0bff0: movq   $0x0,0x50(%rax)
  0x0000000110e0bff8: movl   $0xe1fab6ac,0x2c(%rax)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110e0bfff: mov    %rax,0x8(%rsp)
  0x0000000110e0c004: mov    %rax,%r10
  0x0000000110e0c007: movabs $0x70fd5b560,%r11  ;   {oop("[0-9]+"{0x000000070fd5b560})}
  0x0000000110e0c011: mov    %r11,%r8
  0x0000000110e0c014: xor    %r10,%r8
  0x0000000110e0c017: shr    $0x14,%r8
  0x0000000110e0c01b: test   %r8,%r8
  0x0000000110e0c01e: je     0x0000000110e0c0cc
  0x0000000110e0c024: shr    $0x9,%r10
  0x0000000110e0c028: movabs $0x110569000,%rdi
  0x0000000110e0c032: add    %r10,%rdi
  0x0000000110e0c035: cmpb   $0x20,(%rdi)
  0x0000000110e0c038: je     0x0000000110e0c0c3
  0x0000000110e0c03e: mov    0x70(%r15),%r10
  0x0000000110e0c042: mov    0x80(%r15),%r11
  0x0000000110e0c049: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c04f: cmpb   $0x0,(%rdi)
  0x0000000110e0c052: je     0x0000000110e0c07b
  0x0000000110e0c054: movb   $0x0,(%rdi)
  0x0000000110e0c057: test   %r10,%r10
  0x0000000110e0c05a: je     0x0000000110e0c06b
  0x0000000110e0c05c: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e0c061: add    $0xfffffffffffffff8,%r10
  0x0000000110e0c065: mov    %r10,0x70(%r15)
  0x0000000110e0c069: jmp    0x0000000110e0c07b
  0x0000000110e0c06b: mov    %r15,%rsi
  0x0000000110e0c06e: movabs $0x107aec8ce,%r10
  0x0000000110e0c078: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c07b: mov    0x8(%rsp),%r10
  0x0000000110e0c080: movl   $0x0,0x1c(%r10)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c088: mov    0x2c(%r10),%r10d   ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c08c: mov    0x8(%rsp),%r11
  0x0000000110e0c091: movl   $0x0,0xc(%r11)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c099: movl   $0x1,0x18(%r11)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0a1: movl   $0x0,0x10(%r11)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0a9: movl   $0x0,0x14(%r11)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0b1: test   %r10d,%r10d
  0x0000000110e0c0b4: je     0x0000000110e0c9ee  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0ba: mov    %r10,%r11
  0x0000000110e0c0bd: shl    $0x3,%r11          ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0c1: jmp    0x0000000110e0c0d3
  0x0000000110e0c0c3: movl   $0x1,0x18(%rax)
  0x0000000110e0c0ca: jmp    0x0000000110e0c0d3
  0x0000000110e0c0cc: movl   $0x1,0x18(%rax)    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0d3: mov    0xc(%r11),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0d7: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; implicit exception: dispatches to 0x0000000110e0c9fe
  0x0000000110e0c0dc: test   %ebp,%ebp
  0x0000000110e0c0de: jbe    0x0000000110e0c9be  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0e4: mov    0x8(%rsp),%rsi
  0x0000000110e0c0e9: mov    %rsi,%rbp
  0x0000000110e0c0ec: data16 xchg %ax,%ax
  0x0000000110e0c0ef: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110e0c0f4: movzbl 0x28(%rbp),%ebp    ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c0f8: test   %ebp,%ebp
  0x0000000110e0c0fa: je     0x0000000110e0c9ca
  0x0000000110e0c100: mov    0x118(%r15),%rax
  0x0000000110e0c107: mov    %rax,%r10
  0x0000000110e0c10a: add    $0x48,%r10
  0x0000000110e0c10e: cmp    0x128(%r15),%r10
  0x0000000110e0c115: jae    0x0000000110e0c8b9  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c11b: mov    %r10,0x118(%r15)
  0x0000000110e0c122: prefetchnta 0xc0(%r10)
  0x0000000110e0c12a: mov    $0x6aaa8,%r11d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0c130: movabs $0x800000000,%r10
  0x0000000110e0c13a: add    %r11,%r10
  0x0000000110e0c13d: mov    0xb8(%r10),%r10
  0x0000000110e0c144: mov    %r10,(%rax)
  0x0000000110e0c147: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0c14e: movl   $0x0,0xc(%rax)
  0x0000000110e0c155: movq   $0x0,0x10(%rax)
  0x0000000110e0c15d: movq   $0x0,0x28(%rax)
  0x0000000110e0c165: movq   $0x0,0x38(%rax)
  0x0000000110e0c16d: movq   $0x0,0x40(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c175: mov    0x8(%rsp),%r10
  0x0000000110e0c17a: mov    %r10,%r11
  0x0000000110e0c17d: shr    $0x3,%r11
  0x0000000110e0c181: movabs $0xffffffff00000000,%r10
  0x0000000110e0c18b: mov    %r10,0x18(%rax)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c18f: mov    %r10,0x20(%rax)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c193: movl   $0x1000000,0x30(%rax)  ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c19a: mov    %r11d,0x34(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c19e: mov    %rax,0x10(%rsp)
  0x0000000110e0c1a3: mov    0x8(%rsp),%r10
  0x0000000110e0c1a8: mov    %rax,%r11
  0x0000000110e0c1ab: xor    %r11,%r10
  0x0000000110e0c1ae: shr    $0x14,%r10
  0x0000000110e0c1b2: test   %r10,%r10
  0x0000000110e0c1b5: je     0x0000000110e0c20a
  0x0000000110e0c1b7: shr    $0x9,%r11
  0x0000000110e0c1bb: movabs $0x110569000,%rdi
  0x0000000110e0c1c5: add    %r11,%rdi
  0x0000000110e0c1c8: cmpb   $0x20,(%rdi)
  0x0000000110e0c1cb: je     0x0000000110e0c20a
  0x0000000110e0c1cd: mov    0x70(%r15),%r10
  0x0000000110e0c1d1: mov    0x80(%r15),%r11
  0x0000000110e0c1d8: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c1de: cmpb   $0x0,(%rdi)
  0x0000000110e0c1e1: je     0x0000000110e0c20a
  0x0000000110e0c1e3: movb   $0x0,(%rdi)
  0x0000000110e0c1e6: test   %r10,%r10
  0x0000000110e0c1e9: jne    0x0000000110e0c1fd  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c1eb: mov    %r15,%rsi
  0x0000000110e0c1ee: movabs $0x107aec8ce,%r10
  0x0000000110e0c1f8: callq  *%r10
  0x0000000110e0c1fb: jmp    0x0000000110e0c20a
  0x0000000110e0c1fd: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c202: add    $0xfffffffffffffff8,%r10
  0x0000000110e0c206: mov    %r10,0x70(%r15)
  0x0000000110e0c20a: cmpb   $0x0,0x30(%r15)
  0x0000000110e0c20f: jne    0x0000000110e0c864
  0x0000000110e0c215: mov    0x10(%rsp),%r10
  0x0000000110e0c21a: mov    (%rsp),%r11
  0x0000000110e0c21e: mov    %r11,%r8
  0x0000000110e0c221: shr    $0x3,%r8
  0x0000000110e0c225: mov    0x10(%rsp),%r11
  0x0000000110e0c22a: mov    %r8d,0x3c(%r11)
  0x0000000110e0c22e: mov    (%rsp),%r11
  0x0000000110e0c232: xor    %r10,%r11
  0x0000000110e0c235: shr    $0x14,%r11
  0x0000000110e0c239: test   %r11,%r11
  0x0000000110e0c23c: je     0x0000000110e0c291
  0x0000000110e0c23e: shr    $0x9,%r10
  0x0000000110e0c242: movabs $0x110569000,%rdi
  0x0000000110e0c24c: add    %r10,%rdi
  0x0000000110e0c24f: cmpb   $0x20,(%rdi)
  0x0000000110e0c252: je     0x0000000110e0c291
  0x0000000110e0c254: mov    0x80(%r15),%r10
  0x0000000110e0c25b: mov    0x70(%r15),%r11
  0x0000000110e0c25f: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c265: cmpb   $0x0,(%rdi)
  0x0000000110e0c268: je     0x0000000110e0c291
  0x0000000110e0c26a: movb   $0x0,(%rdi)
  0x0000000110e0c26d: test   %r11,%r11
  0x0000000110e0c270: jne    0x0000000110e0c284  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c272: mov    %r15,%rsi
  0x0000000110e0c275: movabs $0x107aec8ce,%r10
  0x0000000110e0c27f: callq  *%r10
  0x0000000110e0c282: jmp    0x0000000110e0c291
  0x0000000110e0c284: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c289: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c28d: mov    %r11,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c291: mov    0x8(%rsp),%r10
  0x0000000110e0c296: mov    0x18(%r10),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c29a: mov    $0xa,%r10d
  0x0000000110e0c2a0: cmp    $0xa,%edx
  0x0000000110e0c2a3: cmovl  %r10d,%edx
  0x0000000110e0c2a7: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c2a9: cmp    $0x40000,%edx
  0x0000000110e0c2af: ja     0x0000000110e0c942
  0x0000000110e0c2b5: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c2b8: cmp    $0x40000,%edx
  0x0000000110e0c2be: ja     0x0000000110e0c910  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c2c4: mov    0x118(%r15),%rbx
  0x0000000110e0c2cb: shl    $0x2,%rcx
  0x0000000110e0c2cf: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c2d3: mov    %rcx,%r10
  0x0000000110e0c2d6: and    $0xfffffffffffffff8,%r10
  0x0000000110e0c2da: mov    %rbx,%r11
  0x0000000110e0c2dd: add    %r10,%r11
  0x0000000110e0c2e0: cmp    0x128(%r15),%r11
  0x0000000110e0c2e7: jae    0x0000000110e0c910
  0x0000000110e0c2ed: mov    %r11,0x118(%r15)
  0x0000000110e0c2f4: prefetchnta 0xc0(%r11)
  0x0000000110e0c2fc: movq   $0x1,(%rbx)
  0x0000000110e0c303: prefetchnta 0x100(%r11)
  0x0000000110e0c30b: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0c312: mov    %edx,0xc(%rbx)
  0x0000000110e0c315: prefetchnta 0x140(%r11)
  0x0000000110e0c31d: mov    %rbx,%rdi
  0x0000000110e0c320: add    $0x10,%rdi
  0x0000000110e0c324: prefetchnta 0x180(%r11)
  0x0000000110e0c32c: shr    $0x3,%rcx
  0x0000000110e0c330: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0c334: xor    %rax,%rax
  0x0000000110e0c337: cmp    $0x8,%rcx
  0x0000000110e0c33b: jg     0x0000000110e0c34d
  0x0000000110e0c33d: dec    %rcx
  0x0000000110e0c340: js     0x0000000110e0c354
  0x0000000110e0c342: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0c346: dec    %rcx
  0x0000000110e0c349: jge    0x0000000110e0c342
  0x0000000110e0c34b: jmp    0x0000000110e0c354
  0x0000000110e0c34d: shl    $0x3,%rcx
  0x0000000110e0c351: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0c354: cmpb   $0x0,0x30(%r15)
  0x0000000110e0c359: jne    0x0000000110e0c7ec
  0x0000000110e0c35f: mov    0x10(%rsp),%r10
  0x0000000110e0c364: mov    %rbx,%r11
  0x0000000110e0c367: xor    %r10,%r11
  0x0000000110e0c36a: mov    %rbx,%r8
  0x0000000110e0c36d: shr    $0x3,%r8
  0x0000000110e0c371: mov    0x10(%rsp),%r9
  0x0000000110e0c376: mov    %r8d,0x38(%r9)
  0x0000000110e0c37a: shr    $0x14,%r11
  0x0000000110e0c37e: test   %r11,%r11
  0x0000000110e0c381: je     0x0000000110e0c3d6
  0x0000000110e0c383: shr    $0x9,%r10
  0x0000000110e0c387: movabs $0x110569000,%rdi
  0x0000000110e0c391: add    %r10,%rdi
  0x0000000110e0c394: cmpb   $0x20,(%rdi)
  0x0000000110e0c397: je     0x0000000110e0c3d6
  0x0000000110e0c399: mov    0x80(%r15),%r10
  0x0000000110e0c3a0: mov    0x70(%r15),%r11
  0x0000000110e0c3a4: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c3aa: cmpb   $0x0,(%rdi)
  0x0000000110e0c3ad: je     0x0000000110e0c3d6
  0x0000000110e0c3af: movb   $0x0,(%rdi)
  0x0000000110e0c3b2: test   %r11,%r11
  0x0000000110e0c3b5: jne    0x0000000110e0c3c9  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3b7: mov    %r15,%rsi
  0x0000000110e0c3ba: movabs $0x107aec8ce,%r10
  0x0000000110e0c3c4: callq  *%r10
  0x0000000110e0c3c7: jmp    0x0000000110e0c3d6
  0x0000000110e0c3c9: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3ce: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3d2: mov    %r11,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3d6: mov    0x8(%rsp),%r10
  0x0000000110e0c3db: mov    0x1c(%r10),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3df: cmp    $0x40000,%edx
  0x0000000110e0c3e5: ja     0x0000000110e0c94a
  0x0000000110e0c3eb: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3ee: cmp    $0x40000,%edx
  0x0000000110e0c3f4: ja     0x0000000110e0c8f4  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c3fa: mov    0x118(%r15),%rbx
  0x0000000110e0c401: shl    $0x2,%rcx
  0x0000000110e0c405: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c409: mov    %rcx,%r10
  0x0000000110e0c40c: and    $0xfffffffffffffff8,%r10
  0x0000000110e0c410: mov    %rbx,%r11
  0x0000000110e0c413: add    %r10,%r11
  0x0000000110e0c416: cmp    0x128(%r15),%r11
  0x0000000110e0c41d: jae    0x0000000110e0c8f4
  0x0000000110e0c423: mov    %r11,0x118(%r15)
  0x0000000110e0c42a: prefetchnta 0xc0(%r11)
  0x0000000110e0c432: movq   $0x1,(%rbx)
  0x0000000110e0c439: prefetchnta 0x100(%r11)
  0x0000000110e0c441: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0c448: mov    %edx,0xc(%rbx)
  0x0000000110e0c44b: prefetchnta 0x140(%r11)
  0x0000000110e0c453: mov    %rbx,%rdi
  0x0000000110e0c456: add    $0x10,%rdi
  0x0000000110e0c45a: prefetchnta 0x180(%r11)
  0x0000000110e0c462: shr    $0x3,%rcx
  0x0000000110e0c466: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0c46a: xor    %rax,%rax
  0x0000000110e0c46d: cmp    $0x8,%rcx
  0x0000000110e0c471: jg     0x0000000110e0c483
  0x0000000110e0c473: dec    %rcx
  0x0000000110e0c476: js     0x0000000110e0c48a
  0x0000000110e0c478: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0c47c: dec    %rcx
  0x0000000110e0c47f: jge    0x0000000110e0c478
  0x0000000110e0c481: jmp    0x0000000110e0c48a
  0x0000000110e0c483: shl    $0x3,%rcx
  0x0000000110e0c487: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0c48a: cmpb   $0x0,0x30(%r15)
  0x0000000110e0c48f: jne    0x0000000110e0c828
  0x0000000110e0c495: mov    0x10(%rsp),%r10
  0x0000000110e0c49a: mov    %rbx,%r11
  0x0000000110e0c49d: xor    %r10,%r11
  0x0000000110e0c4a0: mov    %rbx,%r9
  0x0000000110e0c4a3: shr    $0x3,%r9
  0x0000000110e0c4a7: mov    0x10(%rsp),%r8
  0x0000000110e0c4ac: mov    %r9d,0x40(%r8)
  0x0000000110e0c4b0: shr    $0x14,%r11
  0x0000000110e0c4b4: test   %r11,%r11
  0x0000000110e0c4b7: je     0x0000000110e0c50c
  0x0000000110e0c4b9: shr    $0x9,%r10
  0x0000000110e0c4bd: movabs $0x110569000,%rdi
  0x0000000110e0c4c7: add    %r10,%rdi
  0x0000000110e0c4ca: cmpb   $0x20,(%rdi)
  0x0000000110e0c4cd: je     0x0000000110e0c50c
  0x0000000110e0c4cf: mov    0x80(%r15),%r10
  0x0000000110e0c4d6: mov    0x70(%r15),%r11
  0x0000000110e0c4da: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c4e0: cmpb   $0x0,(%rdi)
  0x0000000110e0c4e3: je     0x0000000110e0c50c
  0x0000000110e0c4e5: movb   $0x0,(%rdi)
  0x0000000110e0c4e8: test   %r11,%r11
  0x0000000110e0c4eb: jne    0x0000000110e0c4ff  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c4ed: mov    %r15,%rsi
  0x0000000110e0c4f0: movabs $0x107aec8ce,%r10
  0x0000000110e0c4fa: callq  *%r10
  0x0000000110e0c4fd: jmp    0x0000000110e0c50c
  0x0000000110e0c4ff: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c504: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c508: mov    %r11,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c50c: mov    0x8(%rsp),%r10
  0x0000000110e0c511: mov    0x14(%r10),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c515: cmp    $0x40000,%edx
  0x0000000110e0c51b: ja     0x0000000110e0c93a
  0x0000000110e0c521: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c524: cmp    $0x40000,%edx
  0x0000000110e0c52a: ja     0x0000000110e0c8d5  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c530: mov    0x118(%r15),%rbx
  0x0000000110e0c537: shl    $0x2,%rcx
  0x0000000110e0c53b: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c53f: mov    %rcx,%r10
  0x0000000110e0c542: and    $0xfffffffffffffff8,%r10
  0x0000000110e0c546: mov    %rbx,%r11
  0x0000000110e0c549: add    %r10,%r11
  0x0000000110e0c54c: cmp    0x128(%r15),%r11
  0x0000000110e0c553: jae    0x0000000110e0c8d5
  0x0000000110e0c559: mov    %r11,0x118(%r15)
  0x0000000110e0c560: prefetchnta 0xc0(%r11)
  0x0000000110e0c568: movq   $0x1,(%rbx)
  0x0000000110e0c56f: prefetchnta 0x100(%r11)
  0x0000000110e0c577: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0c57e: mov    %edx,0xc(%rbx)
  0x0000000110e0c581: prefetchnta 0x140(%r11)
  0x0000000110e0c589: mov    %rbx,%rdi
  0x0000000110e0c58c: add    $0x10,%rdi
  0x0000000110e0c590: prefetchnta 0x180(%r11)
  0x0000000110e0c598: shr    $0x3,%rcx
  0x0000000110e0c59c: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0c5a0: xor    %rax,%rax
  0x0000000110e0c5a3: cmp    $0x8,%rcx
  0x0000000110e0c5a7: jg     0x0000000110e0c5b9
  0x0000000110e0c5a9: dec    %rcx
  0x0000000110e0c5ac: js     0x0000000110e0c5c0
  0x0000000110e0c5ae: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0c5b2: dec    %rcx
  0x0000000110e0c5b5: jge    0x0000000110e0c5ae
  0x0000000110e0c5b7: jmp    0x0000000110e0c5c0
  0x0000000110e0c5b9: shl    $0x3,%rcx
  0x0000000110e0c5bd: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0c5c0: cmpb   $0x0,0x30(%r15)
  0x0000000110e0c5c5: jne    0x0000000110e0c7b0
  0x0000000110e0c5cb: mov    0x10(%rsp),%r10
  0x0000000110e0c5d0: mov    %rbx,%r11
  0x0000000110e0c5d3: xor    %r10,%r11
  0x0000000110e0c5d6: mov    %rbx,%r9
  0x0000000110e0c5d9: shr    $0x3,%r9
  0x0000000110e0c5dd: mov    0x10(%rsp),%r8
  0x0000000110e0c5e2: mov    %r9d,0x44(%r8)
  0x0000000110e0c5e6: shr    $0x14,%r11
  0x0000000110e0c5ea: test   %r11,%r11
  0x0000000110e0c5ed: je     0x0000000110e0c64b
  0x0000000110e0c5ef: shr    $0x9,%r10
  0x0000000110e0c5f3: movabs $0x110569000,%rdi
  0x0000000110e0c5fd: add    %r10,%rdi
  0x0000000110e0c600: cmpb   $0x20,(%rdi)
  0x0000000110e0c603: je     0x0000000110e0c64b
  0x0000000110e0c605: mov    0x80(%r15),%r10    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c60c: mov    0x70(%r15),%r11
  0x0000000110e0c610: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0c616: cmpb   $0x0,(%rdi)
  0x0000000110e0c619: je     0x0000000110e0c642
  0x0000000110e0c61b: movb   $0x0,(%rdi)
  0x0000000110e0c61e: test   %r11,%r11
  0x0000000110e0c621: je     0x0000000110e0c632
  0x0000000110e0c623: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c628: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c62c: mov    %r11,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c630: jmp    0x0000000110e0c642  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c632: mov    %r15,%rsi
  0x0000000110e0c635: movabs $0x107aec8ce,%r10
  0x0000000110e0c63f: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c642: mov    0x10(%rsp),%r10
  0x0000000110e0c647: mov    0x44(%r10),%r9d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c64b: mov    0x10(%rsp),%r10
  0x0000000110e0c650: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c658: mov    0x38(%r10),%r10d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c65c: mov    0x10(%rsp),%r11
  0x0000000110e0c661: movl   $0xffffffff,0x1c(%r11)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c669: movl   $0x0,0x20(%r11)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c671: mov    0xc(%r12,%r10,8),%ecx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; implicit exception: dispatches to 0x0000000110e0ca0e
  0x0000000110e0c676: test   %ecx,%ecx
  0x0000000110e0c678: jbe    0x0000000110e0c72e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c67e: mov    %ecx,%r11d
  0x0000000110e0c681: dec    %r11d
  0x0000000110e0c684: cmp    %ecx,%r11d
  0x0000000110e0c687: jae    0x0000000110e0c952
  0x0000000110e0c68d: lea    (%r12,%r10,8),%rbx
  0x0000000110e0c691: mov    %ebx,%r11d
  0x0000000110e0c694: shr    $0x2,%r11d
  0x0000000110e0c698: and    $0x3,%r11d
  0x0000000110e0c69c: mov    $0xffffffff,%r10d
  0x0000000110e0c6a2: sub    %r11d,%r10d
  0x0000000110e0c6a5: and    $0x3,%r10d
  0x0000000110e0c6a9: inc    %r10d
  0x0000000110e0c6ac: cmp    %ecx,%r10d
  0x0000000110e0c6af: cmovg  %ecx,%r10d
  0x0000000110e0c6b3: xor    %esi,%esi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c6b5: movl   $0xffffffff,0x10(%rbx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c6bd: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c6bf: cmp    %r10d,%esi
  0x0000000110e0c6c2: jl     0x0000000110e0c6b5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c6c4: mov    %ecx,%edi
  0x0000000110e0c6c6: add    $0xfffffffd,%edi
  0x0000000110e0c6c9: cmp    %edi,%esi
  0x0000000110e0c6cb: jge    0x0000000110e0c71c
  0x0000000110e0c6cd: vmovq  -0x7b5(%rip),%xmm0        # 0x0000000110e0bf20
                                                ;   {section_word}
  0x0000000110e0c6d5: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e0c6d9: mov    $0xfa0,%edx
  0x0000000110e0c6de: mov    %ecx,%r11d
  0x0000000110e0c6e1: sub    %esi,%r11d
  0x0000000110e0c6e4: add    $0xfffffffd,%r11d
  0x0000000110e0c6e8: cmp    %r11d,%edx
  0x0000000110e0c6eb: mov    $0xfa0,%r8d
  0x0000000110e0c6f1: cmovg  %r11d,%r8d
  0x0000000110e0c6f5: add    %esi,%r8d
  0x0000000110e0c6f8: nopl   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c700: vmovdqu %xmm0,0x10(%rbx,%rsi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c706: add    $0x4,%esi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c709: cmp    %r8d,%esi
  0x0000000110e0c70c: jl     0x0000000110e0c700  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c70e: mov    0x108(%r15),%r8    ; ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c715: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {poll}
  0x0000000110e0c718: cmp    %edi,%esi
  0x0000000110e0c71a: jl     0x0000000110e0c6de
  0x0000000110e0c71c: cmp    %ecx,%esi
  0x0000000110e0c71e: jge    0x0000000110e0c72e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c720: movl   $0xffffffff,0x10(%rbx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c728: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c72a: cmp    %ecx,%esi
  0x0000000110e0c72c: jl     0x0000000110e0c720  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c72e: mov    0x10(%rsp),%r10
  0x0000000110e0c733: mov    0x40(%r10),%r10d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c737: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; implicit exception: dispatches to 0x0000000110e0ca1e
  0x0000000110e0c73c: test   %ebp,%ebp
  0x0000000110e0c73e: ja     0x0000000110e0c9d6  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c744: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ; implicit exception: dispatches to 0x0000000110e0ca2a
  0x0000000110e0c749: test   %ebp,%ebp
  0x0000000110e0c74b: ja     0x0000000110e0c9e2  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c751: mov    0x10(%rsp),%r10
  0x0000000110e0c756: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@100 (line 414)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c75e: mov    0x3c(%r10),%r11d
  0x0000000110e0c762: movl   $0x0,0xc(%r10)     ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c76a: mov    %r11,%rsi
  0x0000000110e0c76d: shl    $0x3,%rsi
  0x0000000110e0c771: movabs $0xffffffffffffffff,%rax
  0x0000000110e0c77b: callq  0x0000000110d90180  ; ImmutableOopMap{[16]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {virtual_call}
  0x0000000110e0c780: mov    0x10(%rsp),%r10
  0x0000000110e0c785: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c789: incl   0x2c(%r10)         ;*synchronization entry
                                                ; - java.util.regex.Matcher::matches@-1 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c78d: mov    0xc(%r10),%edx     ;*getfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@2 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c791: mov    $0x1,%ecx
  0x0000000110e0c796: mov    0x10(%rsp),%rsi
  0x0000000110e0c79b: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110e0c7a0: add    $0x30,%rsp
  0x0000000110e0c7a4: pop    %rbp
  0x0000000110e0c7a5: mov    0x108(%r15),%r10
  0x0000000110e0c7ac: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e0c7af: retq   
  0x0000000110e0c7b0: mov    0x10(%rsp),%r10
  0x0000000110e0c7b5: mov    0x44(%r10),%r10d
  0x0000000110e0c7b9: test   %r10d,%r10d
  0x0000000110e0c7bc: je     0x0000000110e0c5cb
  0x0000000110e0c7c2: mov    0x38(%r15),%r11
  0x0000000110e0c7c6: mov    %r10,%rdi
  0x0000000110e0c7c9: shl    $0x3,%rdi
  0x0000000110e0c7cd: test   %r11,%r11
  0x0000000110e0c7d0: je     0x0000000110e0c97f  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c7d6: mov    0x48(%r15),%r10
  0x0000000110e0c7da: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c7df: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c7e3: mov    %r11,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c7e7: jmpq   0x0000000110e0c5cb
  0x0000000110e0c7ec: mov    0x10(%rsp),%r10
  0x0000000110e0c7f1: mov    0x38(%r10),%r10d
  0x0000000110e0c7f5: test   %r10d,%r10d
  0x0000000110e0c7f8: je     0x0000000110e0c35f
  0x0000000110e0c7fe: mov    0x38(%r15),%r11
  0x0000000110e0c802: mov    %r10,%rdi
  0x0000000110e0c805: shl    $0x3,%rdi
  0x0000000110e0c809: test   %r11,%r11
  0x0000000110e0c80c: je     0x0000000110e0c994  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c812: mov    0x48(%r15),%r10
  0x0000000110e0c816: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c81b: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c81f: mov    %r11,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c823: jmpq   0x0000000110e0c35f
  0x0000000110e0c828: mov    0x10(%rsp),%r10
  0x0000000110e0c82d: mov    0x40(%r10),%r11d
  0x0000000110e0c831: test   %r11d,%r11d
  0x0000000110e0c834: je     0x0000000110e0c495
  0x0000000110e0c83a: mov    0x38(%r15),%r10
  0x0000000110e0c83e: mov    %r11,%rdi
  0x0000000110e0c841: shl    $0x3,%rdi
  0x0000000110e0c845: test   %r10,%r10
  0x0000000110e0c848: je     0x0000000110e0c96a  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c84e: mov    0x48(%r15),%r11
  0x0000000110e0c852: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c857: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c85b: mov    %r10,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c85f: jmpq   0x0000000110e0c495
  0x0000000110e0c864: mov    0x10(%rsp),%r10
  0x0000000110e0c869: mov    0x3c(%r10),%r10d
  0x0000000110e0c86d: test   %r10d,%r10d
  0x0000000110e0c870: je     0x0000000110e0c215
  0x0000000110e0c876: mov    0x38(%r15),%r11
  0x0000000110e0c87a: mov    %r10,%rdi
  0x0000000110e0c87d: shl    $0x3,%rdi
  0x0000000110e0c881: test   %r11,%r11
  0x0000000110e0c884: je     0x0000000110e0c9a9  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c88a: mov    0x48(%r15),%r10
  0x0000000110e0c88e: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c893: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c897: mov    %r11,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c89b: jmpq   0x0000000110e0c215
  0x0000000110e0c8a0: movabs $0x800066ca8,%rsi  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0c8aa: mov    (%rsp),%rbp
  0x0000000110e0c8ae: nop
  0x0000000110e0c8af: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0c8b4: jmpq   0x0000000110e0bff8
  0x0000000110e0c8b9: movabs $0x80006aaa8,%rsi  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0c8c3: mov    0x8(%rsp),%rbp
  0x0000000110e0c8c8: data16 xchg %ax,%ax
  0x0000000110e0c8cb: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0c8d0: jmpq   0x0000000110e0c175  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c8d5: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0c8df: mov    0x10(%rsp),%rbp
  0x0000000110e0c8e4: data16 xchg %ax,%ax
  0x0000000110e0c8e7: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0c8ec: mov    %rax,%rbx
  0x0000000110e0c8ef: jmpq   0x0000000110e0c5c0  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c8f4: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0c8fe: mov    0x10(%rsp),%rbp
  0x0000000110e0c903: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0c908: mov    %rax,%rbx
  0x0000000110e0c90b: jmpq   0x0000000110e0c48a  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c910: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0c91a: mov    0x10(%rsp),%rbp
  0x0000000110e0c91f: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0c924: mov    %rax,%rbx
  0x0000000110e0c927: jmpq   0x0000000110e0c354
  0x0000000110e0c92c: mov    $0xfffffff6,%esi
  0x0000000110e0c931: xchg   %ax,%ax
  0x0000000110e0c933: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c938: ud2                       ;*invokevirtual matches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c93a: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c93d: jmpq   0x0000000110e0c524
  0x0000000110e0c942: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c945: jmpq   0x0000000110e0c2b8
  0x0000000110e0c94a: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c94d: jmpq   0x0000000110e0c3ee  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c952: mov    $0xffffff7e,%esi
  0x0000000110e0c957: mov    0x10(%rsp),%rbp
  0x0000000110e0c95c: mov    %ecx,0x8(%rsp)
  0x0000000110e0c960: data16 xchg %ax,%ax
  0x0000000110e0c963: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c968: ud2                       ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c96a: mov    %r15,%rsi
  0x0000000110e0c96d: movabs $0x107aec8aa,%r10
  0x0000000110e0c977: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c97a: jmpq   0x0000000110e0c495  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c97f: mov    %r15,%rsi
  0x0000000110e0c982: movabs $0x107aec8aa,%r10
  0x0000000110e0c98c: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c98f: jmpq   0x0000000110e0c5cb  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c994: mov    %r15,%rsi
  0x0000000110e0c997: movabs $0x107aec8aa,%r10
  0x0000000110e0c9a1: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9a4: jmpq   0x0000000110e0c35f  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9a9: mov    %r15,%rsi
  0x0000000110e0c9ac: movabs $0x107aec8aa,%r10
  0x0000000110e0c9b6: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9b9: jmpq   0x0000000110e0c215  ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9be: mov    $0xffffff4d,%esi
  0x0000000110e0c9c3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c9c8: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9ca: mov    $0xffffff4d,%esi
  0x0000000110e0c9cf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c9d4: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9d6: mov    $0xffffff4d,%esi
  0x0000000110e0c9db: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c9e0: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0c9e2: mov    $0xffffff4d,%esi
  0x0000000110e0c9e7: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c9ec: ud2    
  0x0000000110e0c9ee: mov    $0xfffffff6,%esi
  0x0000000110e0c9f3: mov    (%rsp),%rbp
  0x0000000110e0c9f7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0c9fc: ud2    
  0x0000000110e0c9fe: mov    $0xfffffff6,%esi
  0x0000000110e0ca03: mov    (%rsp),%rbp
  0x0000000110e0ca07: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ca0c: ud2    
  0x0000000110e0ca0e: mov    $0xfffffff6,%esi
  0x0000000110e0ca13: mov    %r11,%rbp
  0x0000000110e0ca16: nop
  0x0000000110e0ca17: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ca1c: ud2    
  0x0000000110e0ca1e: mov    $0xfffffff6,%esi
  0x0000000110e0ca23: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ca28: ud2    
  0x0000000110e0ca2a: mov    $0xfffffff6,%esi
  0x0000000110e0ca2f: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ca34: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca36: mov    %rax,%rsi
  0x0000000110e0ca39: jmp    0x0000000110e0ca93  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca3b: mov    %rax,%rsi
  0x0000000110e0ca3e: jmp    0x0000000110e0ca93  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca40: jmp    0x0000000110e0ca8b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca42: jmp    0x0000000110e0ca8b  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca44: jmp    0x0000000110e0ca8b
  0x0000000110e0ca46: mov    0x8(%rax),%r11d
  0x0000000110e0ca4a: cmp    $0x5728,%r11d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e0ca51: jne    0x0000000110e0ca86  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca53: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e0ca5d: mov    %rbp,%rsi
  0x0000000110e0ca60: mov    (%rsp),%rbp
  0x0000000110e0ca64: data16 xchg %ax,%ax
  0x0000000110e0ca67: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110e0ca6c: mov    $0xffffffec,%esi
  0x0000000110e0ca71: rex.W pushq 0x8(%rsp)
  0x0000000110e0ca76: rex.W popq (%rsp)
  0x0000000110e0ca7a: mov    %rax,0x8(%rsp)
  0x0000000110e0ca7f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0ca84: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca86: mov    %rax,%rsi
  0x0000000110e0ca89: jmp    0x0000000110e0ca93  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca8b: mov    %rax,%rsi
  0x0000000110e0ca8e: jmp    0x0000000110e0ca93  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca90: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.util.regex.Pattern::compile@-1 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)

  0x0000000110e0ca93: add    $0x30,%rsp
  0x0000000110e0ca97: pop    %rbp
  0x0000000110e0ca98: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$1@3 (line 64)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e0ca9d: hlt    
  0x0000000110e0ca9e: hlt    
  0x0000000110e0ca9f: hlt    
[Stub Code]
  0x0000000110e0caa0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e0caaa: jmpq   0x0000000110e0caaa  ;   {runtime_call}
  0x0000000110e0caaf: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0cab9: jmpq   0x0000000110e0cab9  ;   {runtime_call}
  0x0000000110e0cabe: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0cac8: jmpq   0x0000000110e0cac8  ;   {runtime_call}
[Exception Handler]
  0x0000000110e0cacd: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e0cad2: callq  0x0000000110e0cad7
  0x0000000110e0cad7: subq   $0x5,(%rsp)
  0x0000000110e0cadc: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e0cae1: hlt    
  0x0000000110e0cae2: hlt    
  0x0000000110e0cae3: hlt    
  0x0000000110e0cae4: hlt    
  0x0000000110e0cae5: hlt    
  0x0000000110e0cae6: hlt    
  0x0000000110e0cae7: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 436 
ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }pc offsets: 2005 
ImmutableOopMap{[16]=Oop }pc offsets: 2112 
ImmutableOopMap{}pc offsets: 2144 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 2420 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2448 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2476 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2504 2532 
ImmutableOopMap{}pc offsets: 2552 
ImmutableOopMap{rbp=Oop }pc offsets: 2600 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 2696 2708 
ImmutableOopMap{[16]=Oop }pc offsets: 2720 2732 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2748 2764 
ImmutableOopMap{rbp=Oop }pc offsets: 2780 
ImmutableOopMap{[16]=Oop }pc offsets: 2792 2804 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2860 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2884 Compiled method (c2)    1083  158             java.lang.String::matches (6 bytes)
 total in heap  [0x0000000110e0da10,0x0000000110e0f6a8] = 7320
 relocation     [0x0000000110e0db88,0x0000000110e0dc10] = 136
 constants      [0x0000000110e0dc20,0x0000000110e0dc40] = 32
 main code      [0x0000000110e0dc40,0x0000000110e0e7c0] = 2944
 stub code      [0x0000000110e0e7c0,0x0000000110e0e808] = 72
 metadata       [0x0000000110e0e808,0x0000000110e0e880] = 120
 scopes data    [0x0000000110e0e880,0x0000000110e0ebd0] = 848
 scopes pcs     [0x0000000110e0ebd0,0x0000000110e0f5a0] = 2512
 dependencies   [0x0000000110e0f5a0,0x0000000110e0f5a8] = 8
 handler table  [0x0000000110e0f5a8,0x0000000110e0f680] = 216
 nul chk table  [0x0000000110e0f680,0x0000000110e0f6a8] = 40
----------------------------------------------------------------------
java/lang/String.matches(Ljava/lang/String;)Z  [0x0000000110e0dc40, 0x0000000110e0e808]  3016 bytes
[Constants]
  0x0000000110e0dc20 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e0dc24 (offset:    4): 0xffffffff
  0x0000000110e0dc28 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0dc2c (offset:   12): 0xf4f4f4f4
  0x0000000110e0dc30 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0dc34 (offset:   20): 0xf4f4f4f4
  0x0000000110e0dc38 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0dc3c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011ed70b88} 'matches' '(Ljava/lang/String;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e0dc40: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110e0dc44: movabs $0x800000000,%r12
  0x0000000110e0dc4e: add    %r12,%r10
  0x0000000110e0dc51: xor    %r12,%r12
  0x0000000110e0dc54: cmp    %r10,%rax
  0x0000000110e0dc57: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e0dc5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e0dc60: mov    %eax,-0x14000(%rsp)
  0x0000000110e0dc67: push   %rbp
  0x0000000110e0dc68: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::matches@-1 (line 2024)

  0x0000000110e0dc6c: mov    %rdx,%rbp
  0x0000000110e0dc6f: mov    %rsi,(%rsp)
  0x0000000110e0dc73: mov    0x118(%r15),%rax
  0x0000000110e0dc7a: mov    %rax,%r10
  0x0000000110e0dc7d: add    $0x58,%r10
  0x0000000110e0dc81: cmp    0x128(%r15),%r10
  0x0000000110e0dc88: jae    0x0000000110e0e5b4  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dc8e: mov    %r10,0x118(%r15)
  0x0000000110e0dc95: prefetchnta 0xc0(%r10)
  0x0000000110e0dc9d: mov    $0x66ca8,%r11d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0dca3: movabs $0x800000000,%r10
  0x0000000110e0dcad: add    %r11,%r10
  0x0000000110e0dcb0: mov    0xb8(%r10),%r10
  0x0000000110e0dcb7: mov    %r10,(%rax)
  0x0000000110e0dcba: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0dcc1: movl   $0x0,0xc(%rax)
  0x0000000110e0dcc8: movq   $0x0,0x10(%rax)
  0x0000000110e0dcd0: movq   $0x0,0x18(%rax)
  0x0000000110e0dcd8: movq   $0x0,0x20(%rax)
  0x0000000110e0dce0: movl   $0x0,0x28(%rax)
  0x0000000110e0dce7: movq   $0x0,0x30(%rax)
  0x0000000110e0dcef: movq   $0x0,0x38(%rax)
  0x0000000110e0dcf7: movq   $0x0,0x40(%rax)
  0x0000000110e0dcff: movq   $0x0,0x48(%rax)
  0x0000000110e0dd07: movq   $0x0,0x50(%rax)
  0x0000000110e0dd0f: mov    %rbp,%r11
  0x0000000110e0dd12: shr    $0x3,%r11
  0x0000000110e0dd16: mov    %r11d,0x2c(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dd1a: mov    %rax,0x8(%rsp)
  0x0000000110e0dd1f: mov    %rbp,%r10
  0x0000000110e0dd22: mov    %rax,%r11
  0x0000000110e0dd25: xor    %r11,%r10
  0x0000000110e0dd28: shr    $0x14,%r10
  0x0000000110e0dd2c: test   %r10,%r10
  0x0000000110e0dd2f: je     0x0000000110e0dde6
  0x0000000110e0dd35: test   %rbp,%rbp
  0x0000000110e0dd38: je     0x0000000110e0e66a
  0x0000000110e0dd3e: shr    $0x9,%r11
  0x0000000110e0dd42: movabs $0x110569000,%rdi
  0x0000000110e0dd4c: add    %r11,%rdi
  0x0000000110e0dd4f: cmpb   $0x20,(%rdi)
  0x0000000110e0dd52: je     0x0000000110e0dddd
  0x0000000110e0dd58: mov    0x70(%r15),%r10
  0x0000000110e0dd5c: mov    0x80(%r15),%r11
  0x0000000110e0dd63: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0dd69: cmpb   $0x0,(%rdi)
  0x0000000110e0dd6c: je     0x0000000110e0dd95
  0x0000000110e0dd6e: movb   $0x0,(%rdi)
  0x0000000110e0dd71: test   %r10,%r10
  0x0000000110e0dd74: je     0x0000000110e0dd85
  0x0000000110e0dd76: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e0dd7b: add    $0xfffffffffffffff8,%r10
  0x0000000110e0dd7f: mov    %r10,0x70(%r15)
  0x0000000110e0dd83: jmp    0x0000000110e0dd95
  0x0000000110e0dd85: mov    %r15,%rsi
  0x0000000110e0dd88: movabs $0x107aec8ce,%r10
  0x0000000110e0dd92: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dd95: mov    0x8(%rsp),%r10
  0x0000000110e0dd9a: movl   $0x0,0x1c(%r10)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dda2: mov    0x2c(%r10),%r10d   ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dda6: mov    0x8(%rsp),%r11
  0x0000000110e0ddab: movl   $0x0,0xc(%r11)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddb3: movl   $0x1,0x18(%r11)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddbb: movl   $0x0,0x10(%r11)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddc3: movl   $0x0,0x14(%r11)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddcb: test   %r10d,%r10d
  0x0000000110e0ddce: je     0x0000000110e0e671  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddd4: mov    %r10,%rbp
  0x0000000110e0ddd7: shl    $0x3,%rbp          ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dddb: jmp    0x0000000110e0ddf6
  0x0000000110e0dddd: movl   $0x1,0x18(%rax)
  0x0000000110e0dde4: jmp    0x0000000110e0ddf6
  0x0000000110e0dde6: movl   $0x1,0x18(%rax)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dded: test   %rbp,%rbp
  0x0000000110e0ddf0: je     0x0000000110e0e671  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddf6: mov    0xc(%rbp),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0ddfa: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; implicit exception: dispatches to 0x0000000110e0e706
  0x0000000110e0ddff: test   %ebp,%ebp
  0x0000000110e0de01: jbe    0x0000000110e0e6d6  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0de07: mov    0x8(%rsp),%rsi
  0x0000000110e0de0c: mov    %rsi,%rbp
  0x0000000110e0de0f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {optimized virtual_call}
  0x0000000110e0de14: movzbl 0x28(%rbp),%ebp    ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0de18: test   %ebp,%ebp
  0x0000000110e0de1a: je     0x0000000110e0e6e2
  0x0000000110e0de20: mov    0x118(%r15),%rax
  0x0000000110e0de27: mov    %rax,%r10
  0x0000000110e0de2a: add    $0x48,%r10
  0x0000000110e0de2e: cmp    0x128(%r15),%r10
  0x0000000110e0de35: jae    0x0000000110e0e5c9  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0de3b: mov    %r10,0x118(%r15)
  0x0000000110e0de42: prefetchnta 0xc0(%r10)
  0x0000000110e0de4a: mov    $0x6aaa8,%r11d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0de50: movabs $0x800000000,%r10
  0x0000000110e0de5a: add    %r11,%r10
  0x0000000110e0de5d: mov    0xb8(%r10),%r10
  0x0000000110e0de64: mov    %r10,(%rax)
  0x0000000110e0de67: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0de6e: movl   $0x0,0xc(%rax)
  0x0000000110e0de75: movq   $0x0,0x10(%rax)
  0x0000000110e0de7d: movq   $0x0,0x28(%rax)
  0x0000000110e0de85: movq   $0x0,0x38(%rax)
  0x0000000110e0de8d: movq   $0x0,0x40(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0de95: mov    0x8(%rsp),%r10
  0x0000000110e0de9a: mov    %r10,%r11
  0x0000000110e0de9d: shr    $0x3,%r11
  0x0000000110e0dea1: movabs $0xffffffff00000000,%r10
  0x0000000110e0deab: mov    %r10,0x18(%rax)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0deaf: mov    %r10,0x20(%rax)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0deb3: movl   $0x1000000,0x30(%rax)  ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0deba: mov    %r11d,0x34(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0debe: mov    %rax,0x10(%rsp)
  0x0000000110e0dec3: mov    0x8(%rsp),%r10
  0x0000000110e0dec8: mov    %rax,%r11
  0x0000000110e0decb: xor    %r11,%r10
  0x0000000110e0dece: shr    $0x14,%r10
  0x0000000110e0ded2: test   %r10,%r10
  0x0000000110e0ded5: je     0x0000000110e0df2a
  0x0000000110e0ded7: shr    $0x9,%r11
  0x0000000110e0dedb: movabs $0x110569000,%rdi
  0x0000000110e0dee5: add    %r11,%rdi
  0x0000000110e0dee8: cmpb   $0x20,(%rdi)
  0x0000000110e0deeb: je     0x0000000110e0df2a
  0x0000000110e0deed: mov    0x70(%r15),%r10
  0x0000000110e0def1: mov    0x80(%r15),%r11
  0x0000000110e0def8: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0defe: cmpb   $0x0,(%rdi)
  0x0000000110e0df01: je     0x0000000110e0df2a
  0x0000000110e0df03: movb   $0x0,(%rdi)
  0x0000000110e0df06: test   %r10,%r10
  0x0000000110e0df09: jne    0x0000000110e0df1d  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0df0b: mov    %r15,%rsi
  0x0000000110e0df0e: movabs $0x107aec8ce,%r10
  0x0000000110e0df18: callq  *%r10
  0x0000000110e0df1b: jmp    0x0000000110e0df2a
  0x0000000110e0df1d: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0df22: add    $0xfffffffffffffff8,%r10
  0x0000000110e0df26: mov    %r10,0x70(%r15)
  0x0000000110e0df2a: cmpb   $0x0,0x30(%r15)
  0x0000000110e0df2f: jne    0x0000000110e0e578
  0x0000000110e0df35: mov    0x10(%rsp),%r10
  0x0000000110e0df3a: mov    (%rsp),%r11
  0x0000000110e0df3e: mov    %r11,%r8
  0x0000000110e0df41: shr    $0x3,%r8
  0x0000000110e0df45: mov    0x10(%rsp),%r9
  0x0000000110e0df4a: mov    %r8d,0x3c(%r9)
  0x0000000110e0df4e: xor    %r10,%r11
  0x0000000110e0df51: shr    $0x14,%r11
  0x0000000110e0df55: test   %r11,%r11
  0x0000000110e0df58: je     0x0000000110e0dfad
  0x0000000110e0df5a: shr    $0x9,%r10
  0x0000000110e0df5e: movabs $0x110569000,%rdi
  0x0000000110e0df68: add    %r10,%rdi
  0x0000000110e0df6b: cmpb   $0x20,(%rdi)
  0x0000000110e0df6e: je     0x0000000110e0dfad
  0x0000000110e0df70: mov    0x70(%r15),%r10
  0x0000000110e0df74: mov    0x80(%r15),%r11
  0x0000000110e0df7b: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0df81: cmpb   $0x0,(%rdi)
  0x0000000110e0df84: je     0x0000000110e0dfad
  0x0000000110e0df86: movb   $0x0,(%rdi)
  0x0000000110e0df89: test   %r10,%r10
  0x0000000110e0df8c: jne    0x0000000110e0dfa0  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0df8e: mov    %r15,%rsi
  0x0000000110e0df91: movabs $0x107aec8ce,%r10
  0x0000000110e0df9b: callq  *%r10
  0x0000000110e0df9e: jmp    0x0000000110e0dfad
  0x0000000110e0dfa0: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfa5: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfa9: mov    %r10,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfad: mov    0x8(%rsp),%r10
  0x0000000110e0dfb2: mov    0x18(%r10),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfb6: mov    $0xa,%r10d
  0x0000000110e0dfbc: cmp    $0xa,%edx
  0x0000000110e0dfbf: cmovl  %r10d,%edx
  0x0000000110e0dfc3: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfc5: cmp    $0x40000,%edx
  0x0000000110e0dfcb: ja     0x0000000110e0e64c
  0x0000000110e0dfd1: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfd4: cmp    $0x40000,%edx
  0x0000000110e0dfda: ja     0x0000000110e0e620  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfe0: mov    0x118(%r15),%rbx
  0x0000000110e0dfe7: shl    $0x2,%rcx
  0x0000000110e0dfeb: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0dfef: mov    %rcx,%r10
  0x0000000110e0dff2: and    $0xfffffffffffffff8,%r10
  0x0000000110e0dff6: mov    %rbx,%r11
  0x0000000110e0dff9: add    %r10,%r11
  0x0000000110e0dffc: cmp    0x128(%r15),%r11
  0x0000000110e0e003: jae    0x0000000110e0e620
  0x0000000110e0e009: mov    %r11,0x118(%r15)
  0x0000000110e0e010: prefetchnta 0xc0(%r11)
  0x0000000110e0e018: movq   $0x1,(%rbx)
  0x0000000110e0e01f: prefetchnta 0x100(%r11)
  0x0000000110e0e027: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0e02e: mov    %edx,0xc(%rbx)
  0x0000000110e0e031: prefetchnta 0x140(%r11)
  0x0000000110e0e039: mov    %rbx,%rdi
  0x0000000110e0e03c: add    $0x10,%rdi
  0x0000000110e0e040: prefetchnta 0x180(%r11)
  0x0000000110e0e048: shr    $0x3,%rcx
  0x0000000110e0e04c: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0e050: xor    %rax,%rax
  0x0000000110e0e053: cmp    $0x8,%rcx
  0x0000000110e0e057: jg     0x0000000110e0e069
  0x0000000110e0e059: dec    %rcx
  0x0000000110e0e05c: js     0x0000000110e0e070
  0x0000000110e0e05e: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0e062: dec    %rcx
  0x0000000110e0e065: jge    0x0000000110e0e05e
  0x0000000110e0e067: jmp    0x0000000110e0e070
  0x0000000110e0e069: shl    $0x3,%rcx
  0x0000000110e0e06d: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0e070: cmpb   $0x0,0x30(%r15)
  0x0000000110e0e075: jne    0x0000000110e0e500
  0x0000000110e0e07b: mov    0x10(%rsp),%r10
  0x0000000110e0e080: mov    %rbx,%r8
  0x0000000110e0e083: shr    $0x3,%r8
  0x0000000110e0e087: mov    0x10(%rsp),%r11
  0x0000000110e0e08c: mov    %r8d,0x38(%r11)
  0x0000000110e0e090: mov    %rbx,%r11
  0x0000000110e0e093: xor    %r10,%r11
  0x0000000110e0e096: shr    $0x14,%r11
  0x0000000110e0e09a: test   %r11,%r11
  0x0000000110e0e09d: je     0x0000000110e0e0f2
  0x0000000110e0e09f: shr    $0x9,%r10
  0x0000000110e0e0a3: movabs $0x110569000,%rdi
  0x0000000110e0e0ad: add    %r10,%rdi
  0x0000000110e0e0b0: cmpb   $0x20,(%rdi)
  0x0000000110e0e0b3: je     0x0000000110e0e0f2
  0x0000000110e0e0b5: mov    0x70(%r15),%r10
  0x0000000110e0e0b9: mov    0x80(%r15),%r11
  0x0000000110e0e0c0: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0e0c6: cmpb   $0x0,(%rdi)
  0x0000000110e0e0c9: je     0x0000000110e0e0f2
  0x0000000110e0e0cb: movb   $0x0,(%rdi)
  0x0000000110e0e0ce: test   %r10,%r10
  0x0000000110e0e0d1: jne    0x0000000110e0e0e5  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e0d3: mov    %r15,%rsi
  0x0000000110e0e0d6: movabs $0x107aec8ce,%r10
  0x0000000110e0e0e0: callq  *%r10
  0x0000000110e0e0e3: jmp    0x0000000110e0e0f2
  0x0000000110e0e0e5: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e0ea: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e0ee: mov    %r10,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e0f2: mov    0x8(%rsp),%r10
  0x0000000110e0e0f7: mov    0x1c(%r10),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e0fb: cmp    $0x40000,%edx
  0x0000000110e0e101: ja     0x0000000110e0e644
  0x0000000110e0e107: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e10a: cmp    $0x40000,%edx
  0x0000000110e0e110: ja     0x0000000110e0e604  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e116: mov    0x118(%r15),%rbx
  0x0000000110e0e11d: shl    $0x2,%rcx
  0x0000000110e0e121: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e125: mov    %rcx,%r10
  0x0000000110e0e128: and    $0xfffffffffffffff8,%r10
  0x0000000110e0e12c: mov    %rbx,%r11
  0x0000000110e0e12f: add    %r10,%r11
  0x0000000110e0e132: cmp    0x128(%r15),%r11
  0x0000000110e0e139: jae    0x0000000110e0e604
  0x0000000110e0e13f: mov    %r11,0x118(%r15)
  0x0000000110e0e146: prefetchnta 0xc0(%r11)
  0x0000000110e0e14e: movq   $0x1,(%rbx)
  0x0000000110e0e155: prefetchnta 0x100(%r11)
  0x0000000110e0e15d: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0e164: mov    %edx,0xc(%rbx)
  0x0000000110e0e167: prefetchnta 0x140(%r11)
  0x0000000110e0e16f: mov    %rbx,%rdi
  0x0000000110e0e172: add    $0x10,%rdi
  0x0000000110e0e176: prefetchnta 0x180(%r11)
  0x0000000110e0e17e: shr    $0x3,%rcx
  0x0000000110e0e182: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0e186: xor    %rax,%rax
  0x0000000110e0e189: cmp    $0x8,%rcx
  0x0000000110e0e18d: jg     0x0000000110e0e19f
  0x0000000110e0e18f: dec    %rcx
  0x0000000110e0e192: js     0x0000000110e0e1a6
  0x0000000110e0e194: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0e198: dec    %rcx
  0x0000000110e0e19b: jge    0x0000000110e0e194
  0x0000000110e0e19d: jmp    0x0000000110e0e1a6
  0x0000000110e0e19f: shl    $0x3,%rcx
  0x0000000110e0e1a3: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0e1a6: cmpb   $0x0,0x30(%r15)
  0x0000000110e0e1ab: jne    0x0000000110e0e4c4
  0x0000000110e0e1b1: mov    %rbx,%r10
  0x0000000110e0e1b4: shr    $0x3,%r10
  0x0000000110e0e1b8: mov    0x10(%rsp),%r11
  0x0000000110e0e1bd: mov    %r10d,0x40(%r11)
  0x0000000110e0e1c1: mov    %r11,%r10
  0x0000000110e0e1c4: mov    %rbx,%r11
  0x0000000110e0e1c7: xor    %r10,%r11
  0x0000000110e0e1ca: shr    $0x14,%r11
  0x0000000110e0e1ce: test   %r11,%r11
  0x0000000110e0e1d1: je     0x0000000110e0e226
  0x0000000110e0e1d3: shr    $0x9,%r10
  0x0000000110e0e1d7: movabs $0x110569000,%rdi
  0x0000000110e0e1e1: add    %r10,%rdi
  0x0000000110e0e1e4: cmpb   $0x20,(%rdi)
  0x0000000110e0e1e7: je     0x0000000110e0e226
  0x0000000110e0e1e9: mov    0x80(%r15),%r10
  0x0000000110e0e1f0: mov    0x70(%r15),%r11
  0x0000000110e0e1f4: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0e1fa: cmpb   $0x0,(%rdi)
  0x0000000110e0e1fd: je     0x0000000110e0e226
  0x0000000110e0e1ff: movb   $0x0,(%rdi)
  0x0000000110e0e202: test   %r11,%r11
  0x0000000110e0e205: jne    0x0000000110e0e219  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e207: mov    %r15,%rsi
  0x0000000110e0e20a: movabs $0x107aec8ce,%r10
  0x0000000110e0e214: callq  *%r10
  0x0000000110e0e217: jmp    0x0000000110e0e226
  0x0000000110e0e219: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e21e: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e222: mov    %r11,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e226: mov    0x8(%rsp),%r10
  0x0000000110e0e22b: mov    0x14(%r10),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e22f: cmp    $0x40000,%edx
  0x0000000110e0e235: ja     0x0000000110e0e63c
  0x0000000110e0e23b: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e23e: cmp    $0x40000,%edx
  0x0000000110e0e244: ja     0x0000000110e0e5e5  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e24a: mov    0x118(%r15),%rbx
  0x0000000110e0e251: shl    $0x2,%rcx
  0x0000000110e0e255: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e259: mov    %rcx,%r10
  0x0000000110e0e25c: and    $0xfffffffffffffff8,%r10
  0x0000000110e0e260: mov    %rbx,%r11
  0x0000000110e0e263: add    %r10,%r11
  0x0000000110e0e266: cmp    0x128(%r15),%r11
  0x0000000110e0e26d: jae    0x0000000110e0e5e5
  0x0000000110e0e273: mov    %r11,0x118(%r15)
  0x0000000110e0e27a: prefetchnta 0xc0(%r11)
  0x0000000110e0e282: movq   $0x1,(%rbx)
  0x0000000110e0e289: prefetchnta 0x100(%r11)
  0x0000000110e0e291: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0e298: mov    %edx,0xc(%rbx)
  0x0000000110e0e29b: prefetchnta 0x140(%r11)
  0x0000000110e0e2a3: mov    %rbx,%rdi
  0x0000000110e0e2a6: add    $0x10,%rdi
  0x0000000110e0e2aa: prefetchnta 0x180(%r11)
  0x0000000110e0e2b2: shr    $0x3,%rcx
  0x0000000110e0e2b6: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0e2ba: xor    %rax,%rax
  0x0000000110e0e2bd: cmp    $0x8,%rcx
  0x0000000110e0e2c1: jg     0x0000000110e0e2d3
  0x0000000110e0e2c3: dec    %rcx
  0x0000000110e0e2c6: js     0x0000000110e0e2da
  0x0000000110e0e2c8: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0e2cc: dec    %rcx
  0x0000000110e0e2cf: jge    0x0000000110e0e2c8
  0x0000000110e0e2d1: jmp    0x0000000110e0e2da
  0x0000000110e0e2d3: shl    $0x3,%rcx
  0x0000000110e0e2d7: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0e2da: cmpb   $0x0,0x30(%r15)
  0x0000000110e0e2df: jne    0x0000000110e0e53c
  0x0000000110e0e2e5: mov    0x10(%rsp),%r10
  0x0000000110e0e2ea: mov    %rbx,%r8
  0x0000000110e0e2ed: shr    $0x3,%r8
  0x0000000110e0e2f1: mov    0x10(%rsp),%r11
  0x0000000110e0e2f6: mov    %r8d,0x44(%r11)
  0x0000000110e0e2fa: mov    %rbx,%r11
  0x0000000110e0e2fd: xor    %r10,%r11
  0x0000000110e0e300: shr    $0x14,%r11
  0x0000000110e0e304: test   %r11,%r11
  0x0000000110e0e307: je     0x0000000110e0e365
  0x0000000110e0e309: shr    $0x9,%r10
  0x0000000110e0e30d: movabs $0x110569000,%rdi
  0x0000000110e0e317: add    %r10,%rdi
  0x0000000110e0e31a: cmpb   $0x20,(%rdi)
  0x0000000110e0e31d: je     0x0000000110e0e365
  0x0000000110e0e31f: mov    0x70(%r15),%r10    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e323: mov    0x80(%r15),%r11
  0x0000000110e0e32a: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0e330: cmpb   $0x0,(%rdi)
  0x0000000110e0e333: je     0x0000000110e0e35c
  0x0000000110e0e335: movb   $0x0,(%rdi)
  0x0000000110e0e338: test   %r10,%r10
  0x0000000110e0e33b: je     0x0000000110e0e34c
  0x0000000110e0e33d: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e342: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e346: mov    %r10,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e34a: jmp    0x0000000110e0e35c  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e34c: mov    %r15,%rsi
  0x0000000110e0e34f: movabs $0x107aec8ce,%r10
  0x0000000110e0e359: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e35c: mov    0x10(%rsp),%r10
  0x0000000110e0e361: mov    0x44(%r10),%r8d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e365: mov    0x10(%rsp),%r10
  0x0000000110e0e36a: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e372: mov    0x38(%r10),%r10d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e376: mov    0x10(%rsp),%r11
  0x0000000110e0e37b: movl   $0xffffffff,0x1c(%r11)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e383: movl   $0x0,0x20(%r11)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e38b: mov    0xc(%r12,%r10,8),%ebx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; implicit exception: dispatches to 0x0000000110e0e716
  0x0000000110e0e390: test   %ebx,%ebx
  0x0000000110e0e392: jbe    0x0000000110e0e442  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e398: mov    %ebx,%r9d
  0x0000000110e0e39b: dec    %r9d
  0x0000000110e0e39e: cmp    %ebx,%r9d
  0x0000000110e0e3a1: jae    0x0000000110e0e654
  0x0000000110e0e3a7: lea    (%r12,%r10,8),%rcx
  0x0000000110e0e3ab: mov    %ecx,%r11d
  0x0000000110e0e3ae: shr    $0x2,%r11d
  0x0000000110e0e3b2: and    $0x3,%r11d
  0x0000000110e0e3b6: mov    $0xffffffff,%r10d
  0x0000000110e0e3bc: sub    %r11d,%r10d
  0x0000000110e0e3bf: and    $0x3,%r10d
  0x0000000110e0e3c3: inc    %r10d
  0x0000000110e0e3c6: cmp    %ebx,%r10d
  0x0000000110e0e3c9: cmovg  %ebx,%r10d
  0x0000000110e0e3cd: xor    %esi,%esi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e3cf: movl   $0xffffffff,0x10(%rcx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e3d7: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e3d9: cmp    %r10d,%esi
  0x0000000110e0e3dc: jl     0x0000000110e0e3cf  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e3de: mov    %ebx,%edi
  0x0000000110e0e3e0: add    $0xfffffffd,%edi
  0x0000000110e0e3e3: cmp    %edi,%esi
  0x0000000110e0e3e5: jge    0x0000000110e0e42e
  0x0000000110e0e3e7: vmovq  -0x7cf(%rip),%xmm0        # 0x0000000110e0dc20
                                                ;   {section_word}
  0x0000000110e0e3ef: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e0e3f3: mov    $0xfa0,%edx
  0x0000000110e0e3f8: mov    %ebx,%r11d
  0x0000000110e0e3fb: sub    %esi,%r11d
  0x0000000110e0e3fe: add    $0xfffffffd,%r11d
  0x0000000110e0e402: cmp    %r11d,%edx
  0x0000000110e0e405: mov    $0xfa0,%r9d
  0x0000000110e0e40b: cmovg  %r11d,%r9d
  0x0000000110e0e40f: add    %esi,%r9d          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e412: vmovdqu %xmm0,0x10(%rcx,%rsi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e418: add    $0x4,%esi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e41b: cmp    %r9d,%esi
  0x0000000110e0e41e: jl     0x0000000110e0e412  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e420: mov    0x108(%r15),%r9    ; ImmutableOopMap{r8=NarrowOop rcx=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e427: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {poll}
  0x0000000110e0e42a: cmp    %edi,%esi
  0x0000000110e0e42c: jl     0x0000000110e0e3f8
  0x0000000110e0e42e: cmp    %ebx,%esi
  0x0000000110e0e430: jge    0x0000000110e0e442
  0x0000000110e0e432: xchg   %ax,%ax            ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e434: movl   $0xffffffff,0x10(%rcx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e43c: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e43e: cmp    %ebx,%esi
  0x0000000110e0e440: jl     0x0000000110e0e434  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e442: mov    0x10(%rsp),%r10
  0x0000000110e0e447: mov    0x40(%r10),%r10d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e44b: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; implicit exception: dispatches to 0x0000000110e0e726
  0x0000000110e0e450: test   %ebp,%ebp
  0x0000000110e0e452: ja     0x0000000110e0e6ee  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e458: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ; implicit exception: dispatches to 0x0000000110e0e732
  0x0000000110e0e45d: test   %ebp,%ebp
  0x0000000110e0e45f: ja     0x0000000110e0e6fa  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e465: mov    0x10(%rsp),%r10
  0x0000000110e0e46a: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@100 (line 414)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e472: mov    0x3c(%r10),%r11d
  0x0000000110e0e476: movl   $0x0,0xc(%r10)     ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e47e: mov    %r11,%rsi
  0x0000000110e0e481: shl    $0x3,%rsi
  0x0000000110e0e485: movabs $0xffffffffffffffff,%rax
  0x0000000110e0e48f: callq  0x0000000110d90180  ; ImmutableOopMap{[16]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {virtual_call}
  0x0000000110e0e494: mov    0x10(%rsp),%r10
  0x0000000110e0e499: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e49d: incl   0x2c(%r10)         ;*synchronization entry
                                                ; - java.util.regex.Matcher::matches@-1 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4a1: mov    0xc(%r10),%edx     ;*getfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@2 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4a5: mov    $0x1,%ecx
  0x0000000110e0e4aa: mov    0x10(%rsp),%rsi
  0x0000000110e0e4af: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {optimized virtual_call}
  0x0000000110e0e4b4: add    $0x30,%rsp
  0x0000000110e0e4b8: pop    %rbp
  0x0000000110e0e4b9: mov    0x108(%r15),%r10
  0x0000000110e0e4c0: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e0e4c3: retq   
  0x0000000110e0e4c4: mov    0x10(%rsp),%r10
  0x0000000110e0e4c9: mov    0x40(%r10),%r11d
  0x0000000110e0e4cd: test   %r11d,%r11d
  0x0000000110e0e4d0: je     0x0000000110e0e1b1
  0x0000000110e0e4d6: mov    0x38(%r15),%r10
  0x0000000110e0e4da: mov    %r11,%rdi
  0x0000000110e0e4dd: shl    $0x3,%rdi
  0x0000000110e0e4e1: test   %r10,%r10
  0x0000000110e0e4e4: je     0x0000000110e0e6ac  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4ea: mov    0x48(%r15),%r11
  0x0000000110e0e4ee: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4f3: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4f7: mov    %r10,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e4fb: jmpq   0x0000000110e0e1b1
  0x0000000110e0e500: mov    0x10(%rsp),%r10
  0x0000000110e0e505: mov    0x38(%r10),%r10d
  0x0000000110e0e509: test   %r10d,%r10d
  0x0000000110e0e50c: je     0x0000000110e0e07b
  0x0000000110e0e512: mov    0x38(%r15),%r11
  0x0000000110e0e516: mov    %r10,%rdi
  0x0000000110e0e519: shl    $0x3,%rdi
  0x0000000110e0e51d: test   %r11,%r11
  0x0000000110e0e520: je     0x0000000110e0e697  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e526: mov    0x48(%r15),%r10
  0x0000000110e0e52a: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e52f: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e533: mov    %r11,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e537: jmpq   0x0000000110e0e07b
  0x0000000110e0e53c: mov    0x10(%rsp),%r10
  0x0000000110e0e541: mov    0x44(%r10),%r10d
  0x0000000110e0e545: test   %r10d,%r10d
  0x0000000110e0e548: je     0x0000000110e0e2e5
  0x0000000110e0e54e: mov    0x38(%r15),%r11
  0x0000000110e0e552: mov    %r10,%rdi
  0x0000000110e0e555: shl    $0x3,%rdi
  0x0000000110e0e559: test   %r11,%r11
  0x0000000110e0e55c: je     0x0000000110e0e682  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e562: mov    0x48(%r15),%r10
  0x0000000110e0e566: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e56b: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e56f: mov    %r11,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e573: jmpq   0x0000000110e0e2e5
  0x0000000110e0e578: mov    0x10(%rsp),%r10
  0x0000000110e0e57d: mov    0x3c(%r10),%r10d
  0x0000000110e0e581: test   %r10d,%r10d
  0x0000000110e0e584: je     0x0000000110e0df35
  0x0000000110e0e58a: mov    0x38(%r15),%r11
  0x0000000110e0e58e: mov    %r10,%rdi
  0x0000000110e0e591: shl    $0x3,%rdi
  0x0000000110e0e595: test   %r11,%r11
  0x0000000110e0e598: je     0x0000000110e0e6c1  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e59e: mov    0x48(%r15),%r10
  0x0000000110e0e5a2: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e5a7: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e5ab: mov    %r11,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e5af: jmpq   0x0000000110e0df35
  0x0000000110e0e5b4: movabs $0x800066ca8,%rsi  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0e5be: nop
  0x0000000110e0e5bf: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0e5c4: jmpq   0x0000000110e0dd0f
  0x0000000110e0e5c9: movabs $0x80006aaa8,%rsi  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0e5d3: mov    0x8(%rsp),%rbp
  0x0000000110e0e5d8: data16 xchg %ax,%ax
  0x0000000110e0e5db: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e0e5e0: jmpq   0x0000000110e0de95  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e5e5: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0e5ef: mov    0x10(%rsp),%rbp
  0x0000000110e0e5f4: data16 xchg %ax,%ax
  0x0000000110e0e5f7: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0e5fc: mov    %rax,%rbx
  0x0000000110e0e5ff: jmpq   0x0000000110e0e2da  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e604: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0e60e: mov    0x10(%rsp),%rbp
  0x0000000110e0e613: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0e618: mov    %rax,%rbx
  0x0000000110e0e61b: jmpq   0x0000000110e0e1a6  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e620: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e0e62a: mov    0x10(%rsp),%rbp
  0x0000000110e0e62f: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e0e634: mov    %rax,%rbx
  0x0000000110e0e637: jmpq   0x0000000110e0e070
  0x0000000110e0e63c: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e63f: jmpq   0x0000000110e0e23e
  0x0000000110e0e644: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e647: jmpq   0x0000000110e0e10a
  0x0000000110e0e64c: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e64f: jmpq   0x0000000110e0dfd4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e654: mov    $0xffffff7e,%esi
  0x0000000110e0e659: mov    %r11,(%rsp)
  0x0000000110e0e65d: mov    %ebx,0x8(%rsp)
  0x0000000110e0e661: xchg   %ax,%ax
  0x0000000110e0e663: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e668: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e66a: movl   $0x1,0x18(%rax)
  0x0000000110e0e671: mov    $0xfffffff6,%esi
  0x0000000110e0e676: mov    (%rsp),%rbp
  0x0000000110e0e67a: nop
  0x0000000110e0e67b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e680: ud2                       ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e682: mov    %r15,%rsi
  0x0000000110e0e685: movabs $0x107aec8aa,%r10
  0x0000000110e0e68f: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e692: jmpq   0x0000000110e0e2e5  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e697: mov    %r15,%rsi
  0x0000000110e0e69a: movabs $0x107aec8aa,%r10
  0x0000000110e0e6a4: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6a7: jmpq   0x0000000110e0e07b  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6ac: mov    %r15,%rsi
  0x0000000110e0e6af: movabs $0x107aec8aa,%r10
  0x0000000110e0e6b9: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6bc: jmpq   0x0000000110e0e1b1  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6c1: mov    %r15,%rsi
  0x0000000110e0e6c4: movabs $0x107aec8aa,%r10
  0x0000000110e0e6ce: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6d1: jmpq   0x0000000110e0df35  ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6d6: mov    $0xffffff4d,%esi
  0x0000000110e0e6db: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e6e0: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6e2: mov    $0xffffff4d,%esi
  0x0000000110e0e6e7: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e6ec: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6ee: mov    $0xffffff4d,%esi
  0x0000000110e0e6f3: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e6f8: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e6fa: mov    $0xffffff4d,%esi
  0x0000000110e0e6ff: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e704: ud2    
  0x0000000110e0e706: mov    $0xfffffff6,%esi
  0x0000000110e0e70b: mov    (%rsp),%rbp
  0x0000000110e0e70f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e714: ud2    
  0x0000000110e0e716: mov    $0xfffffff6,%esi
  0x0000000110e0e71b: mov    %r11,%rbp
  0x0000000110e0e71e: nop
  0x0000000110e0e71f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e724: ud2    
  0x0000000110e0e726: mov    $0xfffffff6,%esi
  0x0000000110e0e72b: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e730: ud2    
  0x0000000110e0e732: mov    $0xfffffff6,%esi
  0x0000000110e0e737: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e73c: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e73e: mov    %rax,%rsi
  0x0000000110e0e741: jmp    0x0000000110e0e79b  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e743: mov    %rax,%rsi
  0x0000000110e0e746: jmp    0x0000000110e0e79b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e748: jmp    0x0000000110e0e793  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e74a: jmp    0x0000000110e0e793  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e74c: jmp    0x0000000110e0e793
  0x0000000110e0e74e: mov    0x8(%rax),%r11d
  0x0000000110e0e752: cmp    $0x5728,%r11d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e0e759: jne    0x0000000110e0e78e  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e75b: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e0e765: mov    %rbp,%rsi
  0x0000000110e0e768: mov    (%rsp),%rbp
  0x0000000110e0e76c: data16 xchg %ax,%ax
  0x0000000110e0e76f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {optimized virtual_call}
  0x0000000110e0e774: mov    $0xffffffec,%esi
  0x0000000110e0e779: rex.W pushq 0x8(%rsp)
  0x0000000110e0e77e: rex.W popq (%rsp)
  0x0000000110e0e782: mov    %rax,0x8(%rsp)
  0x0000000110e0e787: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0e78c: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e78e: mov    %rax,%rsi
  0x0000000110e0e791: jmp    0x0000000110e0e79b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e793: mov    %rax,%rsi
  0x0000000110e0e796: jmp    0x0000000110e0e79b  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e798: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; - java.lang.String::matches@2 (line 2024)

  0x0000000110e0e79b: add    $0x30,%rsp
  0x0000000110e0e79f: pop    %rbp
  0x0000000110e0e7a0: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; - java.lang.String::matches@2 (line 2024)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e0e7a5: hlt    
  0x0000000110e0e7a6: hlt    
  0x0000000110e0e7a7: hlt    
  0x0000000110e0e7a8: hlt    
  0x0000000110e0e7a9: hlt    
  0x0000000110e0e7aa: hlt    
  0x0000000110e0e7ab: hlt    
  0x0000000110e0e7ac: hlt    
  0x0000000110e0e7ad: hlt    
  0x0000000110e0e7ae: hlt    
  0x0000000110e0e7af: hlt    
  0x0000000110e0e7b0: hlt    
  0x0000000110e0e7b1: hlt    
  0x0000000110e0e7b2: hlt    
  0x0000000110e0e7b3: hlt    
  0x0000000110e0e7b4: hlt    
  0x0000000110e0e7b5: hlt    
  0x0000000110e0e7b6: hlt    
  0x0000000110e0e7b7: hlt    
  0x0000000110e0e7b8: hlt    
  0x0000000110e0e7b9: hlt    
  0x0000000110e0e7ba: hlt    
  0x0000000110e0e7bb: hlt    
  0x0000000110e0e7bc: hlt    
  0x0000000110e0e7bd: hlt    
  0x0000000110e0e7be: hlt    
  0x0000000110e0e7bf: hlt    
[Stub Code]
  0x0000000110e0e7c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e0e7ca: jmpq   0x0000000110e0e7ca  ;   {runtime_call}
  0x0000000110e0e7cf: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0e7d9: jmpq   0x0000000110e0e7d9  ;   {runtime_call}
  0x0000000110e0e7de: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e0e7e8: jmpq   0x0000000110e0e7e8  ;   {runtime_call}
[Exception Handler]
  0x0000000110e0e7ed: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e0e7f2: callq  0x0000000110e0e7f7
  0x0000000110e0e7f7: subq   $0x5,(%rsp)
  0x0000000110e0e7fc: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e0e801: hlt    
  0x0000000110e0e802: hlt    
  0x0000000110e0e803: hlt    
  0x0000000110e0e804: hlt    
  0x0000000110e0e805: hlt    
  0x0000000110e0e806: hlt    
  0x0000000110e0e807: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 468 
ImmutableOopMap{r8=NarrowOop rcx=Oop [16]=Oop }pc offsets: 2023 
ImmutableOopMap{[16]=Oop }pc offsets: 2132 
ImmutableOopMap{}pc offsets: 2164 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 2436 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2464 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2492 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2520 2548 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 2600 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2624 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 2720 2732 
ImmutableOopMap{[16]=Oop }pc offsets: 2744 2756 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2772 
ImmutableOopMap{rbp=Oop }pc offsets: 2788 
ImmutableOopMap{[16]=Oop }pc offsets: 2800 2812 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2868 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2892 Compiled method (c2)    1162  159             java.util.regex.Pattern::matches (16 bytes)
 total in heap  [0x0000000110e0f710,0x0000000110e11378] = 7272
 relocation     [0x0000000110e0f888,0x0000000110e0f910] = 136
 constants      [0x0000000110e0f920,0x0000000110e0f940] = 32
 main code      [0x0000000110e0f940,0x0000000110e104a0] = 2912
 stub code      [0x0000000110e104a0,0x0000000110e104e8] = 72
 metadata       [0x0000000110e104e8,0x0000000110e10558] = 112
 scopes data    [0x0000000110e10558,0x0000000110e108a0] = 840
 scopes pcs     [0x0000000110e108a0,0x0000000110e11270] = 2512
 dependencies   [0x0000000110e11270,0x0000000110e11278] = 8
 handler table  [0x0000000110e11278,0x0000000110e11350] = 216
 nul chk table  [0x0000000110e11350,0x0000000110e11378] = 40
----------------------------------------------------------------------
java/util/regex/Pattern.matches(Ljava/lang/String;Ljava/lang/CharSequence;)Z  [0x0000000110e0f940, 0x0000000110e104e8]  2984 bytes
[Constants]
  0x0000000110e0f920 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e0f924 (offset:    4): 0xffffffff
  0x0000000110e0f928 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0f92c (offset:   12): 0xf4f4f4f4
  0x0000000110e0f930 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0f934 (offset:   20): 0xf4f4f4f4
  0x0000000110e0f938 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e0f93c (offset:   28): 0xf4f4f4f4
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011f19daa0} 'matches' '(Ljava/lang/String;Ljava/lang/CharSequence;)Z' in 'java/util/regex/Pattern'
  # parm0:    rsi:rsi   = 'java/lang/String'
  # parm1:    rdx:rdx   = 'java/lang/CharSequence'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e0f940: mov    %eax,-0x14000(%rsp)  ;   {no_reloc}
  0x0000000110e0f947: push   %rbp
  0x0000000110e0f948: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::matches@-1 (line 1173)

  0x0000000110e0f94c: mov    %rsi,%rbp
  0x0000000110e0f94f: mov    %rdx,(%rsp)
  0x0000000110e0f953: mov    0x118(%r15),%rax
  0x0000000110e0f95a: mov    %rax,%r10
  0x0000000110e0f95d: add    $0x58,%r10
  0x0000000110e0f961: cmp    0x128(%r15),%r10
  0x0000000110e0f968: jae    0x0000000110e102a0  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0f96e: mov    %r10,0x118(%r15)
  0x0000000110e0f975: prefetchnta 0xc0(%r10)
  0x0000000110e0f97d: mov    $0x66ca8,%r10d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0f983: movabs $0x800000000,%r12
  0x0000000110e0f98d: add    %r12,%r10
  0x0000000110e0f990: xor    %r12,%r12
  0x0000000110e0f993: mov    0xb8(%r10),%r10
  0x0000000110e0f99a: mov    %r10,(%rax)
  0x0000000110e0f99d: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e0f9a4: movl   $0x0,0xc(%rax)
  0x0000000110e0f9ab: movq   $0x0,0x10(%rax)
  0x0000000110e0f9b3: movq   $0x0,0x18(%rax)
  0x0000000110e0f9bb: movq   $0x0,0x20(%rax)
  0x0000000110e0f9c3: movl   $0x0,0x28(%rax)
  0x0000000110e0f9ca: movq   $0x0,0x30(%rax)
  0x0000000110e0f9d2: movq   $0x0,0x38(%rax)
  0x0000000110e0f9da: movq   $0x0,0x40(%rax)
  0x0000000110e0f9e2: movq   $0x0,0x48(%rax)
  0x0000000110e0f9ea: movq   $0x0,0x50(%rax)
  0x0000000110e0f9f2: mov    %rbp,%r10
  0x0000000110e0f9f5: shr    $0x3,%r10
  0x0000000110e0f9f9: mov    %r10d,0x2c(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0f9fd: mov    %rax,0x8(%rsp)
  0x0000000110e0fa02: mov    %rbp,%r10
  0x0000000110e0fa05: mov    %rax,%r11
  0x0000000110e0fa08: xor    %r11,%r10
  0x0000000110e0fa0b: shr    $0x14,%r10
  0x0000000110e0fa0f: test   %r10,%r10
  0x0000000110e0fa12: je     0x0000000110e0fac4
  0x0000000110e0fa18: test   %rbp,%rbp
  0x0000000110e0fa1b: je     0x0000000110e10356
  0x0000000110e0fa21: shr    $0x9,%r11
  0x0000000110e0fa25: movabs $0x110569000,%rdi
  0x0000000110e0fa2f: add    %r11,%rdi
  0x0000000110e0fa32: cmpb   $0x20,(%rdi)
  0x0000000110e0fa35: je     0x0000000110e0fabb
  0x0000000110e0fa3b: mov    0x70(%r15),%r10
  0x0000000110e0fa3f: mov    0x80(%r15),%r11
  0x0000000110e0fa46: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0fa4c: cmpb   $0x0,(%rdi)
  0x0000000110e0fa4f: je     0x0000000110e0fa78
  0x0000000110e0fa51: movb   $0x0,(%rdi)
  0x0000000110e0fa54: test   %r10,%r10
  0x0000000110e0fa57: je     0x0000000110e0fa68
  0x0000000110e0fa59: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e0fa5e: add    $0xfffffffffffffff8,%r10
  0x0000000110e0fa62: mov    %r10,0x70(%r15)
  0x0000000110e0fa66: jmp    0x0000000110e0fa78
  0x0000000110e0fa68: mov    %r15,%rsi
  0x0000000110e0fa6b: movabs $0x107aec8ce,%r10
  0x0000000110e0fa75: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fa78: mov    0x8(%rsp),%r10
  0x0000000110e0fa7d: movl   $0x0,0x1c(%r10)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fa85: mov    0x2c(%r10),%r11d   ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fa89: movl   $0x0,0xc(%r10)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fa91: movl   $0x1,0x18(%r10)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fa99: movl   $0x0,0x10(%r10)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0faa1: movl   $0x0,0x14(%r10)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0faa9: test   %r11d,%r11d
  0x0000000110e0faac: je     0x0000000110e1035d  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fab2: mov    %r11,%rbp
  0x0000000110e0fab5: shl    $0x3,%rbp          ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fab9: jmp    0x0000000110e0fad4
  0x0000000110e0fabb: movl   $0x1,0x18(%rax)
  0x0000000110e0fac2: jmp    0x0000000110e0fad4
  0x0000000110e0fac4: movl   $0x1,0x18(%rax)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0facb: test   %rbp,%rbp
  0x0000000110e0face: je     0x0000000110e1035d  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fad4: mov    0xc(%rbp),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fad8: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ; implicit exception: dispatches to 0x0000000110e103f2
  0x0000000110e0fadd: test   %ebp,%ebp
  0x0000000110e0fadf: jbe    0x0000000110e103c2  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fae5: mov    0x8(%rsp),%rsi
  0x0000000110e0faea: mov    %rsi,%rbp
  0x0000000110e0faed: xchg   %ax,%ax
  0x0000000110e0faef: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {optimized virtual_call}
  0x0000000110e0faf4: movzbl 0x28(%rbp),%ebp    ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0faf8: test   %ebp,%ebp
  0x0000000110e0fafa: je     0x0000000110e103ce
  0x0000000110e0fb00: mov    0x118(%r15),%rax
  0x0000000110e0fb07: mov    %rax,%r10
  0x0000000110e0fb0a: add    $0x48,%r10
  0x0000000110e0fb0e: cmp    0x128(%r15),%r10
  0x0000000110e0fb15: jae    0x0000000110e102b5  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fb1b: mov    %r10,0x118(%r15)
  0x0000000110e0fb22: prefetchnta 0xc0(%r10)
  0x0000000110e0fb2a: mov    $0x6aaa8,%r10d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0fb30: movabs $0x800000000,%r12
  0x0000000110e0fb3a: add    %r12,%r10
  0x0000000110e0fb3d: xor    %r12,%r12
  0x0000000110e0fb40: mov    0xb8(%r10),%r10
  0x0000000110e0fb47: mov    %r10,(%rax)
  0x0000000110e0fb4a: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e0fb51: movl   $0x0,0xc(%rax)
  0x0000000110e0fb58: movq   $0x0,0x10(%rax)
  0x0000000110e0fb60: movq   $0x0,0x28(%rax)
  0x0000000110e0fb68: movq   $0x0,0x38(%rax)
  0x0000000110e0fb70: movq   $0x0,0x40(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fb78: mov    0x8(%rsp),%r10
  0x0000000110e0fb7d: shr    $0x3,%r10
  0x0000000110e0fb81: movabs $0xffffffff00000000,%r11
  0x0000000110e0fb8b: mov    %r11,0x18(%rax)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fb8f: mov    %r11,0x20(%rax)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fb93: movl   $0x1000000,0x30(%rax)  ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fb9a: mov    %r10d,0x34(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fb9e: mov    %rax,0x10(%rsp)
  0x0000000110e0fba3: mov    0x8(%rsp),%r10
  0x0000000110e0fba8: mov    %rax,%r11
  0x0000000110e0fbab: xor    %r11,%r10
  0x0000000110e0fbae: shr    $0x14,%r10
  0x0000000110e0fbb2: test   %r10,%r10
  0x0000000110e0fbb5: je     0x0000000110e0fc0a
  0x0000000110e0fbb7: shr    $0x9,%r11
  0x0000000110e0fbbb: movabs $0x110569000,%rdi
  0x0000000110e0fbc5: add    %r11,%rdi
  0x0000000110e0fbc8: cmpb   $0x20,(%rdi)
  0x0000000110e0fbcb: je     0x0000000110e0fc0a
  0x0000000110e0fbcd: mov    0x70(%r15),%r10
  0x0000000110e0fbd1: mov    0x80(%r15),%r11
  0x0000000110e0fbd8: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0fbde: cmpb   $0x0,(%rdi)
  0x0000000110e0fbe1: je     0x0000000110e0fc0a
  0x0000000110e0fbe3: movb   $0x0,(%rdi)
  0x0000000110e0fbe6: test   %r10,%r10
  0x0000000110e0fbe9: jne    0x0000000110e0fbfd  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fbeb: mov    %r15,%rsi
  0x0000000110e0fbee: movabs $0x107aec8ce,%r10
  0x0000000110e0fbf8: callq  *%r10
  0x0000000110e0fbfb: jmp    0x0000000110e0fc0a
  0x0000000110e0fbfd: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fc02: add    $0xfffffffffffffff8,%r10
  0x0000000110e0fc06: mov    %r10,0x70(%r15)
  0x0000000110e0fc0a: cmpb   $0x0,0x30(%r15)
  0x0000000110e0fc0f: jne    0x0000000110e101b0
  0x0000000110e0fc15: mov    0x10(%rsp),%r10
  0x0000000110e0fc1a: mov    (%rsp),%r8
  0x0000000110e0fc1e: mov    %r8,%r11
  0x0000000110e0fc21: shr    $0x3,%r11
  0x0000000110e0fc25: mov    0x10(%rsp),%r9
  0x0000000110e0fc2a: mov    %r11d,0x3c(%r9)
  0x0000000110e0fc2e: mov    %r8,%r11
  0x0000000110e0fc31: xor    %r10,%r11
  0x0000000110e0fc34: shr    $0x14,%r11
  0x0000000110e0fc38: test   %r11,%r11
  0x0000000110e0fc3b: je     0x0000000110e0fc95
  0x0000000110e0fc3d: test   %r8,%r8
  0x0000000110e0fc40: je     0x0000000110e0fc95
  0x0000000110e0fc42: shr    $0x9,%r10
  0x0000000110e0fc46: movabs $0x110569000,%rdi
  0x0000000110e0fc50: add    %r10,%rdi
  0x0000000110e0fc53: cmpb   $0x20,(%rdi)
  0x0000000110e0fc56: je     0x0000000110e0fc95
  0x0000000110e0fc58: mov    0x70(%r15),%r10
  0x0000000110e0fc5c: mov    0x80(%r15),%r11
  0x0000000110e0fc63: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0fc69: cmpb   $0x0,(%rdi)
  0x0000000110e0fc6c: je     0x0000000110e0fc95
  0x0000000110e0fc6e: movb   $0x0,(%rdi)
  0x0000000110e0fc71: test   %r10,%r10
  0x0000000110e0fc74: jne    0x0000000110e0fc88  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fc76: mov    %r15,%rsi
  0x0000000110e0fc79: movabs $0x107aec8ce,%r10
  0x0000000110e0fc83: callq  *%r10
  0x0000000110e0fc86: jmp    0x0000000110e0fc95
  0x0000000110e0fc88: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fc8d: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fc91: mov    %r10,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fc95: mov    0x8(%rsp),%r10
  0x0000000110e0fc9a: mov    0x18(%r10),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fc9e: mov    $0xa,%r10d
  0x0000000110e0fca4: cmp    $0xa,%edx
  0x0000000110e0fca7: cmovl  %r10d,%edx
  0x0000000110e0fcab: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fcad: cmp    $0x40000,%edx
  0x0000000110e0fcb3: ja     0x0000000110e10330
  0x0000000110e0fcb9: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fcbc: cmp    $0x40000,%edx
  0x0000000110e0fcc2: ja     0x0000000110e1030c  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fcc8: mov    0x118(%r15),%rbx
  0x0000000110e0fccf: shl    $0x2,%rcx
  0x0000000110e0fcd3: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fcd7: mov    %rcx,%r10
  0x0000000110e0fcda: and    $0xfffffffffffffff8,%r10
  0x0000000110e0fcde: mov    %rbx,%r11
  0x0000000110e0fce1: add    %r10,%r11
  0x0000000110e0fce4: cmp    0x128(%r15),%r11
  0x0000000110e0fceb: jae    0x0000000110e1030c
  0x0000000110e0fcf1: mov    %r11,0x118(%r15)
  0x0000000110e0fcf8: prefetchnta 0xc0(%r11)
  0x0000000110e0fd00: movq   $0x1,(%rbx)
  0x0000000110e0fd07: prefetchnta 0x100(%r11)
  0x0000000110e0fd0f: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0fd16: mov    %edx,0xc(%rbx)
  0x0000000110e0fd19: prefetchnta 0x140(%r11)
  0x0000000110e0fd21: mov    %rbx,%rdi
  0x0000000110e0fd24: add    $0x10,%rdi
  0x0000000110e0fd28: prefetchnta 0x180(%r11)
  0x0000000110e0fd30: shr    $0x3,%rcx
  0x0000000110e0fd34: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0fd38: xor    %rax,%rax
  0x0000000110e0fd3b: cmp    $0x8,%rcx
  0x0000000110e0fd3f: jg     0x0000000110e0fd51
  0x0000000110e0fd41: dec    %rcx
  0x0000000110e0fd44: js     0x0000000110e0fd58
  0x0000000110e0fd46: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0fd4a: dec    %rcx
  0x0000000110e0fd4d: jge    0x0000000110e0fd46
  0x0000000110e0fd4f: jmp    0x0000000110e0fd58
  0x0000000110e0fd51: shl    $0x3,%rcx
  0x0000000110e0fd55: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0fd58: cmpb   $0x0,0x30(%r15)
  0x0000000110e0fd5d: jne    0x0000000110e101ec
  0x0000000110e0fd63: mov    0x10(%rsp),%r10
  0x0000000110e0fd68: mov    %rbx,%r8
  0x0000000110e0fd6b: shr    $0x3,%r8
  0x0000000110e0fd6f: mov    0x10(%rsp),%r11
  0x0000000110e0fd74: mov    %r8d,0x38(%r11)
  0x0000000110e0fd78: mov    %rbx,%r11
  0x0000000110e0fd7b: xor    %r10,%r11
  0x0000000110e0fd7e: shr    $0x14,%r11
  0x0000000110e0fd82: test   %r11,%r11
  0x0000000110e0fd85: je     0x0000000110e0fdda
  0x0000000110e0fd87: shr    $0x9,%r10
  0x0000000110e0fd8b: movabs $0x110569000,%rdi
  0x0000000110e0fd95: add    %r10,%rdi
  0x0000000110e0fd98: cmpb   $0x20,(%rdi)
  0x0000000110e0fd9b: je     0x0000000110e0fdda
  0x0000000110e0fd9d: mov    0x70(%r15),%r10
  0x0000000110e0fda1: mov    0x80(%r15),%r11
  0x0000000110e0fda8: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0fdae: cmpb   $0x0,(%rdi)
  0x0000000110e0fdb1: je     0x0000000110e0fdda
  0x0000000110e0fdb3: movb   $0x0,(%rdi)
  0x0000000110e0fdb6: test   %r10,%r10
  0x0000000110e0fdb9: jne    0x0000000110e0fdcd  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fdbb: mov    %r15,%rsi
  0x0000000110e0fdbe: movabs $0x107aec8ce,%r10
  0x0000000110e0fdc8: callq  *%r10
  0x0000000110e0fdcb: jmp    0x0000000110e0fdda
  0x0000000110e0fdcd: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fdd2: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fdd6: mov    %r10,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fdda: mov    0x8(%rsp),%r10
  0x0000000110e0fddf: mov    0x1c(%r10),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fde3: cmp    $0x40000,%edx
  0x0000000110e0fde9: ja     0x0000000110e10328
  0x0000000110e0fdef: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fdf2: cmp    $0x40000,%edx
  0x0000000110e0fdf8: ja     0x0000000110e102f0  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0fdfe: mov    0x118(%r15),%rbx
  0x0000000110e0fe05: shl    $0x2,%rcx
  0x0000000110e0fe09: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0fe0d: mov    %rcx,%r10
  0x0000000110e0fe10: and    $0xfffffffffffffff8,%r10
  0x0000000110e0fe14: mov    %rbx,%r11
  0x0000000110e0fe17: add    %r10,%r11
  0x0000000110e0fe1a: cmp    0x128(%r15),%r11
  0x0000000110e0fe21: jae    0x0000000110e102f0
  0x0000000110e0fe27: mov    %r11,0x118(%r15)
  0x0000000110e0fe2e: prefetchnta 0xc0(%r11)
  0x0000000110e0fe36: movq   $0x1,(%rbx)
  0x0000000110e0fe3d: prefetchnta 0x100(%r11)
  0x0000000110e0fe45: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e0fe4c: mov    %edx,0xc(%rbx)
  0x0000000110e0fe4f: prefetchnta 0x140(%r11)
  0x0000000110e0fe57: mov    %rbx,%rdi
  0x0000000110e0fe5a: add    $0x10,%rdi
  0x0000000110e0fe5e: prefetchnta 0x180(%r11)
  0x0000000110e0fe66: shr    $0x3,%rcx
  0x0000000110e0fe6a: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0fe6e: xor    %rax,%rax
  0x0000000110e0fe71: cmp    $0x8,%rcx
  0x0000000110e0fe75: jg     0x0000000110e0fe87
  0x0000000110e0fe77: dec    %rcx
  0x0000000110e0fe7a: js     0x0000000110e0fe8e
  0x0000000110e0fe7c: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0fe80: dec    %rcx
  0x0000000110e0fe83: jge    0x0000000110e0fe7c
  0x0000000110e0fe85: jmp    0x0000000110e0fe8e
  0x0000000110e0fe87: shl    $0x3,%rcx
  0x0000000110e0fe8b: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0fe8e: cmpb   $0x0,0x30(%r15)
  0x0000000110e0fe93: jne    0x0000000110e10264
  0x0000000110e0fe99: mov    %rbx,%r10
  0x0000000110e0fe9c: shr    $0x3,%r10
  0x0000000110e0fea0: mov    0x10(%rsp),%r11
  0x0000000110e0fea5: mov    %r10d,0x40(%r11)
  0x0000000110e0fea9: mov    %r11,%r10
  0x0000000110e0feac: mov    %rbx,%r11
  0x0000000110e0feaf: xor    %r10,%r11
  0x0000000110e0feb2: shr    $0x14,%r11
  0x0000000110e0feb6: test   %r11,%r11
  0x0000000110e0feb9: je     0x0000000110e0ff0e
  0x0000000110e0febb: shr    $0x9,%r10
  0x0000000110e0febf: movabs $0x110569000,%rdi
  0x0000000110e0fec9: add    %r10,%rdi
  0x0000000110e0fecc: cmpb   $0x20,(%rdi)
  0x0000000110e0fecf: je     0x0000000110e0ff0e
  0x0000000110e0fed1: mov    0x80(%r15),%r10
  0x0000000110e0fed8: mov    0x70(%r15),%r11
  0x0000000110e0fedc: lock addl $0x0,-0x40(%rsp)
  0x0000000110e0fee2: cmpb   $0x0,(%rdi)
  0x0000000110e0fee5: je     0x0000000110e0ff0e
  0x0000000110e0fee7: movb   $0x0,(%rdi)
  0x0000000110e0feea: test   %r11,%r11
  0x0000000110e0feed: jne    0x0000000110e0ff01  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0feef: mov    %r15,%rsi
  0x0000000110e0fef2: movabs $0x107aec8ce,%r10
  0x0000000110e0fefc: callq  *%r10
  0x0000000110e0feff: jmp    0x0000000110e0ff0e
  0x0000000110e0ff01: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0ff06: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0ff0a: mov    %r11,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0ff0e: mov    0x8(%rsp),%r10
  0x0000000110e0ff13: mov    0x14(%r10),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0ff17: cmp    $0x40000,%edx
  0x0000000110e0ff1d: ja     0x0000000110e10338
  0x0000000110e0ff23: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0ff26: cmp    $0x40000,%edx
  0x0000000110e0ff2c: ja     0x0000000110e102d1  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e0ff32: mov    0x118(%r15),%rbx
  0x0000000110e0ff39: shl    $0x2,%rcx
  0x0000000110e0ff3d: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e0ff41: mov    %rcx,%r10
  0x0000000110e0ff44: and    $0xfffffffffffffff8,%r10
  0x0000000110e0ff48: mov    %rbx,%r11
  0x0000000110e0ff4b: add    %r10,%r11
  0x0000000110e0ff4e: cmp    0x128(%r15),%r11
  0x0000000110e0ff55: jae    0x0000000110e102d1
  0x0000000110e0ff5b: mov    %r11,0x118(%r15)
  0x0000000110e0ff62: prefetchnta 0xc0(%r11)
  0x0000000110e0ff6a: movq   $0x1,(%rbx)
  0x0000000110e0ff71: prefetchnta 0x100(%r11)
  0x0000000110e0ff79: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e0ff80: mov    %edx,0xc(%rbx)
  0x0000000110e0ff83: prefetchnta 0x140(%r11)
  0x0000000110e0ff8b: mov    %rbx,%rdi
  0x0000000110e0ff8e: add    $0x10,%rdi
  0x0000000110e0ff92: prefetchnta 0x180(%r11)
  0x0000000110e0ff9a: shr    $0x3,%rcx
  0x0000000110e0ff9e: add    $0xfffffffffffffffe,%rcx
  0x0000000110e0ffa2: xor    %rax,%rax
  0x0000000110e0ffa5: cmp    $0x8,%rcx
  0x0000000110e0ffa9: jg     0x0000000110e0ffbb
  0x0000000110e0ffab: dec    %rcx
  0x0000000110e0ffae: js     0x0000000110e0ffc2
  0x0000000110e0ffb0: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0ffb4: dec    %rcx
  0x0000000110e0ffb7: jge    0x0000000110e0ffb0
  0x0000000110e0ffb9: jmp    0x0000000110e0ffc2
  0x0000000110e0ffbb: shl    $0x3,%rcx
  0x0000000110e0ffbf: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0ffc2: cmpb   $0x0,0x30(%r15)
  0x0000000110e0ffc7: jne    0x0000000110e10228
  0x0000000110e0ffcd: mov    0x10(%rsp),%r10
  0x0000000110e0ffd2: mov    %rbx,%r8
  0x0000000110e0ffd5: shr    $0x3,%r8
  0x0000000110e0ffd9: mov    0x10(%rsp),%r11
  0x0000000110e0ffde: mov    %r8d,0x44(%r11)
  0x0000000110e0ffe2: mov    %rbx,%r11
  0x0000000110e0ffe5: xor    %r10,%r11
  0x0000000110e0ffe8: shr    $0x14,%r11
  0x0000000110e0ffec: test   %r11,%r11
  0x0000000110e0ffef: je     0x0000000110e1004d
  0x0000000110e0fff1: shr    $0x9,%r10
  0x0000000110e0fff5: movabs $0x110569000,%rdi
  0x0000000110e0ffff: add    %r10,%rdi
  0x0000000110e10002: cmpb   $0x20,(%rdi)
  0x0000000110e10005: je     0x0000000110e1004d
  0x0000000110e10007: mov    0x70(%r15),%r10    ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1000b: mov    0x80(%r15),%r11
  0x0000000110e10012: lock addl $0x0,-0x40(%rsp)
  0x0000000110e10018: cmpb   $0x0,(%rdi)
  0x0000000110e1001b: je     0x0000000110e10044
  0x0000000110e1001d: movb   $0x0,(%rdi)
  0x0000000110e10020: test   %r10,%r10
  0x0000000110e10023: je     0x0000000110e10034
  0x0000000110e10025: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1002a: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1002e: mov    %r10,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10032: jmp    0x0000000110e10044  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10034: mov    %r15,%rsi
  0x0000000110e10037: movabs $0x107aec8ce,%r10
  0x0000000110e10041: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10044: mov    0x10(%rsp),%r10
  0x0000000110e10049: mov    0x44(%r10),%r8d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1004d: mov    0x10(%rsp),%r10
  0x0000000110e10052: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1005a: mov    0x38(%r10),%r10d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1005e: mov    0x10(%rsp),%r11
  0x0000000110e10063: movl   $0xffffffff,0x1c(%r11)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1006b: movl   $0x0,0x20(%r11)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10073: mov    0xc(%r12,%r10,8),%ebx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; implicit exception: dispatches to 0x0000000110e10402
  0x0000000110e10078: test   %ebx,%ebx
  0x0000000110e1007a: jbe    0x0000000110e1012e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10080: mov    %ebx,%r9d
  0x0000000110e10083: dec    %r9d
  0x0000000110e10086: cmp    %ebx,%r9d
  0x0000000110e10089: jae    0x0000000110e10340
  0x0000000110e1008f: lea    (%r12,%r10,8),%rcx
  0x0000000110e10093: mov    %ecx,%r11d
  0x0000000110e10096: shr    $0x2,%r11d
  0x0000000110e1009a: and    $0x3,%r11d
  0x0000000110e1009e: mov    $0xffffffff,%r10d
  0x0000000110e100a4: sub    %r11d,%r10d
  0x0000000110e100a7: and    $0x3,%r10d
  0x0000000110e100ab: inc    %r10d
  0x0000000110e100ae: cmp    %ebx,%r10d
  0x0000000110e100b1: cmovg  %ebx,%r10d
  0x0000000110e100b5: xor    %esi,%esi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e100b7: movl   $0xffffffff,0x10(%rcx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e100bf: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e100c1: cmp    %r10d,%esi
  0x0000000110e100c4: jl     0x0000000110e100b7  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e100c6: mov    %ebx,%edi
  0x0000000110e100c8: add    $0xfffffffd,%edi
  0x0000000110e100cb: cmp    %edi,%esi
  0x0000000110e100cd: jge    0x0000000110e1011c
  0x0000000110e100cf: vmovq  -0x7b7(%rip),%xmm0        # 0x0000000110e0f920
                                                ;   {section_word}
  0x0000000110e100d7: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e100db: mov    $0xfa0,%edx
  0x0000000110e100e0: mov    %ebx,%r11d
  0x0000000110e100e3: sub    %esi,%r11d
  0x0000000110e100e6: add    $0xfffffffd,%r11d
  0x0000000110e100ea: cmp    %r11d,%edx
  0x0000000110e100ed: mov    $0xfa0,%r9d
  0x0000000110e100f3: cmovg  %r11d,%r9d
  0x0000000110e100f7: add    %esi,%r9d
  0x0000000110e100fa: nopw   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10100: vmovdqu %xmm0,0x10(%rcx,%rsi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10106: add    $0x4,%esi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10109: cmp    %r9d,%esi
  0x0000000110e1010c: jl     0x0000000110e10100  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1010e: mov    0x108(%r15),%r9    ; ImmutableOopMap{r8=NarrowOop rcx=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10115: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {poll}
  0x0000000110e10118: cmp    %edi,%esi
  0x0000000110e1011a: jl     0x0000000110e100e0
  0x0000000110e1011c: cmp    %ebx,%esi
  0x0000000110e1011e: jge    0x0000000110e1012e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10120: movl   $0xffffffff,0x10(%rcx,%rsi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10128: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1012a: cmp    %ebx,%esi
  0x0000000110e1012c: jl     0x0000000110e10120  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1012e: mov    0x10(%rsp),%r10
  0x0000000110e10133: mov    0x40(%r10),%r10d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10137: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; implicit exception: dispatches to 0x0000000110e10412
  0x0000000110e1013c: test   %ebp,%ebp
  0x0000000110e1013e: ja     0x0000000110e103da  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10144: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ; implicit exception: dispatches to 0x0000000110e1041e
  0x0000000110e10149: test   %ebp,%ebp
  0x0000000110e1014b: ja     0x0000000110e103e6  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10151: mov    0x10(%rsp),%r10
  0x0000000110e10156: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@100 (line 414)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1015e: mov    0x3c(%r10),%r11d
  0x0000000110e10162: movl   $0x0,0xc(%r10)     ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1016a: mov    %r11,%rsi
  0x0000000110e1016d: shl    $0x3,%rsi
  0x0000000110e10171: movabs $0xffffffffffffffff,%rax
  0x0000000110e1017b: callq  0x0000000110d90180  ; ImmutableOopMap{[16]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {virtual_call}
  0x0000000110e10180: mov    0x10(%rsp),%r10
  0x0000000110e10185: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10189: incl   0x2c(%r10)         ;*synchronization entry
                                                ; - java.util.regex.Matcher::matches@-1 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)

  0x0000000110e1018d: mov    0xc(%r10),%edx     ;*getfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@2 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)

  0x0000000110e10191: mov    $0x1,%ecx
  0x0000000110e10196: mov    0x10(%rsp),%rsi
  0x0000000110e1019b: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)
                                                ;   {optimized virtual_call}
  0x0000000110e101a0: add    $0x30,%rsp
  0x0000000110e101a4: pop    %rbp
  0x0000000110e101a5: mov    0x108(%r15),%r10
  0x0000000110e101ac: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e101af: retq   
  0x0000000110e101b0: mov    0x10(%rsp),%r10
  0x0000000110e101b5: mov    0x3c(%r10),%r11d
  0x0000000110e101b9: test   %r11d,%r11d
  0x0000000110e101bc: je     0x0000000110e0fc15
  0x0000000110e101c2: mov    0x38(%r15),%r10
  0x0000000110e101c6: mov    %r11,%rdi
  0x0000000110e101c9: shl    $0x3,%rdi
  0x0000000110e101cd: test   %r10,%r10
  0x0000000110e101d0: je     0x0000000110e10383  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e101d6: mov    0x48(%r15),%r11
  0x0000000110e101da: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e101df: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e101e3: mov    %r10,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e101e7: jmpq   0x0000000110e0fc15
  0x0000000110e101ec: mov    0x10(%rsp),%r10
  0x0000000110e101f1: mov    0x38(%r10),%r10d
  0x0000000110e101f5: test   %r10d,%r10d
  0x0000000110e101f8: je     0x0000000110e0fd63
  0x0000000110e101fe: mov    0x38(%r15),%r11
  0x0000000110e10202: mov    %r10,%rdi
  0x0000000110e10205: shl    $0x3,%rdi
  0x0000000110e10209: test   %r11,%r11
  0x0000000110e1020c: je     0x0000000110e103ad  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10212: mov    0x48(%r15),%r10
  0x0000000110e10216: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1021b: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1021f: mov    %r11,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10223: jmpq   0x0000000110e0fd63
  0x0000000110e10228: mov    0x10(%rsp),%r10
  0x0000000110e1022d: mov    0x44(%r10),%r10d
  0x0000000110e10231: test   %r10d,%r10d
  0x0000000110e10234: je     0x0000000110e0ffcd
  0x0000000110e1023a: mov    0x38(%r15),%r11
  0x0000000110e1023e: mov    %r10,%rdi
  0x0000000110e10241: shl    $0x3,%rdi
  0x0000000110e10245: test   %r11,%r11
  0x0000000110e10248: je     0x0000000110e10398  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1024e: mov    0x48(%r15),%r10
  0x0000000110e10252: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10257: add    $0xfffffffffffffff8,%r11  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1025b: mov    %r11,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1025f: jmpq   0x0000000110e0ffcd
  0x0000000110e10264: mov    0x10(%rsp),%r10
  0x0000000110e10269: mov    0x40(%r10),%r11d
  0x0000000110e1026d: test   %r11d,%r11d
  0x0000000110e10270: je     0x0000000110e0fe99
  0x0000000110e10276: mov    0x38(%r15),%r10
  0x0000000110e1027a: mov    %r11,%rdi
  0x0000000110e1027d: shl    $0x3,%rdi
  0x0000000110e10281: test   %r10,%r10
  0x0000000110e10284: je     0x0000000110e1036e  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1028a: mov    0x48(%r15),%r11
  0x0000000110e1028e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10293: add    $0xfffffffffffffff8,%r10  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10297: mov    %r10,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1029b: jmpq   0x0000000110e0fe99
  0x0000000110e102a0: movabs $0x800066ca8,%rsi  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e102aa: nop
  0x0000000110e102ab: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e102b0: jmpq   0x0000000110e0f9f2
  0x0000000110e102b5: movabs $0x80006aaa8,%rsi  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e102bf: mov    0x8(%rsp),%rbp
  0x0000000110e102c4: data16 xchg %ax,%ax
  0x0000000110e102c7: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e102cc: jmpq   0x0000000110e0fb78  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e102d1: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e102db: mov    0x10(%rsp),%rbp
  0x0000000110e102e0: data16 xchg %ax,%ax
  0x0000000110e102e3: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e102e8: mov    %rax,%rbx
  0x0000000110e102eb: jmpq   0x0000000110e0ffc2  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e102f0: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e102fa: mov    0x10(%rsp),%rbp
  0x0000000110e102ff: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e10304: mov    %rax,%rbx
  0x0000000110e10307: jmpq   0x0000000110e0fe8e  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1030c: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e10316: mov    0x10(%rsp),%rbp
  0x0000000110e1031b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e10320: mov    %rax,%rbx
  0x0000000110e10323: jmpq   0x0000000110e0fd58
  0x0000000110e10328: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1032b: jmpq   0x0000000110e0fdf2
  0x0000000110e10330: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10333: jmpq   0x0000000110e0fcbc
  0x0000000110e10338: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1033b: jmpq   0x0000000110e0ff26  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10340: mov    $0xffffff7e,%esi
  0x0000000110e10345: mov    %r11,(%rsp)
  0x0000000110e10349: mov    %ebx,0x8(%rsp)
  0x0000000110e1034d: xchg   %ax,%ax
  0x0000000110e1034f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e10354: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10356: movl   $0x1,0x18(%rax)
  0x0000000110e1035d: mov    $0xfffffff6,%esi
  0x0000000110e10362: mov    (%rsp),%rbp
  0x0000000110e10366: nop
  0x0000000110e10367: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1036c: ud2                       ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1036e: mov    %r15,%rsi
  0x0000000110e10371: movabs $0x107aec8aa,%r10
  0x0000000110e1037b: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1037e: jmpq   0x0000000110e0fe99  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10383: mov    %r15,%rsi
  0x0000000110e10386: movabs $0x107aec8aa,%r10
  0x0000000110e10390: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10393: jmpq   0x0000000110e0fc15  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10398: mov    %r15,%rsi
  0x0000000110e1039b: movabs $0x107aec8aa,%r10
  0x0000000110e103a5: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e103a8: jmpq   0x0000000110e0ffcd  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e103ad: mov    %r15,%rsi
  0x0000000110e103b0: movabs $0x107aec8aa,%r10
  0x0000000110e103ba: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e103bd: jmpq   0x0000000110e0fd63  ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e103c2: mov    $0xffffff4d,%esi
  0x0000000110e103c7: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e103cc: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e103ce: mov    $0xffffff4d,%esi
  0x0000000110e103d3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e103d8: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e103da: mov    $0xffffff4d,%esi
  0x0000000110e103df: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e103e4: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e103e6: mov    $0xffffff4d,%esi
  0x0000000110e103eb: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e103f0: ud2    
  0x0000000110e103f2: mov    $0xfffffff6,%esi
  0x0000000110e103f7: mov    (%rsp),%rbp
  0x0000000110e103fb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e10400: ud2    
  0x0000000110e10402: mov    $0xfffffff6,%esi
  0x0000000110e10407: mov    %r11,%rbp
  0x0000000110e1040a: nop
  0x0000000110e1040b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e10410: ud2    
  0x0000000110e10412: mov    $0xfffffff6,%esi
  0x0000000110e10417: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1041c: ud2    
  0x0000000110e1041e: mov    $0xfffffff6,%esi
  0x0000000110e10423: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e10428: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1042a: mov    %rax,%rsi
  0x0000000110e1042d: jmp    0x0000000110e10487  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1042f: mov    %rax,%rsi
  0x0000000110e10432: jmp    0x0000000110e10487  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10434: jmp    0x0000000110e1047f  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10436: jmp    0x0000000110e1047f  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e10438: jmp    0x0000000110e1047f
  0x0000000110e1043a: mov    0x8(%rax),%r11d
  0x0000000110e1043e: cmp    $0x5728,%r11d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e10445: jne    0x0000000110e1047a  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10447: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e10451: mov    %rbp,%rsi
  0x0000000110e10454: mov    (%rsp),%rbp
  0x0000000110e10458: data16 xchg %ax,%ax
  0x0000000110e1045b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {optimized virtual_call}
  0x0000000110e10460: mov    $0xffffffec,%esi
  0x0000000110e10465: rex.W pushq 0x8(%rsp)
  0x0000000110e1046a: rex.W popq (%rsp)
  0x0000000110e1046e: mov    %rax,0x8(%rsp)
  0x0000000110e10473: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e10478: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e1047a: mov    %rax,%rsi
  0x0000000110e1047d: jmp    0x0000000110e10487  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)

  0x0000000110e1047f: mov    %rax,%rsi
  0x0000000110e10482: jmp    0x0000000110e10487  ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ; - java.util.regex.Pattern::matches@12 (line 1175)

  0x0000000110e10484: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ; - java.util.regex.Pattern::matches@1 (line 1173)

  0x0000000110e10487: add    $0x30,%rsp
  0x0000000110e1048b: pop    %rbp
  0x0000000110e1048c: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; - java.util.regex.Pattern::matches@7 (line 1174)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e10491: hlt    
  0x0000000110e10492: hlt    
  0x0000000110e10493: hlt    
  0x0000000110e10494: hlt    
  0x0000000110e10495: hlt    
  0x0000000110e10496: hlt    
  0x0000000110e10497: hlt    
  0x0000000110e10498: hlt    
  0x0000000110e10499: hlt    
  0x0000000110e1049a: hlt    
  0x0000000110e1049b: hlt    
  0x0000000110e1049c: hlt    
  0x0000000110e1049d: hlt    
  0x0000000110e1049e: hlt    
  0x0000000110e1049f: hlt    
[Stub Code]
  0x0000000110e104a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e104aa: jmpq   0x0000000110e104aa  ;   {runtime_call}
  0x0000000110e104af: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e104b9: jmpq   0x0000000110e104b9  ;   {runtime_call}
  0x0000000110e104be: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e104c8: jmpq   0x0000000110e104c8  ;   {runtime_call}
[Exception Handler]
  0x0000000110e104cd: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e104d2: callq  0x0000000110e104d7
  0x0000000110e104d7: subq   $0x5,(%rsp)
  0x0000000110e104dc: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e104e1: hlt    
  0x0000000110e104e2: hlt    
  0x0000000110e104e3: hlt    
  0x0000000110e104e4: hlt    
  0x0000000110e104e5: hlt    
  0x0000000110e104e6: hlt    
  0x0000000110e104e7: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 436 
ImmutableOopMap{r8=NarrowOop rcx=Oop [16]=Oop }pc offsets: 2005 
ImmutableOopMap{[16]=Oop }pc offsets: 2112 
ImmutableOopMap{}pc offsets: 2144 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 2416 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2444 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2472 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2500 2528 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 2580 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2604 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 2700 2712 
ImmutableOopMap{[16]=Oop }pc offsets: 2724 2736 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2752 
ImmutableOopMap{rbp=Oop }pc offsets: 2768 
ImmutableOopMap{[16]=Oop }pc offsets: 2780 2792 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 2848 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2872 Compiled method (c2)    1227  160             java.util.regex.Pattern::compile (10 bytes)
 total in heap  [0x0000000110e11390,0x0000000110e11b30] = 1952
 relocation     [0x0000000110e11508,0x0000000110e11548] = 64
 main code      [0x0000000110e11560,0x0000000110e117a0] = 576
 stub code      [0x0000000110e117a0,0x0000000110e117d8] = 56
 metadata       [0x0000000110e117d8,0x0000000110e11800] = 40
 scopes data    [0x0000000110e11800,0x0000000110e118d0] = 208
 scopes pcs     [0x0000000110e118d0,0x0000000110e11ad0] = 512
 dependencies   [0x0000000110e11ad0,0x0000000110e11ad8] = 8
 handler table  [0x0000000110e11ad8,0x0000000110e11b20] = 72
 nul chk table  [0x0000000110e11b20,0x0000000110e11b30] = 16
----------------------------------------------------------------------
java/util/regex/Pattern.compile(Ljava/lang/String;)Ljava/util/regex/Pattern;  [0x0000000110e11560, 0x0000000110e117d8]  632 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f19d608} 'compile' '(Ljava/lang/String;)Ljava/util/regex/Pattern;' in 'java/util/regex/Pattern'
  # parm0:    rsi:rsi   = 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e11560: mov    %eax,-0x14000(%rsp)
  0x0000000110e11567: push   %rbp
  0x0000000110e11568: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::compile@-1 (line 1068)

  0x0000000110e1156c: mov    %rsi,%rbp
  0x0000000110e1156f: mov    0x118(%r15),%rax
  0x0000000110e11576: mov    %rax,%r10
  0x0000000110e11579: add    $0x58,%r10
  0x0000000110e1157d: cmp    0x128(%r15),%r10
  0x0000000110e11584: jae    0x0000000110e1170f  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e1158a: mov    %r10,0x118(%r15)
  0x0000000110e11591: prefetchnta 0xc0(%r10)
  0x0000000110e11599: mov    $0x66ca8,%r11d     ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e1159f: movabs $0x800000000,%r10
  0x0000000110e115a9: add    %r11,%r10
  0x0000000110e115ac: mov    0xb8(%r10),%r10
  0x0000000110e115b3: mov    %r10,(%rax)
  0x0000000110e115b6: movl   $0x66ca8,0x8(%rax)  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e115bd: movl   $0x0,0xc(%rax)
  0x0000000110e115c4: movq   $0x0,0x10(%rax)
  0x0000000110e115cc: movq   $0x0,0x18(%rax)
  0x0000000110e115d4: movq   $0x0,0x20(%rax)
  0x0000000110e115dc: movl   $0x0,0x28(%rax)
  0x0000000110e115e3: movq   $0x0,0x30(%rax)
  0x0000000110e115eb: movq   $0x0,0x38(%rax)
  0x0000000110e115f3: movq   $0x0,0x40(%rax)
  0x0000000110e115fb: movq   $0x0,0x48(%rax)
  0x0000000110e11603: movq   $0x0,0x50(%rax)
  0x0000000110e1160b: mov    %rbp,%r11
  0x0000000110e1160e: shr    $0x3,%r11
  0x0000000110e11612: mov    %r11d,0x2c(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)

  0x0000000110e11616: mov    %rax,(%rsp)
  0x0000000110e1161a: mov    %rbp,%r10
  0x0000000110e1161d: mov    %rax,%r11
  0x0000000110e11620: xor    %r11,%r10
  0x0000000110e11623: shr    $0x14,%r10
  0x0000000110e11627: test   %r10,%r10
  0x0000000110e1162a: je     0x0000000110e116d7
  0x0000000110e11630: test   %rbp,%rbp
  0x0000000110e11633: je     0x0000000110e11725
  0x0000000110e11639: shr    $0x9,%r11
  0x0000000110e1163d: movabs $0x110569000,%rdi
  0x0000000110e11647: add    %r11,%rdi
  0x0000000110e1164a: cmpb   $0x20,(%rdi)
  0x0000000110e1164d: je     0x0000000110e116ce
  0x0000000110e1164f: mov    0x70(%r15),%r10
  0x0000000110e11653: mov    0x80(%r15),%r11
  0x0000000110e1165a: lock addl $0x0,-0x40(%rsp)
  0x0000000110e11660: cmpb   $0x0,(%rdi)
  0x0000000110e11663: je     0x0000000110e1168c
  0x0000000110e11665: movb   $0x0,(%rdi)
  0x0000000110e11668: test   %r10,%r10
  0x0000000110e1166b: je     0x0000000110e1167c
  0x0000000110e1166d: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e11672: add    $0xfffffffffffffff8,%r10
  0x0000000110e11676: mov    %r10,0x70(%r15)
  0x0000000110e1167a: jmp    0x0000000110e1168c
  0x0000000110e1167c: mov    %r15,%rsi
  0x0000000110e1167f: movabs $0x107aec8ce,%r10
  0x0000000110e11689: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e1168c: mov    (%rsp),%r10
  0x0000000110e11690: movl   $0x0,0x1c(%r10)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e11698: mov    0x2c(%r10),%r10d   ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e1169c: mov    (%rsp),%r11
  0x0000000110e116a0: movl   $0x0,0xc(%r11)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116a8: movl   $0x1,0x18(%r11)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116b0: movl   $0x0,0x10(%r11)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116b8: movl   $0x0,0x14(%r11)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116c0: test   %r10d,%r10d
  0x0000000110e116c3: je     0x0000000110e1172c  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116c5: mov    %r10,%rbp
  0x0000000110e116c8: shl    $0x3,%rbp          ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116cc: jmp    0x0000000110e116e3
  0x0000000110e116ce: movl   $0x1,0x18(%rax)
  0x0000000110e116d5: jmp    0x0000000110e116e3
  0x0000000110e116d7: movl   $0x1,0x18(%rax)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116de: test   %rbp,%rbp
  0x0000000110e116e1: je     0x0000000110e1172c  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116e3: mov    0xc(%rbp),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116e7: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ; implicit exception: dispatches to 0x0000000110e1174a
  0x0000000110e116ec: test   %ebp,%ebp
  0x0000000110e116ee: jbe    0x0000000110e1173e  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e116f0: mov    (%rsp),%rsi
  0x0000000110e116f4: mov    %rsi,%rbp
  0x0000000110e116f7: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {optimized virtual_call}
  0x0000000110e116fc: mov    %rbp,%rax
  0x0000000110e116ff: add    $0x20,%rsp
  0x0000000110e11703: pop    %rbp
  0x0000000110e11704: mov    0x108(%r15),%r10
  0x0000000110e1170b: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1170e: retq   
  0x0000000110e1170f: movabs $0x800066ca8,%rsi  ;   {metadata('java/util/regex/Pattern')}
  0x0000000110e11719: xchg   %ax,%ax
  0x0000000110e1171b: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e11720: jmpq   0x0000000110e1160b
  0x0000000110e11725: movl   $0x1,0x18(%rax)
  0x0000000110e1172c: mov    $0xfffffff6,%esi
  0x0000000110e11731: mov    (%rsp),%rbp
  0x0000000110e11735: xchg   %ax,%ax
  0x0000000110e11737: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1173c: ud2                       ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e1173e: mov    $0xffffff4d,%esi
  0x0000000110e11743: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11748: ud2    
  0x0000000110e1174a: mov    $0xfffffff6,%esi
  0x0000000110e1174f: mov    (%rsp),%rbp
  0x0000000110e11753: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11758: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)

  0x0000000110e1175a: mov    %rax,%rsi
  0x0000000110e1175d: jmp    0x0000000110e11795
  0x0000000110e1175f: mov    0x8(%rax),%r10d
  0x0000000110e11763: cmp    $0x5728,%r10d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e1176a: jne    0x0000000110e11792  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e1176c: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e11776: mov    %rbp,%rsi
  0x0000000110e11779: xchg   %ax,%ax
  0x0000000110e1177b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {optimized virtual_call}
  0x0000000110e11780: mov    $0xffffffec,%esi
  0x0000000110e11785: mov    %rax,(%rsp)
  0x0000000110e11789: xchg   %ax,%ax
  0x0000000110e1178b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11790: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)

  0x0000000110e11792: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::compile@0 (line 1068)

  0x0000000110e11795: add    $0x20,%rsp
  0x0000000110e11799: pop    %rbp
  0x0000000110e1179a: jmpq   0x0000000110dc8700  ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)
                                                ; - java.util.regex.Pattern::compile@6 (line 1068)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1179f: hlt    
[Stub Code]
  0x0000000110e117a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e117aa: jmpq   0x0000000110e117aa  ;   {runtime_call}
  0x0000000110e117af: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e117b9: jmpq   0x0000000110e117b9  ;   {runtime_call}
[Exception Handler]
  0x0000000110e117be: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e117c3: callq  0x0000000110e117c8
  0x0000000110e117c8: subq   $0x5,(%rsp)
  0x0000000110e117cd: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e117d2: hlt    
  0x0000000110e117d3: hlt    
  0x0000000110e117d4: hlt    
  0x0000000110e117d5: hlt    
  0x0000000110e117d6: hlt    
  0x0000000110e117d7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 412 448 476 
ImmutableOopMap{[0]=Oop }pc offsets: 488 
ImmutableOopMap{rbp=Oop }pc offsets: 504 544 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 560 Compiled method (c2)    1239  161   !         java.util.regex.Pattern::<init> (144 bytes)
 total in heap  [0x0000000110e11b90,0x0000000110e12330] = 1952
 relocation     [0x0000000110e11d08,0x0000000110e11d40] = 56
 main code      [0x0000000110e11d40,0x0000000110e11f80] = 576
 stub code      [0x0000000110e11f80,0x0000000110e11fb8] = 56
 metadata       [0x0000000110e11fb8,0x0000000110e11fd0] = 24
 scopes data    [0x0000000110e11fd0,0x0000000110e120c0] = 240
 scopes pcs     [0x0000000110e120c0,0x0000000110e122e0] = 544
 dependencies   [0x0000000110e122e0,0x0000000110e122e8] = 8
 handler table  [0x0000000110e122e8,0x0000000110e12318] = 48
 nul chk table  [0x0000000110e12318,0x0000000110e12330] = 24
----------------------------------------------------------------------
java/util/regex/Pattern.<init>(Ljava/lang/String;I)V  [0x0000000110e11d40, 0x0000000110e11fb8]  632 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f19e198} '<init>' '(Ljava/lang/String;I)V' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e11d40: mov    0x8(%rsi),%r10d
  0x0000000110e11d44: movabs $0x800000000,%r12
  0x0000000110e11d4e: add    %r12,%r10
  0x0000000110e11d51: xor    %r12,%r12
  0x0000000110e11d54: cmp    %r10,%rax
  0x0000000110e11d57: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e11d5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e11d60: mov    %eax,-0x14000(%rsp)
  0x0000000110e11d67: push   %rbp
  0x0000000110e11d68: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::<init>@-1 (line 1406)

  0x0000000110e11d6c: mov    %rdx,%r13
  0x0000000110e11d6f: mov    %rsi,(%rsp)
  0x0000000110e11d73: mov    %ecx,%ebx
  0x0000000110e11d75: mov    %ecx,%r10d
  0x0000000110e11d78: and    $0xfffffe00,%r10d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@8 (line 1407)

  0x0000000110e11d7f: test   %r10d,%r10d
  0x0000000110e11d82: jne    0x0000000110e11ebc
  0x0000000110e11d88: cmpb   $0x0,0x30(%r15)
  0x0000000110e11d8d: jne    0x0000000110e11e74
  0x0000000110e11d93: mov    (%rsp),%r10
  0x0000000110e11d97: mov    %r13,%r8
  0x0000000110e11d9a: shr    $0x3,%r8
  0x0000000110e11d9e: mov    (%rsp),%r11
  0x0000000110e11da2: mov    %r8d,0x2c(%r11)
  0x0000000110e11da6: mov    %r13,%r11
  0x0000000110e11da9: xor    %r10,%r11
  0x0000000110e11dac: shr    $0x14,%r11
  0x0000000110e11db0: test   %r11,%r11
  0x0000000110e11db3: je     0x0000000110e11e15
  0x0000000110e11db5: test   %r13,%r13
  0x0000000110e11db8: je     0x0000000110e11e15
  0x0000000110e11dba: shr    $0x9,%r10
  0x0000000110e11dbe: movabs $0x110569000,%rdi
  0x0000000110e11dc8: add    %r10,%rdi
  0x0000000110e11dcb: cmpb   $0x20,(%rdi)
  0x0000000110e11dce: je     0x0000000110e11e15
  0x0000000110e11dd0: mov    0x70(%r15),%r10
  0x0000000110e11dd4: mov    0x80(%r15),%r11
  0x0000000110e11ddb: lock addl $0x0,-0x40(%rsp)
  0x0000000110e11de1: cmpb   $0x0,(%rdi)
  0x0000000110e11de4: je     0x0000000110e11e0d
  0x0000000110e11de6: movb   $0x0,(%rdi)
  0x0000000110e11de9: test   %r10,%r10
  0x0000000110e11dec: je     0x0000000110e11dfd
  0x0000000110e11dee: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e11df3: add    $0xfffffffffffffff8,%r10
  0x0000000110e11df7: mov    %r10,0x70(%r15)
  0x0000000110e11dfb: jmp    0x0000000110e11e0d
  0x0000000110e11dfd: mov    %r15,%rsi
  0x0000000110e11e00: movabs $0x107aec8ce,%r10
  0x0000000110e11e0a: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)

  0x0000000110e11e0d: mov    (%rsp),%r10
  0x0000000110e11e11: mov    0x2c(%r10),%r8d    ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)

  0x0000000110e11e15: mov    (%rsp),%r10
  0x0000000110e11e19: mov    %ebx,0xc(%r10)     ;*putfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@49 (line 1412)

  0x0000000110e11e1d: mov    %ebx,%ebp
  0x0000000110e11e1f: and    $0x100,%ebp        ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@59 (line 1415)

  0x0000000110e11e25: test   %ebp,%ebp
  0x0000000110e11e27: jne    0x0000000110e11eda  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@60 (line 1415)

  0x0000000110e11e2d: mov    %ebx,0x10(%r10)    ;*putfield flags0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@79 (line 1419)

  0x0000000110e11e31: movl   $0x0,0x14(%r10)    ;*putfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@94 (line 1424)

  0x0000000110e11e39: movl   $0x0,0x1c(%r10)    ;*putfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@89 (line 1423)

  0x0000000110e11e41: movl   $0x1,0x18(%r10)    ;*putfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@84 (line 1422)

  0x0000000110e11e49: mov    0xc(%r12,%r8,8),%r11d  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; implicit exception: dispatches to 0x0000000110e11ef2
  0x0000000110e11e4e: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ; implicit exception: dispatches to 0x0000000110e11f02
  0x0000000110e11e53: test   %ebp,%ebp
  0x0000000110e11e55: jbe    0x0000000110e11ee6  ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)

  0x0000000110e11e5b: mov    %r10,%rsi
  0x0000000110e11e5e: nop
  0x0000000110e11e5f: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)
                                                ;   {optimized virtual_call}
  0x0000000110e11e64: add    $0x20,%rsp
  0x0000000110e11e68: pop    %rbp
  0x0000000110e11e69: mov    0x108(%r15),%r10
  0x0000000110e11e70: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e11e73: retq   
  0x0000000110e11e74: mov    0x2c(%rsi),%r10d
  0x0000000110e11e78: test   %r10d,%r10d
  0x0000000110e11e7b: je     0x0000000110e11d93
  0x0000000110e11e81: mov    0x38(%r15),%r11
  0x0000000110e11e85: mov    %r10,%rdi
  0x0000000110e11e88: shl    $0x3,%rdi
  0x0000000110e11e8c: test   %r11,%r11
  0x0000000110e11e8f: je     0x0000000110e11ea7
  0x0000000110e11e91: mov    0x48(%r15),%r10
  0x0000000110e11e95: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e11e9a: add    $0xfffffffffffffff8,%r11
  0x0000000110e11e9e: mov    %r11,0x38(%r15)
  0x0000000110e11ea2: jmpq   0x0000000110e11d93
  0x0000000110e11ea7: mov    %r15,%rsi
  0x0000000110e11eaa: movabs $0x107aec8aa,%r10
  0x0000000110e11eb4: callq  *%r10              ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)

  0x0000000110e11eb7: jmpq   0x0000000110e11d93
  0x0000000110e11ebc: mov    $0xffffff4d,%esi
  0x0000000110e11ec1: mov    (%rsp),%rbp
  0x0000000110e11ec5: mov    %rdx,(%rsp)
  0x0000000110e11ec9: mov    %ecx,0x8(%rsp)
  0x0000000110e11ecd: mov    %r10d,0xc(%rsp)
  0x0000000110e11ed2: nop
  0x0000000110e11ed3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@9 (line 1407)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11ed8: ud2                       ;*putfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@44 (line 1411)

  0x0000000110e11eda: mov    $0xffffff4d,%esi
  0x0000000110e11edf: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@60 (line 1415)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11ee4: ud2                       ;*synchronization entry
                                                ; - java.lang.String::isEmpty@-1 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)

  0x0000000110e11ee6: mov    $0xffffff4d,%esi
  0x0000000110e11eeb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@5 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11ef0: ud2    
  0x0000000110e11ef2: mov    $0xfffffff6,%esi
  0x0000000110e11ef7: mov    %r10,%rbp
  0x0000000110e11efa: nop
  0x0000000110e11efb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11f00: ud2    
  0x0000000110e11f02: mov    $0xfffffff6,%esi
  0x0000000110e11f07: mov    %r10,%rbp
  0x0000000110e11f0a: nop
  0x0000000110e11f0b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isEmpty@4 (line 670)
                                                ; - java.util.regex.Pattern::<init>@101 (line 1426)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11f10: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)

  0x0000000110e11f12: mov    %rax,%rsi
  0x0000000110e11f15: jmp    0x0000000110e11f4d
  0x0000000110e11f17: mov    0x8(%rax),%r11d
  0x0000000110e11f1b: cmp    $0x5728,%r11d      ;   {metadata('java/lang/StackOverflowError')}
  0x0000000110e11f22: jne    0x0000000110e11f4a  ;*invokevirtual compile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@108 (line 1428)

  0x0000000110e11f24: movabs $0x70fc0b3a8,%rdx  ;   {oop("Stack overflow during pattern compilation"{0x000000070fc0b3a8})}
  0x0000000110e11f2e: mov    (%rsp),%rsi
  0x0000000110e11f32: nop
  0x0000000110e11f33: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)
                                                ;   {optimized virtual_call}
  0x0000000110e11f38: test   %rax,%rax
  0x0000000110e11f3b: jne    0x0000000110e11f57  ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)

  0x0000000110e11f3d: mov    $0xfffffff6,%esi
  0x0000000110e11f42: nop
  0x0000000110e11f43: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11f48: ud2                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)

  0x0000000110e11f4a: mov    %rax,%rsi          ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@118 (line 1430)

  0x0000000110e11f4d: add    $0x20,%rsp
  0x0000000110e11f51: pop    %rbp
  0x0000000110e11f52: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e11f57: mov    $0xffffffec,%esi
  0x0000000110e11f5c: mov    %rax,%rbp
  0x0000000110e11f5f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@121 (line 1430)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e11f64: ud2                       ;*getfield pattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::<init>@98 (line 1426)

  0x0000000110e11f66: hlt    
  0x0000000110e11f67: hlt    
  0x0000000110e11f68: hlt    
  0x0000000110e11f69: hlt    
  0x0000000110e11f6a: hlt    
  0x0000000110e11f6b: hlt    
  0x0000000110e11f6c: hlt    
  0x0000000110e11f6d: hlt    
  0x0000000110e11f6e: hlt    
  0x0000000110e11f6f: hlt    
  0x0000000110e11f70: hlt    
  0x0000000110e11f71: hlt    
  0x0000000110e11f72: hlt    
  0x0000000110e11f73: hlt    
  0x0000000110e11f74: hlt    
  0x0000000110e11f75: hlt    
  0x0000000110e11f76: hlt    
  0x0000000110e11f77: hlt    
  0x0000000110e11f78: hlt    
  0x0000000110e11f79: hlt    
  0x0000000110e11f7a: hlt    
  0x0000000110e11f7b: hlt    
  0x0000000110e11f7c: hlt    
  0x0000000110e11f7d: hlt    
  0x0000000110e11f7e: hlt    
  0x0000000110e11f7f: hlt    
[Stub Code]
  0x0000000110e11f80: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e11f8a: jmpq   0x0000000110e11f8a  ;   {runtime_call}
  0x0000000110e11f8f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e11f99: jmpq   0x0000000110e11f99  ;   {runtime_call}
[Exception Handler]
  0x0000000110e11f9e: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e11fa3: callq  0x0000000110e11fa8
  0x0000000110e11fa8: subq   $0x5,(%rsp)
  0x0000000110e11fad: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e11fb2: hlt    
  0x0000000110e11fb3: hlt    
  0x0000000110e11fb4: hlt    
  0x0000000110e11fb5: hlt    
  0x0000000110e11fb6: hlt    
  0x0000000110e11fb7: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 292 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 408 
ImmutableOopMap{[0]=Oop }pc offsets: 420 432 
ImmutableOopMap{rbp=Oop }pc offsets: 448 464 
ImmutableOopMap{}pc offsets: 504 520 
ImmutableOopMap{rbp=Oop }pc offsets: 548 Compiled method (c2)    1261  162   !         java.util.regex.Pattern::matcher (44 bytes)
 total in heap  [0x0000000110e12390,0x0000000110e13958] = 5576
 relocation     [0x0000000110e12508,0x0000000110e12550] = 72
 constants      [0x0000000110e12560,0x0000000110e12580] = 32
 main code      [0x0000000110e12580,0x0000000110e12ec0] = 2368
 stub code      [0x0000000110e12ec0,0x0000000110e12ed8] = 24
 metadata       [0x0000000110e12ed8,0x0000000110e12f10] = 56
 scopes data    [0x0000000110e12f10,0x0000000110e13108] = 504
 scopes pcs     [0x0000000110e13108,0x0000000110e138b8] = 1968
 dependencies   [0x0000000110e138b8,0x0000000110e138c0] = 8
 handler table  [0x0000000110e138c0,0x0000000110e13938] = 120
 nul chk table  [0x0000000110e13938,0x0000000110e13958] = 32
----------------------------------------------------------------------
java/util/regex/Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;  [0x0000000110e12580, 0x0000000110e12ed8]  2392 bytes
[Constants]
  0x0000000110e12560 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e12564 (offset:    4): 0xffffffff
  0x0000000110e12568 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e1256c (offset:   12): 0xf4f4f4f4
  0x0000000110e12570 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e12574 (offset:   20): 0xf4f4f4f4
  0x0000000110e12578 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e1257c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f19d918} 'matcher' '(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;' in 'java/util/regex/Pattern'
  # this:     rsi:rsi   = 'java/util/regex/Pattern'
  # parm0:    rdx:rdx   = 'java/lang/CharSequence'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e12580: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110e12584: movabs $0x800000000,%r12
  0x0000000110e1258e: add    %r12,%r10
  0x0000000110e12591: xor    %r12,%r12
  0x0000000110e12594: cmp    %r10,%rax
  0x0000000110e12597: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1259d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e125a0: mov    %eax,-0x14000(%rsp)
  0x0000000110e125a7: push   %rbp
  0x0000000110e125a8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern::matcher@-1 (line 1127)

  0x0000000110e125ac: mov    %rdx,(%rsp)
  0x0000000110e125b0: mov    %rsi,0x8(%rsp)
  0x0000000110e125b5: movzbl 0x28(%rsi),%ebp    ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)

  0x0000000110e125b9: test   %ebp,%ebp
  0x0000000110e125bb: je     0x0000000110e12e46
  0x0000000110e125c1: mov    0x118(%r15),%rax
  0x0000000110e125c8: mov    %rax,%r10
  0x0000000110e125cb: add    $0x48,%r10
  0x0000000110e125cf: cmp    0x128(%r15),%r10
  0x0000000110e125d6: jae    0x0000000110e12d56  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e125dc: mov    %r10,0x118(%r15)
  0x0000000110e125e3: prefetchnta 0xc0(%r10)
  0x0000000110e125eb: mov    $0x6aaa8,%r10d     ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e125f1: movabs $0x800000000,%r12
  0x0000000110e125fb: add    %r12,%r10
  0x0000000110e125fe: xor    %r12,%r12
  0x0000000110e12601: mov    0xb8(%r10),%r10
  0x0000000110e12608: mov    %r10,(%rax)
  0x0000000110e1260b: movl   $0x6aaa8,0x8(%rax)  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e12612: movl   $0x0,0xc(%rax)
  0x0000000110e12619: movq   $0x0,0x10(%rax)
  0x0000000110e12621: movq   $0x0,0x28(%rax)
  0x0000000110e12629: movq   $0x0,0x38(%rax)
  0x0000000110e12631: movq   $0x0,0x40(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)

  0x0000000110e12639: mov    0x8(%rsp),%r10
  0x0000000110e1263e: shr    $0x3,%r10
  0x0000000110e12642: movabs $0xffffffff00000000,%r11
  0x0000000110e1264c: mov    %r11,0x18(%rax)    ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12650: mov    %r11,0x20(%rax)    ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12654: movl   $0x1000000,0x30(%rax)  ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1265b: mov    %r10d,0x34(%rax)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)

  0x0000000110e1265f: mov    %rax,0x10(%rsp)
  0x0000000110e12664: mov    0x8(%rsp),%r10
  0x0000000110e12669: mov    %rax,%r11
  0x0000000110e1266c: xor    %r11,%r10
  0x0000000110e1266f: shr    $0x14,%r10
  0x0000000110e12673: test   %r10,%r10
  0x0000000110e12676: je     0x0000000110e126cb
  0x0000000110e12678: shr    $0x9,%r11
  0x0000000110e1267c: movabs $0x110569000,%rdi
  0x0000000110e12686: add    %r11,%rdi
  0x0000000110e12689: cmpb   $0x20,(%rdi)
  0x0000000110e1268c: je     0x0000000110e126cb
  0x0000000110e1268e: mov    0x70(%r15),%r10
  0x0000000110e12692: mov    0x80(%r15),%r11
  0x0000000110e12699: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1269f: cmpb   $0x0,(%rdi)
  0x0000000110e126a2: je     0x0000000110e126cb
  0x0000000110e126a4: movb   $0x0,(%rdi)
  0x0000000110e126a7: test   %r10,%r10
  0x0000000110e126aa: jne    0x0000000110e126be
  0x0000000110e126ac: mov    %r15,%rsi
  0x0000000110e126af: movabs $0x107aec8ce,%r10
  0x0000000110e126b9: callq  *%r10
  0x0000000110e126bc: jmp    0x0000000110e126cb
  0x0000000110e126be: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e126c3: add    $0xfffffffffffffff8,%r10
  0x0000000110e126c7: mov    %r10,0x70(%r15)
  0x0000000110e126cb: cmpb   $0x0,0x30(%r15)
  0x0000000110e126d0: jne    0x0000000110e12ca2
  0x0000000110e126d6: mov    0x10(%rsp),%r10
  0x0000000110e126db: mov    (%rsp),%r8
  0x0000000110e126df: mov    %r8,%r11
  0x0000000110e126e2: shr    $0x3,%r11
  0x0000000110e126e6: mov    0x10(%rsp),%r9
  0x0000000110e126eb: mov    %r11d,0x3c(%r9)
  0x0000000110e126ef: mov    %r8,%r11
  0x0000000110e126f2: xor    %r10,%r11
  0x0000000110e126f5: shr    $0x14,%r11
  0x0000000110e126f9: test   %r11,%r11
  0x0000000110e126fc: je     0x0000000110e12756
  0x0000000110e126fe: test   %r8,%r8
  0x0000000110e12701: je     0x0000000110e12756
  0x0000000110e12703: shr    $0x9,%r10
  0x0000000110e12707: movabs $0x110569000,%rdi
  0x0000000110e12711: add    %r10,%rdi
  0x0000000110e12714: cmpb   $0x20,(%rdi)
  0x0000000110e12717: je     0x0000000110e12756
  0x0000000110e12719: mov    0x70(%r15),%r10
  0x0000000110e1271d: mov    0x80(%r15),%r11
  0x0000000110e12724: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1272a: cmpb   $0x0,(%rdi)
  0x0000000110e1272d: je     0x0000000110e12756
  0x0000000110e1272f: movb   $0x0,(%rdi)
  0x0000000110e12732: test   %r10,%r10
  0x0000000110e12735: jne    0x0000000110e12749  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12737: mov    %r15,%rsi
  0x0000000110e1273a: movabs $0x107aec8ce,%r10
  0x0000000110e12744: callq  *%r10
  0x0000000110e12747: jmp    0x0000000110e12756
  0x0000000110e12749: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1274e: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12752: mov    %r10,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12756: mov    0x8(%rsp),%r10
  0x0000000110e1275b: mov    0x18(%r10),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1275f: mov    $0xa,%r10d
  0x0000000110e12765: cmp    $0xa,%edx
  0x0000000110e12768: cmovl  %r10d,%edx
  0x0000000110e1276c: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1276e: cmp    $0x40000,%edx
  0x0000000110e12774: ja     0x0000000110e12dc8
  0x0000000110e1277a: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1277d: cmp    $0x40000,%edx
  0x0000000110e12783: ja     0x0000000110e12dac  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12789: mov    0x118(%r15),%rbx
  0x0000000110e12790: shl    $0x2,%rcx
  0x0000000110e12794: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12798: mov    %rcx,%r10
  0x0000000110e1279b: and    $0xfffffffffffffff8,%r10
  0x0000000110e1279f: mov    %rbx,%r11
  0x0000000110e127a2: add    %r10,%r11
  0x0000000110e127a5: cmp    0x128(%r15),%r11
  0x0000000110e127ac: jae    0x0000000110e12dac
  0x0000000110e127b2: mov    %r11,0x118(%r15)
  0x0000000110e127b9: prefetchnta 0xc0(%r11)
  0x0000000110e127c1: movq   $0x1,(%rbx)
  0x0000000110e127c8: prefetchnta 0x100(%r11)
  0x0000000110e127d0: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e127d7: mov    %edx,0xc(%rbx)
  0x0000000110e127da: prefetchnta 0x140(%r11)
  0x0000000110e127e2: mov    %rbx,%rdi
  0x0000000110e127e5: add    $0x10,%rdi
  0x0000000110e127e9: prefetchnta 0x180(%r11)
  0x0000000110e127f1: shr    $0x3,%rcx
  0x0000000110e127f5: add    $0xfffffffffffffffe,%rcx
  0x0000000110e127f9: xor    %rax,%rax
  0x0000000110e127fc: cmp    $0x8,%rcx
  0x0000000110e12800: jg     0x0000000110e12812
  0x0000000110e12802: dec    %rcx
  0x0000000110e12805: js     0x0000000110e12819
  0x0000000110e12807: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1280b: dec    %rcx
  0x0000000110e1280e: jge    0x0000000110e12807
  0x0000000110e12810: jmp    0x0000000110e12819
  0x0000000110e12812: shl    $0x3,%rcx
  0x0000000110e12816: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e12819: cmpb   $0x0,0x30(%r15)
  0x0000000110e1281e: jne    0x0000000110e12d1a
  0x0000000110e12824: mov    0x10(%rsp),%r10
  0x0000000110e12829: mov    %rbx,%r8
  0x0000000110e1282c: shr    $0x3,%r8
  0x0000000110e12830: mov    0x10(%rsp),%r11
  0x0000000110e12835: mov    %r8d,0x38(%r11)
  0x0000000110e12839: mov    %rbx,%r11
  0x0000000110e1283c: xor    %r10,%r11
  0x0000000110e1283f: shr    $0x14,%r11
  0x0000000110e12843: test   %r11,%r11
  0x0000000110e12846: je     0x0000000110e1289b
  0x0000000110e12848: shr    $0x9,%r10
  0x0000000110e1284c: movabs $0x110569000,%rdi
  0x0000000110e12856: add    %r10,%rdi
  0x0000000110e12859: cmpb   $0x20,(%rdi)
  0x0000000110e1285c: je     0x0000000110e1289b
  0x0000000110e1285e: mov    0x70(%r15),%r10
  0x0000000110e12862: mov    0x80(%r15),%r11
  0x0000000110e12869: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1286f: cmpb   $0x0,(%rdi)
  0x0000000110e12872: je     0x0000000110e1289b
  0x0000000110e12874: movb   $0x0,(%rdi)
  0x0000000110e12877: test   %r10,%r10
  0x0000000110e1287a: jne    0x0000000110e1288e  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1287c: mov    %r15,%rsi
  0x0000000110e1287f: movabs $0x107aec8ce,%r10
  0x0000000110e12889: callq  *%r10
  0x0000000110e1288c: jmp    0x0000000110e1289b
  0x0000000110e1288e: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12893: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12897: mov    %r10,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e1289b: mov    0x8(%rsp),%r10
  0x0000000110e128a0: mov    0x1c(%r10),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e128a4: cmp    $0x40000,%edx
  0x0000000110e128aa: ja     0x0000000110e12dd8
  0x0000000110e128b0: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e128b3: cmp    $0x40000,%edx
  0x0000000110e128b9: ja     0x0000000110e12d90  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e128bf: mov    0x118(%r15),%rbx
  0x0000000110e128c6: shl    $0x2,%rcx
  0x0000000110e128ca: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e128ce: mov    %rcx,%r10
  0x0000000110e128d1: and    $0xfffffffffffffff8,%r10
  0x0000000110e128d5: mov    %rbx,%r11
  0x0000000110e128d8: add    %r10,%r11
  0x0000000110e128db: cmp    0x128(%r15),%r11
  0x0000000110e128e2: jae    0x0000000110e12d90
  0x0000000110e128e8: mov    %r11,0x118(%r15)
  0x0000000110e128ef: prefetchnta 0xc0(%r11)
  0x0000000110e128f7: movq   $0x1,(%rbx)
  0x0000000110e128fe: prefetchnta 0x100(%r11)
  0x0000000110e12906: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e1290d: mov    %edx,0xc(%rbx)
  0x0000000110e12910: prefetchnta 0x140(%r11)
  0x0000000110e12918: mov    %rbx,%rdi
  0x0000000110e1291b: add    $0x10,%rdi
  0x0000000110e1291f: prefetchnta 0x180(%r11)
  0x0000000110e12927: shr    $0x3,%rcx
  0x0000000110e1292b: add    $0xfffffffffffffffe,%rcx
  0x0000000110e1292f: xor    %rax,%rax
  0x0000000110e12932: cmp    $0x8,%rcx
  0x0000000110e12936: jg     0x0000000110e12948
  0x0000000110e12938: dec    %rcx
  0x0000000110e1293b: js     0x0000000110e1294f
  0x0000000110e1293d: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e12941: dec    %rcx
  0x0000000110e12944: jge    0x0000000110e1293d
  0x0000000110e12946: jmp    0x0000000110e1294f
  0x0000000110e12948: shl    $0x3,%rcx
  0x0000000110e1294c: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1294f: cmpb   $0x0,0x30(%r15)
  0x0000000110e12954: jne    0x0000000110e12cde
  0x0000000110e1295a: mov    0x10(%rsp),%r10
  0x0000000110e1295f: mov    %rbx,%r11
  0x0000000110e12962: shr    $0x3,%r11
  0x0000000110e12966: mov    0x10(%rsp),%r8
  0x0000000110e1296b: mov    %r11d,0x40(%r8)
  0x0000000110e1296f: mov    %rbx,%r11
  0x0000000110e12972: xor    %r10,%r11
  0x0000000110e12975: shr    $0x14,%r11
  0x0000000110e12979: test   %r11,%r11
  0x0000000110e1297c: je     0x0000000110e129d1
  0x0000000110e1297e: shr    $0x9,%r10
  0x0000000110e12982: movabs $0x110569000,%rdi
  0x0000000110e1298c: add    %r10,%rdi
  0x0000000110e1298f: cmpb   $0x20,(%rdi)
  0x0000000110e12992: je     0x0000000110e129d1
  0x0000000110e12994: mov    0x70(%r15),%r10
  0x0000000110e12998: mov    0x80(%r15),%r11
  0x0000000110e1299f: lock addl $0x0,-0x40(%rsp)
  0x0000000110e129a5: cmpb   $0x0,(%rdi)
  0x0000000110e129a8: je     0x0000000110e129d1
  0x0000000110e129aa: movb   $0x0,(%rdi)
  0x0000000110e129ad: test   %r10,%r10
  0x0000000110e129b0: jne    0x0000000110e129c4  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129b2: mov    %r15,%rsi
  0x0000000110e129b5: movabs $0x107aec8ce,%r10
  0x0000000110e129bf: callq  *%r10
  0x0000000110e129c2: jmp    0x0000000110e129d1
  0x0000000110e129c4: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129c9: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129cd: mov    %r10,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129d1: mov    0x8(%rsp),%r10
  0x0000000110e129d6: mov    0x14(%r10),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129da: cmp    $0x40000,%edx
  0x0000000110e129e0: ja     0x0000000110e12dd0
  0x0000000110e129e6: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129e9: cmp    $0x40000,%edx
  0x0000000110e129ef: ja     0x0000000110e12d71  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e129f5: mov    0x118(%r15),%rbx
  0x0000000110e129fc: shl    $0x2,%rcx
  0x0000000110e12a00: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12a04: mov    %rcx,%r10
  0x0000000110e12a07: and    $0xfffffffffffffff8,%r10
  0x0000000110e12a0b: mov    %rbx,%r11
  0x0000000110e12a0e: add    %r10,%r11
  0x0000000110e12a11: cmp    0x128(%r15),%r11
  0x0000000110e12a18: jae    0x0000000110e12d71
  0x0000000110e12a1e: mov    %r11,0x118(%r15)
  0x0000000110e12a25: prefetchnta 0xc0(%r11)
  0x0000000110e12a2d: movq   $0x1,(%rbx)
  0x0000000110e12a34: prefetchnta 0x100(%r11)
  0x0000000110e12a3c: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e12a43: mov    %edx,0xc(%rbx)
  0x0000000110e12a46: prefetchnta 0x140(%r11)
  0x0000000110e12a4e: mov    %rbx,%rdi
  0x0000000110e12a51: add    $0x10,%rdi
  0x0000000110e12a55: prefetchnta 0x180(%r11)
  0x0000000110e12a5d: shr    $0x3,%rcx
  0x0000000110e12a61: add    $0xfffffffffffffffe,%rcx
  0x0000000110e12a65: xor    %rax,%rax
  0x0000000110e12a68: cmp    $0x8,%rcx
  0x0000000110e12a6c: jg     0x0000000110e12a7e
  0x0000000110e12a6e: dec    %rcx
  0x0000000110e12a71: js     0x0000000110e12a85
  0x0000000110e12a73: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e12a77: dec    %rcx
  0x0000000110e12a7a: jge    0x0000000110e12a73
  0x0000000110e12a7c: jmp    0x0000000110e12a85
  0x0000000110e12a7e: shl    $0x3,%rcx
  0x0000000110e12a82: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e12a85: cmpb   $0x0,0x30(%r15)
  0x0000000110e12a8a: jne    0x0000000110e12c66
  0x0000000110e12a90: mov    0x10(%rsp),%r10
  0x0000000110e12a95: mov    %rbx,%r9
  0x0000000110e12a98: shr    $0x3,%r9
  0x0000000110e12a9c: mov    0x10(%rsp),%r11
  0x0000000110e12aa1: mov    %r9d,0x44(%r11)
  0x0000000110e12aa5: mov    %rbx,%r11
  0x0000000110e12aa8: xor    %r10,%r11
  0x0000000110e12aab: shr    $0x14,%r11
  0x0000000110e12aaf: test   %r11,%r11
  0x0000000110e12ab2: je     0x0000000110e12b10
  0x0000000110e12ab4: shr    $0x9,%r10
  0x0000000110e12ab8: movabs $0x110569000,%rdi
  0x0000000110e12ac2: add    %r10,%rdi
  0x0000000110e12ac5: cmpb   $0x20,(%rdi)
  0x0000000110e12ac8: je     0x0000000110e12b10
  0x0000000110e12aca: mov    0x70(%r15),%r10    ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12ace: mov    0x80(%r15),%r11
  0x0000000110e12ad5: lock addl $0x0,-0x40(%rsp)
  0x0000000110e12adb: cmpb   $0x0,(%rdi)
  0x0000000110e12ade: je     0x0000000110e12b07
  0x0000000110e12ae0: movb   $0x0,(%rdi)
  0x0000000110e12ae3: test   %r10,%r10
  0x0000000110e12ae6: je     0x0000000110e12af7
  0x0000000110e12ae8: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12aed: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12af1: mov    %r10,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12af5: jmp    0x0000000110e12b07  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12af7: mov    %r15,%rsi
  0x0000000110e12afa: movabs $0x107aec8ce,%r10
  0x0000000110e12b04: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b07: mov    0x10(%rsp),%r10
  0x0000000110e12b0c: mov    0x44(%r10),%r9d    ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b10: mov    0x10(%rsp),%r10
  0x0000000110e12b15: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b1d: mov    0x38(%r10),%r11d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b21: movl   $0xffffffff,0x1c(%r10)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b29: movl   $0x0,0x20(%r10)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b31: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; implicit exception: dispatches to 0x0000000110e12e6a
  0x0000000110e12b36: test   %ebp,%ebp
  0x0000000110e12b38: jbe    0x0000000110e12bf2  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b3e: mov    %ebp,%r8d
  0x0000000110e12b41: dec    %r8d
  0x0000000110e12b44: cmp    %ebp,%r8d
  0x0000000110e12b47: jae    0x0000000110e12de0
  0x0000000110e12b4d: lea    (%r12,%r11,8),%rbx
  0x0000000110e12b51: mov    %ebx,%r11d
  0x0000000110e12b54: shr    $0x2,%r11d
  0x0000000110e12b58: and    $0x3,%r11d
  0x0000000110e12b5c: xor    %edi,%edi
  0x0000000110e12b5e: mov    $0xffffffff,%ecx
  0x0000000110e12b63: sub    %r11d,%ecx
  0x0000000110e12b66: and    $0x3,%ecx
  0x0000000110e12b69: inc    %ecx
  0x0000000110e12b6b: cmp    %ebp,%ecx
  0x0000000110e12b6d: cmovg  %ebp,%ecx          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b70: movl   $0xffffffff,0x10(%rbx,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b78: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b7a: cmp    %ecx,%edi
  0x0000000110e12b7c: jl     0x0000000110e12b70  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12b7e: mov    %ebp,%r11d
  0x0000000110e12b81: add    $0xfffffffd,%r11d
  0x0000000110e12b85: mov    $0x80000000,%r10d
  0x0000000110e12b8b: cmp    %r11d,%r8d
  0x0000000110e12b8e: cmovl  %r10d,%r11d
  0x0000000110e12b92: cmp    %r11d,%edi
  0x0000000110e12b95: jge    0x0000000110e12bdd
  0x0000000110e12b97: vmovq  -0x63f(%rip),%xmm0        # 0x0000000110e12560
                                                ;   {section_word}
  0x0000000110e12b9f: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e12ba3: mov    $0xfa0,%edx
  0x0000000110e12ba8: mov    %r11d,%r10d
  0x0000000110e12bab: sub    %edi,%r10d
  0x0000000110e12bae: cmp    %edx,%r10d
  0x0000000110e12bb1: cmovg  %edx,%r10d
  0x0000000110e12bb5: add    %edi,%r10d
  0x0000000110e12bb8: nopl   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bc0: vmovdqu %xmm0,0x10(%rbx,%rdi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bc6: add    $0x4,%edi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bc9: cmp    %r10d,%edi
  0x0000000110e12bcc: jl     0x0000000110e12bc0  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bce: mov    0x108(%r15),%r14   ; ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bd5: test   %eax,(%r14)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {poll}
  0x0000000110e12bd8: cmp    %r11d,%edi
  0x0000000110e12bdb: jl     0x0000000110e12ba8
  0x0000000110e12bdd: cmp    %ebp,%edi
  0x0000000110e12bdf: jge    0x0000000110e12bf2
  0x0000000110e12be1: data16 xchg %ax,%ax       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12be4: movl   $0xffffffff,0x10(%rbx,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bec: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bee: cmp    %ebp,%edi
  0x0000000110e12bf0: jl     0x0000000110e12be4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bf2: mov    0x10(%rsp),%r10
  0x0000000110e12bf7: mov    0x40(%r10),%r10d   ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12bfb: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; implicit exception: dispatches to 0x0000000110e12e7a
  0x0000000110e12c00: test   %ebp,%ebp
  0x0000000110e12c02: ja     0x0000000110e12e52  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c08: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ; implicit exception: dispatches to 0x0000000110e12e86
  0x0000000110e12c0d: test   %ebp,%ebp
  0x0000000110e12c0f: ja     0x0000000110e12e5e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c15: mov    0x10(%rsp),%r10
  0x0000000110e12c1a: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@100 (line 414)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c22: mov    0x3c(%r10),%r11d
  0x0000000110e12c26: movl   $0x0,0xc(%r10)     ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c2e: mov    %r11,%rsi
  0x0000000110e12c31: shl    $0x3,%rsi
  0x0000000110e12c35: movabs $0xffffffffffffffff,%rax
  0x0000000110e12c3f: callq  0x0000000110d90180  ; ImmutableOopMap{[16]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {virtual_call}
  0x0000000110e12c44: mov    0x10(%rsp),%r10
  0x0000000110e12c49: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c4d: incl   0x2c(%r10)         ;*getfield compiled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@1 (line 1127)

  0x0000000110e12c51: mov    0x10(%rsp),%rax
  0x0000000110e12c56: add    $0x30,%rsp
  0x0000000110e12c5a: pop    %rbp
  0x0000000110e12c5b: mov    0x108(%r15),%r10
  0x0000000110e12c62: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e12c65: retq   
  0x0000000110e12c66: mov    0x10(%rsp),%r10
  0x0000000110e12c6b: mov    0x44(%r10),%r10d
  0x0000000110e12c6f: test   %r10d,%r10d
  0x0000000110e12c72: je     0x0000000110e12a90
  0x0000000110e12c78: mov    0x38(%r15),%r11
  0x0000000110e12c7c: mov    %r10,%rdi
  0x0000000110e12c7f: shl    $0x3,%rdi
  0x0000000110e12c83: test   %r11,%r11
  0x0000000110e12c86: je     0x0000000110e12e1c  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c8c: mov    0x48(%r15),%r10
  0x0000000110e12c90: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c95: add    $0xfffffffffffffff8,%r11  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c99: mov    %r11,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12c9d: jmpq   0x0000000110e12a90
  0x0000000110e12ca2: mov    0x10(%rsp),%r10
  0x0000000110e12ca7: mov    0x3c(%r10),%r11d
  0x0000000110e12cab: test   %r11d,%r11d
  0x0000000110e12cae: je     0x0000000110e126d6
  0x0000000110e12cb4: mov    0x38(%r15),%r10
  0x0000000110e12cb8: mov    %r11,%rdi
  0x0000000110e12cbb: shl    $0x3,%rdi
  0x0000000110e12cbf: test   %r10,%r10
  0x0000000110e12cc2: je     0x0000000110e12e07  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12cc8: mov    0x48(%r15),%r11
  0x0000000110e12ccc: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12cd1: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12cd5: mov    %r10,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12cd9: jmpq   0x0000000110e126d6
  0x0000000110e12cde: mov    0x10(%rsp),%r10
  0x0000000110e12ce3: mov    0x40(%r10),%r11d
  0x0000000110e12ce7: test   %r11d,%r11d
  0x0000000110e12cea: je     0x0000000110e1295a
  0x0000000110e12cf0: mov    0x38(%r15),%r10
  0x0000000110e12cf4: mov    %r11,%rdi
  0x0000000110e12cf7: shl    $0x3,%rdi
  0x0000000110e12cfb: test   %r10,%r10
  0x0000000110e12cfe: je     0x0000000110e12e31  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d04: mov    0x48(%r15),%r11
  0x0000000110e12d08: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d0d: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d11: mov    %r10,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d15: jmpq   0x0000000110e1295a
  0x0000000110e12d1a: mov    0x10(%rsp),%r10
  0x0000000110e12d1f: mov    0x38(%r10),%r10d
  0x0000000110e12d23: test   %r10d,%r10d
  0x0000000110e12d26: je     0x0000000110e12824
  0x0000000110e12d2c: mov    0x38(%r15),%r11
  0x0000000110e12d30: mov    %r10,%rdi
  0x0000000110e12d33: shl    $0x3,%rdi
  0x0000000110e12d37: test   %r11,%r11
  0x0000000110e12d3a: je     0x0000000110e12df2  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d40: mov    0x48(%r15),%r10
  0x0000000110e12d44: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d49: add    $0xfffffffffffffff8,%r11  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d4d: mov    %r11,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d51: jmpq   0x0000000110e12824
  0x0000000110e12d56: movabs $0x80006aaa8,%rsi  ;   {metadata('java/util/regex/Matcher')}
  0x0000000110e12d60: mov    0x8(%rsp),%rbp
  0x0000000110e12d65: xchg   %ax,%ax
  0x0000000110e12d67: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e12d6c: jmpq   0x0000000110e12639  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d71: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e12d7b: mov    0x10(%rsp),%rbp
  0x0000000110e12d80: data16 xchg %ax,%ax
  0x0000000110e12d83: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e12d88: mov    %rax,%rbx
  0x0000000110e12d8b: jmpq   0x0000000110e12a85  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12d90: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e12d9a: mov    0x10(%rsp),%rbp
  0x0000000110e12d9f: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e12da4: mov    %rax,%rbx
  0x0000000110e12da7: jmpq   0x0000000110e1294f  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12dac: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e12db6: mov    0x10(%rsp),%rbp
  0x0000000110e12dbb: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e12dc0: mov    %rax,%rbx
  0x0000000110e12dc3: jmpq   0x0000000110e12819
  0x0000000110e12dc8: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12dcb: jmpq   0x0000000110e1277d
  0x0000000110e12dd0: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12dd3: jmpq   0x0000000110e129e9
  0x0000000110e12dd8: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12ddb: jmpq   0x0000000110e128b3  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12de0: mov    $0xffffff7e,%esi
  0x0000000110e12de5: mov    %r10,0x8(%rsp)
  0x0000000110e12dea: nop
  0x0000000110e12deb: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12df0: ud2                       ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12df2: mov    %r15,%rsi
  0x0000000110e12df5: movabs $0x107aec8aa,%r10
  0x0000000110e12dff: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e02: jmpq   0x0000000110e12824  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e07: mov    %r15,%rsi
  0x0000000110e12e0a: movabs $0x107aec8aa,%r10
  0x0000000110e12e14: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e17: jmpq   0x0000000110e126d6  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e1c: mov    %r15,%rsi
  0x0000000110e12e1f: movabs $0x107aec8aa,%r10
  0x0000000110e12e29: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e2c: jmpq   0x0000000110e12a90  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e31: mov    %r15,%rsi
  0x0000000110e12e34: movabs $0x107aec8aa,%r10
  0x0000000110e12e3e: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e41: jmpq   0x0000000110e1295a
  0x0000000110e12e46: mov    $0xffffff4d,%esi
  0x0000000110e12e4b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@4 (line 1127)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e50: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e52: mov    $0xffffff4d,%esi
  0x0000000110e12e57: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e5c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e5e: mov    $0xffffff4d,%esi
  0x0000000110e12e63: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e68: ud2    
  0x0000000110e12e6a: mov    $0xfffffff6,%esi
  0x0000000110e12e6f: mov    %r10,%rbp
  0x0000000110e12e72: nop
  0x0000000110e12e73: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e78: ud2    
  0x0000000110e12e7a: mov    $0xfffffff6,%esi
  0x0000000110e12e7f: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e84: ud2    
  0x0000000110e12e86: mov    $0xfffffff6,%esi
  0x0000000110e12e8b: callq  0x0000000110d91900  ; ImmutableOopMap{[16]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e12e90: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)

  0x0000000110e12e92: mov    %rax,%rsi
  0x0000000110e12e95: jmp    0x0000000110e12ea0  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e97: jmp    0x0000000110e12e9d  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e99: jmp    0x0000000110e12e9d  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e9b: jmp    0x0000000110e12e9d  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)

  0x0000000110e12e9d: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern::matcher@32 (line 1133)

  0x0000000110e12ea0: add    $0x30,%rsp
  0x0000000110e12ea4: pop    %rbp
  0x0000000110e12ea5: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; - java.util.regex.Pattern::matcher@38 (line 1133)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e12eaa: hlt    
  0x0000000110e12eab: hlt    
  0x0000000110e12eac: hlt    
  0x0000000110e12ead: hlt    
  0x0000000110e12eae: hlt    
  0x0000000110e12eaf: hlt    
  0x0000000110e12eb0: hlt    
  0x0000000110e12eb1: hlt    
  0x0000000110e12eb2: hlt    
  0x0000000110e12eb3: hlt    
  0x0000000110e12eb4: hlt    
  0x0000000110e12eb5: hlt    
  0x0000000110e12eb6: hlt    
  0x0000000110e12eb7: hlt    
  0x0000000110e12eb8: hlt    
  0x0000000110e12eb9: hlt    
  0x0000000110e12eba: hlt    
  0x0000000110e12ebb: hlt    
  0x0000000110e12ebc: hlt    
  0x0000000110e12ebd: hlt    
  0x0000000110e12ebe: hlt    
  0x0000000110e12ebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e12ec0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e12ec5: callq  0x0000000110e12eca
  0x0000000110e12eca: subq   $0x5,(%rsp)
  0x0000000110e12ecf: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e12ed4: hlt    
  0x0000000110e12ed5: hlt    
  0x0000000110e12ed6: hlt    
  0x0000000110e12ed7: hlt    

ImmutableOopMap{r9=NarrowOop rbx=Oop [16]=Oop }pc offsets: 1621 
ImmutableOopMap{[16]=Oop }pc offsets: 1732 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2028 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 2056 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop }pc offsets: 2084 2112 
ImmutableOopMap{[8]=Oop [16]=Oop }pc offsets: 2160 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 2256 
ImmutableOopMap{[16]=Oop }pc offsets: 2268 2280 
ImmutableOopMap{rbp=Oop }pc offsets: 2296 
ImmutableOopMap{[16]=Oop }pc offsets: 2308 2320 Compiled method (c2)    1310  163             java.util.regex.Matcher::<init> (95 bytes)
 total in heap  [0x0000000110e13990,0x0000000110e14e68] = 5336
 relocation     [0x0000000110e13b08,0x0000000110e13b48] = 64
 constants      [0x0000000110e13b60,0x0000000110e13b80] = 32
 main code      [0x0000000110e13b80,0x0000000110e14440] = 2240
 stub code      [0x0000000110e14440,0x0000000110e14458] = 24
 metadata       [0x0000000110e14458,0x0000000110e14480] = 40
 scopes data    [0x0000000110e14480,0x0000000110e14638] = 440
 scopes pcs     [0x0000000110e14638,0x0000000110e14dd8] = 1952
 dependencies   [0x0000000110e14dd8,0x0000000110e14de0] = 8
 handler table  [0x0000000110e14de0,0x0000000110e14e40] = 96
 nul chk table  [0x0000000110e14e40,0x0000000110e14e68] = 40
----------------------------------------------------------------------
java/util/regex/Matcher.<init>(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V  [0x0000000110e13b80, 0x0000000110e14458]  2264 bytes
[Constants]
  0x0000000110e13b60 (offset:    0): 0xffffffff   0xffffffffffffffff
  0x0000000110e13b64 (offset:    4): 0xffffffff
  0x0000000110e13b68 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e13b6c (offset:   12): 0xf4f4f4f4
  0x0000000110e13b70 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e13b74 (offset:   20): 0xf4f4f4f4
  0x0000000110e13b78 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x0000000110e13b7c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000011f1b3020} '<init>' '(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V' in 'java/util/regex/Matcher'
  # this:     rsi:rsi   = 'java/util/regex/Matcher'
  # parm0:    rdx:rdx   = 'java/util/regex/Pattern'
  # parm1:    rcx:rcx   = 'java/lang/CharSequence'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e13b80: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x0000000110e13b84: movabs $0x800000000,%r12
  0x0000000110e13b8e: add    %r12,%r10
  0x0000000110e13b91: xor    %r12,%r12
  0x0000000110e13b94: cmp    %r10,%rax
  0x0000000110e13b97: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e13b9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e13ba0: mov    %eax,-0x14000(%rsp)
  0x0000000110e13ba7: push   %rbp
  0x0000000110e13ba8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Matcher::<init>@-1 (line 242)

  0x0000000110e13bac: mov    %rcx,%rbx
  0x0000000110e13baf: mov    %rdx,%rbp
  0x0000000110e13bb2: cmpb   $0x0,0x30(%r15)
  0x0000000110e13bb7: jne    0x0000000110e14213
  0x0000000110e13bbd: mov    %rsi,(%rsp)        ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13bc1: mov    (%rsp),%r10
  0x0000000110e13bc5: movb   $0x1,0x33(%r10)    ;*putfield anchoringBounds {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@36 (line 226)

  0x0000000110e13bca: movl   $0x0,0x18(%r10)    ;*putfield acceptMode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@6 (line 153)

  0x0000000110e13bd2: movl   $0xffffffff,0x1c(%r10)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@11 (line 161)

  0x0000000110e13bda: movl   $0x0,0x20(%r10)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@16 (line 161)

  0x0000000110e13be2: movl   $0xffffffff,0x24(%r10)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@21 (line 166)

  0x0000000110e13bea: movl   $0x0,0x28(%r10)    ;*putfield lastAppendPosition {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@26 (line 171)

  0x0000000110e13bf2: movb   $0x0,0x32(%r10)
  0x0000000110e13bf7: mov    %rbp,%r11
  0x0000000110e13bfa: shr    $0x3,%r11
  0x0000000110e13bfe: mov    (%rsp),%r8
  0x0000000110e13c02: mov    %r11d,0x34(%r8)
  0x0000000110e13c06: mov    %rbp,%r11
  0x0000000110e13c09: xor    %r10,%r11
  0x0000000110e13c0c: shr    $0x14,%r11
  0x0000000110e13c10: test   %r11,%r11
  0x0000000110e13c13: je     0x0000000110e13c6d
  0x0000000110e13c15: test   %rbp,%rbp
  0x0000000110e13c18: je     0x0000000110e13c6d
  0x0000000110e13c1a: shr    $0x9,%r10
  0x0000000110e13c1e: movabs $0x110569000,%rdi
  0x0000000110e13c28: add    %r10,%rdi
  0x0000000110e13c2b: cmpb   $0x20,(%rdi)
  0x0000000110e13c2e: je     0x0000000110e13c6d
  0x0000000110e13c30: mov    0x70(%r15),%r10
  0x0000000110e13c34: mov    0x80(%r15),%r11
  0x0000000110e13c3b: lock addl $0x0,-0x40(%rsp)
  0x0000000110e13c41: cmpb   $0x0,(%rdi)
  0x0000000110e13c44: je     0x0000000110e13c6d
  0x0000000110e13c46: movb   $0x0,(%rdi)
  0x0000000110e13c49: test   %r10,%r10
  0x0000000110e13c4c: jne    0x0000000110e13c60
  0x0000000110e13c4e: mov    %r15,%rsi
  0x0000000110e13c51: movabs $0x107aec8ce,%r10
  0x0000000110e13c5b: callq  *%r10
  0x0000000110e13c5e: jmp    0x0000000110e13c6d
  0x0000000110e13c60: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e13c65: add    $0xfffffffffffffff8,%r10
  0x0000000110e13c69: mov    %r10,0x70(%r15)
  0x0000000110e13c6d: cmpb   $0x0,0x30(%r15)
  0x0000000110e13c72: jne    0x0000000110e141d8
  0x0000000110e13c78: mov    (%rsp),%r10
  0x0000000110e13c7c: mov    %rbx,%r8
  0x0000000110e13c7f: shr    $0x3,%r8
  0x0000000110e13c83: mov    (%rsp),%r11
  0x0000000110e13c87: mov    %r8d,0x3c(%r11)
  0x0000000110e13c8b: mov    %rbx,%r11
  0x0000000110e13c8e: xor    %r10,%r11
  0x0000000110e13c91: shr    $0x14,%r11
  0x0000000110e13c95: test   %r11,%r11
  0x0000000110e13c98: je     0x0000000110e13cf2
  0x0000000110e13c9a: test   %rbx,%rbx
  0x0000000110e13c9d: je     0x0000000110e13cf2
  0x0000000110e13c9f: shr    $0x9,%r10
  0x0000000110e13ca3: movabs $0x110569000,%rdi
  0x0000000110e13cad: add    %r10,%rdi
  0x0000000110e13cb0: cmpb   $0x20,(%rdi)
  0x0000000110e13cb3: je     0x0000000110e13cf2
  0x0000000110e13cb5: mov    0x70(%r15),%r10
  0x0000000110e13cb9: mov    0x80(%r15),%r11
  0x0000000110e13cc0: lock addl $0x0,-0x40(%rsp)
  0x0000000110e13cc6: cmpb   $0x0,(%rdi)
  0x0000000110e13cc9: je     0x0000000110e13cf2
  0x0000000110e13ccb: movb   $0x0,(%rdi)
  0x0000000110e13cce: test   %r10,%r10
  0x0000000110e13cd1: jne    0x0000000110e13ce5  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13cd3: mov    %r15,%rsi
  0x0000000110e13cd6: movabs $0x107aec8ce,%r10
  0x0000000110e13ce0: callq  *%r10
  0x0000000110e13ce3: jmp    0x0000000110e13cf2
  0x0000000110e13ce5: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e13cea: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13cee: mov    %r10,0x70(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e13cf2: mov    0x18(%rbp),%edx    ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ; implicit exception: dispatches to 0x0000000110e143f2
  0x0000000110e13cf5: mov    $0xa,%r11d
  0x0000000110e13cfb: cmp    $0xa,%edx
  0x0000000110e13cfe: cmovl  %r11d,%edx
  0x0000000110e13d02: shl    %edx               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@62 (line 248)

  0x0000000110e13d04: cmp    $0x40000,%edx
  0x0000000110e13d0a: ja     0x0000000110e14358
  0x0000000110e13d10: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)

  0x0000000110e13d13: cmp    $0x40000,%edx
  0x0000000110e13d19: ja     0x0000000110e14318  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13d1f: mov    0x118(%r15),%rbx
  0x0000000110e13d26: shl    $0x2,%rcx
  0x0000000110e13d2a: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)

  0x0000000110e13d2e: mov    %rcx,%r10
  0x0000000110e13d31: and    $0xfffffffffffffff8,%r10
  0x0000000110e13d35: mov    %rbx,%r11
  0x0000000110e13d38: add    %r10,%r11
  0x0000000110e13d3b: cmp    0x128(%r15),%r11
  0x0000000110e13d42: jae    0x0000000110e14318
  0x0000000110e13d48: mov    %r11,0x118(%r15)
  0x0000000110e13d4f: prefetchnta 0xc0(%r11)
  0x0000000110e13d57: movq   $0x1,(%rbx)
  0x0000000110e13d5e: prefetchnta 0x100(%r11)
  0x0000000110e13d66: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e13d6d: mov    %edx,0xc(%rbx)
  0x0000000110e13d70: prefetchnta 0x140(%r11)
  0x0000000110e13d78: mov    %rbx,%rdi
  0x0000000110e13d7b: add    $0x10,%rdi
  0x0000000110e13d7f: prefetchnta 0x180(%r11)
  0x0000000110e13d87: shr    $0x3,%rcx
  0x0000000110e13d8b: add    $0xfffffffffffffffe,%rcx
  0x0000000110e13d8f: xor    %rax,%rax
  0x0000000110e13d92: cmp    $0x8,%rcx
  0x0000000110e13d96: jg     0x0000000110e13da8
  0x0000000110e13d98: dec    %rcx
  0x0000000110e13d9b: js     0x0000000110e13daf
  0x0000000110e13d9d: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e13da1: dec    %rcx
  0x0000000110e13da4: jge    0x0000000110e13d9d
  0x0000000110e13da6: jmp    0x0000000110e13daf
  0x0000000110e13da8: shl    $0x3,%rcx
  0x0000000110e13dac: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e13daf: cmpb   $0x0,0x30(%r15)
  0x0000000110e13db4: jne    0x0000000110e1424e
  0x0000000110e13dba: mov    (%rsp),%r10
  0x0000000110e13dbe: mov    %rbx,%r11
  0x0000000110e13dc1: shr    $0x3,%r11
  0x0000000110e13dc5: mov    (%rsp),%r8
  0x0000000110e13dc9: mov    %r11d,0x38(%r8)
  0x0000000110e13dcd: mov    %rbx,%r11
  0x0000000110e13dd0: xor    %r10,%r11
  0x0000000110e13dd3: shr    $0x14,%r11
  0x0000000110e13dd7: test   %r11,%r11
  0x0000000110e13dda: je     0x0000000110e13e2f
  0x0000000110e13ddc: shr    $0x9,%r10
  0x0000000110e13de0: movabs $0x110569000,%rdi
  0x0000000110e13dea: add    %r10,%rdi
  0x0000000110e13ded: cmpb   $0x20,(%rdi)
  0x0000000110e13df0: je     0x0000000110e13e2f
  0x0000000110e13df2: mov    0x70(%r15),%r10
  0x0000000110e13df6: mov    0x80(%r15),%r11
  0x0000000110e13dfd: lock addl $0x0,-0x40(%rsp)
  0x0000000110e13e03: cmpb   $0x0,(%rdi)
  0x0000000110e13e06: je     0x0000000110e13e2f
  0x0000000110e13e08: movb   $0x0,(%rdi)
  0x0000000110e13e0b: test   %r10,%r10
  0x0000000110e13e0e: jne    0x0000000110e13e22  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13e10: mov    %r15,%rsi
  0x0000000110e13e13: movabs $0x107aec8ce,%r10
  0x0000000110e13e1d: callq  *%r10
  0x0000000110e13e20: jmp    0x0000000110e13e2f
  0x0000000110e13e22: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e13e27: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13e2b: mov    %r10,0x70(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e13e2f: mov    0x1c(%rbp),%edx    ;*getfield localCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@70 (line 249)

  0x0000000110e13e32: cmp    $0x40000,%edx
  0x0000000110e13e38: ja     0x0000000110e14350
  0x0000000110e13e3e: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)

  0x0000000110e13e41: cmp    $0x40000,%edx
  0x0000000110e13e47: ja     0x0000000110e142ff  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13e4d: mov    0x118(%r15),%rbx
  0x0000000110e13e54: shl    $0x2,%rcx
  0x0000000110e13e58: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)

  0x0000000110e13e5c: mov    %rcx,%r10
  0x0000000110e13e5f: and    $0xfffffffffffffff8,%r10
  0x0000000110e13e63: mov    %rbx,%r11
  0x0000000110e13e66: add    %r10,%r11
  0x0000000110e13e69: cmp    0x128(%r15),%r11
  0x0000000110e13e70: jae    0x0000000110e142ff
  0x0000000110e13e76: mov    %r11,0x118(%r15)
  0x0000000110e13e7d: prefetchnta 0xc0(%r11)
  0x0000000110e13e85: movq   $0x1,(%rbx)
  0x0000000110e13e8c: prefetchnta 0x100(%r11)
  0x0000000110e13e94: movl   $0xc10,0x8(%rbx)   ;   {metadata({type array int})}
  0x0000000110e13e9b: mov    %edx,0xc(%rbx)
  0x0000000110e13e9e: prefetchnta 0x140(%r11)
  0x0000000110e13ea6: mov    %rbx,%rdi
  0x0000000110e13ea9: add    $0x10,%rdi
  0x0000000110e13ead: prefetchnta 0x180(%r11)
  0x0000000110e13eb5: shr    $0x3,%rcx
  0x0000000110e13eb9: add    $0xfffffffffffffffe,%rcx
  0x0000000110e13ebd: xor    %rax,%rax
  0x0000000110e13ec0: cmp    $0x8,%rcx
  0x0000000110e13ec4: jg     0x0000000110e13ed6
  0x0000000110e13ec6: dec    %rcx
  0x0000000110e13ec9: js     0x0000000110e13edd
  0x0000000110e13ecb: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e13ecf: dec    %rcx
  0x0000000110e13ed2: jge    0x0000000110e13ecb
  0x0000000110e13ed4: jmp    0x0000000110e13edd
  0x0000000110e13ed6: shl    $0x3,%rcx
  0x0000000110e13eda: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e13edd: cmpb   $0x0,0x30(%r15)
  0x0000000110e13ee2: jne    0x0000000110e142c4
  0x0000000110e13ee8: mov    (%rsp),%r10
  0x0000000110e13eec: mov    %rbx,%r8
  0x0000000110e13eef: shr    $0x3,%r8
  0x0000000110e13ef3: mov    (%rsp),%r11
  0x0000000110e13ef7: mov    %r8d,0x40(%r11)
  0x0000000110e13efb: mov    %rbx,%r11
  0x0000000110e13efe: xor    %r10,%r11
  0x0000000110e13f01: shr    $0x14,%r11
  0x0000000110e13f05: test   %r11,%r11
  0x0000000110e13f08: je     0x0000000110e13f5d
  0x0000000110e13f0a: shr    $0x9,%r10
  0x0000000110e13f0e: movabs $0x110569000,%rdi
  0x0000000110e13f18: add    %r10,%rdi
  0x0000000110e13f1b: cmpb   $0x20,(%rdi)
  0x0000000110e13f1e: je     0x0000000110e13f5d
  0x0000000110e13f20: mov    0x70(%r15),%r10
  0x0000000110e13f24: mov    0x80(%r15),%r11
  0x0000000110e13f2b: lock addl $0x0,-0x40(%rsp)
  0x0000000110e13f31: cmpb   $0x0,(%rdi)
  0x0000000110e13f34: je     0x0000000110e13f5d
  0x0000000110e13f36: movb   $0x0,(%rdi)
  0x0000000110e13f39: test   %r10,%r10
  0x0000000110e13f3c: jne    0x0000000110e13f50  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13f3e: mov    %r15,%rsi
  0x0000000110e13f41: movabs $0x107aec8ce,%r10
  0x0000000110e13f4b: callq  *%r10
  0x0000000110e13f4e: jmp    0x0000000110e13f5d
  0x0000000110e13f50: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e13f55: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13f59: mov    %r10,0x70(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e13f5d: mov    0x14(%rbp),%edx    ;*getfield localTCNCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@80 (line 250)

  0x0000000110e13f60: cmp    $0x40000,%edx
  0x0000000110e13f66: ja     0x0000000110e14348
  0x0000000110e13f6c: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)

  0x0000000110e13f6f: cmp    $0x40000,%edx
  0x0000000110e13f75: ja     0x0000000110e14330  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e13f7b: mov    0x118(%r15),%rbx
  0x0000000110e13f82: shl    $0x2,%rcx
  0x0000000110e13f86: add    $0x17,%rcx         ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)

  0x0000000110e13f8a: mov    %rcx,%r10
  0x0000000110e13f8d: and    $0xfffffffffffffff8,%r10
  0x0000000110e13f91: mov    %rbx,%r11
  0x0000000110e13f94: add    %r10,%r11
  0x0000000110e13f97: cmp    0x128(%r15),%r11
  0x0000000110e13f9e: jae    0x0000000110e14330
  0x0000000110e13fa4: mov    %r11,0x118(%r15)
  0x0000000110e13fab: prefetchnta 0xc0(%r11)
  0x0000000110e13fb3: movq   $0x1,(%rbx)
  0x0000000110e13fba: prefetchnta 0x100(%r11)
  0x0000000110e13fc2: movl   $0x6af30,0x8(%rbx)  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e13fc9: mov    %edx,0xc(%rbx)
  0x0000000110e13fcc: prefetchnta 0x140(%r11)
  0x0000000110e13fd4: mov    %rbx,%rdi
  0x0000000110e13fd7: add    $0x10,%rdi
  0x0000000110e13fdb: prefetchnta 0x180(%r11)
  0x0000000110e13fe3: shr    $0x3,%rcx
  0x0000000110e13fe7: add    $0xfffffffffffffffe,%rcx
  0x0000000110e13feb: xor    %rax,%rax
  0x0000000110e13fee: cmp    $0x8,%rcx
  0x0000000110e13ff2: jg     0x0000000110e14004
  0x0000000110e13ff4: dec    %rcx
  0x0000000110e13ff7: js     0x0000000110e1400b
  0x0000000110e13ff9: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e13ffd: dec    %rcx
  0x0000000110e14000: jge    0x0000000110e13ff9
  0x0000000110e14002: jmp    0x0000000110e1400b
  0x0000000110e14004: shl    $0x3,%rcx
  0x0000000110e14008: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1400b: cmpb   $0x0,0x30(%r15)
  0x0000000110e14010: jne    0x0000000110e14289
  0x0000000110e14016: mov    (%rsp),%r10
  0x0000000110e1401a: mov    %r10,%r11
  0x0000000110e1401d: mov    %rbx,%r10
  0x0000000110e14020: shr    $0x3,%r10
  0x0000000110e14024: mov    (%rsp),%r8
  0x0000000110e14028: mov    %r10d,0x44(%r8)
  0x0000000110e1402c: mov    %rbx,%r8
  0x0000000110e1402f: xor    %r11,%r8
  0x0000000110e14032: shr    $0x14,%r8
  0x0000000110e14036: test   %r8,%r8
  0x0000000110e14039: je     0x0000000110e14096
  0x0000000110e1403b: shr    $0x9,%r11
  0x0000000110e1403f: movabs $0x110569000,%rdi
  0x0000000110e14049: add    %r11,%rdi
  0x0000000110e1404c: cmpb   $0x20,(%rdi)
  0x0000000110e1404f: je     0x0000000110e14096
  0x0000000110e14051: mov    0x70(%r15),%r10    ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14055: mov    0x80(%r15),%r11
  0x0000000110e1405c: lock addl $0x0,-0x40(%rsp)
  0x0000000110e14062: cmpb   $0x0,(%rdi)
  0x0000000110e14065: je     0x0000000110e1408e
  0x0000000110e14067: movb   $0x0,(%rdi)
  0x0000000110e1406a: test   %r10,%r10
  0x0000000110e1406d: je     0x0000000110e1407e
  0x0000000110e1406f: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e14074: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14078: mov    %r10,0x70(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e1407c: jmp    0x0000000110e1408e  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e1407e: mov    %r15,%rsi
  0x0000000110e14081: movabs $0x107aec8ce,%r10
  0x0000000110e1408b: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e1408e: mov    (%rsp),%r10
  0x0000000110e14092: mov    0x44(%r10),%r10d   ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14096: mov    (%rsp),%r11
  0x0000000110e1409a: movl   $0xffffffff,0x24(%r11)  ;*putfield oldLast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@12 (line 405)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140a2: mov    0x38(%r11),%r8d    ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@19 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140a6: movl   $0xffffffff,0x1c(%r11)  ;*putfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@2 (line 403)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140ae: movl   $0x0,0x20(%r11)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@7 (line 404)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140b6: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; implicit exception: dispatches to 0x0000000110e143fe
  0x0000000110e140bb: test   %ebp,%ebp
  0x0000000110e140bd: jbe    0x0000000110e1416f  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140c3: mov    %ebp,%r9d
  0x0000000110e140c6: dec    %r9d
  0x0000000110e140c9: cmp    %ebp,%r9d
  0x0000000110e140cc: jae    0x0000000110e14360
  0x0000000110e140d2: shl    $0x3,%r8
  0x0000000110e140d6: mov    %r8d,%ecx
  0x0000000110e140d9: shr    $0x2,%ecx
  0x0000000110e140dc: and    $0x3,%ecx
  0x0000000110e140df: mov    $0xffffffff,%r11d
  0x0000000110e140e5: sub    %ecx,%r11d
  0x0000000110e140e8: and    $0x3,%r11d
  0x0000000110e140ec: inc    %r11d
  0x0000000110e140ef: cmp    %ebp,%r11d
  0x0000000110e140f2: cmovg  %ebp,%r11d
  0x0000000110e140f6: xor    %edi,%edi          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e140f8: movl   $0xffffffff,0x10(%r8,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14101: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14103: cmp    %r11d,%edi
  0x0000000110e14106: jl     0x0000000110e140f8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14108: mov    %ebp,%ebx
  0x0000000110e1410a: add    $0xfffffffd,%ebx
  0x0000000110e1410d: mov    $0x80000000,%ecx
  0x0000000110e14112: cmp    %ebx,%r9d
  0x0000000110e14115: cmovl  %ecx,%ebx
  0x0000000110e14118: cmp    %ebx,%edi
  0x0000000110e1411a: jge    0x0000000110e1415c
  0x0000000110e1411c: vmovq  -0x5c4(%rip),%xmm0        # 0x0000000110e13b60
                                                ;   {section_word}
  0x0000000110e14124: vpunpcklqdq %xmm0,%xmm0,%xmm0
  0x0000000110e14128: mov    $0xfa0,%r9d
  0x0000000110e1412e: mov    %ebx,%ecx
  0x0000000110e14130: sub    %edi,%ecx
  0x0000000110e14132: cmp    %r9d,%ecx
  0x0000000110e14135: cmovg  %r9d,%ecx
  0x0000000110e14139: add    %edi,%ecx
  0x0000000110e1413b: nopl   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14140: vmovdqu %xmm0,0x10(%r8,%rdi,4)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14147: add    $0x4,%edi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e1414a: cmp    %ecx,%edi
  0x0000000110e1414c: jl     0x0000000110e14140  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e1414e: mov    0x108(%r15),%r14   ; ImmutableOopMap{r10=NarrowOop r8=Oop [0]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14155: test   %eax,(%r14)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@36 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {poll}
  0x0000000110e14158: cmp    %ebx,%edi
  0x0000000110e1415a: jl     0x0000000110e1412e
  0x0000000110e1415c: cmp    %ebp,%edi
  0x0000000110e1415e: jge    0x0000000110e1416f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@26 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14160: movl   $0xffffffff,0x10(%r8,%rdi,4)
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@32 (line 407)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14169: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@33 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e1416b: cmp    %ebp,%edi
  0x0000000110e1416d: jl     0x0000000110e14160  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e1416f: mov    (%rsp),%r11
  0x0000000110e14173: mov    0x40(%r11),%r8d    ;*getfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@43 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14177: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; implicit exception: dispatches to 0x0000000110e1440a
  0x0000000110e1417c: test   %ebp,%ebp
  0x0000000110e1417e: ja     0x0000000110e143d7  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14184: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ; implicit exception: dispatches to 0x0000000110e14416
  0x0000000110e14189: test   %ebp,%ebp
  0x0000000110e1418b: ja     0x0000000110e143e6  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14191: movl   $0x0,0xc(%r11)     ;*putfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@105 (line 415)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14199: mov    0x3c(%r11),%r10d
  0x0000000110e1419d: movl   $0x0,0x28(%r11)    ;*synchronization entry
                                                ; - java.util.regex.Matcher::getTextLength@-1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e141a5: mov    %r10,%rsi
  0x0000000110e141a8: shl    $0x3,%rsi          ;*getfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@1 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e141ac: nop
  0x0000000110e141ad: movabs $0xffffffffffffffff,%rax
  0x0000000110e141b7: callq  0x0000000110d90180  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {virtual_call}
  0x0000000110e141bc: mov    (%rsp),%r10
  0x0000000110e141c0: mov    %eax,0x10(%r10)    ;*putfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@113 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e141c4: incl   0x2c(%r10)
  0x0000000110e141c8: add    $0x20,%rsp
  0x0000000110e141cc: pop    %rbp
  0x0000000110e141cd: mov    0x108(%r15),%r10
  0x0000000110e141d4: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e141d7: retq   
  0x0000000110e141d8: mov    (%rsp),%r10
  0x0000000110e141dc: mov    0x3c(%r10),%r10d
  0x0000000110e141e0: test   %r10d,%r10d
  0x0000000110e141e3: je     0x0000000110e13c78
  0x0000000110e141e9: mov    0x38(%r15),%r11
  0x0000000110e141ed: mov    %r10,%rdi
  0x0000000110e141f0: shl    $0x3,%rdi
  0x0000000110e141f4: test   %r11,%r11
  0x0000000110e141f7: je     0x0000000110e14383  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e141fd: mov    0x48(%r15),%r10
  0x0000000110e14201: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e14206: add    $0xfffffffffffffff8,%r11  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e1420a: mov    %r11,0x38(%r15)    ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e1420e: jmpq   0x0000000110e13c78
  0x0000000110e14213: mov    %rsi,(%rsp)
  0x0000000110e14217: mov    0x34(%rsi),%r11d
  0x0000000110e1421b: test   %r11d,%r11d
  0x0000000110e1421e: je     0x0000000110e13bc1
  0x0000000110e14224: mov    0x38(%r15),%r10
  0x0000000110e14228: mov    %r11,%rdi
  0x0000000110e1422b: shl    $0x3,%rdi
  0x0000000110e1422f: test   %r10,%r10
  0x0000000110e14232: je     0x0000000110e1436e
  0x0000000110e14238: mov    0x48(%r15),%r11
  0x0000000110e1423c: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e14241: add    $0xfffffffffffffff8,%r10
  0x0000000110e14245: mov    %r10,0x38(%r15)
  0x0000000110e14249: jmpq   0x0000000110e13bc1
  0x0000000110e1424e: mov    (%rsp),%r10
  0x0000000110e14252: mov    0x38(%r10),%r11d
  0x0000000110e14256: test   %r11d,%r11d
  0x0000000110e14259: je     0x0000000110e13dba
  0x0000000110e1425f: mov    0x38(%r15),%r10
  0x0000000110e14263: mov    %r11,%rdi
  0x0000000110e14266: shl    $0x3,%rdi
  0x0000000110e1426a: test   %r10,%r10
  0x0000000110e1426d: je     0x0000000110e143c2  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14273: mov    0x48(%r15),%r11
  0x0000000110e14277: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e1427c: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14280: mov    %r10,0x38(%r15)    ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e14284: jmpq   0x0000000110e13dba
  0x0000000110e14289: mov    (%rsp),%r10
  0x0000000110e1428d: mov    0x44(%r10),%r11d
  0x0000000110e14291: test   %r11d,%r11d
  0x0000000110e14294: je     0x0000000110e14016
  0x0000000110e1429a: mov    0x38(%r15),%r10
  0x0000000110e1429e: mov    %r11,%rdi
  0x0000000110e142a1: shl    $0x3,%rdi
  0x0000000110e142a5: test   %r10,%r10
  0x0000000110e142a8: je     0x0000000110e143ad  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e142ae: mov    0x48(%r15),%r11
  0x0000000110e142b2: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e142b7: add    $0xfffffffffffffff8,%r10  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e142bb: mov    %r10,0x38(%r15)    ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e142bf: jmpq   0x0000000110e14016
  0x0000000110e142c4: mov    (%rsp),%r10
  0x0000000110e142c8: mov    0x40(%r10),%r10d
  0x0000000110e142cc: test   %r10d,%r10d
  0x0000000110e142cf: je     0x0000000110e13ee8
  0x0000000110e142d5: mov    0x38(%r15),%r11
  0x0000000110e142d9: mov    %r10,%rdi
  0x0000000110e142dc: shl    $0x3,%rdi
  0x0000000110e142e0: test   %r11,%r11
  0x0000000110e142e3: je     0x0000000110e14398  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e142e9: mov    0x48(%r15),%r10
  0x0000000110e142ed: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e142f2: add    $0xfffffffffffffff8,%r11  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e142f6: mov    %r11,0x38(%r15)    ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e142fa: jmpq   0x0000000110e13ee8  ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e142ff: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e14309: xchg   %ax,%ax
  0x0000000110e1430b: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e14310: mov    %rax,%rbx
  0x0000000110e14313: jmpq   0x0000000110e13edd  ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e14318: movabs $0x800000c10,%rsi  ;   {metadata({type array int})}
  0x0000000110e14322: nop
  0x0000000110e14323: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e14328: mov    %rax,%rbx
  0x0000000110e1432b: jmpq   0x0000000110e13daf  ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e14330: movabs $0x80006af30,%rsi  ;   {metadata('java/util/regex/IntHashSet'[])}
  0x0000000110e1433a: nop
  0x0000000110e1433b: callq  0x0000000110dc7a80  ; ImmutableOopMap{[0]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e14340: mov    %rax,%rbx
  0x0000000110e14343: jmpq   0x0000000110e1400b
  0x0000000110e14348: movslq %edx,%rcx          ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)

  0x0000000110e1434b: jmpq   0x0000000110e13f6f
  0x0000000110e14350: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)

  0x0000000110e14353: jmpq   0x0000000110e13e41
  0x0000000110e14358: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)

  0x0000000110e1435b: jmpq   0x0000000110e13d13  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14360: mov    $0xffffff7e,%esi
  0x0000000110e14365: xchg   %ax,%ax
  0x0000000110e14367: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1436c: ud2    
  0x0000000110e1436e: mov    %r15,%rsi
  0x0000000110e14371: movabs $0x107aec8aa,%r10
  0x0000000110e1437b: callq  *%r10
  0x0000000110e1437e: jmpq   0x0000000110e13bc1  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14383: mov    %r15,%rsi
  0x0000000110e14386: movabs $0x107aec8aa,%r10
  0x0000000110e14390: callq  *%r10              ;*putfield text {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@46 (line 244)

  0x0000000110e14393: jmpq   0x0000000110e13c78  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e14398: mov    %r15,%rsi
  0x0000000110e1439b: movabs $0x107aec8aa,%r10
  0x0000000110e143a5: callq  *%r10              ;*putfield locals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@75 (line 249)

  0x0000000110e143a8: jmpq   0x0000000110e13ee8  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e143ad: mov    %r15,%rsi
  0x0000000110e143b0: movabs $0x107aec8aa,%r10
  0x0000000110e143ba: callq  *%r10              ;*putfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@86 (line 250)

  0x0000000110e143bd: jmpq   0x0000000110e14016  ;*putfield parentPattern {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@41 (line 243)

  0x0000000110e143c2: mov    %r15,%rsi
  0x0000000110e143c5: movabs $0x107aec8aa,%r10
  0x0000000110e143cf: callq  *%r10              ;*putfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@65 (line 248)

  0x0000000110e143d2: jmpq   0x0000000110e13dba  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@23 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e143d7: mov    $0xffffff4d,%esi
  0x0000000110e143dc: data16 xchg %ax,%ax
  0x0000000110e143df: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e143e4: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@47 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e143e6: mov    $0xffffff4d,%esi
  0x0000000110e143eb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@71 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e143f0: ud2                       ;*getfield capturingGroupCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)

  0x0000000110e143f2: mov    $0xfffffff6,%esi
  0x0000000110e143f7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield capturingGroupCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@50 (line 247)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e143fc: ud2    
  0x0000000110e143fe: mov    $0xfffffff6,%esi
  0x0000000110e14403: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@22 (line 406)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e14408: ud2    
  0x0000000110e1440a: mov    $0xfffffff6,%esi
  0x0000000110e1440f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@46 (line 408)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e14414: ud2    
  0x0000000110e14416: mov    $0xfffffff6,%esi
  0x0000000110e1441b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@70 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e14420: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@63 (line 248)

  0x0000000110e14422: mov    %rax,%rsi
  0x0000000110e14425: jmp    0x0000000110e14434  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)

  0x0000000110e14427: mov    %rax,%rsi
  0x0000000110e1442a: jmp    0x0000000110e14434  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@83 (line 250)

  0x0000000110e1442c: mov    %rax,%rsi
  0x0000000110e1442f: jmp    0x0000000110e14434  ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::getTextLength@4 (line 1770)
                                                ; - java.util.regex.Matcher::reset@110 (line 416)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)

  0x0000000110e14431: mov    %rax,%rsi          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::<init>@73 (line 249)

  0x0000000110e14434: add    $0x20,%rsp
  0x0000000110e14438: pop    %rbp
  0x0000000110e14439: jmpq   0x0000000110dc8700  ;*getfield localsPos {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::reset@67 (line 410)
                                                ; - java.util.regex.Matcher::<init>@90 (line 253)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1443e: hlt    
  0x0000000110e1443f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e14440: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e14445: callq  0x0000000110e1444a
  0x0000000110e1444a: subq   $0x5,(%rsp)
  0x0000000110e1444f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e14454: hlt    
  0x0000000110e14455: hlt    
  0x0000000110e14456: hlt    
  0x0000000110e14457: hlt    

ImmutableOopMap{r10=NarrowOop r8=Oop [0]=Oop }pc offsets: 1493 
ImmutableOopMap{[0]=Oop }pc offsets: 1596 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 1936 1960 
ImmutableOopMap{[0]=Oop }pc offsets: 1984 2028 2148 2160 
ImmutableOopMap{}pc offsets: 2172 2184 2196 2208 Compiled method (c2)    1340  164             java.util.regex.Matcher::matches (10 bytes)
 total in heap  [0x0000000110e02710,0x0000000110e029d0] = 704
 relocation     [0x0000000110e02888,0x0000000110e028a0] = 24
 main code      [0x0000000110e028a0,0x0000000110e02900] = 96
 stub code      [0x0000000110e02900,0x0000000110e02928] = 40
 metadata       [0x0000000110e02928,0x0000000110e02930] = 8
 scopes data    [0x0000000110e02930,0x0000000110e02950] = 32
 scopes pcs     [0x0000000110e02950,0x0000000110e029b0] = 96
 dependencies   [0x0000000110e029b0,0x0000000110e029b8] = 8
 handler table  [0x0000000110e029b8,0x0000000110e029d0] = 24
----------------------------------------------------------------------
java/util/regex/Matcher.matches()Z  [0x0000000110e028a0, 0x0000000110e02928]  136 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1b3f00} 'matches' '()Z' in 'java/util/regex/Matcher'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e028a0: mov    0x8(%rsi),%r10d
  0x0000000110e028a4: movabs $0x800000000,%r12
  0x0000000110e028ae: add    %r12,%r10
  0x0000000110e028b1: xor    %r12,%r12
  0x0000000110e028b4: cmp    %r10,%rax
  0x0000000110e028b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e028bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e028c0: mov    %eax,-0x14000(%rsp)
  0x0000000110e028c7: push   %rbp
  0x0000000110e028c8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Matcher::matches@-1 (line 713)

  0x0000000110e028cc: mov    0xc(%rsi),%edx     ;*getfield from {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@2 (line 713)

  0x0000000110e028cf: mov    $0x1,%ecx
  0x0000000110e028d4: data16 xchg %ax,%ax
  0x0000000110e028d7: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)
                                                ;   {optimized virtual_call}
  0x0000000110e028dc: add    $0x10,%rsp
  0x0000000110e028e0: pop    %rbp
  0x0000000110e028e1: mov    0x108(%r15),%r10
  0x0000000110e028e8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e028eb: retq                      ;*invokevirtual match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Matcher::matches@6 (line 713)

  0x0000000110e028ec: mov    %rax,%rsi
  0x0000000110e028ef: add    $0x10,%rsp
  0x0000000110e028f3: pop    %rbp
  0x0000000110e028f4: jmpq   0x0000000110dc8700  ;   {runtime_call _rethrow_Java}
  0x0000000110e028f9: hlt    
  0x0000000110e028fa: hlt    
  0x0000000110e028fb: hlt    
  0x0000000110e028fc: hlt    
  0x0000000110e028fd: hlt    
  0x0000000110e028fe: hlt    
  0x0000000110e028ff: hlt    
[Stub Code]
  0x0000000110e02900: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e0290a: jmpq   0x0000000110e0290a  ;   {runtime_call}
[Exception Handler]
  0x0000000110e0290f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e02914: callq  0x0000000110e02919
  0x0000000110e02919: subq   $0x5,(%rsp)
  0x0000000110e0291e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e02923: hlt    
  0x0000000110e02924: hlt    
  0x0000000110e02925: hlt    
  0x0000000110e02926: hlt    
  0x0000000110e02927: hlt    

ImmutableOopMap{}pc offsets: 60 Compiled method (c2)    1343  165             java.lang.AbstractStringBuilder::checkRange (60 bytes)
 total in heap  [0x0000000110e14e90,0x0000000110e151d8] = 840
 relocation     [0x0000000110e15008,0x0000000110e15018] = 16
 main code      [0x0000000110e15020,0x0000000110e150a0] = 128
 stub code      [0x0000000110e150a0,0x0000000110e150b8] = 24
 metadata       [0x0000000110e150b8,0x0000000110e150c0] = 8
 scopes data    [0x0000000110e150c0,0x0000000110e15110] = 80
 scopes pcs     [0x0000000110e15110,0x0000000110e151d0] = 192
 dependencies   [0x0000000110e151d0,0x0000000110e151d8] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.checkRange(III)V  [0x0000000110e15020, 0x0000000110e150b8]  152 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ee0fb80} 'checkRange' '(III)V' in 'java/lang/AbstractStringBuilder'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e15020: mov    %eax,-0x14000(%rsp)
  0x0000000110e15027: push   %rbp
  0x0000000110e15028: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::checkRange@-1 (line 1715)

  0x0000000110e1502c: test   %esi,%esi
  0x0000000110e1502e: jl     0x0000000110e15048  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)

  0x0000000110e15030: cmp    %edx,%esi
  0x0000000110e15032: jg     0x0000000110e15062  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)

  0x0000000110e15034: cmp    %ecx,%edx
  0x0000000110e15036: jg     0x0000000110e1507a  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)

  0x0000000110e15038: add    $0x20,%rsp
  0x0000000110e1503c: pop    %rbp
  0x0000000110e1503d: mov    0x108(%r15),%r10
  0x0000000110e15044: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e15047: retq   
  0x0000000110e15048: mov    %edx,(%rsp)
  0x0000000110e1504b: mov    %ecx,0x4(%rsp)
  0x0000000110e1504f: mov    %esi,0x8(%rsp)
  0x0000000110e15053: mov    $0xffffff4d,%esi
  0x0000000110e15058: data16 xchg %ax,%ax
  0x0000000110e1505b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e15060: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)

  0x0000000110e15062: mov    %ecx,0x4(%rsp)
  0x0000000110e15066: mov    %esi,0x8(%rsp)
  0x0000000110e1506a: mov    %edx,0xc(%rsp)
  0x0000000110e1506e: mov    $0xffffff4d,%esi
  0x0000000110e15073: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e15078: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)

  0x0000000110e1507a: mov    %esi,%ebp
  0x0000000110e1507c: mov    %edx,0x8(%rsp)
  0x0000000110e15080: mov    %ecx,0xc(%rsp)
  0x0000000110e15084: mov    $0xffffff4d,%esi
  0x0000000110e15089: xchg   %ax,%ax
  0x0000000110e1508b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e15090: ud2                       ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)

  0x0000000110e15092: hlt    
  0x0000000110e15093: hlt    
  0x0000000110e15094: hlt    
  0x0000000110e15095: hlt    
  0x0000000110e15096: hlt    
  0x0000000110e15097: hlt    
  0x0000000110e15098: hlt    
  0x0000000110e15099: hlt    
  0x0000000110e1509a: hlt    
  0x0000000110e1509b: hlt    
  0x0000000110e1509c: hlt    
  0x0000000110e1509d: hlt    
  0x0000000110e1509e: hlt    
  0x0000000110e1509f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e150a0: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e150a5: callq  0x0000000110e150aa
  0x0000000110e150aa: subq   $0x5,(%rsp)
  0x0000000110e150af: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e150b4: hlt    
  0x0000000110e150b5: hlt    
  0x0000000110e150b6: hlt    
  0x0000000110e150b7: hlt    

ImmutableOopMap{}pc offsets: 64 88 112 Compiled method (c2)    1357  166             java.lang.StringBuilder::append (10 bytes)
 total in heap  [0x0000000110e07b10,0x0000000110e08e28] = 4888
 relocation     [0x0000000110e07c88,0x0000000110e07cc8] = 64
 main code      [0x0000000110e07ce0,0x0000000110e083e0] = 1792
 stub code      [0x0000000110e083e0,0x0000000110e08408] = 40
 metadata       [0x0000000110e08408,0x0000000110e08480] = 120
 scopes data    [0x0000000110e08480,0x0000000110e08810] = 912
 scopes pcs     [0x0000000110e08810,0x0000000110e08dc0] = 1456
 dependencies   [0x0000000110e08dc0,0x0000000110e08dc8] = 8
 handler table  [0x0000000110e08dc8,0x0000000110e08df8] = 48
 nul chk table  [0x0000000110e08df8,0x0000000110e08e28] = 48
----------------------------------------------------------------------
java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;  [0x0000000110e07ce0, 0x0000000110e08408]  1832 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee11bb0} 'append' '(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/CharSequence'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000110e07ce0: mov    0x8(%rsi),%r10d
  0x0000000110e07ce4: movabs $0x800000000,%r12
  0x0000000110e07cee: add    %r12,%r10
  0x0000000110e07cf1: xor    %r12,%r12
  0x0000000110e07cf4: cmp    %r10,%rax
  0x0000000110e07cf7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e07cfd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e07d00: mov    %eax,-0x14000(%rsp)
  0x0000000110e07d07: push   %rbp
  0x0000000110e07d08: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)

  0x0000000110e07d0c: mov    %ecx,%ebx
  0x0000000110e07d0e: mov    %rsi,(%rsp)
  0x0000000110e07d12: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e0839a
  0x0000000110e07d16: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e07d1d: jne    0x0000000110e0822a  ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d23: mov    %rdx,0x10(%rsp)
  0x0000000110e07d28: mov    0xc(%rdx),%edi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d2b: mov    0xc(%r12,%rdi,8),%ebp  ; implicit exception: dispatches to 0x0000000110e0837a
  0x0000000110e07d30: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d34: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d36: test   %ebx,%ebx
  0x0000000110e07d38: jl     0x0000000110e0827a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d3e: cmp    %r8d,%ebx
  0x0000000110e07d41: jg     0x0000000110e082b6  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d47: mov    %r8d,%r13d
  0x0000000110e07d4a: cmp    %ebp,%r8d
  0x0000000110e07d4d: jg     0x0000000110e082da  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d53: mov    0x14(%rsi),%r8d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d57: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ; implicit exception: dispatches to 0x0000000110e0838a
  0x0000000110e07d5c: mov    %ecx,%r10d
  0x0000000110e07d5f: mov    %r13d,%r14d
  0x0000000110e07d62: sub    %ebx,%r14d         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 632)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d65: mov    0xc(%rsi),%r11d    ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@25 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d69: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d6d: mov    %r14d,%edx
  0x0000000110e07d70: add    %r11d,%edx         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d73: mov    %ebp,0x30(%rsp)
  0x0000000110e07d77: mov    %ebp,%r9d
  0x0000000110e07d7a: sar    %cl,%r9d           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@9 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d7d: mov    %edx,%esi
  0x0000000110e07d7f: sub    %r9d,%esi
  0x0000000110e07d82: test   %esi,%esi
  0x0000000110e07d84: jg     0x0000000110e07f0d  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d8a: mov    %r10d,%r9d         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@38 (line 175)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d8d: test   %ecx,%ecx
  0x0000000110e07d8f: jne    0x0000000110e08296  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d95: cmp    %r13d,%ebx
  0x0000000110e07d98: jge    0x0000000110e07eec  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07d9e: test   %r9d,%r9d
  0x0000000110e07da1: jne    0x0000000110e0824e
  0x0000000110e07da7: mov    0xc(%r12,%rdi,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ; implicit exception: dispatches to 0x0000000110e0824e
  0x0000000110e07dac: cmp    %r9d,%ebx
  0x0000000110e07daf: jae    0x0000000110e0824e
  0x0000000110e07db5: movslq %r9d,%r9
  0x0000000110e07db8: movslq %r13d,%r10
  0x0000000110e07dbb: mov    %r10,%rcx
  0x0000000110e07dbe: dec    %rcx
  0x0000000110e07dc1: cmp    %r9,%rcx
  0x0000000110e07dc4: jae    0x0000000110e0824e
  0x0000000110e07dca: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x0000000110e0824e
  0x0000000110e07dcf: mov    %r11d,%edx
  0x0000000110e07dd2: sub    %ebx,%edx          ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07dd4: movslq %r9d,%r9
  0x0000000110e07dd7: movslq %edx,%rcx
  0x0000000110e07dda: movslq %ebx,%rsi
  0x0000000110e07ddd: add    %rcx,%rsi
  0x0000000110e07de0: cmp    %r9,%rsi
  0x0000000110e07de3: jae    0x0000000110e0824e
  0x0000000110e07de9: add    %rcx,%r10
  0x0000000110e07dec: dec    %r10
  0x0000000110e07def: cmp    %r9,%r10
  0x0000000110e07df2: jae    0x0000000110e0824e
  0x0000000110e07df8: lea    (%r12,%rdi,8),%r9
  0x0000000110e07dfc: mov    %ebx,%edi
  0x0000000110e07dfe: inc    %edi
  0x0000000110e07e00: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@8 (line 1694)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e04: mov    %ebx,%ecx          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e06: movsbl 0x10(%r9,%rcx,1),%r10d
  0x0000000110e07e0c: mov    %ecx,%eax
  0x0000000110e07e0e: add    %edx,%eax
  0x0000000110e07e10: mov    %r10b,0x10(%r8,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e15: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e17: cmp    %edi,%ecx
  0x0000000110e07e19: jl     0x0000000110e07e06  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e1b: mov    %r13d,%edi
  0x0000000110e07e1e: add    $0xfffffffd,%edi
  0x0000000110e07e21: mov    $0x80000000,%r10d
  0x0000000110e07e27: cmp    %edi,%r13d
  0x0000000110e07e2a: cmovl  %r10d,%edi
  0x0000000110e07e2e: cmp    %edi,%ecx
  0x0000000110e07e30: jge    0x0000000110e07ecc
  0x0000000110e07e36: mov    $0xfa0,%r10d
  0x0000000110e07e3c: jmp    0x0000000110e07e4c
  0x0000000110e07e3e: vmovd  %xmm1,%ebx
  0x0000000110e07e42: vmovd  %xmm0,%r13d
  0x0000000110e07e47: vmovd  %xmm2,%r11d
  0x0000000110e07e4c: mov    %edi,%esi
  0x0000000110e07e4e: sub    %ecx,%esi
  0x0000000110e07e50: cmp    %r10d,%esi
  0x0000000110e07e53: cmovg  %r10d,%esi
  0x0000000110e07e57: add    %ecx,%esi
  0x0000000110e07e59: vmovd  %ebx,%xmm1
  0x0000000110e07e5d: vmovd  %r13d,%xmm0
  0x0000000110e07e62: vmovd  %r11d,%xmm2
  0x0000000110e07e67: nopw   0x0(%rax,%rax,1)   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e70: movsbl 0x10(%r9,%rcx,1),%ebx
  0x0000000110e07e76: movslq %ecx,%r11
  0x0000000110e07e79: mov    %ecx,%eax
  0x0000000110e07e7b: add    %edx,%eax          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07e7d: mov    %bl,0x10(%r8,%rax,1)
  0x0000000110e07e82: movslq %eax,%r13
  0x0000000110e07e85: movsbl 0x11(%r9,%r11,1),%ebp
  0x0000000110e07e8b: mov    %bpl,0x11(%r8,%r13,1)
  0x0000000110e07e90: movsbl 0x12(%r9,%r11,1),%ebx
  0x0000000110e07e96: mov    %bl,0x12(%r8,%r13,1)
  0x0000000110e07e9b: movsbl 0x13(%r9,%r11,1),%ebx
  0x0000000110e07ea1: mov    %bl,0x13(%r8,%r13,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ea6: add    $0x4,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ea9: cmp    %esi,%ecx
  0x0000000110e07eab: jl     0x0000000110e07e70  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ead: mov    0x108(%r15),%r11
  0x0000000110e07eb4: add    $0x4,%eax          ; ImmutableOopMap{r8=Oop r9=Oop [0]=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07eb7: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {poll}
  0x0000000110e07eba: cmp    %edi,%ecx
  0x0000000110e07ebc: jl     0x0000000110e07e3e
  0x0000000110e07ec2: vmovd  %xmm0,%r13d
  0x0000000110e07ec7: vmovd  %xmm2,%r11d
  0x0000000110e07ecc: cmp    %r13d,%ecx
  0x0000000110e07ecf: jge    0x0000000110e07eec
  0x0000000110e07ed1: data16 xchg %ax,%ax       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ed4: movsbl 0x10(%r9,%rcx,1),%ebx
  0x0000000110e07eda: mov    %ecx,%r10d
  0x0000000110e07edd: add    %edx,%r10d
  0x0000000110e07ee0: mov    %bl,0x10(%r8,%r10,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ee5: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07ee7: cmp    %r13d,%ecx
  0x0000000110e07eea: jl     0x0000000110e07ed4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07eec: add    %r11d,%r14d
  0x0000000110e07eef: mov    (%rsp),%r10
  0x0000000110e07ef3: mov    %r14d,0xc(%r10)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)

  0x0000000110e07ef7: mov    %r10,%rax
  0x0000000110e07efa: vzeroupper 
  0x0000000110e07efd: add    $0x60,%rsp
  0x0000000110e07f01: pop    %rbp
  0x0000000110e07f02: mov    0x108(%r15),%r10
  0x0000000110e07f09: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e07f0c: retq   
  0x0000000110e07f0d: shl    %r9d               ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f10: mov    %r9d,%r11d
  0x0000000110e07f13: sub    %edx,%r11d
  0x0000000110e07f16: add    $0x2,%r11d
  0x0000000110e07f1a: test   %r11d,%r11d
  0x0000000110e07f1d: jge    0x0000000110e08126  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@20 (line 201)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f23: mov    %edx,%r9d          ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 204)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f26: test   %r9d,%r9d
  0x0000000110e07f29: jle    0x0000000110e07f3c  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@35 (line 205)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f2b: mov    $0x7ffffff7,%r10d
  0x0000000110e07f31: sar    %cl,%r10d
  0x0000000110e07f34: sub    %r9d,%r10d
  0x0000000110e07f37: test   %r10d,%r10d
  0x0000000110e07f3a: jge    0x0000000110e07f7a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@45 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f3c: mov    %r14d,0x1c(%rsp)
  0x0000000110e07f41: mov    %r8d,0x18(%rsp)
  0x0000000110e07f46: mov    %r13d,0xc(%rsp)
  0x0000000110e07f4b: mov    %ebx,0x8(%rsp)
  0x0000000110e07f4f: mov    (%rsp),%rbp
  0x0000000110e07f53: mov    %rbp,%rsi
  0x0000000110e07f56: xchg   %ax,%ax
  0x0000000110e07f58: vzeroupper 
  0x0000000110e07f5b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop }
                                                ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {optimized virtual_call}
  0x0000000110e07f60: movsbl 0x10(%rbp),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f64: mov    0x8(%rsp),%ebx
  0x0000000110e07f68: mov    0xc(%rsp),%r13d
  0x0000000110e07f6d: mov    0x18(%rsp),%r8d
  0x0000000110e07f72: mov    0x1c(%rsp),%r14d
  0x0000000110e07f77: mov    %eax,%r9d          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@50 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f7a: shl    %cl,%r9d           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@31 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f7d: cmp    $0x100000,%r9d
  0x0000000110e07f84: ja     0x0000000110e082fa
  0x0000000110e07f8a: movslq %r9d,%rcx
  0x0000000110e07f8d: mov    %r9d,%r10d         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f90: mov    0x30(%rsp),%r11d
  0x0000000110e07f95: cmp    %r10d,%r11d
  0x0000000110e07f98: mov    %r10d,%ebp
  0x0000000110e07f9b: cmovl  %r11d,%ebp         ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07f9f: cmp    %ebp,%r11d
  0x0000000110e07fa2: jb     0x0000000110e0832e
  0x0000000110e07fa8: cmp    %ebp,%r10d
  0x0000000110e07fab: jb     0x0000000110e0832e  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07fb1: add    $0x17,%rcx
  0x0000000110e07fb5: mov    %rcx,%rax
  0x0000000110e07fb8: and    $0xfffffffffffffff8,%rax  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07fbc: cmp    $0x100000,%r9d
  0x0000000110e07fc3: ja     0x0000000110e081c9
  0x0000000110e07fc9: mov    0x118(%r15),%r10
  0x0000000110e07fd0: mov    %r10,%r11
  0x0000000110e07fd3: add    %rax,%r11
  0x0000000110e07fd6: cmp    0x128(%r15),%r11
  0x0000000110e07fdd: jae    0x0000000110e081c9  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e07fe3: mov    %r11,0x118(%r15)
  0x0000000110e07fea: prefetchnta 0xc0(%r11)
  0x0000000110e07ff2: movq   $0x1,(%r10)
  0x0000000110e07ff9: prefetchnta 0x100(%r11)
  0x0000000110e08001: movl   $0x820,0x8(%r10)   ;   {metadata({type array byte})}
  0x0000000110e08009: mov    %r9d,0xc(%r10)
  0x0000000110e0800d: prefetchnta 0x140(%r11)
  0x0000000110e08015: prefetchnta 0x180(%r11)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0801d: mov    %r10,0x8(%rsp)
  0x0000000110e08022: add    $0x10,%r10
  0x0000000110e08026: shr    $0x3,%rcx
  0x0000000110e0802a: mov    0x8(%rsp),%r11
  0x0000000110e0802f: mov    %r11,%rdx
  0x0000000110e08032: shr    $0x3,%rdx          ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08036: test   %ebp,%ebp
  0x0000000110e08038: je     0x0000000110e08302
  0x0000000110e0803e: mov    %edx,0x18(%rsp)
  0x0000000110e08042: lea    (%r12,%r8,8),%r11  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08046: lea    0x10(%r12,%r8,8),%r8
  0x0000000110e0804b: cmp    %r9d,%ebp
  0x0000000110e0804e: jl     0x0000000110e0812f
  0x0000000110e08054: add    $0xfffffffffffffff0,%rax
  0x0000000110e08058: shr    $0x3,%rax
  0x0000000110e0805c: mov    %r8,%rdi
  0x0000000110e0805f: mov    %r10,%rsi
  0x0000000110e08062: mov    %rax,%rdx
  0x0000000110e08065: vzeroupper 
  0x0000000110e08068: movabs $0x110d9f080,%r10
  0x0000000110e08072: callq  *%r10
  0x0000000110e08075: mov    0x18(%rsp),%edx
  0x0000000110e08079: cmpb   $0x0,0x30(%r15)
  0x0000000110e0807e: jne    0x0000000110e0818e
  0x0000000110e08084: mov    (%rsp),%r10
  0x0000000110e08088: mov    %edx,0x14(%r10)
  0x0000000110e0808c: mov    0x8(%rsp),%r10
  0x0000000110e08091: mov    (%rsp),%r11
  0x0000000110e08095: xor    %r11,%r10
  0x0000000110e08098: shr    $0x14,%r10
  0x0000000110e0809c: test   %r10,%r10
  0x0000000110e0809f: je     0x0000000110e080ff
  0x0000000110e080a1: shr    $0x9,%r11
  0x0000000110e080a5: movabs $0x110569000,%rdi
  0x0000000110e080af: add    %r11,%rdi
  0x0000000110e080b2: cmpb   $0x20,(%rdi)
  0x0000000110e080b5: je     0x0000000110e080ff
  0x0000000110e080b7: mov    0x80(%r15),%r10
  0x0000000110e080be: mov    0x70(%r15),%r11
  0x0000000110e080c2: lock addl $0x0,-0x40(%rsp)
  0x0000000110e080c8: cmpb   $0x0,(%rdi)
  0x0000000110e080cb: je     0x0000000110e080f7
  0x0000000110e080cd: movb   $0x0,(%rdi)
  0x0000000110e080d0: test   %r11,%r11
  0x0000000110e080d3: je     0x0000000110e080e4
  0x0000000110e080d5: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e080da: add    $0xfffffffffffffff8,%r11
  0x0000000110e080de: mov    %r11,0x70(%r15)
  0x0000000110e080e2: jmp    0x0000000110e080f7
  0x0000000110e080e4: mov    %r15,%rsi
  0x0000000110e080e7: vzeroupper 
  0x0000000110e080ea: movabs $0x107aec8ce,%r10
  0x0000000110e080f4: callq  *%r10
  0x0000000110e080f7: mov    (%rsp),%r10
  0x0000000110e080fb: mov    0x14(%r10),%edx    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e080ff: mov    (%rsp),%r10
  0x0000000110e08103: movsbl 0x10(%r10),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08108: mov    0x10(%rsp),%r10
  0x0000000110e0810d: movsbl 0x14(%r10),%r9d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08112: mov    0xc(%r10),%edi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08116: mov    (%rsp),%r10
  0x0000000110e0811a: mov    0xc(%r10),%r11d    ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0811e: mov    %edx,%r8d
  0x0000000110e08121: jmpq   0x0000000110e07d8d
  0x0000000110e08126: add    $0x2,%r9d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@15 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0812a: jmpq   0x0000000110e07f26
  0x0000000110e0812f: movslq %ebp,%rdx
  0x0000000110e08132: mov    %rdx,%r11
  0x0000000110e08135: add    $0x10,%r11
  0x0000000110e08139: mov    %r11,%r9
  0x0000000110e0813c: and    $0xfffffffffffffff8,%r9
  0x0000000110e08140: mov    0x8(%rsp),%rdi
  0x0000000110e08145: add    %r9,%rdi
  0x0000000110e08148: shr    $0x3,%r11
  0x0000000110e0814c: sub    %r11,%rcx
  0x0000000110e0814f: xor    %rax,%rax
  0x0000000110e08152: cmp    $0x8,%rcx
  0x0000000110e08156: jg     0x0000000110e08168
  0x0000000110e08158: dec    %rcx
  0x0000000110e0815b: js     0x0000000110e0816f
  0x0000000110e0815d: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e08161: dec    %rcx
  0x0000000110e08164: jge    0x0000000110e0815d
  0x0000000110e08166: jmp    0x0000000110e0816f
  0x0000000110e08168: shl    $0x3,%rcx
  0x0000000110e0816c: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e0816f: mov    %r8,%rdi
  0x0000000110e08172: mov    %r10,%rsi
  0x0000000110e08175: vzeroupper 
  0x0000000110e08178: movabs $0x110d9ec00,%r10
  0x0000000110e08182: callq  *%r10
  0x0000000110e08185: mov    0x18(%rsp),%edx
  0x0000000110e08189: jmpq   0x0000000110e08079
  0x0000000110e0818e: mov    (%rsp),%r10
  0x0000000110e08192: mov    0x14(%r10),%r11d
  0x0000000110e08196: test   %r11d,%r11d
  0x0000000110e08199: je     0x0000000110e08084
  0x0000000110e0819f: mov    0x38(%r15),%r10
  0x0000000110e081a3: mov    %r11,%rdi
  0x0000000110e081a6: shl    $0x3,%rdi
  0x0000000110e081aa: test   %r10,%r10
  0x0000000110e081ad: je     0x0000000110e0835e
  0x0000000110e081b3: mov    0x48(%r15),%r11
  0x0000000110e081b7: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e081bc: add    $0xfffffffffffffff8,%r10
  0x0000000110e081c0: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e081c4: jmpq   0x0000000110e08084
  0x0000000110e081c9: mov    %rax,0x30(%rsp)
  0x0000000110e081ce: mov    %rcx,0x28(%rsp)
  0x0000000110e081d3: mov    %r9d,0x20(%rsp)
  0x0000000110e081d8: mov    %r14d,0x1c(%rsp)
  0x0000000110e081dd: mov    %r8d,0x18(%rsp)
  0x0000000110e081e2: mov    %r13d,0xc(%rsp)
  0x0000000110e081e7: mov    %ebx,0x8(%rsp)
  0x0000000110e081eb: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e081f5: mov    %r9d,%edx
  0x0000000110e081f8: vzeroupper 
  0x0000000110e081fb: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [16]=Oop [24]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e08200: mov    %rax,%r10
  0x0000000110e08203: mov    0x8(%rsp),%ebx
  0x0000000110e08207: mov    0xc(%rsp),%r13d
  0x0000000110e0820c: mov    0x18(%rsp),%r8d
  0x0000000110e08211: mov    0x1c(%rsp),%r14d
  0x0000000110e08216: mov    0x20(%rsp),%r9d
  0x0000000110e0821b: mov    0x28(%rsp),%rcx
  0x0000000110e08220: mov    0x30(%rsp),%rax
  0x0000000110e08225: jmpq   0x0000000110e0801d
  0x0000000110e0822a: mov    $0xffffffde,%esi
  0x0000000110e0822f: mov    (%rsp),%rbp
  0x0000000110e08233: mov    %ecx,0x10(%rsp)
  0x0000000110e08237: mov    %r8d,0x14(%rsp)
  0x0000000110e0823c: mov    %rdx,0x20(%rsp)
  0x0000000110e08241: data16 xchg %ax,%ax
  0x0000000110e08244: vzeroupper 
  0x0000000110e08247: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [32]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0824c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0824e: mov    $0xffffff7e,%esi
  0x0000000110e08253: mov    (%rsp),%rbp
  0x0000000110e08257: mov    %ebx,0x20(%rsp)
  0x0000000110e0825b: mov    %ebx,0x24(%rsp)
  0x0000000110e0825f: mov    %r13d,0x28(%rsp)
  0x0000000110e08264: mov    %r8d,0x2c(%rsp)
  0x0000000110e08269: mov    %r11d,0x30(%rsp)
  0x0000000110e0826e: xchg   %ax,%ax
  0x0000000110e08270: vzeroupper 
  0x0000000110e08273: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [16]=Oop [44]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e08278: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0827a: mov    $0xffffff4d,%esi
  0x0000000110e0827f: mov    %ebx,0x20(%rsp)
  0x0000000110e08283: mov    %r8d,0x24(%rsp)
  0x0000000110e08288: mov    %ebx,0x28(%rsp)
  0x0000000110e0828c: vzeroupper 
  0x0000000110e0828f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e08294: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08296: mov    $0xffffff4d,%esi
  0x0000000110e0829b: mov    (%rsp),%rbp
  0x0000000110e0829f: mov    %ebx,0x18(%rsp)
  0x0000000110e082a3: mov    %r13d,0x1c(%rsp)
  0x0000000110e082a8: mov    %ecx,0x20(%rsp)
  0x0000000110e082ac: vzeroupper 
  0x0000000110e082af: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e082b4: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e082b6: mov    $0xffffff4d,%esi
  0x0000000110e082bb: mov    %ebx,0x20(%rsp)
  0x0000000110e082bf: mov    %r8d,0x24(%rsp)
  0x0000000110e082c4: mov    %ebx,0x28(%rsp)
  0x0000000110e082c8: mov    %r8d,0x2c(%rsp)
  0x0000000110e082cd: data16 xchg %ax,%ax
  0x0000000110e082d0: vzeroupper 
  0x0000000110e082d3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e082d8: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e082da: mov    $0xffffff4d,%esi
  0x0000000110e082df: mov    %ebx,0x20(%rsp)
  0x0000000110e082e3: mov    %r8d,0x24(%rsp)
  0x0000000110e082e8: mov    %r8d,0x28(%rsp)
  0x0000000110e082ed: data16 xchg %ax,%ax
  0x0000000110e082f0: vzeroupper 
  0x0000000110e082f3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e082f8: ud2                       ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e082fa: movslq %r9d,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e082fd: jmpq   0x0000000110e07f8d
  0x0000000110e08302: add    $0xfffffffffffffffe,%rcx
  0x0000000110e08306: mov    %r10,%rdi
  0x0000000110e08309: xor    %rax,%rax
  0x0000000110e0830c: cmp    $0x8,%rcx
  0x0000000110e08310: jg     0x0000000110e08322
  0x0000000110e08312: dec    %rcx
  0x0000000110e08315: js     0x0000000110e08329
  0x0000000110e08317: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e0831b: dec    %rcx
  0x0000000110e0831e: jge    0x0000000110e08317
  0x0000000110e08320: jmp    0x0000000110e08329
  0x0000000110e08322: shl    $0x3,%rcx
  0x0000000110e08326: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e08329: jmpq   0x0000000110e08079  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0832e: mov    $0xffffffcc,%esi
  0x0000000110e08333: mov    (%rsp),%rbp
  0x0000000110e08337: mov    0x10(%rsp),%r10
  0x0000000110e0833c: mov    %r10,0x8(%rsp)
  0x0000000110e08341: mov    %ebx,0x10(%rsp)
  0x0000000110e08345: mov    %r13d,0x14(%rsp)
  0x0000000110e0834a: mov    %r8d,0x20(%rsp)
  0x0000000110e0834f: mov    %r9d,0x28(%rsp)
  0x0000000110e08354: vzeroupper 
  0x0000000110e08357: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [32]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0835c: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0835e: mov    %edx,%ebp
  0x0000000110e08360: mov    %r15,%rsi
  0x0000000110e08363: vzeroupper 
  0x0000000110e08366: movabs $0x107aec8aa,%r10
  0x0000000110e08370: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e08373: mov    %ebp,%edx
  0x0000000110e08375: jmpq   0x0000000110e08084
  0x0000000110e0837a: mov    $0xfffffff6,%esi
  0x0000000110e0837f: nop
  0x0000000110e08380: vzeroupper 
  0x0000000110e08383: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e08388: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0838a: mov    $0xfffffff6,%esi
  0x0000000110e0838f: nop
  0x0000000110e08390: vzeroupper 
  0x0000000110e08393: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e08398: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e0839a: mov    $0xffffff4d,%esi
  0x0000000110e0839f: mov    (%rsp),%rbp
  0x0000000110e083a3: mov    %ecx,0x8(%rsp)
  0x0000000110e083a7: mov    %r8d,0xc(%rsp)
  0x0000000110e083ac: mov    %rdx,0x18(%rsp)
  0x0000000110e083b1: data16 xchg %ax,%ax
  0x0000000110e083b4: vzeroupper 
  0x0000000110e083b7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [24]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 628)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e083bc: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e083be: mov    %rax,%rsi
  0x0000000110e083c1: jmp    0x0000000110e083c6  ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e083c3: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 628)
                                                ; - java.lang.StringBuilder::append@4 (line 213)

  0x0000000110e083c6: vzeroupper 
  0x0000000110e083c9: add    $0x60,%rsp
  0x0000000110e083cd: pop    %rbp
  0x0000000110e083ce: jmpq   0x0000000110dc8700  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; - java.lang.StringBuilder::append@4 (line 213)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e083d3: hlt    
  0x0000000110e083d4: hlt    
  0x0000000110e083d5: hlt    
  0x0000000110e083d6: hlt    
  0x0000000110e083d7: hlt    
  0x0000000110e083d8: hlt    
  0x0000000110e083d9: hlt    
  0x0000000110e083da: hlt    
  0x0000000110e083db: hlt    
  0x0000000110e083dc: hlt    
  0x0000000110e083dd: hlt    
  0x0000000110e083de: hlt    
  0x0000000110e083df: hlt    
[Stub Code]
  0x0000000110e083e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e083ea: jmpq   0x0000000110e083ea  ;   {runtime_call}
[Exception Handler]
  0x0000000110e083ef: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e083f4: callq  0x0000000110e083f9
  0x0000000110e083f9: subq   $0x5,(%rsp)
  0x0000000110e083fe: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e08403: hlt    
  0x0000000110e08404: hlt    
  0x0000000110e08405: hlt    
  0x0000000110e08406: hlt    
  0x0000000110e08407: hlt    

ImmutableOopMap{r8=Oop r9=Oop [0]=Oop [16]=Oop }pc offsets: 471 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop }pc offsets: 640 
ImmutableOopMap{[0]=Oop [16]=Oop [24]=NarrowOop }pc offsets: 1312 
ImmutableOopMap{rbp=Oop [32]=Oop }pc offsets: 1388 
ImmutableOopMap{rbp=Oop [16]=Oop [44]=NarrowOop }pc offsets: 1432 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 1460 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 1492 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 1528 1560 
ImmutableOopMap{rbp=Oop [8]=Oop [32]=NarrowOop }pc offsets: 1660 
ImmutableOopMap{}pc offsets: 1704 1720 
ImmutableOopMap{rbp=Oop [24]=Oop }pc offsets: 1756 Compiled method (c2)    1401  167             java.lang.AbstractStringBuilder::append (43 bytes)
 total in heap  [0x0000000110e15d10,0x0000000110e17038] = 4904
 relocation     [0x0000000110e15e88,0x0000000110e15ec8] = 64
 main code      [0x0000000110e15ee0,0x0000000110e16640] = 1888
 stub code      [0x0000000110e16640,0x0000000110e16668] = 40
 metadata       [0x0000000110e16668,0x0000000110e166d8] = 112
 scopes data    [0x0000000110e166d8,0x0000000110e16a20] = 840
 scopes pcs     [0x0000000110e16a20,0x0000000110e16fd0] = 1456
 dependencies   [0x0000000110e16fd0,0x0000000110e16fd8] = 8
 handler table  [0x0000000110e16fd8,0x0000000110e17008] = 48
 nul chk table  [0x0000000110e17008,0x0000000110e17038] = 48
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;  [0x0000000110e15ee0, 0x0000000110e16668]  1928 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0ced8} 'append' '(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/CharSequence'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000110e15ee0: mov    0x8(%rsi),%r10d
  0x0000000110e15ee4: movabs $0x800000000,%r12
  0x0000000110e15eee: add    %r12,%r10
  0x0000000110e15ef1: xor    %r12,%r12
  0x0000000110e15ef4: cmp    %r10,%rax
  0x0000000110e15ef7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e15efd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e15f00: mov    %eax,-0x14000(%rsp)
  0x0000000110e15f07: push   %rbp
  0x0000000110e15f08: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 628)

  0x0000000110e15f0c: mov    %ecx,%ebx
  0x0000000110e15f0e: mov    %rsi,0x10(%rsp)
  0x0000000110e15f13: mov    0x8(%rdx),%r11d    ; implicit exception: dispatches to 0x0000000110e165ee
  0x0000000110e15f17: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e15f1e: jne    0x0000000110e16455  ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)

  0x0000000110e15f24: mov    %rdx,0x8(%rsp)
  0x0000000110e15f29: mov    0xc(%rdx),%edi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)

  0x0000000110e15f2c: mov    0xc(%r12,%rdi,8),%ebp  ; implicit exception: dispatches to 0x0000000110e165ce
  0x0000000110e15f31: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)

  0x0000000110e15f35: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)

  0x0000000110e15f37: test   %ebx,%ebx
  0x0000000110e15f39: jl     0x0000000110e164aa  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)

  0x0000000110e15f3f: cmp    %r8d,%ebx
  0x0000000110e15f42: jg     0x0000000110e164fa  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)

  0x0000000110e15f48: mov    %r8d,%r13d
  0x0000000110e15f4b: cmp    %ebp,%r8d
  0x0000000110e15f4e: jg     0x0000000110e16526  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)

  0x0000000110e15f54: mov    0x14(%rsi),%r8d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e15f58: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ; implicit exception: dispatches to 0x0000000110e165de
  0x0000000110e15f5d: mov    %ecx,%r10d
  0x0000000110e15f60: mov    %r13d,%r14d
  0x0000000110e15f63: sub    %ebx,%r14d         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 632)

  0x0000000110e15f66: mov    0xc(%rsi),%r11d    ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@25 (line 633)

  0x0000000110e15f6a: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e15f6e: mov    %r14d,%edx
  0x0000000110e15f71: add    %r11d,%edx         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 633)

  0x0000000110e15f74: mov    %ebp,0x28(%rsp)
  0x0000000110e15f78: mov    %ebp,%r9d
  0x0000000110e15f7b: sar    %cl,%r9d           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@9 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e15f7e: mov    %edx,%esi
  0x0000000110e15f80: sub    %r9d,%esi
  0x0000000110e15f83: test   %esi,%esi
  0x0000000110e15f85: jg     0x0000000110e16110  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e15f8b: mov    %r10d,%r9d         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@38 (line 175)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e15f8e: test   %ecx,%ecx
  0x0000000110e15f90: jne    0x0000000110e164d2  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e15f96: cmp    %r13d,%ebx
  0x0000000110e15f99: jge    0x0000000110e160ec  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e15f9f: test   %r9d,%r9d
  0x0000000110e15fa2: jne    0x0000000110e1647a
  0x0000000110e15fa8: mov    0xc(%r12,%rdi,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ; implicit exception: dispatches to 0x0000000110e1647a
  0x0000000110e15fad: cmp    %r9d,%ebx
  0x0000000110e15fb0: jae    0x0000000110e1647a
  0x0000000110e15fb6: movslq %r9d,%r9
  0x0000000110e15fb9: movslq %r13d,%r10
  0x0000000110e15fbc: mov    %r10,%rcx
  0x0000000110e15fbf: dec    %rcx
  0x0000000110e15fc2: cmp    %r9,%rcx
  0x0000000110e15fc5: jae    0x0000000110e1647a
  0x0000000110e15fcb: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x0000000110e1647a
  0x0000000110e15fd0: mov    %r11d,%edx
  0x0000000110e15fd3: sub    %ebx,%edx          ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e15fd5: movslq %r9d,%r9
  0x0000000110e15fd8: movslq %edx,%rcx
  0x0000000110e15fdb: movslq %ebx,%rsi
  0x0000000110e15fde: add    %rcx,%rsi
  0x0000000110e15fe1: cmp    %r9,%rsi
  0x0000000110e15fe4: jae    0x0000000110e1647a
  0x0000000110e15fea: add    %rcx,%r10
  0x0000000110e15fed: dec    %r10
  0x0000000110e15ff0: cmp    %r9,%r10
  0x0000000110e15ff3: jae    0x0000000110e1647a
  0x0000000110e15ff9: lea    (%r12,%rdi,8),%r9
  0x0000000110e15ffd: mov    %ebx,%edi
  0x0000000110e15fff: inc    %edi
  0x0000000110e16001: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@8 (line 1694)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16005: mov    %ebx,%ecx          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16007: movsbl 0x10(%r9,%rcx,1),%r10d
  0x0000000110e1600d: mov    %ecx,%eax
  0x0000000110e1600f: add    %edx,%eax
  0x0000000110e16011: mov    %r10b,0x10(%r8,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16016: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16018: cmp    %edi,%ecx
  0x0000000110e1601a: jl     0x0000000110e16007  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e1601c: mov    %r13d,%edi
  0x0000000110e1601f: add    $0xfffffffd,%edi
  0x0000000110e16022: mov    $0x80000000,%r10d
  0x0000000110e16028: cmp    %edi,%r13d
  0x0000000110e1602b: cmovl  %r10d,%edi
  0x0000000110e1602f: cmp    %edi,%ecx
  0x0000000110e16031: jge    0x0000000110e160cc
  0x0000000110e16037: mov    $0xfa0,%r10d
  0x0000000110e1603d: jmp    0x0000000110e1604d
  0x0000000110e1603f: vmovd  %xmm1,%ebx
  0x0000000110e16043: vmovd  %xmm0,%r13d
  0x0000000110e16048: vmovd  %xmm2,%r11d
  0x0000000110e1604d: mov    %edi,%esi
  0x0000000110e1604f: sub    %ecx,%esi
  0x0000000110e16051: cmp    %r10d,%esi
  0x0000000110e16054: cmovg  %r10d,%esi
  0x0000000110e16058: add    %ecx,%esi
  0x0000000110e1605a: vmovd  %ebx,%xmm1
  0x0000000110e1605e: vmovd  %r13d,%xmm0
  0x0000000110e16063: vmovd  %r11d,%xmm2
  0x0000000110e16068: nopl   0x0(%rax,%rax,1)   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16070: movsbl 0x10(%r9,%rcx,1),%ebx
  0x0000000110e16076: movslq %ecx,%r11
  0x0000000110e16079: mov    %ecx,%eax
  0x0000000110e1607b: add    %edx,%eax          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e1607d: mov    %bl,0x10(%r8,%rax,1)
  0x0000000110e16082: movslq %eax,%r13
  0x0000000110e16085: movsbl 0x11(%r9,%r11,1),%ebp
  0x0000000110e1608b: mov    %bpl,0x11(%r8,%r13,1)
  0x0000000110e16090: movsbl 0x12(%r9,%r11,1),%ebx
  0x0000000110e16096: mov    %bl,0x12(%r8,%r13,1)
  0x0000000110e1609b: movsbl 0x13(%r9,%r11,1),%ebx
  0x0000000110e160a1: mov    %bl,0x13(%r8,%r13,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160a6: add    $0x4,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160a9: cmp    %esi,%ecx
  0x0000000110e160ab: jl     0x0000000110e16070  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e160ad: mov    0x108(%r15),%r11
  0x0000000110e160b4: add    $0x4,%eax          ; ImmutableOopMap{r8=Oop r9=Oop [8]=Oop [16]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160b7: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@100 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ;   {poll}
  0x0000000110e160ba: cmp    %edi,%ecx
  0x0000000110e160bc: jl     0x0000000110e1603f
  0x0000000110e160c2: vmovd  %xmm0,%r13d
  0x0000000110e160c7: vmovd  %xmm2,%r11d
  0x0000000110e160cc: cmp    %r13d,%ecx
  0x0000000110e160cf: jge    0x0000000110e160ec
  0x0000000110e160d1: data16 xchg %ax,%ax       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160d4: movsbl 0x10(%r9,%rcx,1),%ebx
  0x0000000110e160da: mov    %ecx,%r10d
  0x0000000110e160dd: add    %edx,%r10d
  0x0000000110e160e0: mov    %bl,0x10(%r8,%r10,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@56 (line 1698)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160e5: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@97 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160e7: cmp    %r13d,%ecx
  0x0000000110e160ea: jl     0x0000000110e160d4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e160ec: add    %r11d,%r14d
  0x0000000110e160ef: mov    0x10(%rsp),%r10
  0x0000000110e160f4: mov    %r14d,0xc(%r10)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 628)

  0x0000000110e160f8: mov    0x10(%rsp),%rax
  0x0000000110e160fd: vzeroupper 
  0x0000000110e16100: add    $0x60,%rsp
  0x0000000110e16104: pop    %rbp
  0x0000000110e16105: mov    0x108(%r15),%r10
  0x0000000110e1610c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1610f: retq   
  0x0000000110e16110: shl    %r9d               ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16113: mov    %r9d,%r11d
  0x0000000110e16116: sub    %edx,%r11d
  0x0000000110e16119: add    $0x2,%r11d
  0x0000000110e1611d: test   %r11d,%r11d
  0x0000000110e16120: jge    0x0000000110e1632b  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@20 (line 201)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16126: mov    %edx,%r9d          ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 204)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16129: test   %r9d,%r9d
  0x0000000110e1612c: jle    0x0000000110e1613f  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@35 (line 205)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e1612e: mov    $0x7ffffff7,%r10d
  0x0000000110e16134: sar    %cl,%r10d
  0x0000000110e16137: sub    %r9d,%r10d
  0x0000000110e1613a: test   %r10d,%r10d
  0x0000000110e1613d: jge    0x0000000110e1617d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@45 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e1613f: mov    %r14d,0x1c(%rsp)
  0x0000000110e16144: mov    %r8d,0x18(%rsp)
  0x0000000110e16149: mov    %r13d,0x4(%rsp)
  0x0000000110e1614e: mov    %ebx,(%rsp)
  0x0000000110e16151: mov    0x10(%rsp),%rbp
  0x0000000110e16156: mov    %rbp,%rsi
  0x0000000110e16159: data16 xchg %ax,%ax
  0x0000000110e1615c: vzeroupper 
  0x0000000110e1615f: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [24]=NarrowOop }
                                                ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ;   {optimized virtual_call}
  0x0000000110e16164: movsbl 0x10(%rbp),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16168: mov    (%rsp),%ebx
  0x0000000110e1616b: mov    0x4(%rsp),%r13d
  0x0000000110e16170: mov    0x18(%rsp),%r8d
  0x0000000110e16175: mov    0x1c(%rsp),%r14d
  0x0000000110e1617a: mov    %eax,%r9d          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@50 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e1617d: shl    %cl,%r9d           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@31 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16180: cmp    $0x100000,%r9d
  0x0000000110e16187: ja     0x0000000110e1654e
  0x0000000110e1618d: movslq %r9d,%rcx
  0x0000000110e16190: mov    %r9d,%r10d         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16193: mov    0x28(%rsp),%r11d
  0x0000000110e16198: cmp    %r10d,%r11d
  0x0000000110e1619b: mov    %r10d,%ebp
  0x0000000110e1619e: cmovl  %r11d,%ebp         ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e161a2: cmp    %ebp,%r11d
  0x0000000110e161a5: jb     0x0000000110e16582
  0x0000000110e161ab: cmp    %ebp,%r10d
  0x0000000110e161ae: jb     0x0000000110e16582  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e161b4: add    $0x17,%rcx
  0x0000000110e161b8: mov    %rcx,%rax
  0x0000000110e161bb: and    $0xfffffffffffffff8,%rax  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e161bf: cmp    $0x100000,%r9d
  0x0000000110e161c6: ja     0x0000000110e163ce
  0x0000000110e161cc: mov    0x118(%r15),%r10
  0x0000000110e161d3: mov    %r10,%r11
  0x0000000110e161d6: add    %rax,%r11
  0x0000000110e161d9: cmp    0x128(%r15),%r11
  0x0000000110e161e0: jae    0x0000000110e163ce  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e161e6: mov    %r11,0x118(%r15)
  0x0000000110e161ed: prefetchnta 0xc0(%r11)
  0x0000000110e161f5: movq   $0x1,(%r10)
  0x0000000110e161fc: prefetchnta 0x100(%r11)
  0x0000000110e16204: movl   $0x820,0x8(%r10)   ;   {metadata({type array byte})}
  0x0000000110e1620c: mov    %r9d,0xc(%r10)
  0x0000000110e16210: prefetchnta 0x140(%r11)
  0x0000000110e16218: prefetchnta 0x180(%r11)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16220: mov    %r10,(%rsp)
  0x0000000110e16224: add    $0x10,%r10
  0x0000000110e16228: shr    $0x3,%rcx
  0x0000000110e1622c: mov    (%rsp),%r11
  0x0000000110e16230: mov    %r11,%rdx
  0x0000000110e16233: shr    $0x3,%rdx          ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16237: test   %ebp,%ebp
  0x0000000110e16239: je     0x0000000110e16556
  0x0000000110e1623f: mov    %edx,0x18(%rsp)
  0x0000000110e16243: lea    (%r12,%r8,8),%r11  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16247: lea    0x10(%r12,%r8,8),%r8
  0x0000000110e1624c: cmp    %r9d,%ebp
  0x0000000110e1624f: jl     0x0000000110e16334
  0x0000000110e16255: add    $0xfffffffffffffff0,%rax
  0x0000000110e16259: shr    $0x3,%rax
  0x0000000110e1625d: mov    %r8,%rdi
  0x0000000110e16260: mov    %r10,%rsi
  0x0000000110e16263: mov    %rax,%rdx
  0x0000000110e16266: vzeroupper 
  0x0000000110e16269: movabs $0x110d9f080,%r10
  0x0000000110e16273: callq  *%r10
  0x0000000110e16276: mov    0x18(%rsp),%edx
  0x0000000110e1627a: cmpb   $0x0,0x30(%r15)
  0x0000000110e1627f: jne    0x0000000110e16392
  0x0000000110e16285: mov    0x10(%rsp),%r10
  0x0000000110e1628a: mov    %edx,0x14(%r10)
  0x0000000110e1628e: mov    (%rsp),%r10
  0x0000000110e16292: mov    0x10(%rsp),%r11
  0x0000000110e16297: xor    %r11,%r10
  0x0000000110e1629a: shr    $0x14,%r10
  0x0000000110e1629e: test   %r10,%r10
  0x0000000110e162a1: je     0x0000000110e16302
  0x0000000110e162a3: shr    $0x9,%r11
  0x0000000110e162a7: movabs $0x110569000,%rdi
  0x0000000110e162b1: add    %r11,%rdi
  0x0000000110e162b4: cmpb   $0x20,(%rdi)
  0x0000000110e162b7: je     0x0000000110e16302
  0x0000000110e162b9: mov    0x80(%r15),%r10
  0x0000000110e162c0: mov    0x70(%r15),%r11
  0x0000000110e162c4: lock addl $0x0,-0x40(%rsp)
  0x0000000110e162ca: cmpb   $0x0,(%rdi)
  0x0000000110e162cd: je     0x0000000110e162f9
  0x0000000110e162cf: movb   $0x0,(%rdi)
  0x0000000110e162d2: test   %r11,%r11
  0x0000000110e162d5: je     0x0000000110e162e6
  0x0000000110e162d7: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e162dc: add    $0xfffffffffffffff8,%r11
  0x0000000110e162e0: mov    %r11,0x70(%r15)
  0x0000000110e162e4: jmp    0x0000000110e162f9
  0x0000000110e162e6: mov    %r15,%rsi
  0x0000000110e162e9: vzeroupper 
  0x0000000110e162ec: movabs $0x107aec8ce,%r10
  0x0000000110e162f6: callq  *%r10
  0x0000000110e162f9: mov    0x10(%rsp),%r10
  0x0000000110e162fe: mov    0x14(%r10),%edx    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16302: mov    0x10(%rsp),%r10
  0x0000000110e16307: movsbl 0x10(%r10),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e1630c: mov    0x8(%rsp),%r10
  0x0000000110e16311: movsbl 0x14(%r10),%r9d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16316: mov    0xc(%r10),%edi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - java.lang.AbstractStringBuilder::appendChars@31 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e1631a: mov    0x10(%rsp),%r10
  0x0000000110e1631f: mov    0xc(%r10),%r11d    ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@17 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e16323: mov    %edx,%r8d
  0x0000000110e16326: jmpq   0x0000000110e15f8e
  0x0000000110e1632b: add    $0x2,%r9d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@15 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e1632f: jmpq   0x0000000110e16129
  0x0000000110e16334: movslq %ebp,%rdx
  0x0000000110e16337: mov    %rdx,%r11
  0x0000000110e1633a: add    $0x10,%r11
  0x0000000110e1633e: mov    %r11,%r9
  0x0000000110e16341: and    $0xfffffffffffffff8,%r9
  0x0000000110e16345: mov    (%rsp),%rdi
  0x0000000110e16349: add    %r9,%rdi
  0x0000000110e1634c: shr    $0x3,%r11
  0x0000000110e16350: sub    %r11,%rcx
  0x0000000110e16353: xor    %rax,%rax
  0x0000000110e16356: cmp    $0x8,%rcx
  0x0000000110e1635a: jg     0x0000000110e1636c
  0x0000000110e1635c: dec    %rcx
  0x0000000110e1635f: js     0x0000000110e16373
  0x0000000110e16361: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e16365: dec    %rcx
  0x0000000110e16368: jge    0x0000000110e16361
  0x0000000110e1636a: jmp    0x0000000110e16373
  0x0000000110e1636c: shl    $0x3,%rcx
  0x0000000110e16370: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e16373: mov    %r8,%rdi
  0x0000000110e16376: mov    %r10,%rsi
  0x0000000110e16379: vzeroupper 
  0x0000000110e1637c: movabs $0x110d9ec00,%r10
  0x0000000110e16386: callq  *%r10
  0x0000000110e16389: mov    0x18(%rsp),%edx
  0x0000000110e1638d: jmpq   0x0000000110e1627a
  0x0000000110e16392: mov    0x10(%rsp),%r10
  0x0000000110e16397: mov    0x14(%r10),%r11d
  0x0000000110e1639b: test   %r11d,%r11d
  0x0000000110e1639e: je     0x0000000110e16285
  0x0000000110e163a4: mov    0x38(%r15),%r10
  0x0000000110e163a8: mov    %r11,%rdi
  0x0000000110e163ab: shl    $0x3,%rdi
  0x0000000110e163af: test   %r10,%r10
  0x0000000110e163b2: je     0x0000000110e165b2
  0x0000000110e163b8: mov    0x48(%r15),%r11
  0x0000000110e163bc: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e163c1: add    $0xfffffffffffffff8,%r10
  0x0000000110e163c5: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e163c9: jmpq   0x0000000110e16285
  0x0000000110e163ce: mov    %rax,0x38(%rsp)
  0x0000000110e163d3: mov    %rcx,0x30(%rsp)
  0x0000000110e163d8: mov    %r9d,0x28(%rsp)
  0x0000000110e163dd: mov    %r14d,0x24(%rsp)
  0x0000000110e163e2: mov    %r8d,0x20(%rsp)
  0x0000000110e163e7: mov    0x8(%rsp),%r10
  0x0000000110e163ec: mov    %r10,0x18(%rsp)
  0x0000000110e163f1: mov    %r13d,0xc(%rsp)
  0x0000000110e163f6: mov    %ebx,0x8(%rsp)
  0x0000000110e163fa: rex.W pushq 0x10(%rsp)
  0x0000000110e163ff: rex.W popq (%rsp)
  0x0000000110e16403: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e1640d: mov    %r9d,%edx
  0x0000000110e16410: vzeroupper 
  0x0000000110e16413: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [24]=Oop [32]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e16418: mov    %rax,%r10
  0x0000000110e1641b: rex.W pushq (%rsp)
  0x0000000110e1641f: rex.W popq 0x10(%rsp)
  0x0000000110e16424: mov    0x8(%rsp),%ebx
  0x0000000110e16428: mov    0xc(%rsp),%r13d
  0x0000000110e1642d: mov    0x18(%rsp),%r11
  0x0000000110e16432: mov    %r11,0x8(%rsp)
  0x0000000110e16437: mov    0x20(%rsp),%r8d
  0x0000000110e1643c: mov    0x24(%rsp),%r14d
  0x0000000110e16441: mov    0x28(%rsp),%r9d
  0x0000000110e16446: mov    0x30(%rsp),%rcx
  0x0000000110e1644b: mov    0x38(%rsp),%rax
  0x0000000110e16450: jmpq   0x0000000110e16220
  0x0000000110e16455: mov    $0xffffffde,%esi
  0x0000000110e1645a: mov    0x10(%rsp),%rbp
  0x0000000110e1645f: mov    %ecx,0x8(%rsp)
  0x0000000110e16463: mov    %r8d,0xc(%rsp)
  0x0000000110e16468: mov    %rdx,0x18(%rsp)
  0x0000000110e1646d: data16 xchg %ax,%ax
  0x0000000110e16470: vzeroupper 
  0x0000000110e16473: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [24]=Oop }
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e16478: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e1647a: mov    $0xffffff7e,%esi
  0x0000000110e1647f: rex.W pushq 0x10(%rsp)
  0x0000000110e16484: rex.W popq (%rsp)
  0x0000000110e16488: mov    %ebx,0x18(%rsp)
  0x0000000110e1648c: mov    %ebx,0x1c(%rsp)
  0x0000000110e16490: mov    %r13d,0x20(%rsp)
  0x0000000110e16495: mov    %r8d,0x24(%rsp)
  0x0000000110e1649a: mov    %r11d,0x28(%rsp)
  0x0000000110e1649f: nop
  0x0000000110e164a0: vzeroupper 
  0x0000000110e164a3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [36]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e164a8: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@25 (line 1695)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e164aa: mov    $0xffffff4d,%esi
  0x0000000110e164af: rex.W pushq 0x10(%rsp)
  0x0000000110e164b4: rex.W popq (%rsp)
  0x0000000110e164b8: mov    %ebx,0x18(%rsp)
  0x0000000110e164bc: mov    %r8d,0x1c(%rsp)
  0x0000000110e164c1: mov    %ebx,0x20(%rsp)
  0x0000000110e164c5: data16 xchg %ax,%ax
  0x0000000110e164c8: vzeroupper 
  0x0000000110e164cb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@1 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e164d0: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e164d2: mov    $0xffffff4d,%esi
  0x0000000110e164d7: rex.W pushq 0x10(%rsp)
  0x0000000110e164dc: rex.W popq (%rsp)
  0x0000000110e164e0: mov    %ebx,0x10(%rsp)
  0x0000000110e164e4: mov    %r13d,0x14(%rsp)
  0x0000000110e164e9: mov    %ecx,0x18(%rsp)
  0x0000000110e164ed: data16 xchg %ax,%ax
  0x0000000110e164f0: vzeroupper 
  0x0000000110e164f3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e164f8: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.AbstractStringBuilder::appendChars@1 (line 1693)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)

  0x0000000110e164fa: mov    $0xffffff4d,%esi
  0x0000000110e164ff: rex.W pushq 0x10(%rsp)
  0x0000000110e16504: rex.W popq (%rsp)
  0x0000000110e16508: mov    %ebx,0x18(%rsp)
  0x0000000110e1650c: mov    %r8d,0x1c(%rsp)
  0x0000000110e16511: mov    %ebx,0x20(%rsp)
  0x0000000110e16515: mov    %r8d,0x24(%rsp)
  0x0000000110e1651a: xchg   %ax,%ax
  0x0000000110e1651c: vzeroupper 
  0x0000000110e1651f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e16524: ud2                       ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@6 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)

  0x0000000110e16526: mov    $0xffffff4d,%esi
  0x0000000110e1652b: rex.W pushq 0x10(%rsp)
  0x0000000110e16530: rex.W popq (%rsp)
  0x0000000110e16534: mov    %ebx,0x18(%rsp)
  0x0000000110e16538: mov    %r8d,0x1c(%rsp)
  0x0000000110e1653d: mov    %r8d,0x20(%rsp)
  0x0000000110e16542: xchg   %ax,%ax
  0x0000000110e16544: vzeroupper 
  0x0000000110e16547: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1654c: ud2                       ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::checkRange@11 (line 1715)
                                                ; - java.lang.AbstractStringBuilder::append@15 (line 631)

  0x0000000110e1654e: movslq %r9d,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16551: jmpq   0x0000000110e16190
  0x0000000110e16556: add    $0xfffffffffffffffe,%rcx
  0x0000000110e1655a: mov    %r10,%rdi
  0x0000000110e1655d: xor    %rax,%rax
  0x0000000110e16560: cmp    $0x8,%rcx
  0x0000000110e16564: jg     0x0000000110e16576
  0x0000000110e16566: dec    %rcx
  0x0000000110e16569: js     0x0000000110e1657d
  0x0000000110e1656b: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1656f: dec    %rcx
  0x0000000110e16572: jge    0x0000000110e1656b
  0x0000000110e16574: jmp    0x0000000110e1657d
  0x0000000110e16576: shl    $0x3,%rcx
  0x0000000110e1657a: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1657d: jmpq   0x0000000110e1627a  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16582: mov    $0xffffffcc,%esi
  0x0000000110e16587: mov    0x10(%rsp),%rbp
  0x0000000110e1658c: mov    0x8(%rsp),%r10
  0x0000000110e16591: mov    %r10,(%rsp)
  0x0000000110e16595: mov    %ebx,0x8(%rsp)
  0x0000000110e16599: mov    %r13d,0xc(%rsp)
  0x0000000110e1659e: mov    %r8d,0x18(%rsp)
  0x0000000110e165a3: mov    %r9d,0x20(%rsp)
  0x0000000110e165a8: vzeroupper 
  0x0000000110e165ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [24]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e165b0: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e165b2: mov    %edx,%ebp
  0x0000000110e165b4: mov    %r15,%rsi
  0x0000000110e165b7: vzeroupper 
  0x0000000110e165ba: movabs $0x107aec8aa,%r10
  0x0000000110e165c4: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e165c7: mov    %ebp,%edx
  0x0000000110e165c9: jmpq   0x0000000110e16285
  0x0000000110e165ce: mov    $0xfffffff6,%esi
  0x0000000110e165d3: nop
  0x0000000110e165d4: vzeroupper 
  0x0000000110e165d7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e165dc: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 631)

  0x0000000110e165de: mov    $0xfffffff6,%esi
  0x0000000110e165e3: nop
  0x0000000110e165e4: vzeroupper 
  0x0000000110e165e7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e165ec: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e165ee: mov    $0xffffff4d,%esi
  0x0000000110e165f3: mov    0x10(%rsp),%rbp
  0x0000000110e165f8: mov    %ecx,(%rsp)
  0x0000000110e165fb: mov    %r8d,0x4(%rsp)
  0x0000000110e16600: mov    %rdx,0x10(%rsp)
  0x0000000110e16605: data16 xchg %ax,%ax
  0x0000000110e16608: vzeroupper 
  0x0000000110e1660b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 628)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e16610: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16612: mov    %rax,%rsi
  0x0000000110e16615: jmp    0x0000000110e1661a  ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@31 (line 633)

  0x0000000110e16617: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 628)

  0x0000000110e1661a: vzeroupper 
  0x0000000110e1661d: add    $0x60,%rsp
  0x0000000110e16621: pop    %rbp
  0x0000000110e16622: jmpq   0x0000000110dc8700  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::appendChars@28 (line 1696)
                                                ; - java.lang.AbstractStringBuilder::append@38 (line 634)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e16627: hlt    
  0x0000000110e16628: hlt    
  0x0000000110e16629: hlt    
  0x0000000110e1662a: hlt    
  0x0000000110e1662b: hlt    
  0x0000000110e1662c: hlt    
  0x0000000110e1662d: hlt    
  0x0000000110e1662e: hlt    
  0x0000000110e1662f: hlt    
  0x0000000110e16630: hlt    
  0x0000000110e16631: hlt    
  0x0000000110e16632: hlt    
  0x0000000110e16633: hlt    
  0x0000000110e16634: hlt    
  0x0000000110e16635: hlt    
  0x0000000110e16636: hlt    
  0x0000000110e16637: hlt    
  0x0000000110e16638: hlt    
  0x0000000110e16639: hlt    
  0x0000000110e1663a: hlt    
  0x0000000110e1663b: hlt    
  0x0000000110e1663c: hlt    
  0x0000000110e1663d: hlt    
  0x0000000110e1663e: hlt    
  0x0000000110e1663f: hlt    
[Stub Code]
  0x0000000110e16640: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e1664a: jmpq   0x0000000110e1664a  ;   {runtime_call}
[Exception Handler]
  0x0000000110e1664f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e16654: callq  0x0000000110e16659
  0x0000000110e16659: subq   $0x5,(%rsp)
  0x0000000110e1665e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e16663: hlt    
  0x0000000110e16664: hlt    
  0x0000000110e16665: hlt    
  0x0000000110e16666: hlt    
  0x0000000110e16667: hlt    

ImmutableOopMap{r8=Oop r9=Oop [8]=Oop [16]=Oop }pc offsets: 471 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [24]=NarrowOop }pc offsets: 644 
ImmutableOopMap{[0]=Oop [24]=Oop [32]=NarrowOop }pc offsets: 1336 
ImmutableOopMap{rbp=Oop [24]=Oop }pc offsets: 1432 
ImmutableOopMap{[0]=Oop [8]=Oop [36]=NarrowOop }pc offsets: 1480 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 1520 1560 1604 1644 
ImmutableOopMap{rbp=Oop [0]=Oop [24]=NarrowOop }pc offsets: 1744 
ImmutableOopMap{}pc offsets: 1788 1804 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 1840 Compiled method (c2)    1450  168 %           FunctionalZipCode::runTest @ 11 (46 bytes)
 total in heap  [0x0000000110e18f90,0x0000000110e1a198] = 4616
 relocation     [0x0000000110e19108,0x0000000110e19188] = 128
 main code      [0x0000000110e191a0,0x0000000110e196a0] = 1280
 stub code      [0x0000000110e196a0,0x0000000110e196d8] = 56
 oops           [0x0000000110e196d8,0x0000000110e19718] = 64
 metadata       [0x0000000110e19718,0x0000000110e19830] = 280
 scopes data    [0x0000000110e19830,0x0000000110e19c08] = 984
 scopes pcs     [0x0000000110e19c08,0x0000000110e1a118] = 1296
 dependencies   [0x0000000110e1a118,0x0000000110e1a128] = 16
 handler table  [0x0000000110e1a128,0x0000000110e1a170] = 72
 nul chk table  [0x0000000110e1a170,0x0000000110e1a198] = 40
----------------------------------------------------------------------
FunctionalZipCode.runTest()I  [0x0000000110e191a0, 0x0000000110e196d8]  1336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011f169bd8} 'runTest' '()I' in 'FunctionalZipCode'
  0x0000000110e191a0: callq  0x0000000107df97f4  ;   {runtime_call os::breakpoint()}
  0x0000000110e191a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110e191b0: mov    %eax,-0x14000(%rsp)
  0x0000000110e191b7: push   %rbp
  0x0000000110e191b8: sub    $0x50,%rsp
  0x0000000110e191bc: mov    0x18(%rsi),%r13
  0x0000000110e191c0: mov    0x8(%rsi),%rbx
  0x0000000110e191c4: mov    0x10(%rsi),%ebp
  0x0000000110e191c7: mov    %rsi,%rdi
  0x0000000110e191ca: movabs $0x107e7aa82,%r10
  0x0000000110e191d4: callq  *%r10
  0x0000000110e191d7: test   %r13,%r13
  0x0000000110e191da: je     0x0000000110e195a0
  0x0000000110e191e0: mov    0x8(%r13),%r10d
  0x0000000110e191e4: cmp    $0x60040,%r10d     ;   {metadata('FunctionalZipCode')}
  0x0000000110e191eb: jne    0x0000000110e1956b
  0x0000000110e191f1: mov    %r13,%r11
  0x0000000110e191f4: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x0000000110e19632
  0x0000000110e191f8: movabs $0x800000000,%rsi
  0x0000000110e19202: add    %r10,%rsi
  0x0000000110e19205: mov    0x20(%rsi),%r10
  0x0000000110e19209: movabs $0x800020e98,%rax  ;   {metadata('java/util/Iterator')}
  0x0000000110e19213: cmp    %rax,%r10
  0x0000000110e19216: jne    0x0000000110e19546  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)

  0x0000000110e1921c: mov    0x8(%rbx),%r10d
  0x0000000110e19220: cmp    $0x3efb0,%r10d     ;   {metadata('java/util/ArrayList$Itr')}
  0x0000000110e19227: jne    0x0000000110e19634
  0x0000000110e1922d: test   %r11,%r11
  0x0000000110e19230: je     0x0000000110e1961a  ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110e19236: mov    $0x34bd8,%r8d      ;   {metadata('java/util/Optional')}
  0x0000000110e1923c: movabs $0x800000000,%rcx
  0x0000000110e19246: add    %r8,%rcx
  0x0000000110e19249: mov    $0x65040,%r8d      ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110e1924f: movabs $0x800000000,%r12
  0x0000000110e19259: add    %r12,%r8
  0x0000000110e1925c: xor    %r12,%r12
  0x0000000110e1925f: mov    %ebp,0x38(%rsp)
  0x0000000110e19263: jmpq   0x0000000110e192ef
  0x0000000110e19268: movabs $0x70ff049f0,%rcx  ;   {oop("null"{0x000000070ff049f0})}
  0x0000000110e19272: movabs $0x70fd69ec8,%rsi  ;   {oop("invalid zip code: {}"{0x000000070fd69ec8})}
  0x0000000110e1927c: movabs $0x70fd69f08,%rdx  ;   {oop("{}"{0x000000070fd69f08})}
  0x0000000110e19286: nop
  0x0000000110e19287: callq  0x0000000110d8ff00  ; ImmutableOopMap{[8]=Oop [24]=Oop }
                                                ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=1}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {optimized virtual_call}
  0x0000000110e1928c: movabs $0x70fd44b40,%r10  ;   {oop(a 'java/lang/Class'{0x000000070fd44b40} = 'Logger')}
  0x0000000110e19296: incl   0x70(%r10)         ;*putstatic errors {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@22 (line 8)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1929a: movabs $0x70ff4b4c8,%r10  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110e192a4: mov    %r10,0x28(%rsp)
  0x0000000110e192a9: nopl   0x0(%rax)          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@41 (line 56)

  0x0000000110e192b0: mov    0x38(%rsp),%r10d
  0x0000000110e192b5: inc    %r10d              ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e192b8: mov    0x108(%r15),%r11
  0x0000000110e192bf: mov    0x28(%rsp),%r8
  0x0000000110e192c4: mov    0xc(%r8),%r8d
  0x0000000110e192c8: test   %r8d,%r8d
  0x0000000110e192cb: mov    0x38(%rsp),%r8d
  0x0000000110e192d0: cmovne %r10d,%r8d         ; ImmutableOopMap{[8]=Oop [24]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@41 (line 56)

  0x0000000110e192d4: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@41 (line 56)
                                                ;   {poll}
  0x0000000110e192d7: mov    %r8d,0x38(%rsp)
  0x0000000110e192dc: mov    0x8(%rsp),%rbx
  0x0000000110e192e1: mov    0x18(%rsp),%r11
  0x0000000110e192e6: mov    (%rsp),%rcx
  0x0000000110e192ea: mov    0x10(%rsp),%r8     ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)

  0x0000000110e192ef: mov    0x18(%rbx),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@5 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110e192f3: mov    0x10(%r12,%r10,8),%r9d  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ; implicit exception: dispatches to 0x0000000110e19662
  0x0000000110e192f8: mov    %r8,0x10(%rsp)
  0x0000000110e192fd: mov    %rcx,(%rsp)
  0x0000000110e19301: mov    %r11,0x18(%rsp)
  0x0000000110e19306: mov    %rbx,0x8(%rsp)
  0x0000000110e1930b: mov    0xc(%rbx),%r11d    ;*getfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@1 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110e1930f: cmp    %r9d,%r11d
  0x0000000110e19312: je     0x0000000110e1952a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@11 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110e19318: mov    0xc(%r12,%r10,8),%ecx  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@4 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e1931d: mov    0x14(%rbx),%ebp    ;*getfield expectedModCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@8 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19320: cmp    %ebp,%ecx
  0x0000000110e19322: jne    0x0000000110e195c2  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19328: cmp    %r9d,%r11d
  0x0000000110e1932b: jge    0x0000000110e195d2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19331: mov    0x14(%r12,%r10,8),%r10d  ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@32 (line 1000)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19336: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ; implicit exception: dispatches to 0x0000000110e1966e
  0x0000000110e1933b: cmp    %ebp,%r11d
  0x0000000110e1933e: jge    0x0000000110e195ea  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19344: mov    %r11d,0x10(%rbx)   ;*putfield lastRet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@61 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19348: mov    %r11d,%r8d
  0x0000000110e1934b: inc    %r8d
  0x0000000110e1934e: mov    %r8d,0xc(%rbx)     ;*putfield cursor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@54 (line 1003)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19352: cmp    %ebp,%r11d
  0x0000000110e19355: jae    0x0000000110e195a8
  0x0000000110e1935b: shl    $0x3,%r10
  0x0000000110e1935f: mov    0x10(%r10,%r11,4),%ebp  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19364: test   %ebp,%ebp
  0x0000000110e19366: je     0x0000000110e1953e
  0x0000000110e1936c: mov    0x8(%r12,%rbp,8),%r10d
  0x0000000110e19371: cmp    $0x1808,%r10d      ;   {metadata('java/lang/String')}
  0x0000000110e19378: jne    0x0000000110e19656
  0x0000000110e1937e: lea    (%r12,%rbp,8),%r10  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@26 (line 52)

  0x0000000110e19382: test   %r10,%r10
  0x0000000110e19385: je     0x0000000110e19516  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::ofNullable@1 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1938b: mov    %r10,0x20(%rsp)
  0x0000000110e19390: mov    0x118(%r15),%r8
  0x0000000110e19397: mov    %r8,%r10
  0x0000000110e1939a: add    $0x10,%r10
  0x0000000110e1939e: cmp    0x128(%r15),%r10
  0x0000000110e193a5: jae    0x0000000110e19582  ;*putfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::<init>@6
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193ab: mov    %r10,0x118(%r15)
  0x0000000110e193b2: prefetchnta 0xc0(%r10)
  0x0000000110e193ba: mov    (%rsp),%r10
  0x0000000110e193be: mov    0xb8(%r10),%r10
  0x0000000110e193c5: mov    %r10,(%r8)
  0x0000000110e193c8: movl   $0x34bd8,0x8(%r8)  ;   {metadata('java/util/Optional')}
  0x0000000110e193d0: movl   $0x0,0xc(%r8)      ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193d8: mov    0x20(%rsp),%r10
  0x0000000110e193dd: mov    %r10,%r11
  0x0000000110e193e0: shr    $0x3,%r11
  0x0000000110e193e4: mov    %r11d,0xc(%r8)     ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::ofNullable@14 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193e8: mov    %r8,0x28(%rsp)     ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193ed: mov    0xc(%r8),%ebp      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193f1: test   %ebp,%ebp
  0x0000000110e193f3: je     0x0000000110e1949a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e193f9: mov    0x10(%rsp),%r10
  0x0000000110e193fe: mov    0x20(%r10),%r10
  0x0000000110e19402: movabs $0x80005f3b8,%r11  ;   {metadata('java/util/function/Predicate')}
  0x0000000110e1940c: cmp    %r11,%r10
  0x0000000110e1940f: jne    0x0000000110e194d1  ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19415: mov    0x8(%r12,%rbp,8),%r11d
  0x0000000110e1941a: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e19421: jne    0x0000000110e1964a
  0x0000000110e19427: lea    (%r12,%rbp,8),%r10  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1942b: mov    0xc(%r10),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1942f: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ; implicit exception: dispatches to 0x0000000110e1967a
  0x0000000110e19434: movsbl 0x14(%r10),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19439: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1943b: test   %ebp,%ebp
  0x0000000110e1943d: je     0x0000000110e19602  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19443: cmp    $0x5,%ebp
  0x0000000110e19446: mov    %r8,%r10
  0x0000000110e19449: movabs $0x70ff4b4c8,%r11  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110e19453: cmovne %r11,%r10          ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@34 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19457: mov    %r10,0x28(%rsp)
  0x0000000110e1945c: mov    0xc(%r10),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19460: test   %r11d,%r11d
  0x0000000110e19463: je     0x0000000110e1949a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19465: mov    %r11,%rdx
  0x0000000110e19468: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1946c: movabs $0x70fd5b398,%rsi  ;   {oop(a 'FunctionalZipCode$$Lambda$4'{0x000000070fd5b398})}
  0x0000000110e19476: mov    0x18(%rsp),%rbp
  0x0000000110e1947b: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {optimized virtual_call}
  0x0000000110e19480: test   %eax,%eax
  0x0000000110e19482: mov    0x28(%rsp),%r10
  0x0000000110e19487: movabs $0x70ff4b4c8,%r11  ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110e19491: cmove  %r11,%r10          ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@34 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19495: mov    %r10,0x28(%rsp)    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - FunctionalZipCode::isZipCodeValid@33 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1949a: mov    0x28(%rsp),%r10
  0x0000000110e1949f: mov    0xc(%r10),%r10d
  0x0000000110e194a3: test   %r10d,%r10d
  0x0000000110e194a6: jne    0x0000000110e192b0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::or@9 (line 314)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e194ac: mov    0x18(%rsp),%r11
  0x0000000110e194b1: mov    0xc(%r11),%r10d
  0x0000000110e194b5: test   %r10d,%r10d
  0x0000000110e194b8: je     0x0000000110e1960e  ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e194be: mov    0x20(%rsp),%rcx
  0x0000000110e194c3: test   %rcx,%rcx
  0x0000000110e194c6: jne    0x0000000110e19272  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@4 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e194cc: jmpq   0x0000000110e19268
  0x0000000110e194d1: movabs $0x800065040,%rsi  ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110e194db: movabs $0x80005f3b8,%rax  ;   {metadata('java/util/function/Predicate')}
  0x0000000110e194e5: push   %rax
  0x0000000110e194e6: mov    %rax,%rax
  0x0000000110e194e9: mov    0x28(%rsi),%rdi
  0x0000000110e194ed: mov    (%rdi),%ecx
  0x0000000110e194ef: add    $0x8,%rdi
  0x0000000110e194f3: test   %rax,%rax
  0x0000000110e194f6: repnz scas %es:(%rdi),%rax
  0x0000000110e194f9: pop    %rax
  0x0000000110e194fa: jne    0x0000000110e19504
  0x0000000110e19500: mov    %rax,0x20(%rsi)
  0x0000000110e19504: je     0x0000000110e19415
  0x0000000110e1950a: mov    $0xffffffdf,%esi
  0x0000000110e1950f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19514: ud2                       ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19516: movabs $0x70ff4b4c8,%r8   ;   {oop(a 'java/util/Optional'{0x000000070ff4b4c8})}
  0x0000000110e19520: mov    %r10,0x20(%rsp)
  0x0000000110e19525: jmpq   0x0000000110e193e8
  0x0000000110e1952a: mov    0x38(%rsp),%eax
  0x0000000110e1952e: add    $0x50,%rsp
  0x0000000110e19532: pop    %rbp
  0x0000000110e19533: mov    0x108(%r15),%r10
  0x0000000110e1953a: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1953d: retq   
  0x0000000110e1953e: xor    %r10d,%r10d
  0x0000000110e19541: jmpq   0x0000000110e19382
  0x0000000110e19546: push   %rax
  0x0000000110e19547: mov    %rax,%rax
  0x0000000110e1954a: mov    0x28(%rsi),%rdi
  0x0000000110e1954e: mov    (%rdi),%ecx
  0x0000000110e19550: add    $0x8,%rdi
  0x0000000110e19554: test   %rax,%rax
  0x0000000110e19557: repnz scas %es:(%rdi),%rax
  0x0000000110e1955a: pop    %rax
  0x0000000110e1955b: jne    0x0000000110e19565
  0x0000000110e19561: mov    %rax,0x20(%rsi)
  0x0000000110e19565: je     0x0000000110e1921c
  0x0000000110e1956b: mov    $0xffffff95,%esi
  0x0000000110e19570: mov    %rbx,(%rsp)
  0x0000000110e19574: mov    %r13,0x8(%rsp)
  0x0000000110e19579: xchg   %ax,%ax
  0x0000000110e1957b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19580: ud2                       ;*synchronization entry
                                                ; - java.util.Optional::of@-1 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19582: movabs $0x800034bd8,%rsi  ;   {metadata('java/util/Optional')}
  0x0000000110e1958c: mov    0x18(%rsp),%rbp
  0x0000000110e19591: xchg   %ax,%ax
  0x0000000110e19593: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e19598: mov    %rax,%r8
  0x0000000110e1959b: jmpq   0x0000000110e193d8
  0x0000000110e195a0: xor    %r11d,%r11d
  0x0000000110e195a3: jmpq   0x0000000110e191f4
  0x0000000110e195a8: mov    $0xffffffe4,%esi
  0x0000000110e195ad: mov    %rbx,(%rsp)
  0x0000000110e195b1: mov    %r10d,0x10(%rsp)
  0x0000000110e195b6: mov    %r11d,0x14(%rsp)
  0x0000000110e195bb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=NarrowOop [24]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@64 (line 1004)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e195c0: ud2                       ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::checkForComodification@-1 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e195c2: mov    $0xffffff4d,%esi
  0x0000000110e195c7: mov    %ecx,0x4(%rsp)
  0x0000000110e195cb: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::checkForComodification@11 (line 1041)
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e195d0: ud2                       ;*invokevirtual checkForComodification {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@1 (line 996)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e195d2: mov    $0xffffff4d,%esi
  0x0000000110e195d7: mov    %r9d,0x10(%rsp)
  0x0000000110e195dc: mov    %r11d,0x20(%rsp)
  0x0000000110e195e1: xchg   %ax,%ax
  0x0000000110e195e3: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e195e8: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@17 (line 998)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e195ea: mov    $0xffffff4d,%esi
  0x0000000110e195ef: mov    %r10d,0x20(%rsp)
  0x0000000110e195f4: mov    %r11d,0x24(%rsp)
  0x0000000110e195f9: xchg   %ax,%ax
  0x0000000110e195fb: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop [32]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19600: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@39 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e19602: mov    $0xffffff4d,%esi
  0x0000000110e19607: callq  0x0000000110d91900  ; ImmutableOopMap{[8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1960c: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1960e: mov    $0xfffffff6,%esi
  0x0000000110e19613: callq  0x0000000110d91900  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19618: ud2    
  0x0000000110e1961a: mov    $0xffffffbe,%esi
  0x0000000110e1961f: mov    %rbx,(%rsp)
  0x0000000110e19623: mov    %r11,0x8(%rsp)
  0x0000000110e19628: data16 xchg %ax,%ax
  0x0000000110e1962b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19630: ud2    
  0x0000000110e19632: xor    %ebx,%ebx
  0x0000000110e19634: mov    $0xffffff7e,%esi
  0x0000000110e19639: mov    %rbx,(%rsp)
  0x0000000110e1963d: mov    %r11,0x8(%rsp)
  0x0000000110e19642: nop
  0x0000000110e19643: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19648: ud2                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@11 (line 52)

  0x0000000110e1964a: mov    $0xffffffde,%esi
  0x0000000110e1964f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19654: ud2    
  0x0000000110e19656: mov    $0xffffffde,%esi
  0x0000000110e1965b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::runTest@26 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19660: ud2                       ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)

  0x0000000110e19662: mov    $0xfffffff6,%esi
  0x0000000110e19667: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::hasNext@8 (line 991)
                                                ; - FunctionalZipCode::runTest@12 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1966c: ud2    
  0x0000000110e1966e: mov    $0xfffffff6,%esi
  0x0000000110e19673: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19678: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::next@38 (line 1001)
                                                ; - FunctionalZipCode::runTest@21 (line 52)

  0x0000000110e1967a: mov    $0xfffffff6,%esi
  0x0000000110e1967f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e19684: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19686: mov    %rax,%rsi
  0x0000000110e19689: jmp    0x0000000110e19693  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e1968b: mov    %rax,%rsi
  0x0000000110e1968e: jmp    0x0000000110e19693  ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19690: mov    %rax,%rsi          ;*synchronization entry
                                                ; - FunctionalZipCode::isZipCodeValid@-1 (line 61)
                                                ; - FunctionalZipCode::runTest@32 (line 53)

  0x0000000110e19693: add    $0x50,%rsp
  0x0000000110e19697: pop    %rbp
  0x0000000110e19698: jmpq   0x0000000110dc8700  ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ; - FunctionalZipCode::runTest@32 (line 53)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1969d: hlt    
  0x0000000110e1969e: hlt    
  0x0000000110e1969f: hlt    
[Stub Code]
  0x0000000110e196a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e196aa: jmpq   0x0000000110e196aa  ;   {runtime_call}
  0x0000000110e196af: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e196b9: jmpq   0x0000000110e196b9  ;   {runtime_call}
[Exception Handler]
  0x0000000110e196be: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e196c3: callq  0x0000000110e196c8
  0x0000000110e196c8: subq   $0x5,(%rsp)
  0x0000000110e196cd: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e196d2: hlt    
  0x0000000110e196d3: hlt    
  0x0000000110e196d4: hlt    
  0x0000000110e196d5: hlt    
  0x0000000110e196d6: hlt    
  0x0000000110e196d7: hlt    

ImmutableOopMap{[8]=Oop [24]=Oop }pc offsets: 236 308 
ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 736 
ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 884 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 992 
ImmutableOopMap{rbp=Oop [8]=Oop [24]=Oop [32]=Oop }pc offsets: 1016 
ImmutableOopMap{[0]=Oop [16]=NarrowOop [24]=Oop }pc offsets: 1056 
ImmutableOopMap{[8]=Oop [24]=Oop }pc offsets: 1072 1096 
ImmutableOopMap{[8]=Oop [24]=Oop [32]=NarrowOop }pc offsets: 1120 
ImmutableOopMap{[8]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 1132 
ImmutableOopMap{[32]=Oop }pc offsets: 1144 
ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 1168 1192 
ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop [32]=Oop [40]=Oop }pc offsets: 1204 
ImmutableOopMap{rbp=NarrowOop [8]=Oop [24]=Oop }pc offsets: 1216 
ImmutableOopMap{}pc offsets: 1228 1240 1252 Compiled method (c2)    1480  169             java.util.regex.Pattern$LastNode::match (45 bytes)
 total in heap  [0x0000000110e07610,0x0000000110e07aa8] = 1176
 relocation     [0x0000000110e07788,0x0000000110e077a0] = 24
 main code      [0x0000000110e077a0,0x0000000110e07880] = 224
 stub code      [0x0000000110e07880,0x0000000110e07898] = 24
 metadata       [0x0000000110e07898,0x0000000110e078a0] = 8
 scopes data    [0x0000000110e078a0,0x0000000110e07938] = 152
 scopes pcs     [0x0000000110e07938,0x0000000110e07a88] = 336
 dependencies   [0x0000000110e07a88,0x0000000110e07a90] = 8
 nul chk table  [0x0000000110e07a90,0x0000000110e07aa8] = 24
----------------------------------------------------------------------
java/util/regex/Pattern$LastNode.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z  [0x0000000110e077a0, 0x0000000110e07898]  248 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f1a9560} 'match' '(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z' in 'java/util/regex/Pattern$LastNode'
  # this:     rsi:rsi   = 'java/util/regex/Pattern$LastNode'
  # parm0:    rdx:rdx   = 'java/util/regex/Matcher'
  # parm1:    rcx       = int
  # parm2:    r8:r8     = 'java/lang/CharSequence'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e077a0: mov    0x8(%rsi),%r10d
  0x0000000110e077a4: movabs $0x800000000,%r12
  0x0000000110e077ae: add    %r12,%r10
  0x0000000110e077b1: xor    %r12,%r12
  0x0000000110e077b4: cmp    %r10,%rax
  0x0000000110e077b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e077bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e077c0: mov    %eax,-0x14000(%rsp)
  0x0000000110e077c7: push   %rbp
  0x0000000110e077c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.regex.Pattern$LastNode::match@-1 (line 3589)

  0x0000000110e077cc: mov    0x18(%rdx),%r10d   ;*getfield acceptMode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@1 (line 3589)
                                                ; implicit exception: dispatches to 0x0000000110e07852
  0x0000000110e077d0: cmp    $0x1,%r10d
  0x0000000110e077d4: jne    0x0000000110e07826  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@5 (line 3589)

  0x0000000110e077d6: mov    0x10(%rdx),%ebp    ;*getfield to {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@10 (line 3589)

  0x0000000110e077d9: cmp    %ebp,%ecx
  0x0000000110e077db: jne    0x0000000110e0783e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@13 (line 3589)

  0x0000000110e077dd: mov    %ecx,0x20(%rdx)    ;*putfield last {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@20 (line 3591)

  0x0000000110e077e0: mov    0x38(%rdx),%r10d   ;*getfield groups {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@24 (line 3592)

  0x0000000110e077e4: mov    0x1c(%rdx),%ebp    ;*getfield first {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@29 (line 3592)

  0x0000000110e077e7: mov    0xc(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x0000000110e0785e
  0x0000000110e077ec: cmp    $0x1,%r11d
  0x0000000110e077f0: jbe    0x0000000110e07811
  0x0000000110e077f2: mov    %ebp,0x10(%r12,%r10,8)  ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@32 (line 3592)

  0x0000000110e077f7: mov    %ecx,0x14(%r12,%r10,8)  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@5 (line 3589)

  0x0000000110e077fc: mov    $0x1,%eax
  0x0000000110e07801: add    $0x20,%rsp
  0x0000000110e07805: pop    %rbp
  0x0000000110e07806: mov    0x108(%r15),%r10
  0x0000000110e0780d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e07810: retq   
  0x0000000110e07811: mov    $0xffffffe4,%esi
  0x0000000110e07816: mov    %rdx,(%rsp)
  0x0000000110e0781a: mov    %r10d,0x8(%rsp)
  0x0000000110e0781f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop }
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@32 (line 3592)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e07824: ud2                       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@32 (line 3592)

  0x0000000110e07826: mov    $0xffffff4d,%esi
  0x0000000110e0782b: mov    %rdx,%rbp
  0x0000000110e0782e: mov    %ecx,(%rsp)
  0x0000000110e07831: mov    %r10d,0x4(%rsp)
  0x0000000110e07836: nop
  0x0000000110e07837: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@5 (line 3589)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0783c: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@5 (line 3589)

  0x0000000110e0783e: mov    $0xffffff4d,%esi
  0x0000000110e07843: mov    %rdx,(%rsp)
  0x0000000110e07847: mov    %ecx,0xc(%rsp)
  0x0000000110e0784b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@13 (line 3589)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e07850: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@13 (line 3589)

  0x0000000110e07852: mov    $0xfffffff6,%esi
  0x0000000110e07857: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield acceptMode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@1 (line 3589)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e0785c: ud2    
  0x0000000110e0785e: mov    $0xfffffff6,%esi
  0x0000000110e07863: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@32 (line 3592)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e07868: ud2                       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.regex.Pattern$LastNode::match@32 (line 3592)

  0x0000000110e0786a: hlt    
  0x0000000110e0786b: hlt    
  0x0000000110e0786c: hlt    
  0x0000000110e0786d: hlt    
  0x0000000110e0786e: hlt    
  0x0000000110e0786f: hlt    
  0x0000000110e07870: hlt    
  0x0000000110e07871: hlt    
  0x0000000110e07872: hlt    
  0x0000000110e07873: hlt    
  0x0000000110e07874: hlt    
  0x0000000110e07875: hlt    
  0x0000000110e07876: hlt    
  0x0000000110e07877: hlt    
  0x0000000110e07878: hlt    
  0x0000000110e07879: hlt    
  0x0000000110e0787a: hlt    
  0x0000000110e0787b: hlt    
  0x0000000110e0787c: hlt    
  0x0000000110e0787d: hlt    
  0x0000000110e0787e: hlt    
  0x0000000110e0787f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e07880: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e07885: callq  0x0000000110e0788a
  0x0000000110e0788a: subq   $0x5,(%rsp)
  0x0000000110e0788f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e07894: hlt    
  0x0000000110e07895: hlt    
  0x0000000110e07896: hlt    
  0x0000000110e07897: hlt    

ImmutableOopMap{[0]=Oop [8]=NarrowOop }pc offsets: 132 
ImmutableOopMap{rbp=Oop }pc offsets: 156 
ImmutableOopMap{[0]=Oop }pc offsets: 176 
ImmutableOopMap{}pc offsets: 188 200 Compiled method (c2)    1484  170             java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
 total in heap  [0x0000000110e15a10,0x0000000110e15cb8] = 680
 relocation     [0x0000000110e15b88,0x0000000110e15b98] = 16
 main code      [0x0000000110e15ba0,0x0000000110e15c00] = 96
 stub code      [0x0000000110e15c00,0x0000000110e15c18] = 24
 metadata       [0x0000000110e15c18,0x0000000110e15c20] = 8
 scopes data    [0x0000000110e15c20,0x0000000110e15c40] = 32
 scopes pcs     [0x0000000110e15c40,0x0000000110e15cb0] = 112
 dependencies   [0x0000000110e15cb0,0x0000000110e15cb8] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.isLatin1()Z  [0x0000000110e15ba0, 0x0000000110e15c18]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0f380} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e15ba0: mov    0x8(%rsi),%r10d
  0x0000000110e15ba4: movabs $0x800000000,%r12
  0x0000000110e15bae: add    %r12,%r10
  0x0000000110e15bb1: xor    %r12,%r12
  0x0000000110e15bb4: cmp    %r10,%rax
  0x0000000110e15bb7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e15bbd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e15bc0: mov    %eax,-0x14000(%rsp)
  0x0000000110e15bc7: push   %rbp
  0x0000000110e15bc8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1624)

  0x0000000110e15bcc: movsbl 0x10(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)

  0x0000000110e15bd1: test   %r11d,%r11d
  0x0000000110e15bd4: jne    0x0000000110e15beb  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)

  0x0000000110e15bd6: mov    $0x1,%eax
  0x0000000110e15bdb: add    $0x10,%rsp
  0x0000000110e15bdf: pop    %rbp
  0x0000000110e15be0: mov    0x108(%r15),%r10
  0x0000000110e15be7: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e15bea: retq   
  0x0000000110e15beb: mov    $0xffffff4d,%esi
  0x0000000110e15bf0: mov    %r11d,%ebp
  0x0000000110e15bf3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e15bf8: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)

  0x0000000110e15bfa: hlt    
  0x0000000110e15bfb: hlt    
  0x0000000110e15bfc: hlt    
  0x0000000110e15bfd: hlt    
  0x0000000110e15bfe: hlt    
  0x0000000110e15bff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e15c00: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e15c05: callq  0x0000000110e15c0a
  0x0000000110e15c0a: subq   $0x5,(%rsp)
  0x0000000110e15c0f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e15c14: hlt    
  0x0000000110e15c15: hlt    
  0x0000000110e15c16: hlt    
  0x0000000110e15c17: hlt    

ImmutableOopMap{}pc offsets: 88 Compiled method (c2)    1501  171             java.lang.StringBuilder::append (8 bytes)
 total in heap  [0x0000000110e1a210,0x0000000110e1b160] = 3920
 relocation     [0x0000000110e1a388,0x0000000110e1a3c0] = 56
 main code      [0x0000000110e1a3c0,0x0000000110e1a940] = 1408
 stub code      [0x0000000110e1a940,0x0000000110e1a968] = 40
 metadata       [0x0000000110e1a968,0x0000000110e1a9c0] = 88
 scopes data    [0x0000000110e1a9c0,0x0000000110e1aca8] = 744
 scopes pcs     [0x0000000110e1aca8,0x0000000110e1b0f8] = 1104
 dependencies   [0x0000000110e1b0f8,0x0000000110e1b100] = 8
 handler table  [0x0000000110e1b100,0x0000000110e1b130] = 48
 nul chk table  [0x0000000110e1b130,0x0000000110e1b160] = 48
----------------------------------------------------------------------
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;  [0x0000000110e1a3c0, 0x0000000110e1a968]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee11950} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x0000000110e1a3c0: mov    0x8(%rsi),%r10d
  0x0000000110e1a3c4: movabs $0x800000000,%r12
  0x0000000110e1a3ce: add    %r12,%r10
  0x0000000110e1a3d1: xor    %r12,%r12
  0x0000000110e1a3d4: cmp    %r10,%rax
  0x0000000110e1a3d7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1a3dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1a3e0: mov    %eax,-0x14000(%rsp)
  0x0000000110e1a3e7: push   %rbp
  0x0000000110e1a3e8: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 174)

  0x0000000110e1a3ec: mov    %rsi,(%rsp)
  0x0000000110e1a3f0: mov    %rdx,%r13
  0x0000000110e1a3f3: mov    0xc(%rdx),%eax     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ; implicit exception: dispatches to 0x0000000110e1a902
  0x0000000110e1a3f6: mov    0xc(%r12,%rax,8),%ebx  ; implicit exception: dispatches to 0x0000000110e1a8b6
  0x0000000110e1a3fb: mov    0x14(%rsi),%r10d   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a3ff: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ; implicit exception: dispatches to 0x0000000110e1a8c6
  0x0000000110e1a404: mov    %r8d,0x28(%rsp)
  0x0000000110e1a409: movsbl 0x10(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a40e: movsbl 0x14(%rdx),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a412: mov    %r11d,%ecx
  0x0000000110e1a415: sar    %cl,%r8d           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@9 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a418: mov    %edi,%ecx
  0x0000000110e1a41a: sar    %cl,%ebx           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a41c: mov    %ebx,0x1c(%rsp)
  0x0000000110e1a420: mov    0xc(%rsi),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a424: mov    %ebx,%edx
  0x0000000110e1a426: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a429: mov    %edx,%ecx
  0x0000000110e1a42b: sub    %r8d,%ecx
  0x0000000110e1a42e: test   %ecx,%ecx
  0x0000000110e1a430: jg     0x0000000110e1a4be  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a436: cmp    %edi,%r11d
  0x0000000110e1a439: jne    0x0000000110e1a80e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a43f: cmp    %r11d,%edi
  0x0000000110e1a442: jne    0x0000000110e1a7da  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a448: mov    0xc(%r12,%rax,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ; implicit exception: dispatches to 0x0000000110e1a8d6
  0x0000000110e1a44d: mov    %r11d,%ecx
  0x0000000110e1a450: shl    %cl,%r9d           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@16 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a453: mov    0xc(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x0000000110e1a8e6
  0x0000000110e1a458: test   %r9d,%r9d
  0x0000000110e1a45b: jl     0x0000000110e1a7b5
  0x0000000110e1a461: mov    %r9d,%ecx
  0x0000000110e1a464: add    %r8d,%ecx
  0x0000000110e1a467: cmp    %ecx,%r11d
  0x0000000110e1a46a: jb     0x0000000110e1a7b5  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a470: test   %r8d,%r8d
  0x0000000110e1a473: jbe    0x0000000110e1a49a
  0x0000000110e1a475: shl    $0x3,%r10          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a479: lea    0x10(%r10,%r9,1),%rsi
  0x0000000110e1a47e: lea    (%r12,%rax,8),%r10  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a482: lea    0x10(%r12,%rax,8),%rdi
  0x0000000110e1a487: movslq %r8d,%rdx
  0x0000000110e1a48a: vzeroupper 
  0x0000000110e1a48d: movabs $0x110d9ecc0,%r10
  0x0000000110e1a497: callq  *%r10              ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a49a: mov    0x1c(%rsp),%r11d
  0x0000000110e1a49f: mov    (%rsp),%r10
  0x0000000110e1a4a3: add    %r11d,0xc(%r10)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 174)

  0x0000000110e1a4a7: mov    (%rsp),%rax
  0x0000000110e1a4ab: vzeroupper 
  0x0000000110e1a4ae: add    $0x50,%rsp
  0x0000000110e1a4b2: pop    %rbp
  0x0000000110e1a4b3: mov    0x108(%r15),%r10
  0x0000000110e1a4ba: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1a4bd: retq   
  0x0000000110e1a4be: shl    %r8d               ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a4c1: mov    %r8d,%ecx
  0x0000000110e1a4c4: sub    %edx,%ecx
  0x0000000110e1a4c6: add    $0x2,%ecx
  0x0000000110e1a4c9: test   %ecx,%ecx
  0x0000000110e1a4cb: jge    0x0000000110e1a6b3  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@20 (line 201)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a4d1: mov    %edx,%r8d          ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 204)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a4d4: test   %r8d,%r8d
  0x0000000110e1a4d7: jle    0x0000000110e1a4ea  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@35 (line 205)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a4d9: mov    $0x7ffffff7,%ebx
  0x0000000110e1a4de: mov    %r11d,%ecx
  0x0000000110e1a4e1: sar    %cl,%ebx
  0x0000000110e1a4e3: sub    %r8d,%ebx
  0x0000000110e1a4e6: test   %ebx,%ebx
  0x0000000110e1a4e8: jge    0x0000000110e1a522  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@45 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a4ea: mov    %r10d,0xc(%rsp)
  0x0000000110e1a4ef: mov    0x1c(%rsp),%r10d
  0x0000000110e1a4f4: mov    %r10d,0x8(%rsp)
  0x0000000110e1a4f9: mov    %r13,%rbp
  0x0000000110e1a4fc: vzeroupper 
  0x0000000110e1a4ff: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [12]=NarrowOop }
                                                ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {optimized virtual_call}
  0x0000000110e1a504: mov    (%rsp),%r10
  0x0000000110e1a508: movsbl 0x10(%r10),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a50d: mov    %rbp,%r13
  0x0000000110e1a510: mov    0x8(%rsp),%r8d
  0x0000000110e1a515: mov    %r8d,0x1c(%rsp)
  0x0000000110e1a51a: mov    0xc(%rsp),%r10d
  0x0000000110e1a51f: mov    %eax,%r8d          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@50 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a522: mov    %r11d,%ecx
  0x0000000110e1a525: shl    %cl,%r8d           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@31 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a528: cmp    $0x100000,%r8d
  0x0000000110e1a52f: ja     0x0000000110e1a83a
  0x0000000110e1a535: movslq %r8d,%r11
  0x0000000110e1a538: mov    %r8d,%r9d          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a53b: mov    0x28(%rsp),%ebx
  0x0000000110e1a53f: cmp    %r9d,%ebx
  0x0000000110e1a542: mov    %r9d,%ebp
  0x0000000110e1a545: cmovl  %ebx,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a548: cmp    %ebp,%ebx
  0x0000000110e1a54a: jb     0x0000000110e1a871
  0x0000000110e1a550: cmp    %ebp,%r9d
  0x0000000110e1a553: jb     0x0000000110e1a871  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a559: add    $0x17,%r11
  0x0000000110e1a55d: mov    %r11,%rcx
  0x0000000110e1a560: and    $0xfffffffffffffff8,%rcx  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a564: cmp    $0x100000,%r8d
  0x0000000110e1a56b: ja     0x0000000110e1a753
  0x0000000110e1a571: mov    0x118(%r15),%rbx
  0x0000000110e1a578: mov    %rbx,%r9
  0x0000000110e1a57b: add    %rcx,%r9
  0x0000000110e1a57e: cmp    0x128(%r15),%r9
  0x0000000110e1a585: jae    0x0000000110e1a753  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a58b: mov    %r9,0x118(%r15)
  0x0000000110e1a592: prefetchnta 0xc0(%r9)
  0x0000000110e1a59a: movq   $0x1,(%rbx)
  0x0000000110e1a5a1: prefetchnta 0x100(%r9)
  0x0000000110e1a5a9: movl   $0x820,0x8(%rbx)   ;   {metadata({type array byte})}
  0x0000000110e1a5b0: mov    %r8d,0xc(%rbx)
  0x0000000110e1a5b4: prefetchnta 0x140(%r9)
  0x0000000110e1a5bc: prefetchnta 0x180(%r9)    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a5c4: mov    %rbx,%r9
  0x0000000110e1a5c7: add    $0x10,%r9
  0x0000000110e1a5cb: shr    $0x3,%r11
  0x0000000110e1a5cf: mov    %rbx,%r14
  0x0000000110e1a5d2: shr    $0x3,%r14          ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a5d6: test   %ebp,%ebp
  0x0000000110e1a5d8: je     0x0000000110e1a842
  0x0000000110e1a5de: lea    (%r12,%r10,8),%rdi  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a5e2: lea    0x10(%r12,%r10,8),%r10
  0x0000000110e1a5e7: cmp    %r8d,%ebp
  0x0000000110e1a5ea: jl     0x0000000110e1a6bc
  0x0000000110e1a5f0: add    $0xfffffffffffffff0,%rcx
  0x0000000110e1a5f4: shr    $0x3,%rcx
  0x0000000110e1a5f8: mov    %r10,%rdi
  0x0000000110e1a5fb: mov    %r9,%rsi
  0x0000000110e1a5fe: mov    %rcx,%rdx
  0x0000000110e1a601: vzeroupper 
  0x0000000110e1a604: movabs $0x110d9f080,%r10
  0x0000000110e1a60e: callq  *%r10
  0x0000000110e1a611: cmpb   $0x0,0x30(%r15)
  0x0000000110e1a616: jne    0x0000000110e1a718
  0x0000000110e1a61c: mov    (%rsp),%r10
  0x0000000110e1a620: mov    %r14d,0x14(%r10)
  0x0000000110e1a624: mov    %rbx,%r10
  0x0000000110e1a627: mov    (%rsp),%r11
  0x0000000110e1a62b: xor    %r11,%r10
  0x0000000110e1a62e: shr    $0x14,%r10
  0x0000000110e1a632: test   %r10,%r10
  0x0000000110e1a635: je     0x0000000110e1a695
  0x0000000110e1a637: shr    $0x9,%r11
  0x0000000110e1a63b: movabs $0x110569000,%rdi
  0x0000000110e1a645: add    %r11,%rdi
  0x0000000110e1a648: cmpb   $0x20,(%rdi)
  0x0000000110e1a64b: je     0x0000000110e1a695
  0x0000000110e1a64d: mov    0x70(%r15),%r10
  0x0000000110e1a651: mov    0x80(%r15),%r11
  0x0000000110e1a658: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1a65e: cmpb   $0x0,(%rdi)
  0x0000000110e1a661: je     0x0000000110e1a68d
  0x0000000110e1a663: movb   $0x0,(%rdi)
  0x0000000110e1a666: test   %r10,%r10
  0x0000000110e1a669: je     0x0000000110e1a67a
  0x0000000110e1a66b: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e1a670: add    $0xfffffffffffffff8,%r10
  0x0000000110e1a674: mov    %r10,0x70(%r15)
  0x0000000110e1a678: jmp    0x0000000110e1a68d
  0x0000000110e1a67a: mov    %r15,%rsi
  0x0000000110e1a67d: vzeroupper 
  0x0000000110e1a680: movabs $0x107aec8ce,%r10
  0x0000000110e1a68a: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a68d: mov    (%rsp),%r10
  0x0000000110e1a691: mov    0x14(%r10),%r14d   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a695: mov    (%rsp),%r10
  0x0000000110e1a699: movsbl 0x10(%r10),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a69e: movsbl 0x14(%r13),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a6a3: mov    0xc(%r10),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a6a7: mov    0xc(%r13),%eax     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a6ab: mov    %r14d,%r10d
  0x0000000110e1a6ae: jmpq   0x0000000110e1a436
  0x0000000110e1a6b3: add    $0x2,%r8d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@15 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a6b7: jmpq   0x0000000110e1a4d4
  0x0000000110e1a6bc: movslq %ebp,%rdx
  0x0000000110e1a6bf: mov    %rdx,%r8
  0x0000000110e1a6c2: add    $0x10,%r8
  0x0000000110e1a6c6: mov    %r8,%rcx
  0x0000000110e1a6c9: and    $0xfffffffffffffff8,%rcx
  0x0000000110e1a6cd: mov    %rbx,%rdi
  0x0000000110e1a6d0: add    %rcx,%rdi
  0x0000000110e1a6d3: shr    $0x3,%r8
  0x0000000110e1a6d7: sub    %r8,%r11
  0x0000000110e1a6da: mov    %r11,%rcx
  0x0000000110e1a6dd: xor    %rax,%rax
  0x0000000110e1a6e0: cmp    $0x8,%rcx
  0x0000000110e1a6e4: jg     0x0000000110e1a6f6
  0x0000000110e1a6e6: dec    %rcx
  0x0000000110e1a6e9: js     0x0000000110e1a6fd
  0x0000000110e1a6eb: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1a6ef: dec    %rcx
  0x0000000110e1a6f2: jge    0x0000000110e1a6eb
  0x0000000110e1a6f4: jmp    0x0000000110e1a6fd
  0x0000000110e1a6f6: shl    $0x3,%rcx
  0x0000000110e1a6fa: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1a6fd: mov    %r10,%rdi
  0x0000000110e1a700: mov    %r9,%rsi
  0x0000000110e1a703: vzeroupper 
  0x0000000110e1a706: movabs $0x110d9ec00,%r10
  0x0000000110e1a710: callq  *%r10
  0x0000000110e1a713: jmpq   0x0000000110e1a611
  0x0000000110e1a718: mov    (%rsp),%r10
  0x0000000110e1a71c: mov    0x14(%r10),%r10d
  0x0000000110e1a720: test   %r10d,%r10d
  0x0000000110e1a723: je     0x0000000110e1a61c
  0x0000000110e1a729: mov    0x38(%r15),%r11
  0x0000000110e1a72d: mov    %r10,%rdi
  0x0000000110e1a730: shl    $0x3,%rdi
  0x0000000110e1a734: test   %r11,%r11
  0x0000000110e1a737: je     0x0000000110e1a89e
  0x0000000110e1a73d: mov    0x48(%r15),%r10
  0x0000000110e1a741: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1a746: add    $0xfffffffffffffff8,%r11
  0x0000000110e1a74a: mov    %r11,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a74e: jmpq   0x0000000110e1a61c
  0x0000000110e1a753: mov    %rcx,0x28(%rsp)
  0x0000000110e1a758: mov    %r11,0x20(%rsp)
  0x0000000110e1a75d: mov    %r8d,0x18(%rsp)
  0x0000000110e1a762: mov    %r10d,0x14(%rsp)
  0x0000000110e1a767: mov    (%rsp),%r10
  0x0000000110e1a76b: mov    %r10,0x8(%rsp)
  0x0000000110e1a770: mov    %r13,(%rsp)
  0x0000000110e1a774: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e1a77e: mov    %r8d,%edx
  0x0000000110e1a781: data16 xchg %ax,%ax
  0x0000000110e1a784: vzeroupper 
  0x0000000110e1a787: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e1a78c: mov    (%rsp),%r13
  0x0000000110e1a790: mov    0x8(%rsp),%r10
  0x0000000110e1a795: mov    %r10,(%rsp)
  0x0000000110e1a799: mov    0x14(%rsp),%r10d
  0x0000000110e1a79e: mov    0x18(%rsp),%r8d
  0x0000000110e1a7a3: mov    0x20(%rsp),%r11
  0x0000000110e1a7a8: mov    0x28(%rsp),%rcx
  0x0000000110e1a7ad: mov    %rax,%rbx
  0x0000000110e1a7b0: jmpq   0x0000000110e1a5c4
  0x0000000110e1a7b5: mov    $0xffffffcc,%esi
  0x0000000110e1a7ba: mov    %eax,0x8(%rsp)
  0x0000000110e1a7be: mov    %r10d,0x10(%rsp)
  0x0000000110e1a7c3: mov    %r9d,0x14(%rsp)
  0x0000000110e1a7c8: mov    %r8d,0x18(%rsp)
  0x0000000110e1a7cd: data16 xchg %ax,%ax
  0x0000000110e1a7d0: vzeroupper 
  0x0000000110e1a7d3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a7d8: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a7da: mov    $0xffffff4d,%esi
  0x0000000110e1a7df: mov    %r13,0x8(%rsp)
  0x0000000110e1a7e4: mov    0x1c(%rsp),%r8d
  0x0000000110e1a7e9: mov    %r8d,0x10(%rsp)
  0x0000000110e1a7ee: mov    %r10d,0x14(%rsp)
  0x0000000110e1a7f3: mov    %r9d,0x18(%rsp)
  0x0000000110e1a7f8: mov    %edi,0x20(%rsp)
  0x0000000110e1a7fc: mov    %r11d,0x24(%rsp)
  0x0000000110e1a801: data16 xchg %ax,%ax
  0x0000000110e1a804: vzeroupper 
  0x0000000110e1a807: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a80c: ud2                       ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a80e: mov    $0xffffff4d,%esi
  0x0000000110e1a813: mov    %r13,0x10(%rsp)
  0x0000000110e1a818: mov    0x1c(%rsp),%r8d
  0x0000000110e1a81d: mov    %r8d,0x18(%rsp)
  0x0000000110e1a822: mov    %r9d,0x1c(%rsp)
  0x0000000110e1a827: mov    %r11d,0x20(%rsp)
  0x0000000110e1a82c: mov    %edi,0x24(%rsp)
  0x0000000110e1a830: vzeroupper 
  0x0000000110e1a833: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a838: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a83a: movslq %r8d,%r11          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a83d: jmpq   0x0000000110e1a538
  0x0000000110e1a842: add    $0xfffffffffffffffe,%r11
  0x0000000110e1a846: mov    %r11,%rcx
  0x0000000110e1a849: mov    %r9,%rdi
  0x0000000110e1a84c: xor    %rax,%rax
  0x0000000110e1a84f: cmp    $0x8,%rcx
  0x0000000110e1a853: jg     0x0000000110e1a865
  0x0000000110e1a855: dec    %rcx
  0x0000000110e1a858: js     0x0000000110e1a86c
  0x0000000110e1a85a: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1a85e: dec    %rcx
  0x0000000110e1a861: jge    0x0000000110e1a85a
  0x0000000110e1a863: jmp    0x0000000110e1a86c
  0x0000000110e1a865: shl    $0x3,%rcx
  0x0000000110e1a869: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1a86c: jmpq   0x0000000110e1a611  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a871: mov    $0xffffffcc,%esi
  0x0000000110e1a876: mov    (%rsp),%rbp
  0x0000000110e1a87a: mov    %r13,0x8(%rsp)
  0x0000000110e1a87f: mov    0x1c(%rsp),%r11d
  0x0000000110e1a884: mov    %r11d,0x18(%rsp)
  0x0000000110e1a889: mov    %r10d,0x1c(%rsp)
  0x0000000110e1a88e: mov    %r8d,0x24(%rsp)
  0x0000000110e1a893: nop
  0x0000000110e1a894: vzeroupper 
  0x0000000110e1a897: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [28]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a89c: ud2    
  0x0000000110e1a89e: mov    %r15,%rsi
  0x0000000110e1a8a1: vzeroupper 
  0x0000000110e1a8a4: movabs $0x107aec8aa,%r10
  0x0000000110e1a8ae: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a8b1: jmpq   0x0000000110e1a61c
  0x0000000110e1a8b6: mov    $0xfffffff6,%esi
  0x0000000110e1a8bb: nop
  0x0000000110e1a8bc: vzeroupper 
  0x0000000110e1a8bf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a8c4: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a8c6: mov    $0xfffffff6,%esi
  0x0000000110e1a8cb: nop
  0x0000000110e1a8cc: vzeroupper 
  0x0000000110e1a8cf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a8d4: ud2    
  0x0000000110e1a8d6: mov    $0xfffffff6,%esi
  0x0000000110e1a8db: nop
  0x0000000110e1a8dc: vzeroupper 
  0x0000000110e1a8df: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a8e4: ud2    
  0x0000000110e1a8e6: mov    $0xfffffff6,%esi
  0x0000000110e1a8eb: mov    %eax,%ebp
  0x0000000110e1a8ed: mov    %r9d,(%rsp)
  0x0000000110e1a8f1: mov    %r8d,0x4(%rsp)
  0x0000000110e1a8f6: xchg   %ax,%ax
  0x0000000110e1a8f8: vzeroupper 
  0x0000000110e1a8fb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a900: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a902: mov    $0xffffff4d,%esi
  0x0000000110e1a907: mov    (%rsp),%rbp
  0x0000000110e1a90b: mov    %rdx,0x10(%rsp)
  0x0000000110e1a910: vzeroupper 
  0x0000000110e1a913: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [16]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 534)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1a918: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a91a: mov    %rax,%rsi
  0x0000000110e1a91d: jmp    0x0000000110e1a922  ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a91f: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x0000000110e1a922: vzeroupper 
  0x0000000110e1a925: add    $0x50,%rsp
  0x0000000110e1a929: pop    %rbp
  0x0000000110e1a92a: jmpq   0x0000000110dc8700  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1a92f: hlt    
  0x0000000110e1a930: hlt    
  0x0000000110e1a931: hlt    
  0x0000000110e1a932: hlt    
  0x0000000110e1a933: hlt    
  0x0000000110e1a934: hlt    
  0x0000000110e1a935: hlt    
  0x0000000110e1a936: hlt    
  0x0000000110e1a937: hlt    
  0x0000000110e1a938: hlt    
  0x0000000110e1a939: hlt    
  0x0000000110e1a93a: hlt    
  0x0000000110e1a93b: hlt    
  0x0000000110e1a93c: hlt    
  0x0000000110e1a93d: hlt    
  0x0000000110e1a93e: hlt    
  0x0000000110e1a93f: hlt    
[Stub Code]
  0x0000000110e1a940: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e1a94a: jmpq   0x0000000110e1a94a  ;   {runtime_call}
[Exception Handler]
  0x0000000110e1a94f: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e1a954: callq  0x0000000110e1a959
  0x0000000110e1a959: subq   $0x5,(%rsp)
  0x0000000110e1a95e: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1a963: hlt    
  0x0000000110e1a964: hlt    
  0x0000000110e1a965: hlt    
  0x0000000110e1a966: hlt    
  0x0000000110e1a967: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [12]=NarrowOop }pc offsets: 324 
ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }pc offsets: 972 
ImmutableOopMap{[0]=Oop [8]=NarrowOop [16]=NarrowOop }pc offsets: 1048 
ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }pc offsets: 1100 
ImmutableOopMap{[0]=Oop [16]=Oop }pc offsets: 1144 
ImmutableOopMap{rbp=Oop [8]=Oop [28]=NarrowOop }pc offsets: 1244 
ImmutableOopMap{}pc offsets: 1284 1300 1316 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 1344 
ImmutableOopMap{rbp=Oop [16]=Oop }pc offsets: 1368 Compiled method (c2)    1521  172             java.lang.AbstractStringBuilder::append (45 bytes)
 total in heap  [0x0000000110e1b190,0x0000000110e1c070] = 3808
 relocation     [0x0000000110e1b308,0x0000000110e1b340] = 56
 main code      [0x0000000110e1b340,0x0000000110e1b8c0] = 1408
 stub code      [0x0000000110e1b8c0,0x0000000110e1b8e8] = 40
 metadata       [0x0000000110e1b8e8,0x0000000110e1b938] = 80
 scopes data    [0x0000000110e1b938,0x0000000110e1bbb8] = 640
 scopes pcs     [0x0000000110e1bbb8,0x0000000110e1c008] = 1104
 dependencies   [0x0000000110e1c008,0x0000000110e1c010] = 8
 handler table  [0x0000000110e1c010,0x0000000110e1c040] = 48
 nul chk table  [0x0000000110e1c040,0x0000000110e1c070] = 48
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;  [0x0000000110e1b340, 0x0000000110e1b8e8]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0ca08} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x0000000110e1b340: mov    0x8(%rsi),%r10d
  0x0000000110e1b344: movabs $0x800000000,%r12
  0x0000000110e1b34e: add    %r12,%r10
  0x0000000110e1b351: xor    %r12,%r12
  0x0000000110e1b354: cmp    %r10,%rax
  0x0000000110e1b357: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1b35d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1b360: mov    %eax,-0x14000(%rsp)
  0x0000000110e1b367: push   %rbp
  0x0000000110e1b368: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)

  0x0000000110e1b36c: mov    %rsi,0x8(%rsp)
  0x0000000110e1b371: mov    %rdx,%rbx
  0x0000000110e1b374: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; implicit exception: dispatches to 0x0000000110e1b87a
  0x0000000110e1b378: mov    0xc(%r12,%r11,8),%ebp  ; implicit exception: dispatches to 0x0000000110e1b82e
  0x0000000110e1b37d: mov    0x14(%rsi),%r8d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b381: mov    0xc(%r12,%r8,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ; implicit exception: dispatches to 0x0000000110e1b83e
  0x0000000110e1b386: mov    %r10d,0x28(%rsp)
  0x0000000110e1b38b: movsbl 0x10(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b38f: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x0000000110e1b393: mov    0x28(%rsp),%r10d
  0x0000000110e1b398: mov    %edi,%ecx
  0x0000000110e1b39a: sar    %cl,%r10d          ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@9 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b39d: mov    %eax,%ecx
  0x0000000110e1b39f: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x0000000110e1b3a1: mov    %ebp,0x10(%rsp)
  0x0000000110e1b3a5: mov    0xc(%rsi),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 538)

  0x0000000110e1b3a9: mov    %ebp,%edx
  0x0000000110e1b3ab: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 538)

  0x0000000110e1b3ae: mov    %edx,%esi
  0x0000000110e1b3b0: sub    %r10d,%esi
  0x0000000110e1b3b3: test   %esi,%esi
  0x0000000110e1b3b5: jg     0x0000000110e1b441  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3bb: cmp    %eax,%edi
  0x0000000110e1b3bd: jne    0x0000000110e1b79a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3c3: cmp    %edi,%eax
  0x0000000110e1b3c5: jne    0x0000000110e1b766  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3cb: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ; implicit exception: dispatches to 0x0000000110e1b84e
  0x0000000110e1b3d0: mov    %edi,%ecx
  0x0000000110e1b3d2: shl    %cl,%r9d           ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@16 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3d5: mov    0xc(%r12,%r8,8),%ecx  ; implicit exception: dispatches to 0x0000000110e1b85e
  0x0000000110e1b3da: test   %r9d,%r9d
  0x0000000110e1b3dd: jl     0x0000000110e1b730
  0x0000000110e1b3e3: mov    %r9d,%ebx
  0x0000000110e1b3e6: add    %r10d,%ebx
  0x0000000110e1b3e9: cmp    %ebx,%ecx
  0x0000000110e1b3eb: jb     0x0000000110e1b730  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3f1: test   %r10d,%r10d
  0x0000000110e1b3f4: jbe    0x0000000110e1b41b
  0x0000000110e1b3f6: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b3fa: lea    0x10(%r8,%r9,1),%rsi
  0x0000000110e1b3ff: lea    (%r12,%r11,8),%r8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b403: lea    0x10(%r12,%r11,8),%rdi
  0x0000000110e1b408: movslq %r10d,%rdx
  0x0000000110e1b40b: vzeroupper 
  0x0000000110e1b40e: movabs $0x110d9ecc0,%r10
  0x0000000110e1b418: callq  *%r10              ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b41b: mov    0x10(%rsp),%r10d
  0x0000000110e1b420: mov    0x8(%rsp),%r11
  0x0000000110e1b425: add    %r10d,0xc(%r11)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)

  0x0000000110e1b429: mov    0x8(%rsp),%rax
  0x0000000110e1b42e: vzeroupper 
  0x0000000110e1b431: add    $0x50,%rsp
  0x0000000110e1b435: pop    %rbp
  0x0000000110e1b436: mov    0x108(%r15),%r10
  0x0000000110e1b43d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1b440: retq   
  0x0000000110e1b441: shl    %r10d              ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b444: mov    %r10d,%r9d
  0x0000000110e1b447: sub    %edx,%r9d
  0x0000000110e1b44a: add    $0x2,%r9d
  0x0000000110e1b44e: test   %r9d,%r9d
  0x0000000110e1b451: jge    0x0000000110e1b641  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@20 (line 201)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b457: mov    %edx,%r10d         ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 204)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b45a: test   %r10d,%r10d
  0x0000000110e1b45d: jle    0x0000000110e1b46f  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@35 (line 205)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b45f: mov    $0x7ffffff7,%esi
  0x0000000110e1b464: mov    %edi,%ecx
  0x0000000110e1b466: sar    %cl,%esi
  0x0000000110e1b468: sub    %r10d,%esi
  0x0000000110e1b46b: test   %esi,%esi
  0x0000000110e1b46d: jge    0x0000000110e1b4a5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@45 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b46f: mov    %r8d,0x14(%rsp)
  0x0000000110e1b474: mov    0x8(%rsp),%r10
  0x0000000110e1b479: mov    %r10,(%rsp)
  0x0000000110e1b47d: mov    %rbx,%rbp
  0x0000000110e1b480: mov    %r10,%rsi
  0x0000000110e1b483: nop
  0x0000000110e1b484: vzeroupper 
  0x0000000110e1b487: callq  0x0000000110d8ff00  ; ImmutableOopMap{rbp=Oop [0]=Oop [20]=NarrowOop }
                                                ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {optimized virtual_call}
  0x0000000110e1b48c: mov    (%rsp),%r10
  0x0000000110e1b490: mov    %r10,0x8(%rsp)
  0x0000000110e1b495: movsbl 0x10(%r10),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b49a: mov    %rbp,%rbx
  0x0000000110e1b49d: mov    0x14(%rsp),%r8d
  0x0000000110e1b4a2: mov    %eax,%r10d         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@50 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4a5: mov    %edi,%ecx
  0x0000000110e1b4a7: shl    %cl,%r10d          ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@31 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4aa: cmp    $0x100000,%r10d
  0x0000000110e1b4b1: ja     0x0000000110e1b7c2
  0x0000000110e1b4b7: movslq %r10d,%r11
  0x0000000110e1b4ba: mov    %r10d,%r9d         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4bd: mov    0x28(%rsp),%ecx
  0x0000000110e1b4c1: cmp    %r9d,%ecx
  0x0000000110e1b4c4: mov    %r9d,%ebp
  0x0000000110e1b4c7: mov    0x28(%rsp),%ecx
  0x0000000110e1b4cb: cmovl  %ecx,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4ce: mov    0x28(%rsp),%edx
  0x0000000110e1b4d2: cmp    %ebp,%edx
  0x0000000110e1b4d4: jb     0x0000000110e1b7f9
  0x0000000110e1b4da: cmp    %ebp,%r9d
  0x0000000110e1b4dd: jb     0x0000000110e1b7f9  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4e3: add    $0x17,%r11
  0x0000000110e1b4e7: mov    %r11,%rcx
  0x0000000110e1b4ea: and    $0xfffffffffffffff8,%rcx  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b4ee: cmp    $0x100000,%r10d
  0x0000000110e1b4f5: ja     0x0000000110e1b6e2
  0x0000000110e1b4fb: mov    0x118(%r15),%r14
  0x0000000110e1b502: mov    %r14,%r9
  0x0000000110e1b505: add    %rcx,%r9
  0x0000000110e1b508: cmp    0x128(%r15),%r9
  0x0000000110e1b50f: jae    0x0000000110e1b6e2  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b515: mov    %r9,0x118(%r15)
  0x0000000110e1b51c: prefetchnta 0xc0(%r9)
  0x0000000110e1b524: movq   $0x1,(%r14)
  0x0000000110e1b52b: prefetchnta 0x100(%r9)
  0x0000000110e1b533: movl   $0x820,0x8(%r14)   ;   {metadata({type array byte})}
  0x0000000110e1b53b: mov    %r10d,0xc(%r14)
  0x0000000110e1b53f: prefetchnta 0x140(%r9)
  0x0000000110e1b547: prefetchnta 0x180(%r9)    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b54f: mov    %r14,%r9
  0x0000000110e1b552: add    $0x10,%r9
  0x0000000110e1b556: shr    $0x3,%r11
  0x0000000110e1b55a: mov    %r14,%r13
  0x0000000110e1b55d: shr    $0x3,%r13          ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b561: test   %ebp,%ebp
  0x0000000110e1b563: je     0x0000000110e1b7ca
  0x0000000110e1b569: lea    (%r12,%r8,8),%rdi  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b56d: lea    0x10(%r12,%r8,8),%r8
  0x0000000110e1b572: cmp    %r10d,%ebp
  0x0000000110e1b575: jl     0x0000000110e1b64a
  0x0000000110e1b57b: add    $0xfffffffffffffff0,%rcx
  0x0000000110e1b57f: shr    $0x3,%rcx
  0x0000000110e1b583: mov    %r8,%rdi
  0x0000000110e1b586: mov    %r9,%rsi
  0x0000000110e1b589: mov    %rcx,%rdx
  0x0000000110e1b58c: vzeroupper 
  0x0000000110e1b58f: movabs $0x110d9f080,%r10
  0x0000000110e1b599: callq  *%r10
  0x0000000110e1b59c: cmpb   $0x0,0x30(%r15)
  0x0000000110e1b5a1: jne    0x0000000110e1b6a6
  0x0000000110e1b5a7: mov    0x8(%rsp),%r10
  0x0000000110e1b5ac: mov    %r13d,0x14(%r10)
  0x0000000110e1b5b0: mov    %r14,%r10
  0x0000000110e1b5b3: mov    0x8(%rsp),%r11
  0x0000000110e1b5b8: xor    %r11,%r10
  0x0000000110e1b5bb: shr    $0x14,%r10
  0x0000000110e1b5bf: test   %r10,%r10
  0x0000000110e1b5c2: je     0x0000000110e1b623
  0x0000000110e1b5c4: shr    $0x9,%r11
  0x0000000110e1b5c8: movabs $0x110569000,%rdi
  0x0000000110e1b5d2: add    %r11,%rdi
  0x0000000110e1b5d5: cmpb   $0x20,(%rdi)
  0x0000000110e1b5d8: je     0x0000000110e1b623
  0x0000000110e1b5da: mov    0x70(%r15),%r10
  0x0000000110e1b5de: mov    0x80(%r15),%r11
  0x0000000110e1b5e5: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1b5eb: cmpb   $0x0,(%rdi)
  0x0000000110e1b5ee: je     0x0000000110e1b61a
  0x0000000110e1b5f0: movb   $0x0,(%rdi)
  0x0000000110e1b5f3: test   %r10,%r10
  0x0000000110e1b5f6: je     0x0000000110e1b607
  0x0000000110e1b5f8: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e1b5fd: add    $0xfffffffffffffff8,%r10
  0x0000000110e1b601: mov    %r10,0x70(%r15)
  0x0000000110e1b605: jmp    0x0000000110e1b61a
  0x0000000110e1b607: mov    %r15,%rsi
  0x0000000110e1b60a: vzeroupper 
  0x0000000110e1b60d: movabs $0x107aec8ce,%r10
  0x0000000110e1b617: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b61a: mov    0x8(%rsp),%r10
  0x0000000110e1b61f: mov    0x14(%r10),%r13d   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b623: mov    0x8(%rsp),%r10
  0x0000000110e1b628: movsbl 0x10(%r10),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b62d: movsbl 0x14(%rbx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b631: mov    0xc(%r10),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 539)

  0x0000000110e1b635: mov    0xc(%rbx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b639: mov    %r13d,%r8d
  0x0000000110e1b63c: jmpq   0x0000000110e1b3bb
  0x0000000110e1b641: add    $0x2,%r10d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@15 (line 200)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b645: jmpq   0x0000000110e1b45a
  0x0000000110e1b64a: movslq %ebp,%rdx
  0x0000000110e1b64d: mov    %rdx,%r10
  0x0000000110e1b650: add    $0x10,%r10
  0x0000000110e1b654: mov    %r10,%rcx
  0x0000000110e1b657: and    $0xfffffffffffffff8,%rcx
  0x0000000110e1b65b: mov    %r14,%rdi
  0x0000000110e1b65e: add    %rcx,%rdi
  0x0000000110e1b661: shr    $0x3,%r10
  0x0000000110e1b665: sub    %r10,%r11
  0x0000000110e1b668: mov    %r11,%rcx
  0x0000000110e1b66b: xor    %rax,%rax
  0x0000000110e1b66e: cmp    $0x8,%rcx
  0x0000000110e1b672: jg     0x0000000110e1b684
  0x0000000110e1b674: dec    %rcx
  0x0000000110e1b677: js     0x0000000110e1b68b
  0x0000000110e1b679: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1b67d: dec    %rcx
  0x0000000110e1b680: jge    0x0000000110e1b679
  0x0000000110e1b682: jmp    0x0000000110e1b68b
  0x0000000110e1b684: shl    $0x3,%rcx
  0x0000000110e1b688: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1b68b: mov    %r8,%rdi
  0x0000000110e1b68e: mov    %r9,%rsi
  0x0000000110e1b691: vzeroupper 
  0x0000000110e1b694: movabs $0x110d9ec00,%r10
  0x0000000110e1b69e: callq  *%r10
  0x0000000110e1b6a1: jmpq   0x0000000110e1b59c
  0x0000000110e1b6a6: mov    0x8(%rsp),%r10
  0x0000000110e1b6ab: mov    0x14(%r10),%r10d
  0x0000000110e1b6af: test   %r10d,%r10d
  0x0000000110e1b6b2: je     0x0000000110e1b5a7
  0x0000000110e1b6b8: mov    0x38(%r15),%r11
  0x0000000110e1b6bc: mov    %r10,%rdi
  0x0000000110e1b6bf: shl    $0x3,%rdi
  0x0000000110e1b6c3: test   %r11,%r11
  0x0000000110e1b6c6: je     0x0000000110e1b816
  0x0000000110e1b6cc: mov    0x48(%r15),%r10
  0x0000000110e1b6d0: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1b6d5: add    $0xfffffffffffffff8,%r11
  0x0000000110e1b6d9: mov    %r11,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b6dd: jmpq   0x0000000110e1b5a7
  0x0000000110e1b6e2: mov    %rcx,0x28(%rsp)
  0x0000000110e1b6e7: mov    %r11,0x20(%rsp)
  0x0000000110e1b6ec: mov    %r10d,0x18(%rsp)
  0x0000000110e1b6f1: mov    %r8d,0x14(%rsp)
  0x0000000110e1b6f6: mov    %rbx,(%rsp)
  0x0000000110e1b6fa: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e1b704: mov    %r10d,%edx
  0x0000000110e1b707: nop
  0x0000000110e1b708: vzeroupper 
  0x0000000110e1b70b: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e1b710: mov    (%rsp),%rbx
  0x0000000110e1b714: mov    0x14(%rsp),%r8d
  0x0000000110e1b719: mov    0x18(%rsp),%r10d
  0x0000000110e1b71e: mov    0x20(%rsp),%r11
  0x0000000110e1b723: mov    0x28(%rsp),%rcx
  0x0000000110e1b728: mov    %rax,%r14
  0x0000000110e1b72b: jmpq   0x0000000110e1b54f
  0x0000000110e1b730: mov    $0xffffffcc,%esi
  0x0000000110e1b735: mov    0x8(%rsp),%rcx
  0x0000000110e1b73a: mov    %rcx,%rbp
  0x0000000110e1b73d: mov    %r11d,(%rsp)
  0x0000000110e1b741: mov    0x10(%rsp),%r11d
  0x0000000110e1b746: mov    %r11d,0x4(%rsp)
  0x0000000110e1b74b: mov    %r8d,0x8(%rsp)
  0x0000000110e1b750: mov    %r9d,0xc(%rsp)
  0x0000000110e1b755: mov    %r10d,0x10(%rsp)
  0x0000000110e1b75a: xchg   %ax,%ax
  0x0000000110e1b75c: vzeroupper 
  0x0000000110e1b75f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop [8]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b764: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b766: mov    $0xffffff4d,%esi
  0x0000000110e1b76b: mov    0x8(%rsp),%rbp
  0x0000000110e1b770: mov    %rbx,(%rsp)
  0x0000000110e1b774: mov    0x10(%rsp),%r11d
  0x0000000110e1b779: mov    %r11d,0x8(%rsp)
  0x0000000110e1b77e: mov    %r8d,0xc(%rsp)
  0x0000000110e1b783: mov    %r9d,0x10(%rsp)
  0x0000000110e1b788: mov    %eax,0x18(%rsp)
  0x0000000110e1b78c: mov    %edi,0x1c(%rsp)
  0x0000000110e1b790: vzeroupper 
  0x0000000110e1b793: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [12]=NarrowOop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b798: ud2                       ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b79a: mov    $0xffffff4d,%esi
  0x0000000110e1b79f: mov    0x8(%rsp),%rbp
  0x0000000110e1b7a4: mov    %rbx,0x8(%rsp)
  0x0000000110e1b7a9: mov    %r9d,0x14(%rsp)
  0x0000000110e1b7ae: mov    %edi,0x18(%rsp)
  0x0000000110e1b7b2: mov    %eax,0x1c(%rsp)
  0x0000000110e1b7b6: xchg   %ax,%ax
  0x0000000110e1b7b8: vzeroupper 
  0x0000000110e1b7bb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b7c0: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b7c2: movslq %r10d,%r11         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b7c5: jmpq   0x0000000110e1b4ba
  0x0000000110e1b7ca: add    $0xfffffffffffffffe,%r11
  0x0000000110e1b7ce: mov    %r11,%rcx
  0x0000000110e1b7d1: mov    %r9,%rdi
  0x0000000110e1b7d4: xor    %rax,%rax
  0x0000000110e1b7d7: cmp    $0x8,%rcx
  0x0000000110e1b7db: jg     0x0000000110e1b7ed
  0x0000000110e1b7dd: dec    %rcx
  0x0000000110e1b7e0: js     0x0000000110e1b7f4
  0x0000000110e1b7e2: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1b7e6: dec    %rcx
  0x0000000110e1b7e9: jge    0x0000000110e1b7e2
  0x0000000110e1b7eb: jmp    0x0000000110e1b7f4
  0x0000000110e1b7ed: shl    $0x3,%rcx
  0x0000000110e1b7f1: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1b7f4: jmpq   0x0000000110e1b59c  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b7f9: mov    $0xffffffcc,%esi
  0x0000000110e1b7fe: mov    %rbx,(%rsp)
  0x0000000110e1b802: mov    %r8d,0x14(%rsp)
  0x0000000110e1b807: mov    %r10d,0x1c(%rsp)
  0x0000000110e1b80c: vzeroupper 
  0x0000000110e1b80f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b814: ud2    
  0x0000000110e1b816: mov    %r15,%rsi
  0x0000000110e1b819: vzeroupper 
  0x0000000110e1b81c: movabs $0x107aec8aa,%r10
  0x0000000110e1b826: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b829: jmpq   0x0000000110e1b5a7
  0x0000000110e1b82e: mov    $0xfffffff6,%esi
  0x0000000110e1b833: nop
  0x0000000110e1b834: vzeroupper 
  0x0000000110e1b837: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b83c: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x0000000110e1b83e: mov    $0xfffffff6,%esi
  0x0000000110e1b843: nop
  0x0000000110e1b844: vzeroupper 
  0x0000000110e1b847: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b84c: ud2    
  0x0000000110e1b84e: mov    $0xfffffff6,%esi
  0x0000000110e1b853: nop
  0x0000000110e1b854: vzeroupper 
  0x0000000110e1b857: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b85c: ud2    
  0x0000000110e1b85e: mov    $0xfffffff6,%esi
  0x0000000110e1b863: mov    %r11d,%ebp
  0x0000000110e1b866: mov    %r9d,(%rsp)
  0x0000000110e1b86a: mov    %r10d,0x4(%rsp)
  0x0000000110e1b86f: nop
  0x0000000110e1b870: vzeroupper 
  0x0000000110e1b873: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b878: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x0000000110e1b87a: mov    $0xffffff4d,%esi
  0x0000000110e1b87f: mov    0x8(%rsp),%rbp
  0x0000000110e1b884: mov    %rdx,0x8(%rsp)
  0x0000000110e1b889: data16 xchg %ax,%ax
  0x0000000110e1b88c: vzeroupper 
  0x0000000110e1b88f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 534)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1b894: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b896: mov    %rax,%rsi
  0x0000000110e1b899: jmp    0x0000000110e1b89e  ;*invokevirtual hugeCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@47 (line 206)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x0000000110e1b89b: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)

  0x0000000110e1b89e: vzeroupper 
  0x0000000110e1b8a1: add    $0x50,%rsp
  0x0000000110e1b8a5: pop    %rbp
  0x0000000110e1b8a6: jmpq   0x0000000110dc8700  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1b8ab: hlt    
  0x0000000110e1b8ac: hlt    
  0x0000000110e1b8ad: hlt    
  0x0000000110e1b8ae: hlt    
  0x0000000110e1b8af: hlt    
  0x0000000110e1b8b0: hlt    
  0x0000000110e1b8b1: hlt    
  0x0000000110e1b8b2: hlt    
  0x0000000110e1b8b3: hlt    
  0x0000000110e1b8b4: hlt    
  0x0000000110e1b8b5: hlt    
  0x0000000110e1b8b6: hlt    
  0x0000000110e1b8b7: hlt    
  0x0000000110e1b8b8: hlt    
  0x0000000110e1b8b9: hlt    
  0x0000000110e1b8ba: hlt    
  0x0000000110e1b8bb: hlt    
  0x0000000110e1b8bc: hlt    
  0x0000000110e1b8bd: hlt    
  0x0000000110e1b8be: hlt    
  0x0000000110e1b8bf: hlt    
[Stub Code]
  0x0000000110e1b8c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e1b8ca: jmpq   0x0000000110e1b8ca  ;   {runtime_call}
[Exception Handler]
  0x0000000110e1b8cf: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e1b8d4: callq  0x0000000110e1b8d9
  0x0000000110e1b8d9: subq   $0x5,(%rsp)
  0x0000000110e1b8de: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1b8e3: hlt    
  0x0000000110e1b8e4: hlt    
  0x0000000110e1b8e5: hlt    
  0x0000000110e1b8e6: hlt    
  0x0000000110e1b8e7: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [20]=NarrowOop }pc offsets: 332 
ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }pc offsets: 976 
ImmutableOopMap{rbp=Oop [0]=NarrowOop [8]=NarrowOop }pc offsets: 1060 
ImmutableOopMap{rbp=Oop [0]=Oop [12]=NarrowOop }pc offsets: 1112 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 1152 
ImmutableOopMap{[0]=Oop [8]=Oop [20]=NarrowOop }pc offsets: 1236 
ImmutableOopMap{}pc offsets: 1276 1292 1308 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 1336 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 1364 Compiled method (c2)    1535  173             java.lang.AbstractStringBuilder::putStringAt (29 bytes)
 total in heap  [0x0000000110e15410,0x0000000110e159d0] = 1472
 relocation     [0x0000000110e15588,0x0000000110e155a0] = 24
 main code      [0x0000000110e155a0,0x0000000110e15700] = 352
 stub code      [0x0000000110e15700,0x0000000110e15718] = 24
 metadata       [0x0000000110e15718,0x0000000110e15738] = 32
 scopes data    [0x0000000110e15738,0x0000000110e15808] = 208
 scopes pcs     [0x0000000110e15808,0x0000000110e159a8] = 416
 dependencies   [0x0000000110e159a8,0x0000000110e159b0] = 8
 nul chk table  [0x0000000110e159b0,0x0000000110e159d0] = 32
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.putStringAt(ILjava/lang/String;)V  [0x0000000110e155a0, 0x0000000110e15718]  376 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0f750} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e155a0: mov    0x8(%rsi),%r10d
  0x0000000110e155a4: movabs $0x800000000,%r12
  0x0000000110e155ae: add    %r12,%r10
  0x0000000110e155b1: xor    %r12,%r12
  0x0000000110e155b4: cmp    %r10,%rax
  0x0000000110e155b7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e155bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e155c0: mov    %eax,-0x14000(%rsp)
  0x0000000110e155c7: push   %rbp
  0x0000000110e155c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1664)

  0x0000000110e155cc: movsbl 0x14(%rcx),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; implicit exception: dispatches to 0x0000000110e156b2
  0x0000000110e155d1: movsbl 0x10(%rsi),%r9d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)

  0x0000000110e155d6: cmp    %r11d,%r9d
  0x0000000110e155d9: jne    0x0000000110e1568e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)

  0x0000000110e155df: mov    0x14(%rsi),%r8d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)

  0x0000000110e155e3: cmp    %r9d,%r11d
  0x0000000110e155e6: jne    0x0000000110e1566a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e155ec: mov    0xc(%rcx),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e155ef: mov    0xc(%r12,%rbx,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; implicit exception: dispatches to 0x0000000110e156c2
  0x0000000110e155f4: mov    %edx,%r10d
  0x0000000110e155f7: mov    %r9d,%ecx
  0x0000000110e155fa: shl    %cl,%r10d          ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@16 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e155fd: mov    0xc(%r12,%r8,8),%r11d  ; implicit exception: dispatches to 0x0000000110e156d2
  0x0000000110e15602: test   %r10d,%r10d
  0x0000000110e15605: jl     0x0000000110e1564d
  0x0000000110e15607: mov    %r10d,%ecx
  0x0000000110e1560a: add    %ebp,%ecx
  0x0000000110e1560c: cmp    %ecx,%r11d
  0x0000000110e1560f: jb     0x0000000110e1564d  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e15611: test   %ebp,%ebp
  0x0000000110e15613: jbe    0x0000000110e1563a
  0x0000000110e15615: movslq %ebp,%rdx
  0x0000000110e15618: lea    (%r12,%rbx,8),%r11  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@9 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e1561c: lea    0x10(%r12,%rbx,8),%rdi
  0x0000000110e15621: lea    (%r12,%r8,8),%r11  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)

  0x0000000110e15625: lea    0x10(%r11,%r10,1),%rsi
  0x0000000110e1562a: vzeroupper 
  0x0000000110e1562d: movabs $0x110d9ecc0,%r10
  0x0000000110e15637: callq  *%r10
  0x0000000110e1563a: vzeroupper 
  0x0000000110e1563d: add    $0x30,%rsp
  0x0000000110e15641: pop    %rbp
  0x0000000110e15642: mov    0x108(%r15),%r10
  0x0000000110e15649: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1564c: retq   
  0x0000000110e1564d: mov    $0xffffffcc,%esi
  0x0000000110e15652: mov    %r10d,(%rsp)
  0x0000000110e15656: mov    %ebx,0x4(%rsp)
  0x0000000110e1565a: mov    %r8d,0x8(%rsp)
  0x0000000110e1565f: nop
  0x0000000110e15660: vzeroupper 
  0x0000000110e15663: callq  0x0000000110d91900  ; ImmutableOopMap{[4]=NarrowOop [8]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e15668: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e1566a: mov    $0xffffff4d,%esi
  0x0000000110e1566f: mov    %rcx,%rbp
  0x0000000110e15672: mov    %edx,(%rsp)
  0x0000000110e15675: mov    %r11d,0x4(%rsp)
  0x0000000110e1567a: mov    %r8d,0x8(%rsp)
  0x0000000110e1567f: mov    %r9d,0x10(%rsp)
  0x0000000110e15684: vzeroupper 
  0x0000000110e15687: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=NarrowOop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1568c: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@5 (line 3191)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e1568e: mov    %rsi,%rbp
  0x0000000110e15691: mov    %edx,(%rsp)
  0x0000000110e15694: mov    %rcx,0x8(%rsp)
  0x0000000110e15699: mov    %r11d,0x4(%rsp)
  0x0000000110e1569e: mov    %r9d,0x10(%rsp)
  0x0000000110e156a3: mov    $0xffffff4d,%esi
  0x0000000110e156a8: vzeroupper 
  0x0000000110e156ab: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e156b0: ud2                       ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)

  0x0000000110e156b2: mov    $0xfffffff6,%esi
  0x0000000110e156b7: nop
  0x0000000110e156b8: vzeroupper 
  0x0000000110e156bb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e156c0: ud2                       ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)

  0x0000000110e156c2: mov    $0xfffffff6,%esi
  0x0000000110e156c7: nop
  0x0000000110e156c8: vzeroupper 
  0x0000000110e156cb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e156d0: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@21 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e156d2: mov    $0xfffffff6,%esi
  0x0000000110e156d7: mov    %r10d,(%rsp)
  0x0000000110e156db: mov    %ebx,0x4(%rsp)
  0x0000000110e156df: nop
  0x0000000110e156e0: vzeroupper 
  0x0000000110e156e3: callq  0x0000000110d91900  ; ImmutableOopMap{[4]=NarrowOop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e156e8: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getBytes@22 (line 3192)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x0000000110e156ea: hlt    
  0x0000000110e156eb: hlt    
  0x0000000110e156ec: hlt    
  0x0000000110e156ed: hlt    
  0x0000000110e156ee: hlt    
  0x0000000110e156ef: hlt    
  0x0000000110e156f0: hlt    
  0x0000000110e156f1: hlt    
  0x0000000110e156f2: hlt    
  0x0000000110e156f3: hlt    
  0x0000000110e156f4: hlt    
  0x0000000110e156f5: hlt    
  0x0000000110e156f6: hlt    
  0x0000000110e156f7: hlt    
  0x0000000110e156f8: hlt    
  0x0000000110e156f9: hlt    
  0x0000000110e156fa: hlt    
  0x0000000110e156fb: hlt    
  0x0000000110e156fc: hlt    
  0x0000000110e156fd: hlt    
  0x0000000110e156fe: hlt    
  0x0000000110e156ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e15700: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e15705: callq  0x0000000110e1570a
  0x0000000110e1570a: subq   $0x5,(%rsp)
  0x0000000110e1570f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e15714: hlt    
  0x0000000110e15715: hlt    
  0x0000000110e15716: hlt    
  0x0000000110e15717: hlt    

ImmutableOopMap{[4]=NarrowOop [8]=NarrowOop }pc offsets: 200 
ImmutableOopMap{rbp=Oop [8]=NarrowOop }pc offsets: 236 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 272 
ImmutableOopMap{}pc offsets: 288 304 
ImmutableOopMap{[4]=NarrowOop }pc offsets: 328 Compiled method (c2)    1539  174             java.lang.AbstractStringBuilder::getCoder (15 bytes)
 total in heap  [0x0000000110e17590,0x0000000110e177d8] = 584
 relocation     [0x0000000110e17708,0x0000000110e17718] = 16
 main code      [0x0000000110e17720,0x0000000110e17760] = 64
 stub code      [0x0000000110e17760,0x0000000110e17778] = 24
 metadata       [0x0000000110e17778,0x0000000110e17780] = 8
 scopes data    [0x0000000110e17780,0x0000000110e17790] = 16
 scopes pcs     [0x0000000110e17790,0x0000000110e177d0] = 64
 dependencies   [0x0000000110e177d0,0x0000000110e177d8] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.getCoder()B  [0x0000000110e17720, 0x0000000110e17778]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0f2c8} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e17720: mov    0x8(%rsi),%r10d
  0x0000000110e17724: movabs $0x800000000,%r12
  0x0000000110e1772e: add    %r12,%r10
  0x0000000110e17731: xor    %r12,%r12
  0x0000000110e17734: cmp    %r10,%rax
  0x0000000110e17737: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1773d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e17740: sub    $0x18,%rsp
  0x0000000110e17747: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1620)

  0x0000000110e1774c: movsbl 0x10(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)

  0x0000000110e17750: add    $0x10,%rsp
  0x0000000110e17754: pop    %rbp
  0x0000000110e17755: mov    0x108(%r15),%r10
  0x0000000110e1775c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1775f: retq   
[Exception Handler]
[Stub Code]
  0x0000000110e17760: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e17765: callq  0x0000000110e1776a
  0x0000000110e1776a: subq   $0x5,(%rsp)
  0x0000000110e1776f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e17774: hlt    
  0x0000000110e17775: hlt    
  0x0000000110e17776: hlt    
  0x0000000110e17777: hlt    
Compiled method (c2)    1544  175             java.lang.AbstractStringBuilder::<init> (39 bytes)
 total in heap  [0x0000000110e17090,0x0000000110e17538] = 1192
 relocation     [0x0000000110e17208,0x0000000110e17220] = 24
 main code      [0x0000000110e17220,0x0000000110e17400] = 480
 stub code      [0x0000000110e17400,0x0000000110e17418] = 24
 metadata       [0x0000000110e17418,0x0000000110e17430] = 24
 scopes data    [0x0000000110e17430,0x0000000110e17458] = 40
 scopes pcs     [0x0000000110e17458,0x0000000110e17518] = 192
 dependencies   [0x0000000110e17518,0x0000000110e17520] = 8
 handler table  [0x0000000110e17520,0x0000000110e17538] = 24
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.<init>(I)V  [0x0000000110e17220, 0x0000000110e17418]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee0b888} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e17220: mov    0x8(%rsi),%r10d
  0x0000000110e17224: movabs $0x800000000,%r12
  0x0000000110e1722e: add    %r12,%r10
  0x0000000110e17231: xor    %r12,%r12
  0x0000000110e17234: cmp    %r10,%rax
  0x0000000110e17237: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1723d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e17240: mov    %eax,-0x14000(%rsp)
  0x0000000110e17247: push   %rbp
  0x0000000110e17248: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 84)

  0x0000000110e1724c: mov    %rsi,%rbp
  0x0000000110e1724f: cmp    $0x100000,%edx
  0x0000000110e17255: ja     0x0000000110e173d0
  0x0000000110e1725b: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)

  0x0000000110e1725e: cmp    $0x100000,%edx
  0x0000000110e17264: ja     0x0000000110e173b8  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)

  0x0000000110e1726a: mov    0x118(%r15),%rbx
  0x0000000110e17271: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)

  0x0000000110e17275: mov    %rcx,%r10
  0x0000000110e17278: and    $0xfffffffffffffff8,%r10
  0x0000000110e1727c: mov    %rbx,%r11
  0x0000000110e1727f: add    %r10,%r11
  0x0000000110e17282: cmp    0x128(%r15),%r11
  0x0000000110e17289: jae    0x0000000110e173b8
  0x0000000110e1728f: mov    %r11,0x118(%r15)
  0x0000000110e17296: mov    %rbx,%rdi
  0x0000000110e17299: add    $0x10,%rdi
  0x0000000110e1729d: movq   $0x1,(%rbx)
  0x0000000110e172a4: prefetchnta 0xc0(%r11)
  0x0000000110e172ac: movl   $0x820,0x8(%rbx)   ;   {metadata({type array byte})}
  0x0000000110e172b3: mov    %edx,0xc(%rbx)
  0x0000000110e172b6: prefetchnta 0x100(%r11)
  0x0000000110e172be: prefetchnta 0x140(%r11)
  0x0000000110e172c6: prefetchnta 0x180(%r11)
  0x0000000110e172ce: shr    $0x3,%rcx
  0x0000000110e172d2: add    $0xfffffffffffffffe,%rcx
  0x0000000110e172d6: xor    %rax,%rax
  0x0000000110e172d9: cmp    $0x8,%rcx
  0x0000000110e172dd: jg     0x0000000110e172ef
  0x0000000110e172df: dec    %rcx
  0x0000000110e172e2: js     0x0000000110e172f6
  0x0000000110e172e4: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e172e8: dec    %rcx
  0x0000000110e172eb: jge    0x0000000110e172e4
  0x0000000110e172ed: jmp    0x0000000110e172f6
  0x0000000110e172ef: shl    $0x3,%rcx
  0x0000000110e172f3: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e172f6: cmpb   $0x0,0x30(%r15)
  0x0000000110e172fb: jne    0x0000000110e17385
  0x0000000110e17301: mov    %rbp,%r10
  0x0000000110e17304: mov    %rbx,%r8
  0x0000000110e17307: shr    $0x3,%r8
  0x0000000110e1730b: mov    %r8d,0x14(%rbp)
  0x0000000110e1730f: mov    %rbx,%r11
  0x0000000110e17312: xor    %r10,%r11
  0x0000000110e17315: shr    $0x14,%r11
  0x0000000110e17319: test   %r11,%r11
  0x0000000110e1731c: je     0x0000000110e17371
  0x0000000110e1731e: shr    $0x9,%r10
  0x0000000110e17322: movabs $0x110569000,%rdi
  0x0000000110e1732c: add    %r10,%rdi
  0x0000000110e1732f: cmpb   $0x20,(%rdi)
  0x0000000110e17332: je     0x0000000110e17371
  0x0000000110e17334: mov    0x80(%r15),%r10
  0x0000000110e1733b: mov    0x70(%r15),%r11
  0x0000000110e1733f: lock addl $0x0,-0x40(%rsp)
  0x0000000110e17345: cmpb   $0x0,(%rdi)
  0x0000000110e17348: je     0x0000000110e17371
  0x0000000110e1734a: movb   $0x0,(%rdi)
  0x0000000110e1734d: test   %r11,%r11
  0x0000000110e17350: jne    0x0000000110e17364
  0x0000000110e17352: mov    %r15,%rsi
  0x0000000110e17355: movabs $0x107aec8ce,%r10
  0x0000000110e1735f: callq  *%r10
  0x0000000110e17362: jmp    0x0000000110e17371
  0x0000000110e17364: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e17369: add    $0xfffffffffffffff8,%r11
  0x0000000110e1736d: mov    %r11,0x70(%r15)
  0x0000000110e17371: movb   $0x0,0x10(%rbp)
  0x0000000110e17375: add    $0x20,%rsp
  0x0000000110e17379: pop    %rbp
  0x0000000110e1737a: mov    0x108(%r15),%r10
  0x0000000110e17381: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e17384: retq   
  0x0000000110e17385: mov    0x14(%rbp),%r10d
  0x0000000110e17389: test   %r10d,%r10d
  0x0000000110e1738c: je     0x0000000110e17301
  0x0000000110e17392: mov    0x38(%r15),%r11
  0x0000000110e17396: mov    %r10,%rdi
  0x0000000110e17399: shl    $0x3,%rdi
  0x0000000110e1739d: test   %r11,%r11
  0x0000000110e173a0: je     0x0000000110e173d8
  0x0000000110e173a2: mov    0x48(%r15),%r10
  0x0000000110e173a6: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e173ab: add    $0xfffffffffffffff8,%r11
  0x0000000110e173af: mov    %r11,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)

  0x0000000110e173b3: jmpq   0x0000000110e17301
  0x0000000110e173b8: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e173c2: nop
  0x0000000110e173c3: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e173c8: mov    %rax,%rbx
  0x0000000110e173cb: jmpq   0x0000000110e172f6
  0x0000000110e173d0: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)

  0x0000000110e173d3: jmpq   0x0000000110e1725e
  0x0000000110e173d8: mov    %r15,%rsi
  0x0000000110e173db: movabs $0x107aec8aa,%r10
  0x0000000110e173e5: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)

  0x0000000110e173e8: jmpq   0x0000000110e17301  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)

  0x0000000110e173ed: mov    %rax,%rsi
  0x0000000110e173f0: add    $0x20,%rsp
  0x0000000110e173f4: pop    %rbp
  0x0000000110e173f5: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e173fa: hlt    
  0x0000000110e173fb: hlt    
  0x0000000110e173fc: hlt    
  0x0000000110e173fd: hlt    
  0x0000000110e173fe: hlt    
  0x0000000110e173ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e17400: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e17405: callq  0x0000000110e1740a
  0x0000000110e1740a: subq   $0x5,(%rsp)
  0x0000000110e1740f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e17414: hlt    
  0x0000000110e17415: hlt    
  0x0000000110e17416: hlt    
  0x0000000110e17417: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 424 Compiled method (c2)    1550  176             java.lang.StringBuilder::toString (35 bytes)
 total in heap  [0x0000000110e18590,0x0000000110e18f20] = 2448
 relocation     [0x0000000110e18708,0x0000000110e18730] = 40
 main code      [0x0000000110e18740,0x0000000110e18b40] = 1024
 stub code      [0x0000000110e18b40,0x0000000110e18b58] = 24
 metadata       [0x0000000110e18b58,0x0000000110e18b90] = 56
 scopes data    [0x0000000110e18b90,0x0000000110e18ca8] = 280
 scopes pcs     [0x0000000110e18ca8,0x0000000110e18ed8] = 560
 dependencies   [0x0000000110e18ed8,0x0000000110e18ee0] = 8
 handler table  [0x0000000110e18ee0,0x0000000110e18f10] = 48
 nul chk table  [0x0000000110e18f10,0x0000000110e18f20] = 16
----------------------------------------------------------------------
java/lang/StringBuilder.toString()Ljava/lang/String;  [0x0000000110e18740, 0x0000000110e18b58]  1048 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee132f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder'
  #           [sp+0x50]  (sp of caller)
  0x0000000110e18740: mov    0x8(%rsi),%r10d
  0x0000000110e18744: movabs $0x800000000,%r12
  0x0000000110e1874e: add    %r12,%r10
  0x0000000110e18751: xor    %r12,%r12
  0x0000000110e18754: cmp    %r10,%rax
  0x0000000110e18757: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1875d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e18760: mov    %eax,-0x14000(%rsp)
  0x0000000110e18767: push   %rbp
  0x0000000110e18768: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 448)

  0x0000000110e1876c: movsbl 0x10(%rsi),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)

  0x0000000110e18771: test   %r10d,%r10d
  0x0000000110e18774: jne    0x0000000110e18ac2  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)

  0x0000000110e1877a: mov    0xc(%rsi),%r10d    ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 448)

  0x0000000110e1877e: mov    0x14(%rsi),%r8d
  0x0000000110e18782: mov    0x118(%r15),%rbx
  0x0000000110e18789: mov    %rbx,%r11
  0x0000000110e1878c: add    $0x18,%r11
  0x0000000110e18790: cmp    0x128(%r15),%r11
  0x0000000110e18797: jae    0x0000000110e189f0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e1879d: mov    %r11,0x118(%r15)
  0x0000000110e187a4: prefetchnta 0xc0(%r11)
  0x0000000110e187ac: mov    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e187b2: movabs $0x800000000,%r12
  0x0000000110e187bc: add    %r12,%r11
  0x0000000110e187bf: xor    %r12,%r12
  0x0000000110e187c2: mov    0xb8(%r11),%r11
  0x0000000110e187c9: mov    %r11,(%rbx)
  0x0000000110e187cc: movl   $0x1808,0x8(%rbx)  ;   {metadata('java/lang/String')}
  0x0000000110e187d3: movl   $0x0,0xc(%rbx)
  0x0000000110e187da: movq   $0x0,0x10(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e187e2: test   %r10d,%r10d
  0x0000000110e187e5: jl     0x0000000110e18af2  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e187eb: cmp    $0x100000,%r10d
  0x0000000110e187f2: ja     0x0000000110e18a6e
  0x0000000110e187f8: movslq %r10d,%r11         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e187fb: mov    0xc(%r12,%r8,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; implicit exception: dispatches to 0x0000000110e18b16
  0x0000000110e18800: mov    %r10d,%edi         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18803: cmp    %edi,%r9d
  0x0000000110e18806: mov    %edi,%ebp
  0x0000000110e18808: cmovl  %r9d,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e1880c: cmp    %ebp,%r9d
  0x0000000110e1880f: jb     0x0000000110e18aa5
  0x0000000110e18815: cmp    %ebp,%edi
  0x0000000110e18817: jb     0x0000000110e18aa5  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e1881d: add    $0x17,%r11
  0x0000000110e18821: mov    %r11,%r9
  0x0000000110e18824: and    $0xfffffffffffffff8,%r9  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18828: cmp    $0x100000,%r10d
  0x0000000110e1882f: ja     0x0000000110e18a1d
  0x0000000110e18835: mov    0x118(%r15),%r14
  0x0000000110e1883c: mov    %r14,%rcx
  0x0000000110e1883f: add    %r9,%rcx
  0x0000000110e18842: cmp    0x128(%r15),%rcx
  0x0000000110e18849: jae    0x0000000110e18a1d  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e1884f: mov    %rcx,0x118(%r15)
  0x0000000110e18856: prefetchnta 0xc0(%rcx)
  0x0000000110e1885d: movq   $0x1,(%r14)
  0x0000000110e18864: prefetchnta 0x100(%rcx)
  0x0000000110e1886b: movl   $0x820,0x8(%r14)   ;   {metadata({type array byte})}
  0x0000000110e18873: mov    %r10d,0xc(%r14)
  0x0000000110e18877: prefetchnta 0x140(%rcx)
  0x0000000110e1887e: prefetchnta 0x180(%rcx)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18885: mov    %r14,%rsi
  0x0000000110e18888: add    $0x10,%rsi
  0x0000000110e1888c: shr    $0x3,%r11
  0x0000000110e18890: mov    %r14,%r13
  0x0000000110e18893: shr    $0x3,%r13
  0x0000000110e18897: test   %ebp,%ebp
  0x0000000110e18899: je     0x0000000110e18a76
  0x0000000110e1889f: lea    (%r12,%r8,8),%rcx  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@8 (line 448)

  0x0000000110e188a3: lea    0x10(%r12,%r8,8),%r8
  0x0000000110e188a8: cmp    %r10d,%ebp
  0x0000000110e188ab: jl     0x0000000110e18960
  0x0000000110e188b1: add    $0xfffffffffffffff0,%r9
  0x0000000110e188b5: shr    $0x3,%r9
  0x0000000110e188b9: mov    %r8,%rdi
  0x0000000110e188bc: mov    %r9,%rdx
  0x0000000110e188bf: vzeroupper 
  0x0000000110e188c2: movabs $0x110d9f080,%r10
  0x0000000110e188cc: callq  *%r10
  0x0000000110e188cf: cmpb   $0x0,0x30(%r15)
  0x0000000110e188d4: jne    0x0000000110e189b9
  0x0000000110e188da: mov    %r13d,0xc(%rbx)
  0x0000000110e188de: mov    %r14,%r10
  0x0000000110e188e1: mov    %rbx,%r11
  0x0000000110e188e4: xor    %r11,%r10
  0x0000000110e188e7: shr    $0x14,%r10
  0x0000000110e188eb: test   %r10,%r10
  0x0000000110e188ee: je     0x0000000110e18946
  0x0000000110e188f0: shr    $0x9,%r11
  0x0000000110e188f4: movabs $0x110569000,%rdi
  0x0000000110e188fe: add    %r11,%rdi
  0x0000000110e18901: cmpb   $0x20,(%rdi)
  0x0000000110e18904: je     0x0000000110e18946
  0x0000000110e18906: mov    0x80(%r15),%r10
  0x0000000110e1890d: mov    0x70(%r15),%r11
  0x0000000110e18911: lock addl $0x0,-0x40(%rsp)
  0x0000000110e18917: cmpb   $0x0,(%rdi)
  0x0000000110e1891a: je     0x0000000110e18946
  0x0000000110e1891c: movb   $0x0,(%rdi)
  0x0000000110e1891f: test   %r11,%r11
  0x0000000110e18922: jne    0x0000000110e18939
  0x0000000110e18924: mov    %r15,%rsi
  0x0000000110e18927: vzeroupper 
  0x0000000110e1892a: movabs $0x107aec8ce,%r10
  0x0000000110e18934: callq  *%r10
  0x0000000110e18937: jmp    0x0000000110e18946
  0x0000000110e18939: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1893e: add    $0xfffffffffffffff8,%r11
  0x0000000110e18942: mov    %r11,0x70(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18946: movb   $0x0,0x14(%rbx)    ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e1894a: mov    %rbx,%rax
  0x0000000110e1894d: vzeroupper 
  0x0000000110e18950: add    $0x40,%rsp
  0x0000000110e18954: pop    %rbp
  0x0000000110e18955: mov    0x108(%r15),%r10
  0x0000000110e1895c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1895f: retq   
  0x0000000110e18960: movslq %ebp,%rdx
  0x0000000110e18963: mov    %rdx,%r10
  0x0000000110e18966: add    $0x10,%r10
  0x0000000110e1896a: mov    %r10,%r9
  0x0000000110e1896d: and    $0xfffffffffffffff8,%r9
  0x0000000110e18971: mov    %r14,%rdi
  0x0000000110e18974: add    %r9,%rdi
  0x0000000110e18977: shr    $0x3,%r10
  0x0000000110e1897b: sub    %r10,%r11
  0x0000000110e1897e: mov    %r11,%rcx
  0x0000000110e18981: xor    %rax,%rax
  0x0000000110e18984: cmp    $0x8,%rcx
  0x0000000110e18988: jg     0x0000000110e1899a
  0x0000000110e1898a: dec    %rcx
  0x0000000110e1898d: js     0x0000000110e189a1
  0x0000000110e1898f: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e18993: dec    %rcx
  0x0000000110e18996: jge    0x0000000110e1898f
  0x0000000110e18998: jmp    0x0000000110e189a1
  0x0000000110e1899a: shl    $0x3,%rcx
  0x0000000110e1899e: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e189a1: mov    %r8,%rdi
  0x0000000110e189a4: vzeroupper 
  0x0000000110e189a7: movabs $0x110d9ec00,%r10
  0x0000000110e189b1: callq  *%r10
  0x0000000110e189b4: jmpq   0x0000000110e188cf
  0x0000000110e189b9: mov    0xc(%rbx),%r11d
  0x0000000110e189bd: test   %r11d,%r11d
  0x0000000110e189c0: je     0x0000000110e188da
  0x0000000110e189c6: mov    0x38(%r15),%r10
  0x0000000110e189ca: mov    %r11,%rdi
  0x0000000110e189cd: shl    $0x3,%rdi
  0x0000000110e189d1: test   %r10,%r10
  0x0000000110e189d4: je     0x0000000110e18ada
  0x0000000110e189da: mov    0x48(%r15),%r11
  0x0000000110e189de: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e189e3: add    $0xfffffffffffffff8,%r10
  0x0000000110e189e7: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e189eb: jmpq   0x0000000110e188da
  0x0000000110e189f0: mov    %r8d,(%rsp)
  0x0000000110e189f4: movabs $0x800001808,%rsi  ;   {metadata('java/lang/String')}
  0x0000000110e189fe: mov    %r10d,0x4(%rsp)
  0x0000000110e18a03: nop
  0x0000000110e18a04: vzeroupper 
  0x0000000110e18a07: callq  0x0000000110dc6380  ; ImmutableOopMap{[0]=NarrowOop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e18a0c: mov    %rax,%rbx
  0x0000000110e18a0f: mov    (%rsp),%r8d
  0x0000000110e18a13: mov    0x4(%rsp),%r10d
  0x0000000110e18a18: jmpq   0x0000000110e187e2
  0x0000000110e18a1d: mov    %r8d,0x4(%rsp)
  0x0000000110e18a22: mov    %r9,0x18(%rsp)
  0x0000000110e18a27: mov    %r11,0x10(%rsp)
  0x0000000110e18a2c: mov    %rbx,0x8(%rsp)
  0x0000000110e18a31: mov    %r10d,(%rsp)
  0x0000000110e18a35: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e18a3f: mov    %r10d,%edx
  0x0000000110e18a42: xchg   %ax,%ax
  0x0000000110e18a44: vzeroupper 
  0x0000000110e18a47: callq  0x0000000110dc7980  ; ImmutableOopMap{[4]=NarrowOop [8]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e18a4c: mov    (%rsp),%edi
  0x0000000110e18a4f: mov    0x8(%rsp),%rbx
  0x0000000110e18a54: mov    0x10(%rsp),%r11
  0x0000000110e18a59: mov    0x18(%rsp),%r9
  0x0000000110e18a5e: mov    %rax,%r14
  0x0000000110e18a61: mov    0x4(%rsp),%r8d
  0x0000000110e18a66: mov    %edi,%r10d
  0x0000000110e18a69: jmpq   0x0000000110e18885
  0x0000000110e18a6e: movslq %r10d,%r11         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18a71: jmpq   0x0000000110e187fb
  0x0000000110e18a76: add    $0xfffffffffffffffe,%r11
  0x0000000110e18a7a: mov    %r11,%rcx
  0x0000000110e18a7d: mov    %rsi,%rdi
  0x0000000110e18a80: xor    %rax,%rax
  0x0000000110e18a83: cmp    $0x8,%rcx
  0x0000000110e18a87: jg     0x0000000110e18a99
  0x0000000110e18a89: dec    %rcx
  0x0000000110e18a8c: js     0x0000000110e18aa0
  0x0000000110e18a8e: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e18a92: dec    %rcx
  0x0000000110e18a95: jge    0x0000000110e18a8e
  0x0000000110e18a97: jmp    0x0000000110e18aa0
  0x0000000110e18a99: shl    $0x3,%rcx
  0x0000000110e18a9d: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e18aa0: jmpq   0x0000000110e188cf  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18aa5: mov    $0xffffffcc,%esi
  0x0000000110e18aaa: mov    %rbx,(%rsp)
  0x0000000110e18aae: mov    %r10d,0xc(%rsp)
  0x0000000110e18ab3: mov    %r8d,0x10(%rsp)
  0x0000000110e18ab8: vzeroupper 
  0x0000000110e18abb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18ac0: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18ac2: mov    %rsi,%rbp
  0x0000000110e18ac5: mov    %r10d,(%rsp)
  0x0000000110e18ac9: mov    $0xffffff4d,%esi
  0x0000000110e18ace: xchg   %ax,%ax
  0x0000000110e18ad0: vzeroupper 
  0x0000000110e18ad3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18ad8: ud2    
  0x0000000110e18ada: mov    %r15,%rsi
  0x0000000110e18add: vzeroupper 
  0x0000000110e18ae0: movabs $0x107aec8aa,%r10
  0x0000000110e18aea: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18aed: jmpq   0x0000000110e188da  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 4027)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18af2: mov    $0xffffff4d,%esi
  0x0000000110e18af7: mov    %rbx,(%rsp)
  0x0000000110e18afb: mov    %r10d,0xc(%rsp)
  0x0000000110e18b00: mov    %r10d,0x10(%rsp)
  0x0000000110e18b05: mov    %r8d,0x14(%rsp)
  0x0000000110e18b0a: xchg   %ax,%ax
  0x0000000110e18b0c: vzeroupper 
  0x0000000110e18b0f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [20]=NarrowOop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18b14: ud2    
  0x0000000110e18b16: mov    $0xfffffff6,%esi
  0x0000000110e18b1b: nop
  0x0000000110e18b1c: vzeroupper 
  0x0000000110e18b1f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18b24: ud2                       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18b26: mov    %rax,%rsi
  0x0000000110e18b29: jmp    0x0000000110e18b2e
  0x0000000110e18b2b: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)

  0x0000000110e18b2e: vzeroupper 
  0x0000000110e18b31: add    $0x40,%rsp
  0x0000000110e18b35: pop    %rbp
  0x0000000110e18b36: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e18b3b: hlt    
  0x0000000110e18b3c: hlt    
  0x0000000110e18b3d: hlt    
  0x0000000110e18b3e: hlt    
  0x0000000110e18b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e18b40: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e18b45: callq  0x0000000110e18b4a
  0x0000000110e18b4a: subq   $0x5,(%rsp)
  0x0000000110e18b4f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e18b54: hlt    
  0x0000000110e18b55: hlt    
  0x0000000110e18b56: hlt    
  0x0000000110e18b57: hlt    

ImmutableOopMap{[0]=NarrowOop }pc offsets: 716 
ImmutableOopMap{[4]=NarrowOop [8]=Oop }pc offsets: 780 
ImmutableOopMap{[0]=Oop [16]=NarrowOop }pc offsets: 896 
ImmutableOopMap{rbp=Oop }pc offsets: 920 
ImmutableOopMap{[0]=Oop [20]=NarrowOop }pc offsets: 980 
ImmutableOopMap{}pc offsets: 996 Compiled method (c2)    1561  177             java.lang.String::indexOf (65 bytes)
 total in heap  [0x0000000110e17f90,0x0000000110e18510] = 1408
 relocation     [0x0000000110e18108,0x0000000110e18118] = 16
 main code      [0x0000000110e18120,0x0000000110e18320] = 512
 stub code      [0x0000000110e18320,0x0000000110e18338] = 24
 metadata       [0x0000000110e18338,0x0000000110e18350] = 24
 scopes data    [0x0000000110e18350,0x0000000110e183c8] = 120
 scopes pcs     [0x0000000110e183c8,0x0000000110e184f8] = 304
 dependencies   [0x0000000110e184f8,0x0000000110e18500] = 8
 nul chk table  [0x0000000110e18500,0x0000000110e18510] = 16
----------------------------------------------------------------------
java/lang/String.indexOf(Ljava/lang/String;)I  [0x0000000110e18120, 0x0000000110e18338]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed70000} 'indexOf' '(Ljava/lang/String;)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e18120: mov    0x8(%rsi),%r10d
  0x0000000110e18124: movabs $0x800000000,%r12
  0x0000000110e1812e: add    %r12,%r10
  0x0000000110e18131: xor    %r12,%r12
  0x0000000110e18134: cmp    %r10,%rax
  0x0000000110e18137: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1813d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e18140: mov    %eax,-0x14000(%rsp)
  0x0000000110e18147: push   %rbp
  0x0000000110e18148: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1663)

  0x0000000110e1814c: movsbl 0x14(%rdx),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@5 (line 1663)
                                                ; implicit exception: dispatches to 0x0000000110e18306
  0x0000000110e18151: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@1 (line 1663)

  0x0000000110e18155: cmp    %r10d,%ebp
  0x0000000110e18158: jne    0x0000000110e182ce  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)

  0x0000000110e1815e: test   %ebp,%ebp
  0x0000000110e18160: jne    0x0000000110e182ee  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)

  0x0000000110e18166: mov    0xc(%rsi),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1664)

  0x0000000110e1816a: mov    0xc(%rdx),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@23 (line 1664)

  0x0000000110e1816e: mov    0xc(%r12,%r11,8),%edx
  0x0000000110e18173: mov    0xc(%r12,%r10,8),%eax
  0x0000000110e18178: cmp    %edx,%eax
  0x0000000110e1817a: jg     0x0000000110e182c3
  0x0000000110e18180: test   %eax,%eax
  0x0000000110e18182: jbe    0x0000000110e182ca  ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1664)

  0x0000000110e18188: lea    (%r12,%r11,8),%r8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1664)

  0x0000000110e1818c: lea    0x10(%r12,%r11,8),%rdi
  0x0000000110e18191: lea    (%r12,%r10,8),%r11  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@23 (line 1664)

  0x0000000110e18195: lea    0x10(%r12,%r10,8),%rsi
  0x0000000110e1819a: mov    %rsp,%rcx
  0x0000000110e1819d: cmp    $0x10,%eax
  0x0000000110e181a0: jae    0x0000000110e181f7
  0x0000000110e181a2: mov    %esi,%ebx
  0x0000000110e181a4: and    $0xfff,%ebx
  0x0000000110e181aa: cmp    $0xff0,%ebx
  0x0000000110e181b0: jbe    0x0000000110e181c9
  0x0000000110e181b2: sub    $0x10,%rsp
  0x0000000110e181b6: push   %rax
  0x0000000110e181b7: movzbl -0x1(%rsi,%rax,1),%ebx
  0x0000000110e181bc: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e181c0: dec    %rax
  0x0000000110e181c3: jne    0x0000000110e181b7
  0x0000000110e181c5: pop    %rax
  0x0000000110e181c6: mov    %rsp,%rsi
  0x0000000110e181c9: cmp    $0x10,%edx
  0x0000000110e181cc: jae    0x0000000110e181f7
  0x0000000110e181ce: mov    %edi,%ebx
  0x0000000110e181d0: and    $0xfff,%ebx
  0x0000000110e181d6: cmp    $0xff0,%ebx
  0x0000000110e181dc: jbe    0x0000000110e181f7
  0x0000000110e181de: sub    $0x10,%rsp
  0x0000000110e181e2: push   %rax
  0x0000000110e181e3: mov    %edx,%eax
  0x0000000110e181e5: movzbl -0x1(%rdi,%rax,1),%ebx
  0x0000000110e181ea: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e181ee: dec    %rax
  0x0000000110e181f1: jne    0x0000000110e181e5
  0x0000000110e181f3: pop    %rax
  0x0000000110e181f4: mov    %rsp,%rdi
  0x0000000110e181f7: vmovdqu (%rsi),%xmm0
  0x0000000110e181fb: push   %rax
  0x0000000110e181fc: push   %rsi
  0x0000000110e181fd: push   %rdi
  0x0000000110e181fe: push   %rcx
  0x0000000110e181ff: mov    %rdi,%rbx
  0x0000000110e18202: jmp    0x0000000110e18224
  0x0000000110e18204: mov    0x10(%rsp),%rsi
  0x0000000110e18209: mov    0x18(%rsp),%eax
  0x0000000110e1820d: vmovdqu (%rsi),%xmm0
  0x0000000110e18211: sub    %rbx,%rdi
  0x0000000110e18214: add    %edi,%edx
  0x0000000110e18216: dec    %edx
  0x0000000110e18218: cmp    %eax,%edx
  0x0000000110e1821a: js     0x0000000110e18250
  0x0000000110e18220: add    $0x1,%rbx
  0x0000000110e18224: vpcmpestri $0xc,(%rbx),%xmm0
  0x0000000110e1822a: jb     0x0000000110e1824a
  0x0000000110e1822c: sub    $0x10,%edx
  0x0000000110e1822f: jle    0x0000000110e18250
  0x0000000110e18231: cmp    %eax,%edx
  0x0000000110e18233: js     0x0000000110e18250
  0x0000000110e18235: add    $0x10,%rbx
  0x0000000110e18239: cmp    $0x10,%edx
  0x0000000110e1823c: jge    0x0000000110e18224
  0x0000000110e1823e: lea    -0x10(%rbx,%rdx,1),%rbx
  0x0000000110e18243: mov    $0x10,%edx
  0x0000000110e18248: jmp    0x0000000110e18224
  0x0000000110e1824a: sub    %ecx,%edx
  0x0000000110e1824c: cmp    %eax,%edx
  0x0000000110e1824e: jge    0x0000000110e18257
  0x0000000110e18250: mov    $0xffffffff,%ebx
  0x0000000110e18255: jmp    0x0000000110e182ad
  0x0000000110e18257: lea    (%rbx,%rcx,1),%rbx
  0x0000000110e1825b: add    %eax,%ecx
  0x0000000110e1825d: cmp    $0x10,%ecx
  0x0000000110e18260: jle    0x0000000110e182aa
  0x0000000110e18262: cmp    $0x10,%eax
  0x0000000110e18265: jle    0x0000000110e18239
  0x0000000110e18267: mov    %rbx,%rdi
  0x0000000110e1826a: cmp    %eax,%ecx
  0x0000000110e1826c: je     0x0000000110e18276
  0x0000000110e1826e: vpcmpestri $0xc,(%rdi),%xmm0
  0x0000000110e18274: jno    0x0000000110e18204
  0x0000000110e18276: sub    $0x10,%eax
  0x0000000110e18279: jle    0x0000000110e182a5
  0x0000000110e1827b: add    $0x10,%rdi
  0x0000000110e1827f: add    $0x10,%rsi
  0x0000000110e18283: sub    $0x10,%edx
  0x0000000110e18286: cmp    $0x10,%eax
  0x0000000110e18289: jge    0x0000000110e1829f
  0x0000000110e1828b: lea    -0x10(%rsi,%rax,1),%rsi
  0x0000000110e18290: lea    -0x10(%rdi,%rax,1),%rdi
  0x0000000110e18295: sub    %eax,%edx
  0x0000000110e18297: mov    $0x10,%eax
  0x0000000110e1829c: add    $0x10,%edx
  0x0000000110e1829f: vmovdqu (%rsi),%xmm0
  0x0000000110e182a3: jmp    0x0000000110e1826e
  0x0000000110e182a5: mov    0x8(%rsp),%rdi
  0x0000000110e182aa: sub    %rdi,%rbx
  0x0000000110e182ad: pop    %rsp
  0x0000000110e182ae: mov    %ebx,%eax          ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1664)

  0x0000000110e182b0: vzeroupper 
  0x0000000110e182b3: add    $0x30,%rsp
  0x0000000110e182b7: pop    %rbp
  0x0000000110e182b8: mov    0x108(%r15),%r10
  0x0000000110e182bf: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e182c2: retq   
  0x0000000110e182c3: mov    $0xffffffff,%eax
  0x0000000110e182c8: jmp    0x0000000110e182b0
  0x0000000110e182ca: xor    %eax,%eax
  0x0000000110e182cc: jmp    0x0000000110e182b0
  0x0000000110e182ce: mov    %rsi,(%rsp)
  0x0000000110e182d2: mov    %rdx,0x8(%rsp)
  0x0000000110e182d7: mov    %r10d,0x10(%rsp)
  0x0000000110e182dc: mov    $0xffffff4d,%esi
  0x0000000110e182e1: data16 xchg %ax,%ax
  0x0000000110e182e4: vzeroupper 
  0x0000000110e182e7: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e182ec: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)

  0x0000000110e182ee: mov    %rsi,(%rsp)
  0x0000000110e182f2: mov    %rdx,0x8(%rsp)
  0x0000000110e182f7: mov    $0xffffff4d,%esi
  0x0000000110e182fc: vzeroupper 
  0x0000000110e182ff: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18304: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)

  0x0000000110e18306: mov    $0xfffffff6,%esi
  0x0000000110e1830b: nop
  0x0000000110e1830c: vzeroupper 
  0x0000000110e1830f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@5 (line 1663)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e18314: ud2                       ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@5 (line 1663)

  0x0000000110e18316: hlt    
  0x0000000110e18317: hlt    
  0x0000000110e18318: hlt    
  0x0000000110e18319: hlt    
  0x0000000110e1831a: hlt    
  0x0000000110e1831b: hlt    
  0x0000000110e1831c: hlt    
  0x0000000110e1831d: hlt    
  0x0000000110e1831e: hlt    
  0x0000000110e1831f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e18320: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e18325: callq  0x0000000110e1832a
  0x0000000110e1832a: subq   $0x5,(%rsp)
  0x0000000110e1832f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e18334: hlt    
  0x0000000110e18335: hlt    
  0x0000000110e18336: hlt    
  0x0000000110e18337: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 460 484 
ImmutableOopMap{}pc offsets: 500 Compiled method (c2)    1566  178             java.lang.StringLatin1::indexOf (25 bytes)
 total in heap  [0x0000000110e17a10,0x0000000110e17f10] = 1280
 relocation     [0x0000000110e17b88,0x0000000110e17b98] = 16
 main code      [0x0000000110e17ba0,0x0000000110e17d80] = 480
 stub code      [0x0000000110e17d80,0x0000000110e17d98] = 24
 metadata       [0x0000000110e17d98,0x0000000110e17da0] = 8
 scopes data    [0x0000000110e17da0,0x0000000110e17df0] = 80
 scopes pcs     [0x0000000110e17df0,0x0000000110e17ef0] = 256
 dependencies   [0x0000000110e17ef0,0x0000000110e17ef8] = 8
 nul chk table  [0x0000000110e17ef8,0x0000000110e17f10] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([B[B)I  [0x0000000110e17ba0, 0x0000000110e17d98]  504 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011eec2ca0} 'indexOf' '([B[B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x30]  (sp of caller)
  0x0000000110e17ba0: mov    %eax,-0x14000(%rsp)
  0x0000000110e17ba7: push   %rbp
  0x0000000110e17ba8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 223)

  0x0000000110e17bac: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@1 (line 223)
                                                ; implicit exception: dispatches to 0x0000000110e17d4e
  0x0000000110e17baf: test   %eax,%eax
  0x0000000110e17bb1: jbe    0x0000000110e17d16  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 223)

  0x0000000110e17bb7: mov    0xc(%rsi),%r11d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@8 (line 226)
                                                ; implicit exception: dispatches to 0x0000000110e17d5e
  0x0000000110e17bbb: test   %r11d,%r11d
  0x0000000110e17bbe: jbe    0x0000000110e17d32  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@9 (line 226)

  0x0000000110e17bc4: cmp    %r11d,%eax
  0x0000000110e17bc7: jg     0x0000000110e17d0b
  0x0000000110e17bcd: mov    %rsi,%rdi
  0x0000000110e17bd0: add    $0x10,%rdi
  0x0000000110e17bd4: mov    %rdx,%rsi
  0x0000000110e17bd7: add    $0x10,%rsi
  0x0000000110e17bdb: mov    %r11d,%edx
  0x0000000110e17bde: mov    %rsp,%rcx
  0x0000000110e17be1: cmp    $0x10,%eax
  0x0000000110e17be4: jae    0x0000000110e17c3b
  0x0000000110e17be6: mov    %esi,%ebx
  0x0000000110e17be8: and    $0xfff,%ebx
  0x0000000110e17bee: cmp    $0xff0,%ebx
  0x0000000110e17bf4: jbe    0x0000000110e17c0d
  0x0000000110e17bf6: sub    $0x10,%rsp
  0x0000000110e17bfa: push   %rax
  0x0000000110e17bfb: movzbl -0x1(%rsi,%rax,1),%ebx
  0x0000000110e17c00: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e17c04: dec    %rax
  0x0000000110e17c07: jne    0x0000000110e17bfb
  0x0000000110e17c09: pop    %rax
  0x0000000110e17c0a: mov    %rsp,%rsi
  0x0000000110e17c0d: cmp    $0x10,%edx
  0x0000000110e17c10: jae    0x0000000110e17c3b
  0x0000000110e17c12: mov    %edi,%ebx
  0x0000000110e17c14: and    $0xfff,%ebx
  0x0000000110e17c1a: cmp    $0xff0,%ebx
  0x0000000110e17c20: jbe    0x0000000110e17c3b
  0x0000000110e17c22: sub    $0x10,%rsp
  0x0000000110e17c26: push   %rax
  0x0000000110e17c27: mov    %edx,%eax
  0x0000000110e17c29: movzbl -0x1(%rdi,%rax,1),%ebx
  0x0000000110e17c2e: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e17c32: dec    %rax
  0x0000000110e17c35: jne    0x0000000110e17c29
  0x0000000110e17c37: pop    %rax
  0x0000000110e17c38: mov    %rsp,%rdi
  0x0000000110e17c3b: vmovdqu (%rsi),%xmm0
  0x0000000110e17c3f: push   %rax
  0x0000000110e17c40: push   %rsi
  0x0000000110e17c41: push   %rdi
  0x0000000110e17c42: push   %rcx
  0x0000000110e17c43: mov    %rdi,%rbx
  0x0000000110e17c46: jmp    0x0000000110e17c68
  0x0000000110e17c48: mov    0x10(%rsp),%rsi
  0x0000000110e17c4d: mov    0x18(%rsp),%eax
  0x0000000110e17c51: vmovdqu (%rsi),%xmm0
  0x0000000110e17c55: sub    %rbx,%rdi
  0x0000000110e17c58: add    %edi,%edx
  0x0000000110e17c5a: dec    %edx
  0x0000000110e17c5c: cmp    %eax,%edx
  0x0000000110e17c5e: js     0x0000000110e17c94
  0x0000000110e17c64: add    $0x1,%rbx
  0x0000000110e17c68: vpcmpestri $0xc,(%rbx),%xmm0
  0x0000000110e17c6e: jb     0x0000000110e17c8e
  0x0000000110e17c70: sub    $0x10,%edx
  0x0000000110e17c73: jle    0x0000000110e17c94
  0x0000000110e17c75: cmp    %eax,%edx
  0x0000000110e17c77: js     0x0000000110e17c94
  0x0000000110e17c79: add    $0x10,%rbx
  0x0000000110e17c7d: cmp    $0x10,%edx
  0x0000000110e17c80: jge    0x0000000110e17c68
  0x0000000110e17c82: lea    -0x10(%rbx,%rdx,1),%rbx
  0x0000000110e17c87: mov    $0x10,%edx
  0x0000000110e17c8c: jmp    0x0000000110e17c68
  0x0000000110e17c8e: sub    %ecx,%edx
  0x0000000110e17c90: cmp    %eax,%edx
  0x0000000110e17c92: jge    0x0000000110e17c9b
  0x0000000110e17c94: mov    $0xffffffff,%ebx
  0x0000000110e17c99: jmp    0x0000000110e17cf1
  0x0000000110e17c9b: lea    (%rbx,%rcx,1),%rbx
  0x0000000110e17c9f: add    %eax,%ecx
  0x0000000110e17ca1: cmp    $0x10,%ecx
  0x0000000110e17ca4: jle    0x0000000110e17cee
  0x0000000110e17ca6: cmp    $0x10,%eax
  0x0000000110e17ca9: jle    0x0000000110e17c7d
  0x0000000110e17cab: mov    %rbx,%rdi
  0x0000000110e17cae: cmp    %eax,%ecx
  0x0000000110e17cb0: je     0x0000000110e17cba
  0x0000000110e17cb2: vpcmpestri $0xc,(%rdi),%xmm0
  0x0000000110e17cb8: jno    0x0000000110e17c48
  0x0000000110e17cba: sub    $0x10,%eax
  0x0000000110e17cbd: jle    0x0000000110e17ce9
  0x0000000110e17cbf: add    $0x10,%rdi
  0x0000000110e17cc3: add    $0x10,%rsi
  0x0000000110e17cc7: sub    $0x10,%edx
  0x0000000110e17cca: cmp    $0x10,%eax
  0x0000000110e17ccd: jge    0x0000000110e17ce3
  0x0000000110e17ccf: lea    -0x10(%rsi,%rax,1),%rsi
  0x0000000110e17cd4: lea    -0x10(%rdi,%rax,1),%rdi
  0x0000000110e17cd9: sub    %eax,%edx
  0x0000000110e17cdb: mov    $0x10,%eax
  0x0000000110e17ce0: add    $0x10,%edx
  0x0000000110e17ce3: vmovdqu (%rsi),%xmm0
  0x0000000110e17ce7: jmp    0x0000000110e17cb2
  0x0000000110e17ce9: mov    0x8(%rsp),%rdi
  0x0000000110e17cee: sub    %rdi,%rbx
  0x0000000110e17cf1: pop    %rsp
  0x0000000110e17cf2: test   %ebx,%ebx
  0x0000000110e17cf4: jl     0x0000000110e17d12
  0x0000000110e17cf6: mov    %ebx,%eax          ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@21 (line 229)

  0x0000000110e17cf8: vzeroupper 
  0x0000000110e17cfb: add    $0x20,%rsp
  0x0000000110e17cff: pop    %rbp
  0x0000000110e17d00: mov    0x108(%r15),%r10
  0x0000000110e17d07: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e17d0a: retq   
  0x0000000110e17d0b: mov    $0xffffffff,%eax
  0x0000000110e17d10: jmp    0x0000000110e17cf8
  0x0000000110e17d12: mov    %ebx,%eax
  0x0000000110e17d14: jmp    0x0000000110e17cf8
  0x0000000110e17d16: mov    %rsi,%rbp
  0x0000000110e17d19: mov    %rdx,(%rsp)
  0x0000000110e17d1d: mov    %eax,0x8(%rsp)
  0x0000000110e17d21: mov    $0xffffff4d,%esi
  0x0000000110e17d26: xchg   %ax,%ax
  0x0000000110e17d28: vzeroupper 
  0x0000000110e17d2b: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 223)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e17d30: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@2 (line 223)

  0x0000000110e17d32: mov    %rsi,%rbp
  0x0000000110e17d35: mov    %rdx,(%rsp)
  0x0000000110e17d39: mov    %r11d,0x8(%rsp)
  0x0000000110e17d3e: mov    $0xffffff4d,%esi
  0x0000000110e17d43: nop
  0x0000000110e17d44: vzeroupper 
  0x0000000110e17d47: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@9 (line 226)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e17d4c: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@9 (line 226)

  0x0000000110e17d4e: mov    $0xfffffff6,%esi
  0x0000000110e17d53: nop
  0x0000000110e17d54: vzeroupper 
  0x0000000110e17d57: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@1 (line 223)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e17d5c: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@1 (line 223)

  0x0000000110e17d5e: mov    $0xfffffff6,%esi
  0x0000000110e17d63: nop
  0x0000000110e17d64: vzeroupper 
  0x0000000110e17d67: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@8 (line 226)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e17d6c: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@8 (line 226)

  0x0000000110e17d6e: hlt    
  0x0000000110e17d6f: hlt    
  0x0000000110e17d70: hlt    
  0x0000000110e17d71: hlt    
  0x0000000110e17d72: hlt    
  0x0000000110e17d73: hlt    
  0x0000000110e17d74: hlt    
  0x0000000110e17d75: hlt    
  0x0000000110e17d76: hlt    
  0x0000000110e17d77: hlt    
  0x0000000110e17d78: hlt    
  0x0000000110e17d79: hlt    
  0x0000000110e17d7a: hlt    
  0x0000000110e17d7b: hlt    
  0x0000000110e17d7c: hlt    
  0x0000000110e17d7d: hlt    
  0x0000000110e17d7e: hlt    
  0x0000000110e17d7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e17d80: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e17d85: callq  0x0000000110e17d8a
  0x0000000110e17d8a: subq   $0x5,(%rsp)
  0x0000000110e17d8f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e17d94: hlt    
  0x0000000110e17d95: hlt    
  0x0000000110e17d96: hlt    
  0x0000000110e17d97: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 400 428 
ImmutableOopMap{}pc offsets: 444 460 Compiled method (c2)    1570  179             java.lang.String::indexOf (18 bytes)
 total in heap  [0x0000000110e1d790,0x0000000110e1dc98] = 1288
 relocation     [0x0000000110e1d908,0x0000000110e1d920] = 24
 main code      [0x0000000110e1d920,0x0000000110e1da00] = 224
 stub code      [0x0000000110e1da00,0x0000000110e1da18] = 24
 metadata       [0x0000000110e1da18,0x0000000110e1da38] = 32
 scopes data    [0x0000000110e1da38,0x0000000110e1db20] = 232
 scopes pcs     [0x0000000110e1db20,0x0000000110e1dc70] = 336
 dependencies   [0x0000000110e1dc70,0x0000000110e1dc78] = 8
 nul chk table  [0x0000000110e1dc78,0x0000000110e1dc98] = 32
----------------------------------------------------------------------
java/lang/String.indexOf(Ljava/lang/String;I)I  [0x0000000110e1d920, 0x0000000110e1da18]  248 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed700d0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110e1d920: mov    0x8(%rsi),%r10d
  0x0000000110e1d924: movabs $0x800000000,%r12
  0x0000000110e1d92e: add    %r12,%r10
  0x0000000110e1d931: xor    %r12,%r12
  0x0000000110e1d934: cmp    %r10,%rax
  0x0000000110e1d937: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1d93d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1d940: mov    %eax,-0x14000(%rsp)
  0x0000000110e1d947: push   %rbp
  0x0000000110e1d948: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1691)

  0x0000000110e1d94c: mov    %ecx,%r9d
  0x0000000110e1d94f: mov    0xc(%rsi),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1691)

  0x0000000110e1d953: mov    0xc(%r12,%r10,8),%edi  ; implicit exception: dispatches to 0x0000000110e1d9ca
  0x0000000110e1d958: mov    0xc(%rdx),%r8d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; implicit exception: dispatches to 0x0000000110e1d9d6
  0x0000000110e1d95c: mov    0xc(%r12,%r8,8),%ebp  ; implicit exception: dispatches to 0x0000000110e1d9e2
  0x0000000110e1d961: movsbl 0x14(%rdx),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@7 (line 1708)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d966: movsbl 0x14(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@5 (line 1691)

  0x0000000110e1d96a: mov    %r11d,%ecx
  0x0000000110e1d96d: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d96f: mov    %ebx,%ecx
  0x0000000110e1d971: sar    %cl,%edi           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)

  0x0000000110e1d973: cmp    %edi,%r9d
  0x0000000110e1d976: jl     0x0000000110e1d991  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d978: test   %ebp,%ebp
  0x0000000110e1d97a: je     0x0000000110e1d9ba  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d97c: mov    $0xffffffff,%eax
  0x0000000110e1d981: add    $0x30,%rsp
  0x0000000110e1d985: pop    %rbp
  0x0000000110e1d986: mov    0x108(%r15),%r10
  0x0000000110e1d98d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1d990: retq   
  0x0000000110e1d991: mov    $0xffffff4d,%esi
  0x0000000110e1d996: mov    %r10d,(%rsp)
  0x0000000110e1d99a: mov    %r9d,0xc(%rsp)
  0x0000000110e1d99f: mov    %edi,0x10(%rsp)
  0x0000000110e1d9a3: mov    %ebx,0x14(%rsp)
  0x0000000110e1d9a7: mov    %r8d,0x18(%rsp)
  0x0000000110e1d9ac: mov    %r11d,0x1c(%rsp)
  0x0000000110e1d9b1: xchg   %ax,%ax
  0x0000000110e1d9b3: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=NarrowOop [24]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d9b8: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d9ba: mov    $0xffffff4d,%esi
  0x0000000110e1d9bf: mov    %edi,(%rsp)
  0x0000000110e1d9c2: nop
  0x0000000110e1d9c3: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d9c8: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d9ca: mov    $0xfffffff6,%esi
  0x0000000110e1d9cf: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d9d4: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)

  0x0000000110e1d9d6: mov    $0xfffffff6,%esi
  0x0000000110e1d9db: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d9e0: ud2                       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d9e2: mov    $0xfffffff6,%esi
  0x0000000110e1d9e7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d9ec: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)

  0x0000000110e1d9ee: hlt    
  0x0000000110e1d9ef: hlt    
  0x0000000110e1d9f0: hlt    
  0x0000000110e1d9f1: hlt    
  0x0000000110e1d9f2: hlt    
  0x0000000110e1d9f3: hlt    
  0x0000000110e1d9f4: hlt    
  0x0000000110e1d9f5: hlt    
  0x0000000110e1d9f6: hlt    
  0x0000000110e1d9f7: hlt    
  0x0000000110e1d9f8: hlt    
  0x0000000110e1d9f9: hlt    
  0x0000000110e1d9fa: hlt    
  0x0000000110e1d9fb: hlt    
  0x0000000110e1d9fc: hlt    
  0x0000000110e1d9fd: hlt    
  0x0000000110e1d9fe: hlt    
  0x0000000110e1d9ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e1da00: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e1da05: callq  0x0000000110e1da0a
  0x0000000110e1da0a: subq   $0x5,(%rsp)
  0x0000000110e1da0f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1da14: hlt    
  0x0000000110e1da15: hlt    
  0x0000000110e1da16: hlt    
  0x0000000110e1da17: hlt    

ImmutableOopMap{[0]=NarrowOop [24]=NarrowOop }pc offsets: 152 
ImmutableOopMap{}pc offsets: 168 180 192 204 Compiled method (c2)    1574  180             java.lang.String::indexOf (113 bytes)
 total in heap  [0x0000000110e1d310,0x0000000110e1d730] = 1056
 relocation     [0x0000000110e1d488,0x0000000110e1d498] = 16
 main code      [0x0000000110e1d4a0,0x0000000110e1d540] = 160
 stub code      [0x0000000110e1d540,0x0000000110e1d558] = 24
 metadata       [0x0000000110e1d558,0x0000000110e1d570] = 24
 scopes data    [0x0000000110e1d570,0x0000000110e1d610] = 160
 scopes pcs     [0x0000000110e1d610,0x0000000110e1d710] = 256
 dependencies   [0x0000000110e1d710,0x0000000110e1d718] = 8
 nul chk table  [0x0000000110e1d718,0x0000000110e1d730] = 24
----------------------------------------------------------------------
java/lang/String.indexOf([BBILjava/lang/String;I)I  [0x0000000110e1d4a0, 0x0000000110e1d558]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011ed70250} 'indexOf' '([BBILjava/lang/String;I)I' in 'java/lang/String'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = byte
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/String'
  # parm4:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000110e1d4a0: mov    %eax,-0x14000(%rsp)
  0x0000000110e1d4a7: push   %rbp
  0x0000000110e1d4a8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1707)

  0x0000000110e1d4ac: mov    %rsi,%r11
  0x0000000110e1d4af: mov    %ecx,%r10d
  0x0000000110e1d4b2: mov    0xc(%r8),%ebx      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ; implicit exception: dispatches to 0x0000000110e1d516
  0x0000000110e1d4b6: mov    0xc(%r12,%rbx,8),%ebp  ; implicit exception: dispatches to 0x0000000110e1d522
  0x0000000110e1d4bb: movsbl 0x14(%r8),%ecx     ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@7 (line 1708)

  0x0000000110e1d4c0: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)

  0x0000000110e1d4c2: cmp    %r10d,%r9d
  0x0000000110e1d4c5: jl     0x0000000110e1d4e0  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)

  0x0000000110e1d4c7: test   %ebp,%ebp
  0x0000000110e1d4c9: je     0x0000000110e1d506  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)

  0x0000000110e1d4cb: mov    $0xffffffff,%eax
  0x0000000110e1d4d0: add    $0x40,%rsp
  0x0000000110e1d4d4: pop    %rbp
  0x0000000110e1d4d5: mov    0x108(%r15),%r10
  0x0000000110e1d4dc: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1d4df: retq   
  0x0000000110e1d4e0: mov    $0xffffff4d,%esi
  0x0000000110e1d4e5: mov    %r11,(%rsp)
  0x0000000110e1d4e9: mov    %edx,0x8(%rsp)
  0x0000000110e1d4ed: mov    %ebx,0x14(%rsp)
  0x0000000110e1d4f1: mov    %r9d,0x18(%rsp)
  0x0000000110e1d4f6: mov    %r10d,0x1c(%rsp)
  0x0000000110e1d4fb: mov    %ecx,0x20(%rsp)
  0x0000000110e1d4ff: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [20]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d504: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)

  0x0000000110e1d506: mov    $0xffffff4d,%esi
  0x0000000110e1d50b: mov    %r10d,(%rsp)
  0x0000000110e1d50f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d514: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)

  0x0000000110e1d516: mov    $0xfffffff6,%esi
  0x0000000110e1d51b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d520: ud2                       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)

  0x0000000110e1d522: mov    $0xfffffff6,%esi
  0x0000000110e1d527: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1d52c: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)

  0x0000000110e1d52e: hlt    
  0x0000000110e1d52f: hlt    
  0x0000000110e1d530: hlt    
  0x0000000110e1d531: hlt    
  0x0000000110e1d532: hlt    
  0x0000000110e1d533: hlt    
  0x0000000110e1d534: hlt    
  0x0000000110e1d535: hlt    
  0x0000000110e1d536: hlt    
  0x0000000110e1d537: hlt    
  0x0000000110e1d538: hlt    
  0x0000000110e1d539: hlt    
  0x0000000110e1d53a: hlt    
  0x0000000110e1d53b: hlt    
  0x0000000110e1d53c: hlt    
  0x0000000110e1d53d: hlt    
  0x0000000110e1d53e: hlt    
  0x0000000110e1d53f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e1d540: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e1d545: callq  0x0000000110e1d54a
  0x0000000110e1d54a: subq   $0x5,(%rsp)
  0x0000000110e1d54f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1d554: hlt    
  0x0000000110e1d555: hlt    
  0x0000000110e1d556: hlt    
  0x0000000110e1d557: hlt    

ImmutableOopMap{[0]=Oop [20]=NarrowOop }pc offsets: 100 
ImmutableOopMap{}pc offsets: 116 128 140 Compiled method (c2)    1578  181             java.lang.StringBuilder::<init> (6 bytes)
 total in heap  [0x0000000110e1ce10,0x0000000110e1d2c8] = 1208
 relocation     [0x0000000110e1cf88,0x0000000110e1cfa0] = 24
 main code      [0x0000000110e1cfa0,0x0000000110e1d180] = 480
 stub code      [0x0000000110e1d180,0x0000000110e1d198] = 24
 metadata       [0x0000000110e1d198,0x0000000110e1d1b0] = 24
 scopes data    [0x0000000110e1d1b0,0x0000000110e1d1e8] = 56
 scopes pcs     [0x0000000110e1d1e8,0x0000000110e1d2a8] = 192
 dependencies   [0x0000000110e1d2a8,0x0000000110e1d2b0] = 8
 handler table  [0x0000000110e1d2b0,0x0000000110e1d2c8] = 24
----------------------------------------------------------------------
java/lang/StringBuilder.<init>(I)V  [0x0000000110e1cfa0, 0x0000000110e1d198]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ee11558} '<init>' '(I)V' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000110e1cfa0: mov    0x8(%rsi),%r10d
  0x0000000110e1cfa4: movabs $0x800000000,%r12
  0x0000000110e1cfae: add    %r12,%r10
  0x0000000110e1cfb1: xor    %r12,%r12
  0x0000000110e1cfb4: cmp    %r10,%rax
  0x0000000110e1cfb7: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1cfbd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1cfc0: mov    %eax,-0x14000(%rsp)
  0x0000000110e1cfc7: push   %rbp
  0x0000000110e1cfc8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 112)

  0x0000000110e1cfcc: mov    %rsi,%rbp
  0x0000000110e1cfcf: cmp    $0x100000,%edx
  0x0000000110e1cfd5: ja     0x0000000110e1d150
  0x0000000110e1cfdb: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1cfde: cmp    $0x100000,%edx
  0x0000000110e1cfe4: ja     0x0000000110e1d138  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1cfea: mov    0x118(%r15),%rbx
  0x0000000110e1cff1: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1cff5: mov    %rcx,%r10
  0x0000000110e1cff8: and    $0xfffffffffffffff8,%r10
  0x0000000110e1cffc: mov    %rbx,%r11
  0x0000000110e1cfff: add    %r10,%r11
  0x0000000110e1d002: cmp    0x128(%r15),%r11
  0x0000000110e1d009: jae    0x0000000110e1d138
  0x0000000110e1d00f: mov    %r11,0x118(%r15)
  0x0000000110e1d016: mov    %rbx,%rdi
  0x0000000110e1d019: add    $0x10,%rdi
  0x0000000110e1d01d: movq   $0x1,(%rbx)
  0x0000000110e1d024: prefetchnta 0xc0(%r11)
  0x0000000110e1d02c: movl   $0x820,0x8(%rbx)   ;   {metadata({type array byte})}
  0x0000000110e1d033: mov    %edx,0xc(%rbx)
  0x0000000110e1d036: prefetchnta 0x100(%r11)
  0x0000000110e1d03e: prefetchnta 0x140(%r11)
  0x0000000110e1d046: prefetchnta 0x180(%r11)
  0x0000000110e1d04e: shr    $0x3,%rcx
  0x0000000110e1d052: add    $0xfffffffffffffffe,%rcx
  0x0000000110e1d056: xor    %rax,%rax
  0x0000000110e1d059: cmp    $0x8,%rcx
  0x0000000110e1d05d: jg     0x0000000110e1d06f
  0x0000000110e1d05f: dec    %rcx
  0x0000000110e1d062: js     0x0000000110e1d076
  0x0000000110e1d064: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e1d068: dec    %rcx
  0x0000000110e1d06b: jge    0x0000000110e1d064
  0x0000000110e1d06d: jmp    0x0000000110e1d076
  0x0000000110e1d06f: shl    $0x3,%rcx
  0x0000000110e1d073: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e1d076: cmpb   $0x0,0x30(%r15)
  0x0000000110e1d07b: jne    0x0000000110e1d105
  0x0000000110e1d081: mov    %rbp,%r10
  0x0000000110e1d084: mov    %rbx,%r8
  0x0000000110e1d087: shr    $0x3,%r8
  0x0000000110e1d08b: mov    %r8d,0x14(%rbp)
  0x0000000110e1d08f: mov    %rbx,%r11
  0x0000000110e1d092: xor    %r10,%r11
  0x0000000110e1d095: shr    $0x14,%r11
  0x0000000110e1d099: test   %r11,%r11
  0x0000000110e1d09c: je     0x0000000110e1d0f1
  0x0000000110e1d09e: shr    $0x9,%r10
  0x0000000110e1d0a2: movabs $0x110569000,%rdi
  0x0000000110e1d0ac: add    %r10,%rdi
  0x0000000110e1d0af: cmpb   $0x20,(%rdi)
  0x0000000110e1d0b2: je     0x0000000110e1d0f1
  0x0000000110e1d0b4: mov    0x80(%r15),%r10
  0x0000000110e1d0bb: mov    0x70(%r15),%r11
  0x0000000110e1d0bf: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1d0c5: cmpb   $0x0,(%rdi)
  0x0000000110e1d0c8: je     0x0000000110e1d0f1
  0x0000000110e1d0ca: movb   $0x0,(%rdi)
  0x0000000110e1d0cd: test   %r11,%r11
  0x0000000110e1d0d0: jne    0x0000000110e1d0e4
  0x0000000110e1d0d2: mov    %r15,%rsi
  0x0000000110e1d0d5: movabs $0x107aec8ce,%r10
  0x0000000110e1d0df: callq  *%r10
  0x0000000110e1d0e2: jmp    0x0000000110e1d0f1
  0x0000000110e1d0e4: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1d0e9: add    $0xfffffffffffffff8,%r11
  0x0000000110e1d0ed: mov    %r11,0x70(%r15)
  0x0000000110e1d0f1: movb   $0x0,0x10(%rbp)
  0x0000000110e1d0f5: add    $0x20,%rsp
  0x0000000110e1d0f9: pop    %rbp
  0x0000000110e1d0fa: mov    0x108(%r15),%r10
  0x0000000110e1d101: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1d104: retq   
  0x0000000110e1d105: mov    0x14(%rbp),%r10d
  0x0000000110e1d109: test   %r10d,%r10d
  0x0000000110e1d10c: je     0x0000000110e1d081
  0x0000000110e1d112: mov    0x38(%r15),%r11
  0x0000000110e1d116: mov    %r10,%rdi
  0x0000000110e1d119: shl    $0x3,%rdi
  0x0000000110e1d11d: test   %r11,%r11
  0x0000000110e1d120: je     0x0000000110e1d158
  0x0000000110e1d122: mov    0x48(%r15),%r10
  0x0000000110e1d126: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1d12b: add    $0xfffffffffffffff8,%r11
  0x0000000110e1d12f: mov    %r11,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1d133: jmpq   0x0000000110e1d081
  0x0000000110e1d138: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e1d142: nop
  0x0000000110e1d143: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e1d148: mov    %rax,%rbx
  0x0000000110e1d14b: jmpq   0x0000000110e1d076
  0x0000000110e1d150: movslq %edx,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1d153: jmpq   0x0000000110e1cfde
  0x0000000110e1d158: mov    %r15,%rsi
  0x0000000110e1d15b: movabs $0x107aec8aa,%r10
  0x0000000110e1d165: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1d168: jmpq   0x0000000110e1d081  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)

  0x0000000110e1d16d: mov    %rax,%rsi
  0x0000000110e1d170: add    $0x20,%rsp
  0x0000000110e1d174: pop    %rbp
  0x0000000110e1d175: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1d17a: hlt    
  0x0000000110e1d17b: hlt    
  0x0000000110e1d17c: hlt    
  0x0000000110e1d17d: hlt    
  0x0000000110e1d17e: hlt    
  0x0000000110e1d17f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e1d180: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e1d185: callq  0x0000000110e1d18a
  0x0000000110e1d18a: subq   $0x5,(%rsp)
  0x0000000110e1d18f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1d194: hlt    
  0x0000000110e1d195: hlt    
  0x0000000110e1d196: hlt    
  0x0000000110e1d197: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 424 Compiled method (c2)    1591  182             java.lang.String::replace (149 bytes)
 total in heap  [0x0000000110e20f10,0x0000000110e22c38] = 7464
 relocation     [0x0000000110e21088,0x0000000110e21118] = 144
 main code      [0x0000000110e21120,0x0000000110e21c40] = 2848
 stub code      [0x0000000110e21c40,0x0000000110e21c88] = 72
 metadata       [0x0000000110e21c88,0x0000000110e21d10] = 136
 scopes data    [0x0000000110e21d10,0x0000000110e222a8] = 1432
 scopes pcs     [0x0000000110e222a8,0x0000000110e22b48] = 2208
 dependencies   [0x0000000110e22b48,0x0000000110e22b50] = 8
 handler table  [0x0000000110e22b50,0x0000000110e22bf8] = 168
 nul chk table  [0x0000000110e22bf8,0x0000000110e22c38] = 64
----------------------------------------------------------------------
java/lang/String.replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;  [0x0000000110e21120, 0x0000000110e21c88]  2920 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011ed70fb0} 'replace' '(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/CharSequence'
  # parm1:    rcx:rcx   = 'java/lang/CharSequence'
  #           [sp+0x70]  (sp of caller)
  0x0000000110e21120: mov    0x8(%rsi),%r10d
  0x0000000110e21124: movabs $0x800000000,%r12
  0x0000000110e2112e: add    %r12,%r10
  0x0000000110e21131: xor    %r12,%r12
  0x0000000110e21134: cmp    %r10,%rax
  0x0000000110e21137: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e2113d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e21140: mov    %eax,-0x14000(%rsp)
  0x0000000110e21147: push   %rbp
  0x0000000110e21148: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2142)

  0x0000000110e2114c: mov    %rsi,(%rsp)
  0x0000000110e21150: mov    0x8(%rdx),%r10d    ; implicit exception: dispatches to 0x0000000110e21ba2
  0x0000000110e21154: cmp    $0x1808,%r10d      ;   {metadata('java/lang/String')}
  0x0000000110e2115b: jne    0x0000000110e21a11
  0x0000000110e21161: mov    0x8(%rcx),%r10d    ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@1 (line 2142)
                                                ; implicit exception: dispatches to 0x0000000110e21bb2
  0x0000000110e21165: mov    %rdx,0x30(%rsp)
  0x0000000110e2116a: cmp    $0x1808,%r10d      ;   {metadata('java/lang/String')}
  0x0000000110e21171: jne    0x0000000110e21a2e
  0x0000000110e21177: mov    %rcx,%r14          ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@8 (line 2143)

  0x0000000110e2117a: movsbl 0x14(%rdx),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@5 (line 1663)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e2117f: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@1 (line 1663)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21183: cmp    %r8d,%ebp
  0x0000000110e21186: jne    0x0000000110e21a66  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e2118c: test   %ebp,%ebp
  0x0000000110e2118e: jne    0x0000000110e21a86  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21194: mov    0xc(%rsi),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21198: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@23 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e2119c: mov    0xc(%r12,%r10,8),%r9d
  0x0000000110e211a1: mov    0xc(%r12,%r11,8),%r13d
  0x0000000110e211a6: cmp    %r9d,%r13d
  0x0000000110e211a9: jg     0x0000000110e2197e
  0x0000000110e211af: test   %r13d,%r13d
  0x0000000110e211b2: jbe    0x0000000110e2178f  ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e211b8: lea    (%r12,%r10,8),%rcx  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e211bc: lea    0x10(%r12,%r10,8),%rdi
  0x0000000110e211c1: lea    (%r12,%r11,8),%rcx  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@23 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e211c5: lea    0x10(%r12,%r11,8),%rsi
  0x0000000110e211ca: mov    %r9d,%edx
  0x0000000110e211cd: mov    %r13d,%eax
  0x0000000110e211d0: mov    %rsp,%rcx
  0x0000000110e211d3: cmp    $0x10,%eax
  0x0000000110e211d6: jae    0x0000000110e2122d
  0x0000000110e211d8: mov    %esi,%ebx
  0x0000000110e211da: and    $0xfff,%ebx
  0x0000000110e211e0: cmp    $0xff0,%ebx
  0x0000000110e211e6: jbe    0x0000000110e211ff
  0x0000000110e211e8: sub    $0x10,%rsp
  0x0000000110e211ec: push   %rax
  0x0000000110e211ed: movzbl -0x1(%rsi,%rax,1),%ebx
  0x0000000110e211f2: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e211f6: dec    %rax
  0x0000000110e211f9: jne    0x0000000110e211ed
  0x0000000110e211fb: pop    %rax
  0x0000000110e211fc: mov    %rsp,%rsi
  0x0000000110e211ff: cmp    $0x10,%edx
  0x0000000110e21202: jae    0x0000000110e2122d
  0x0000000110e21204: mov    %edi,%ebx
  0x0000000110e21206: and    $0xfff,%ebx
  0x0000000110e2120c: cmp    $0xff0,%ebx
  0x0000000110e21212: jbe    0x0000000110e2122d
  0x0000000110e21214: sub    $0x10,%rsp
  0x0000000110e21218: push   %rax
  0x0000000110e21219: mov    %edx,%eax
  0x0000000110e2121b: movzbl -0x1(%rdi,%rax,1),%ebx
  0x0000000110e21220: mov    %bl,0x7(%rsp,%rax,1)
  0x0000000110e21224: dec    %rax
  0x0000000110e21227: jne    0x0000000110e2121b
  0x0000000110e21229: pop    %rax
  0x0000000110e2122a: mov    %rsp,%rdi
  0x0000000110e2122d: vmovdqu (%rsi),%xmm0
  0x0000000110e21231: push   %rax
  0x0000000110e21232: push   %rsi
  0x0000000110e21233: push   %rdi
  0x0000000110e21234: push   %rcx
  0x0000000110e21235: mov    %rdi,%rbx
  0x0000000110e21238: jmp    0x0000000110e2125a
  0x0000000110e2123a: mov    0x10(%rsp),%rsi
  0x0000000110e2123f: mov    0x18(%rsp),%eax
  0x0000000110e21243: vmovdqu (%rsi),%xmm0
  0x0000000110e21247: sub    %rbx,%rdi
  0x0000000110e2124a: add    %edi,%edx
  0x0000000110e2124c: dec    %edx
  0x0000000110e2124e: cmp    %eax,%edx
  0x0000000110e21250: js     0x0000000110e21286
  0x0000000110e21256: add    $0x1,%rbx
  0x0000000110e2125a: vpcmpestri $0xc,(%rbx),%xmm0
  0x0000000110e21260: jb     0x0000000110e21280
  0x0000000110e21262: sub    $0x10,%edx
  0x0000000110e21265: jle    0x0000000110e21286
  0x0000000110e21267: cmp    %eax,%edx
  0x0000000110e21269: js     0x0000000110e21286
  0x0000000110e2126b: add    $0x10,%rbx
  0x0000000110e2126f: cmp    $0x10,%edx
  0x0000000110e21272: jge    0x0000000110e2125a
  0x0000000110e21274: lea    -0x10(%rbx,%rdx,1),%rbx
  0x0000000110e21279: mov    $0x10,%edx
  0x0000000110e2127e: jmp    0x0000000110e2125a
  0x0000000110e21280: sub    %ecx,%edx
  0x0000000110e21282: cmp    %eax,%edx
  0x0000000110e21284: jge    0x0000000110e2128d
  0x0000000110e21286: mov    $0xffffffff,%ebx
  0x0000000110e2128b: jmp    0x0000000110e212e3
  0x0000000110e2128d: lea    (%rbx,%rcx,1),%rbx
  0x0000000110e21291: add    %eax,%ecx
  0x0000000110e21293: cmp    $0x10,%ecx
  0x0000000110e21296: jle    0x0000000110e212e0
  0x0000000110e21298: cmp    $0x10,%eax
  0x0000000110e2129b: jle    0x0000000110e2126f
  0x0000000110e2129d: mov    %rbx,%rdi
  0x0000000110e212a0: cmp    %eax,%ecx
  0x0000000110e212a2: je     0x0000000110e212ac
  0x0000000110e212a4: vpcmpestri $0xc,(%rdi),%xmm0
  0x0000000110e212aa: jno    0x0000000110e2123a
  0x0000000110e212ac: sub    $0x10,%eax
  0x0000000110e212af: jle    0x0000000110e212db
  0x0000000110e212b1: add    $0x10,%rdi
  0x0000000110e212b5: add    $0x10,%rsi
  0x0000000110e212b9: sub    $0x10,%edx
  0x0000000110e212bc: cmp    $0x10,%eax
  0x0000000110e212bf: jge    0x0000000110e212d5
  0x0000000110e212c1: lea    -0x10(%rsi,%rax,1),%rsi
  0x0000000110e212c6: lea    -0x10(%rdi,%rax,1),%rdi
  0x0000000110e212cb: sub    %eax,%edx
  0x0000000110e212cd: mov    $0x10,%eax
  0x0000000110e212d2: add    $0x10,%edx
  0x0000000110e212d5: vmovdqu (%rsi),%xmm0
  0x0000000110e212d9: jmp    0x0000000110e212a4
  0x0000000110e212db: mov    0x8(%rsp),%rdi
  0x0000000110e212e0: sub    %rdi,%rbx
  0x0000000110e212e3: pop    %rsp
  0x0000000110e212e4: test   %ebx,%ebx
  0x0000000110e212e6: jl     0x0000000110e21985  ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e212ec: test   %r11d,%r11d
  0x0000000110e212ef: je     0x0000000110e2199e  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@30 (line 2148)

  0x0000000110e212f5: test   %r10d,%r10d
  0x0000000110e212f8: je     0x0000000110e219ae  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@44 (line 2150)

  0x0000000110e212fe: mov    0xc(%r14),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.String::replace@56 (line 2152)

  0x0000000110e21302: mov    0xc(%r12,%r11,8),%edx  ; implicit exception: dispatches to 0x0000000110e21bc2
  0x0000000110e21307: movsbl 0x14(%r14),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::replace@56 (line 2152)

  0x0000000110e2130c: mov    %r13d,%r10d
  0x0000000110e2130f: mov    %r8d,%ecx
  0x0000000110e21312: sar    %cl,%r10d          ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::replace@30 (line 2148)

  0x0000000110e21315: mov    %edi,%ecx
  0x0000000110e21317: sar    %cl,%edx
  0x0000000110e21319: mov    %r9d,%r11d
  0x0000000110e2131c: mov    %ebp,%ecx
  0x0000000110e2131e: sar    %cl,%r11d          ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::replace@44 (line 2150)

  0x0000000110e21321: mov    %r11d,%r8d
  0x0000000110e21324: sub    %r10d,%r8d
  0x0000000110e21327: add    %edx,%r8d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@59 (line 2152)

  0x0000000110e2132a: mov    $0x1,%edi
  0x0000000110e2132f: cmp    $0x1,%r10d
  0x0000000110e21333: mov    %r10d,%r9d
  0x0000000110e21336: cmovl  %edi,%r9d          ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@38 (line 2149)

  0x0000000110e2133a: test   %r8d,%r8d
  0x0000000110e2133d: jl     0x0000000110e21b0e
  0x0000000110e21343: mov    0x118(%r15),%rax
  0x0000000110e2134a: mov    %rax,%rcx
  0x0000000110e2134d: add    $0x18,%rcx
  0x0000000110e21351: cmp    0x128(%r15),%rcx
  0x0000000110e21358: jae    0x0000000110e21826  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e2135e: mov    %rcx,0x118(%r15)
  0x0000000110e21365: prefetchnta 0xc0(%rcx)
  0x0000000110e2136c: mov    $0xed68,%ecx       ;   {metadata('java/lang/StringBuilder')}
  0x0000000110e21371: movabs $0x800000000,%r12
  0x0000000110e2137b: add    %r12,%rcx
  0x0000000110e2137e: xor    %r12,%r12
  0x0000000110e21381: mov    0xb8(%rcx),%rcx
  0x0000000110e21388: mov    %rcx,(%rax)
  0x0000000110e2138b: movl   $0xed68,0x8(%rax)  ;   {metadata('java/lang/StringBuilder')}
  0x0000000110e21392: movl   $0x0,0xc(%rax)
  0x0000000110e21399: movq   $0x0,0x10(%rax)
  0x0000000110e213a1: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2156)

  0x0000000110e213a4: cmp    $0x100000,%r8d
  0x0000000110e213ab: ja     0x0000000110e219be
  0x0000000110e213b1: movslq %r8d,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e213b4: cmp    $0x100000,%r8d
  0x0000000110e213bb: ja     0x0000000110e2188a  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e213c1: mov    0x118(%r15),%rbp
  0x0000000110e213c8: add    $0x17,%rcx         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e213cc: mov    %rcx,%rdi
  0x0000000110e213cf: and    $0xfffffffffffffff8,%rdi
  0x0000000110e213d3: mov    %rbp,%rsi
  0x0000000110e213d6: add    %rdi,%rsi
  0x0000000110e213d9: cmp    0x128(%r15),%rsi
  0x0000000110e213e0: jae    0x0000000110e2188a  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e213e6: mov    %rsi,0x118(%r15)
  0x0000000110e213ed: prefetchnta 0xc0(%rsi)
  0x0000000110e213f4: movq   $0x1,0x0(%rbp)
  0x0000000110e213fc: prefetchnta 0x100(%rsi)
  0x0000000110e21403: movl   $0x820,0x8(%rbp)   ;   {metadata({type array byte})}
  0x0000000110e2140a: mov    %r8d,0xc(%rbp)
  0x0000000110e2140e: prefetchnta 0x140(%rsi)
  0x0000000110e21415: mov    %rbp,%rdi
  0x0000000110e21418: add    $0x10,%rdi
  0x0000000110e2141c: prefetchnta 0x180(%rsi)
  0x0000000110e21423: shr    $0x3,%rcx
  0x0000000110e21427: add    $0xfffffffffffffffe,%rcx
  0x0000000110e2142b: xor    %rax,%rax
  0x0000000110e2142e: cmp    $0x8,%rcx
  0x0000000110e21432: jg     0x0000000110e21444
  0x0000000110e21434: dec    %rcx
  0x0000000110e21437: js     0x0000000110e2144b
  0x0000000110e21439: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e2143d: dec    %rcx
  0x0000000110e21440: jge    0x0000000110e21439
  0x0000000110e21442: jmp    0x0000000110e2144b
  0x0000000110e21444: shl    $0x3,%rcx
  0x0000000110e21448: rep rex.W stos %al,%es:(%rdi)  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e2144b: mov    %rdx,%r8
  0x0000000110e2144e: mov    %rbp,%rdi
  0x0000000110e21451: shr    $0x3,%rdi
  0x0000000110e21455: mov    %edi,0x14(%rdx)
  0x0000000110e21458: mov    %rbp,%rcx
  0x0000000110e2145b: xor    %r8,%rcx
  0x0000000110e2145e: shr    $0x14,%rcx
  0x0000000110e21462: test   %rcx,%rcx
  0x0000000110e21465: je     0x0000000110e214dd
  0x0000000110e21467: shr    $0x9,%r8
  0x0000000110e2146b: movabs $0x110569000,%rdi
  0x0000000110e21475: add    %r8,%rdi
  0x0000000110e21478: cmpb   $0x20,(%rdi)
  0x0000000110e2147b: je     0x0000000110e214dd
  0x0000000110e2147d: mov    0x70(%r15),%r8     ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e21481: mov    0x80(%r15),%rcx
  0x0000000110e21488: lock addl $0x0,-0x40(%rsp)
  0x0000000110e2148e: cmpb   $0x0,(%rdi)
  0x0000000110e21491: je     0x0000000110e214dd
  0x0000000110e21493: movb   $0x0,(%rdi)
  0x0000000110e21496: test   %r8,%r8
  0x0000000110e21499: jne    0x0000000110e214d0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e2149b: mov    %rdx,0x10(%rsp)
  0x0000000110e214a0: mov    %r9d,0x8(%rsp)
  0x0000000110e214a5: mov    %r11d,%r13d
  0x0000000110e214a8: mov    %r10d,%ebp         ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e214ab: mov    %r15,%rsi
  0x0000000110e214ae: vzeroupper 
  0x0000000110e214b1: movabs $0x107aec8ce,%r10
  0x0000000110e214bb: callq  *%r10
  0x0000000110e214be: mov    %ebp,%r10d
  0x0000000110e214c1: mov    %r13d,%r11d
  0x0000000110e214c4: mov    0x8(%rsp),%r9d
  0x0000000110e214c9: mov    0x10(%rsp),%rdx
  0x0000000110e214ce: jmp    0x0000000110e214dd
  0x0000000110e214d0: mov    %rdi,-0x8(%rcx,%r8,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e214d5: add    $0xfffffffffffffff8,%r8  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e214d9: mov    %r8,0x70(%r15)     ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@14 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e214dd: mov    %r9d,0x18(%rsp)
  0x0000000110e214e2: mov    %r11d,0x14(%rsp)
  0x0000000110e214e7: mov    %r10d,0x10(%rsp)
  0x0000000110e214ec: mov    %ebx,%ebp
  0x0000000110e214ee: mov    %r14,0x8(%rsp)
  0x0000000110e214f3: movb   $0x0,0x10(%rdx)    ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@19 (line 87)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e214f7: mov    %rdx,0x20(%rsp)    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e214fc: mov    %rdx,%rsi
  0x0000000110e214ff: mov    (%rsp),%rdx
  0x0000000110e21503: xor    %ecx,%ecx
  0x0000000110e21505: mov    %ebx,%r8d
  0x0000000110e21508: vzeroupper 
  0x0000000110e2150b: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop }
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.String::replace@96 (line 2159)
                                                ;   {optimized virtual_call}
  0x0000000110e21510: test   %rax,%rax
  0x0000000110e21513: je     0x0000000110e219c6
  0x0000000110e21519: mov    %rax,%rsi
  0x0000000110e2151c: mov    0x8(%rsp),%rdx
  0x0000000110e21521: data16 xchg %ax,%ax
  0x0000000110e21524: vzeroupper 
  0x0000000110e21527: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop }
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.String::replace@101 (line 2159)
                                                ;   {optimized virtual_call}
  0x0000000110e2152c: mov    0x10(%rsp),%r10d
  0x0000000110e21531: add    %ebp,%r10d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@109 (line 2160)

  0x0000000110e21534: cmp    0x14(%rsp),%ebp
  0x0000000110e21538: jge    0x0000000110e21b3e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@116 (line 2161)

  0x0000000110e2153e: mov    (%rsp),%r13
  0x0000000110e21542: mov    0xc(%r13),%r9d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21546: mov    0xc(%r12,%r9,8),%edx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ; implicit exception: dispatches to 0x0000000110e21bd2
  0x0000000110e2154b: mov    0x30(%rsp),%rax
  0x0000000110e21550: mov    0xc(%rax),%r8d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1707)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21554: mov    0xc(%r12,%r8,8),%edi  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ; implicit exception: dispatches to 0x0000000110e21be2
  0x0000000110e21559: movsbl 0x14(%rax),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@7 (line 1708)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e2155d: mov    %ebx,%ecx
  0x0000000110e2155f: sar    %cl,%edi           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21561: mov    0x18(%rsp),%r11d
  0x0000000110e21566: add    %ebp,%r11d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@125 (line 2161)

  0x0000000110e21569: movsbl 0x14(%r13),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::indexOf@5 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e2156e: sar    %cl,%edx           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21570: cmp    %edx,%r11d
  0x0000000110e21573: jl     0x0000000110e21aa2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21579: test   %edi,%edi
  0x0000000110e2157b: je     0x0000000110e21b5e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21581: mov    0x20(%rsp),%rsi
  0x0000000110e21586: mov    (%rsp),%rdx
  0x0000000110e2158a: mov    %r10d,%ecx
  0x0000000110e2158d: mov    0x14(%rsp),%r8d
  0x0000000110e21592: xchg   %ax,%ax
  0x0000000110e21594: vzeroupper 
  0x0000000110e21597: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.String::replace@142 (line 2162)
                                                ;   {optimized virtual_call}
  0x0000000110e2159c: movsbl 0x10(%rax),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ; implicit exception: dispatches to 0x0000000110e21bf2
  0x0000000110e215a0: test   %ebp,%ebp
  0x0000000110e215a2: jne    0x0000000110e21ae2  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e215a8: mov    0x118(%r15),%rbx
  0x0000000110e215af: mov    0x14(%rax),%r10d   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@8 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e215b3: mov    %rbx,%r8
  0x0000000110e215b6: add    $0x18,%r8
  0x0000000110e215ba: mov    0xc(%rax),%r11d
  0x0000000110e215be: cmp    0x128(%r15),%r8
  0x0000000110e215c5: jae    0x0000000110e218ff  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e215cb: mov    %r8,0x118(%r15)
  0x0000000110e215d2: prefetchnta 0xc0(%r8)
  0x0000000110e215da: mov    $0x1808,%r8d       ;   {metadata('java/lang/String')}
  0x0000000110e215e0: movabs $0x800000000,%r12
  0x0000000110e215ea: add    %r12,%r8
  0x0000000110e215ed: xor    %r12,%r12
  0x0000000110e215f0: mov    0xb8(%r8),%r8
  0x0000000110e215f7: mov    %r8,(%rbx)
  0x0000000110e215fa: movl   $0x1808,0x8(%rbx)  ;   {metadata('java/lang/String')}
  0x0000000110e21601: movl   $0x0,0xc(%rbx)
  0x0000000110e21608: movq   $0x0,0x10(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21610: test   %r11d,%r11d
  0x0000000110e21613: jl     0x0000000110e21b7e  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21619: cmp    $0x100000,%r11d
  0x0000000110e21620: ja     0x0000000110e219da
  0x0000000110e21626: movslq %r11d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21629: mov    0xc(%r12,%r10,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ; implicit exception: dispatches to 0x0000000110e21c02
  0x0000000110e2162e: mov    %r11d,%edi         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21631: cmp    %edi,%r9d
  0x0000000110e21634: mov    %edi,%ebp
  0x0000000110e21636: cmovl  %r9d,%ebp          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e2163a: cmp    %ebp,%r9d
  0x0000000110e2163d: jb     0x0000000110e21a46
  0x0000000110e21643: cmp    %ebp,%edi
  0x0000000110e21645: jb     0x0000000110e21a46  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e2164b: add    $0x17,%r8
  0x0000000110e2164f: mov    %r8,%r9
  0x0000000110e21652: and    $0xfffffffffffffff8,%r9  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21656: cmp    $0x100000,%r11d
  0x0000000110e2165d: ja     0x0000000110e2192d
  0x0000000110e21663: mov    0x118(%r15),%r13
  0x0000000110e2166a: mov    %r13,%rcx
  0x0000000110e2166d: add    %r9,%rcx
  0x0000000110e21670: cmp    0x128(%r15),%rcx
  0x0000000110e21677: jae    0x0000000110e2192d  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e2167d: mov    %rcx,0x118(%r15)
  0x0000000110e21684: prefetchnta 0xc0(%rcx)
  0x0000000110e2168b: movq   $0x1,0x0(%r13)
  0x0000000110e21693: prefetchnta 0x100(%rcx)
  0x0000000110e2169a: movl   $0x820,0x8(%r13)   ;   {metadata({type array byte})}
  0x0000000110e216a2: mov    %r11d,0xc(%r13)
  0x0000000110e216a6: prefetchnta 0x140(%rcx)
  0x0000000110e216ad: prefetchnta 0x180(%rcx)   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e216b4: mov    %r13,%rsi
  0x0000000110e216b7: add    $0x10,%rsi
  0x0000000110e216bb: shr    $0x3,%r8
  0x0000000110e216bf: mov    %r13,%r14
  0x0000000110e216c2: shr    $0x3,%r14
  0x0000000110e216c6: test   %ebp,%ebp
  0x0000000110e216c8: je     0x0000000110e219e2
  0x0000000110e216ce: lea    (%r12,%r10,8),%rcx  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@8 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e216d2: lea    0x10(%r12,%r10,8),%r10
  0x0000000110e216d7: cmp    %r11d,%ebp
  0x0000000110e216da: jl     0x0000000110e21796
  0x0000000110e216e0: add    $0xfffffffffffffff0,%r9
  0x0000000110e216e4: shr    $0x3,%r9
  0x0000000110e216e8: mov    %r10,%rdi
  0x0000000110e216eb: mov    %r9,%rdx
  0x0000000110e216ee: vzeroupper 
  0x0000000110e216f1: movabs $0x110d9f080,%r10
  0x0000000110e216fb: callq  *%r10
  0x0000000110e216fe: cmpb   $0x0,0x30(%r15)
  0x0000000110e21703: jne    0x0000000110e217ef
  0x0000000110e21709: mov    %r14d,0xc(%rbx)
  0x0000000110e2170d: mov    %r13,%r10
  0x0000000110e21710: mov    %rbx,%r11
  0x0000000110e21713: xor    %r11,%r10
  0x0000000110e21716: shr    $0x14,%r10
  0x0000000110e2171a: test   %r10,%r10
  0x0000000110e2171d: je     0x0000000110e21775
  0x0000000110e2171f: shr    $0x9,%r11
  0x0000000110e21723: movabs $0x110569000,%rdi
  0x0000000110e2172d: add    %r11,%rdi
  0x0000000110e21730: cmpb   $0x20,(%rdi)
  0x0000000110e21733: je     0x0000000110e21775
  0x0000000110e21735: mov    0x70(%r15),%r10
  0x0000000110e21739: mov    0x80(%r15),%r11
  0x0000000110e21740: lock addl $0x0,-0x40(%rsp)
  0x0000000110e21746: cmpb   $0x0,(%rdi)
  0x0000000110e21749: je     0x0000000110e21775
  0x0000000110e2174b: movb   $0x0,(%rdi)
  0x0000000110e2174e: test   %r10,%r10
  0x0000000110e21751: jne    0x0000000110e21768  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e21753: mov    %r15,%rsi
  0x0000000110e21756: vzeroupper 
  0x0000000110e21759: movabs $0x107aec8ce,%r10
  0x0000000110e21763: callq  *%r10
  0x0000000110e21766: jmp    0x0000000110e21775
  0x0000000110e21768: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e2176d: add    $0xfffffffffffffff8,%r10  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e21771: mov    %r10,0x70(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21775: movb   $0x0,0x14(%rbx)    ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21779: mov    %rbx,%rax
  0x0000000110e2177c: vzeroupper 
  0x0000000110e2177f: add    $0x60,%rsp
  0x0000000110e21783: pop    %rbp
  0x0000000110e21784: mov    0x108(%r15),%r10
  0x0000000110e2178b: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e2178e: retq   
  0x0000000110e2178f: xor    %ebx,%ebx
  0x0000000110e21791: jmpq   0x0000000110e212ec
  0x0000000110e21796: movslq %ebp,%rdx
  0x0000000110e21799: mov    %rdx,%r11
  0x0000000110e2179c: add    $0x10,%r11
  0x0000000110e217a0: mov    %r11,%r9
  0x0000000110e217a3: and    $0xfffffffffffffff8,%r9
  0x0000000110e217a7: mov    %r13,%rdi
  0x0000000110e217aa: add    %r9,%rdi
  0x0000000110e217ad: shr    $0x3,%r11
  0x0000000110e217b1: sub    %r11,%r8
  0x0000000110e217b4: mov    %r8,%rcx
  0x0000000110e217b7: xor    %rax,%rax
  0x0000000110e217ba: cmp    $0x8,%rcx
  0x0000000110e217be: jg     0x0000000110e217d0
  0x0000000110e217c0: dec    %rcx
  0x0000000110e217c3: js     0x0000000110e217d7
  0x0000000110e217c5: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e217c9: dec    %rcx
  0x0000000110e217cc: jge    0x0000000110e217c5
  0x0000000110e217ce: jmp    0x0000000110e217d7
  0x0000000110e217d0: shl    $0x3,%rcx
  0x0000000110e217d4: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e217d7: mov    %r10,%rdi
  0x0000000110e217da: vzeroupper 
  0x0000000110e217dd: movabs $0x110d9ec00,%r10
  0x0000000110e217e7: callq  *%r10
  0x0000000110e217ea: jmpq   0x0000000110e216fe
  0x0000000110e217ef: mov    0xc(%rbx),%r11d
  0x0000000110e217f3: test   %r11d,%r11d
  0x0000000110e217f6: je     0x0000000110e21709
  0x0000000110e217fc: mov    0x38(%r15),%r10
  0x0000000110e21800: mov    %r11,%rdi
  0x0000000110e21803: shl    $0x3,%rdi
  0x0000000110e21807: test   %r10,%r10
  0x0000000110e2180a: je     0x0000000110e21af6  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e21810: mov    0x48(%r15),%r11
  0x0000000110e21814: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21819: add    $0xfffffffffffffff8,%r10  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e2181d: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21821: jmpq   0x0000000110e21709
  0x0000000110e21826: mov    %r9d,0x28(%rsp)
  0x0000000110e2182b: mov    %r8d,0x24(%rsp)
  0x0000000110e21830: mov    %r11d,0x20(%rsp)
  0x0000000110e21835: mov    %r10d,0x1c(%rsp)
  0x0000000110e2183a: mov    %ebx,0x18(%rsp)
  0x0000000110e2183e: mov    %r14,0x10(%rsp)
  0x0000000110e21843: rex.W pushq 0x30(%rsp)
  0x0000000110e21848: rex.W popq 0x8(%rsp)
  0x0000000110e2184d: mov    (%rsp),%rbp
  0x0000000110e21851: movabs $0x80000ed68,%rsi  ;   {metadata('java/lang/StringBuilder')}
  0x0000000110e2185b: nop
  0x0000000110e2185c: vzeroupper 
  0x0000000110e2185f: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [48]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.String::replace@75 (line 2156)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e21864: mov    %rbp,(%rsp)
  0x0000000110e21868: mov    0x10(%rsp),%r14
  0x0000000110e2186d: mov    0x18(%rsp),%ebx
  0x0000000110e21871: mov    0x1c(%rsp),%r10d
  0x0000000110e21876: mov    0x20(%rsp),%r11d
  0x0000000110e2187b: mov    0x24(%rsp),%r8d
  0x0000000110e21880: mov    0x28(%rsp),%r9d
  0x0000000110e21885: jmpq   0x0000000110e213a1
  0x0000000110e2188a: mov    %rdx,0x28(%rsp)
  0x0000000110e2188f: mov    %r9d,0x24(%rsp)
  0x0000000110e21894: mov    %r11d,0x20(%rsp)
  0x0000000110e21899: mov    %r10d,0x1c(%rsp)
  0x0000000110e2189e: mov    %ebx,0x18(%rsp)
  0x0000000110e218a2: mov    %r14,0x10(%rsp)
  0x0000000110e218a7: rex.W pushq 0x30(%rsp)
  0x0000000110e218ac: rex.W popq 0x8(%rsp)
  0x0000000110e218b1: mov    (%rsp),%rbp        ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 84)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e218b5: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e218bf: mov    %r8d,%edx
  0x0000000110e218c2: xchg   %ax,%ax
  0x0000000110e218c4: vzeroupper 
  0x0000000110e218c7: callq  0x0000000110dc7a80  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [40]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)
                                                ;   {runtime_call _new_array_Java}
  0x0000000110e218cc: mov    %rbp,(%rsp)
  0x0000000110e218d0: rex.W pushq 0x8(%rsp)
  0x0000000110e218d5: rex.W popq 0x30(%rsp)
  0x0000000110e218da: mov    0x10(%rsp),%r14
  0x0000000110e218df: mov    0x18(%rsp),%ebx
  0x0000000110e218e3: mov    0x1c(%rsp),%r10d
  0x0000000110e218e8: mov    0x20(%rsp),%r11d
  0x0000000110e218ed: mov    0x24(%rsp),%r9d
  0x0000000110e218f2: mov    0x28(%rsp),%rdx
  0x0000000110e218f7: mov    %rax,%rbp
  0x0000000110e218fa: jmpq   0x0000000110e2144b
  0x0000000110e218ff: mov    %r10d,(%rsp)
  0x0000000110e21903: movabs $0x800001808,%rsi  ;   {metadata('java/lang/String')}
  0x0000000110e2190d: mov    %r11d,0x4(%rsp)
  0x0000000110e21912: xchg   %ax,%ax
  0x0000000110e21914: vzeroupper 
  0x0000000110e21917: callq  0x0000000110dc6380  ; ImmutableOopMap{[0]=NarrowOop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e2191c: mov    %rax,%rbx
  0x0000000110e2191f: mov    (%rsp),%r10d
  0x0000000110e21923: mov    0x4(%rsp),%r11d
  0x0000000110e21928: jmpq   0x0000000110e21610
  0x0000000110e2192d: mov    %r10d,0xc(%rsp)
  0x0000000110e21932: mov    %r9,0x18(%rsp)
  0x0000000110e21937: mov    %r8,0x10(%rsp)
  0x0000000110e2193c: mov    %r11d,0x8(%rsp)
  0x0000000110e21941: mov    %rbx,(%rsp)
  0x0000000110e21945: movabs $0x800000820,%rsi  ;   {metadata({type array byte})}
  0x0000000110e2194f: mov    %r11d,%edx
  0x0000000110e21952: xchg   %ax,%ax
  0x0000000110e21954: vzeroupper 
  0x0000000110e21957: callq  0x0000000110dc7980  ; ImmutableOopMap{[0]=Oop [12]=NarrowOop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call _new_array_nozero_Java}
  0x0000000110e2195c: mov    (%rsp),%rbx
  0x0000000110e21960: mov    0x8(%rsp),%ecx
  0x0000000110e21964: mov    0x10(%rsp),%r8
  0x0000000110e21969: mov    0x18(%rsp),%r9
  0x0000000110e2196e: mov    %rax,%r13
  0x0000000110e21971: mov    0xc(%rsp),%r10d
  0x0000000110e21976: mov    %ecx,%r11d
  0x0000000110e21979: jmpq   0x0000000110e216b4
  0x0000000110e2197e: mov    $0xffffffff,%ebp
  0x0000000110e21983: jmp    0x0000000110e21987
  0x0000000110e21985: mov    %ebx,%ebp          ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21987: mov    $0xffffff4d,%esi
  0x0000000110e2198c: mov    %r14,0x10(%rsp)
  0x0000000110e21991: data16 xchg %ax,%ax
  0x0000000110e21994: vzeroupper 
  0x0000000110e21997: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=Oop [48]=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@24 (line 2145)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e2199c: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@24 (line 2145)

  0x0000000110e2199e: mov    $0xfffffff6,%esi
  0x0000000110e219a3: nop
  0x0000000110e219a4: vzeroupper 
  0x0000000110e219a7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@30 (line 2148)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e219ac: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@30 (line 2148)

  0x0000000110e219ae: mov    $0xfffffff6,%esi
  0x0000000110e219b3: nop
  0x0000000110e219b4: vzeroupper 
  0x0000000110e219b7: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@44 (line 2150)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e219bc: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@44 (line 2150)

  0x0000000110e219be: movslq %r8d,%rcx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e219c1: jmpq   0x0000000110e213b4
  0x0000000110e219c6: mov    $0xfffffff6,%esi
  0x0000000110e219cb: mov    0x8(%rsp),%rbp
  0x0000000110e219d0: vzeroupper 
  0x0000000110e219d3: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@101 (line 2159)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e219d8: ud2                       ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@101 (line 2159)

  0x0000000110e219da: movslq %r11d,%r8          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e219dd: jmpq   0x0000000110e21629
  0x0000000110e219e2: add    $0xfffffffffffffffe,%r8
  0x0000000110e219e6: mov    %r8,%rcx
  0x0000000110e219e9: mov    %rsi,%rdi
  0x0000000110e219ec: xor    %rax,%rax
  0x0000000110e219ef: cmp    $0x8,%rcx
  0x0000000110e219f3: jg     0x0000000110e21a05
  0x0000000110e219f5: dec    %rcx
  0x0000000110e219f8: js     0x0000000110e21a0c
  0x0000000110e219fa: mov    %rax,(%rdi,%rcx,8)
  0x0000000110e219fe: dec    %rcx
  0x0000000110e21a01: jge    0x0000000110e219fa
  0x0000000110e21a03: jmp    0x0000000110e21a0c
  0x0000000110e21a05: shl    $0x3,%rcx
  0x0000000110e21a09: rep rex.W stos %al,%es:(%rdi)
  0x0000000110e21a0c: jmpq   0x0000000110e216fe
  0x0000000110e21a11: mov    $0xffffffde,%esi
  0x0000000110e21a16: mov    (%rsp),%rbp
  0x0000000110e21a1a: mov    %rcx,(%rsp)
  0x0000000110e21a1e: mov    %rdx,0x8(%rsp)
  0x0000000110e21a23: nop
  0x0000000110e21a24: vzeroupper 
  0x0000000110e21a27: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@1 (line 2142)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21a2c: ud2                       ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@1 (line 2142)

  0x0000000110e21a2e: mov    $0xffffffde,%esi
  0x0000000110e21a33: mov    (%rsp),%rbp
  0x0000000110e21a37: mov    %rcx,(%rsp)
  0x0000000110e21a3b: nop
  0x0000000110e21a3c: vzeroupper 
  0x0000000110e21a3f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [48]=Oop }
                                                ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@8 (line 2143)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21a44: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21a46: mov    $0xffffffcc,%esi
  0x0000000110e21a4b: mov    %rbx,(%rsp)
  0x0000000110e21a4f: mov    %r11d,0xc(%rsp)
  0x0000000110e21a54: mov    %r10d,0x10(%rsp)
  0x0000000110e21a59: data16 xchg %ax,%ax
  0x0000000110e21a5c: vzeroupper 
  0x0000000110e21a5f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [16]=NarrowOop }
                                                ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21a64: ud2                       ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21a66: mov    $0xffffff4d,%esi
  0x0000000110e21a6b: mov    %r14,0x18(%rsp)
  0x0000000110e21a70: mov    %rdx,0x20(%rsp)
  0x0000000110e21a75: mov    %r8d,0x28(%rsp)
  0x0000000110e21a7a: xchg   %ax,%ax
  0x0000000110e21a7c: vzeroupper 
  0x0000000110e21a7f: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop [32]=Oop [48]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)
                                                ; - java.lang.String::replace@17 (line 2144)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21a84: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1663)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21a86: mov    $0xffffff4d,%esi
  0x0000000110e21a8b: mov    %r14,0x18(%rsp)
  0x0000000110e21a90: mov    %rdx,0x20(%rsp)
  0x0000000110e21a95: data16 xchg %ax,%ax
  0x0000000110e21a98: vzeroupper 
  0x0000000110e21a9b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [24]=Oop [32]=Oop [48]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21aa0: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@12 (line 1664)
                                                ; - java.lang.String::replace@17 (line 2144)

  0x0000000110e21aa2: mov    $0xffffff4d,%esi
  0x0000000110e21aa7: mov    (%rsp),%rbp
  0x0000000110e21aab: rex.W pushq 0x30(%rsp)
  0x0000000110e21ab0: rex.W popq (%rsp)
  0x0000000110e21ab4: mov    %r10d,0x1c(%rsp)
  0x0000000110e21ab9: mov    %r9d,0x28(%rsp)
  0x0000000110e21abe: mov    %ecx,0x2c(%rsp)
  0x0000000110e21ac2: mov    %r8d,0x38(%rsp)
  0x0000000110e21ac7: mov    %ebx,0x3c(%rsp)
  0x0000000110e21acb: mov    %edi,0x40(%rsp)
  0x0000000110e21acf: mov    %r11d,0x44(%rsp)
  0x0000000110e21ad4: mov    %edx,0x48(%rsp)
  0x0000000110e21ad8: vzeroupper 
  0x0000000110e21adb: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=NarrowOop [56]=NarrowOop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21ae0: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1711)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21ae2: mov    $0xffffff4d,%esi
  0x0000000110e21ae7: mov    %rax,(%rsp)
  0x0000000110e21aeb: nop
  0x0000000110e21aec: vzeroupper 
  0x0000000110e21aef: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21af4: ud2                       ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@132 (line 2161)

  0x0000000110e21af6: mov    %r15,%rsi
  0x0000000110e21af9: vzeroupper 
  0x0000000110e21afc: movabs $0x107aec8aa,%r10
  0x0000000110e21b06: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21b09: jmpq   0x0000000110e21709
  0x0000000110e21b0e: mov    $0xffffff4d,%esi
  0x0000000110e21b13: mov    (%rsp),%rbp
  0x0000000110e21b17: mov    %r14,0x8(%rsp)
  0x0000000110e21b1c: mov    %ebx,0x10(%rsp)
  0x0000000110e21b20: mov    %r10d,0x14(%rsp)
  0x0000000110e21b25: mov    %r9d,0x18(%rsp)
  0x0000000110e21b2a: mov    %r11d,0x1c(%rsp)
  0x0000000110e21b2f: mov    %r8d,0x24(%rsp)
  0x0000000110e21b34: vzeroupper 
  0x0000000110e21b37: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [48]=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@64 (line 2153)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21b3c: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@64 (line 2153)

  0x0000000110e21b3e: mov    $0xffffff4d,%esi
  0x0000000110e21b43: rex.W pushq 0x30(%rsp)
  0x0000000110e21b48: rex.W popq 0x28(%rsp)
  0x0000000110e21b4d: mov    %r10d,0x1c(%rsp)
  0x0000000110e21b52: xchg   %ax,%ax
  0x0000000110e21b54: vzeroupper 
  0x0000000110e21b57: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@116 (line 2161)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21b5c: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@116 (line 2161)

  0x0000000110e21b5e: mov    $0xffffff4d,%esi
  0x0000000110e21b63: mov    (%rsp),%rbp
  0x0000000110e21b67: mov    %r10d,0x1c(%rsp)
  0x0000000110e21b6c: mov    %edx,0x28(%rsp)
  0x0000000110e21b70: mov    %edi,0x2c(%rsp)
  0x0000000110e21b74: vzeroupper 
  0x0000000110e21b77: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [8]=Oop [32]=Oop [48]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@26 (line 1712)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21b7c: ud2                       ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 4027)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21b7e: mov    $0xffffff4d,%esi
  0x0000000110e21b83: mov    %rbx,(%rsp)
  0x0000000110e21b87: mov    %r11d,0xc(%rsp)
  0x0000000110e21b8c: mov    %r11d,0x10(%rsp)
  0x0000000110e21b91: mov    %r10d,0x14(%rsp)
  0x0000000110e21b96: xchg   %ax,%ax
  0x0000000110e21b98: vzeroupper 
  0x0000000110e21b9b: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [20]=NarrowOop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21ba0: ud2                       ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21ba2: mov    $0xfffffff6,%esi
  0x0000000110e21ba7: nop
  0x0000000110e21ba8: vzeroupper 
  0x0000000110e21bab: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@1 (line 2142)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21bb0: ud2                       ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@1 (line 2142)

  0x0000000110e21bb2: mov    $0xfffffff6,%esi
  0x0000000110e21bb7: nop
  0x0000000110e21bb8: vzeroupper 
  0x0000000110e21bbb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@8 (line 2143)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21bc0: ud2                       ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@8 (line 2143)

  0x0000000110e21bc2: mov    $0xfffffff6,%esi
  0x0000000110e21bc7: nop
  0x0000000110e21bc8: vzeroupper 
  0x0000000110e21bcb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@56 (line 2152)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21bd0: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::replace@56 (line 2152)

  0x0000000110e21bd2: mov    $0xfffffff6,%esi
  0x0000000110e21bd7: nop
  0x0000000110e21bd8: vzeroupper 
  0x0000000110e21bdb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21be0: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@9 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21be2: mov    $0xfffffff6,%esi
  0x0000000110e21be7: nop
  0x0000000110e21be8: vzeroupper 
  0x0000000110e21beb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21bf0: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::indexOf@13 (line 1709)
                                                ; - java.lang.String::indexOf@14 (line 1691)
                                                ; - java.lang.String::replace@126 (line 2161)

  0x0000000110e21bf2: mov    $0xfffffff6,%esi
  0x0000000110e21bf7: nop
  0x0000000110e21bf8: vzeroupper 
  0x0000000110e21bfb: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21c00: ud2    
  0x0000000110e21c02: mov    $0xfffffff6,%esi
  0x0000000110e21c07: nop
  0x0000000110e21c08: vzeroupper 
  0x0000000110e21c0b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e21c10: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2156)

  0x0000000110e21c12: mov    %rax,%rsi
  0x0000000110e21c15: jmp    0x0000000110e21c30  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::<init>@12 (line 86)
                                                ; - java.lang.StringBuilder::<init>@2 (line 112)
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e21c17: mov    %rax,%rsi
  0x0000000110e21c1a: jmp    0x0000000110e21c30  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21c1c: jmp    0x0000000110e21c1e  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)

  0x0000000110e21c1e: mov    %rax,%rsi
  0x0000000110e21c21: jmp    0x0000000110e21c30  ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@96 (line 2159)

  0x0000000110e21c23: mov    %rax,%rsi
  0x0000000110e21c26: jmp    0x0000000110e21c30  ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@101 (line 2159)

  0x0000000110e21c28: mov    %rax,%rsi
  0x0000000110e21c2b: jmp    0x0000000110e21c30  ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@142 (line 2162)

  0x0000000110e21c2d: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@81 (line 2156)

  0x0000000110e21c30: vzeroupper 
  0x0000000110e21c33: add    $0x60,%rsp
  0x0000000110e21c37: pop    %rbp
  0x0000000110e21c38: jmpq   0x0000000110dc8700  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.lang.String::replace@145 (line 2162)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e21c3d: hlt    
  0x0000000110e21c3e: hlt    
  0x0000000110e21c3f: hlt    
[Stub Code]
  0x0000000110e21c40: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e21c4a: jmpq   0x0000000110e21c4a  ;   {runtime_call}
  0x0000000110e21c4f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e21c59: jmpq   0x0000000110e21c59  ;   {runtime_call}
  0x0000000110e21c5e: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e21c68: jmpq   0x0000000110e21c68  ;   {runtime_call}
[Exception Handler]
  0x0000000110e21c6d: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e21c72: callq  0x0000000110e21c77
  0x0000000110e21c77: subq   $0x5,(%rsp)
  0x0000000110e21c7c: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e21c81: hlt    
  0x0000000110e21c82: hlt    
  0x0000000110e21c83: hlt    
  0x0000000110e21c84: hlt    
  0x0000000110e21c85: hlt    
  0x0000000110e21c86: hlt    
  0x0000000110e21c87: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop }pc offsets: 1008 1036 
ImmutableOopMap{}pc offsets: 1148 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [48]=Oop }pc offsets: 1860 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [40]=Oop }pc offsets: 1964 
ImmutableOopMap{[0]=NarrowOop }pc offsets: 2044 
ImmutableOopMap{[0]=Oop [12]=NarrowOop }pc offsets: 2108 
ImmutableOopMap{[0]=Oop [16]=Oop [48]=Oop }pc offsets: 2172 
ImmutableOopMap{}pc offsets: 2188 2204 
ImmutableOopMap{rbp=Oop }pc offsets: 2232 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 2316 
ImmutableOopMap{rbp=Oop [0]=Oop [48]=Oop }pc offsets: 2340 
ImmutableOopMap{[0]=Oop [16]=NarrowOop }pc offsets: 2372 
ImmutableOopMap{[0]=Oop [24]=Oop [32]=Oop [48]=Oop }pc offsets: 2404 2432 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=NarrowOop [56]=NarrowOop }pc offsets: 2496 
ImmutableOopMap{[0]=Oop }pc offsets: 2516 
ImmutableOopMap{rbp=Oop [8]=Oop [48]=Oop }pc offsets: 2588 
ImmutableOopMap{[0]=Oop [8]=Oop [32]=Oop [40]=Oop }pc offsets: 2620 
ImmutableOopMap{rbp=Oop [8]=Oop [32]=Oop [48]=Oop }pc offsets: 2652 
ImmutableOopMap{[0]=Oop [20]=NarrowOop }pc offsets: 2688 
ImmutableOopMap{}pc offsets: 2704 2720 2736 2752 2768 2784 2800 Compiled method (c2)    1621  183             FunctionalZipCode::isZipCodeValid (45 bytes)
 total in heap  [0x0000000110e1e590,0x0000000110e1f348] = 3512
 relocation     [0x0000000110e1e708,0x0000000110e1e770] = 104
 main code      [0x0000000110e1e780,0x0000000110e1eb60] = 992
 stub code      [0x0000000110e1eb60,0x0000000110e1eb98] = 56
 oops           [0x0000000110e1eb98,0x0000000110e1ebd8] = 64
 metadata       [0x0000000110e1ebd8,0x0000000110e1ecc8] = 240
 scopes data    [0x0000000110e1ecc8,0x0000000110e1efb0] = 744
 scopes pcs     [0x0000000110e1efb0,0x0000000110e1f2e0] = 816
 dependencies   [0x0000000110e1f2e0,0x0000000110e1f2e8] = 8
 handler table  [0x0000000110e1f2e8,0x0000000110e1f330] = 72
 nul chk table  [0x0000000110e1f330,0x0000000110e1f348] = 24
----------------------------------------------------------------------
FunctionalZipCode.isZipCodeValid(Ljava/lang/String;)Z  [0x0000000110e1e780, 0x0000000110e1eb98]  1048 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f169cc0} 'isZipCodeValid' '(Ljava/lang/String;)Z' in 'FunctionalZipCode'
  # this:     rsi:rsi   = 'FunctionalZipCode'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000110e1e780: mov    0x8(%rsi),%r10d
  0x0000000110e1e784: movabs $0x800000000,%r12
  0x0000000110e1e78e: add    %r12,%r10
  0x0000000110e1e791: xor    %r12,%r12
  0x0000000110e1e794: cmp    %r10,%rax
  0x0000000110e1e797: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1e79d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1e7a0: mov    %eax,-0x14000(%rsp)
  0x0000000110e1e7a7: push   %rbp
  0x0000000110e1e7a8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - FunctionalZipCode::isZipCodeValid@-1 (line 61)

  0x0000000110e1e7ac: mov    %rsi,(%rsp)
  0x0000000110e1e7b0: mov    %rdx,0x8(%rsp)
  0x0000000110e1e7b5: test   %rdx,%rdx
  0x0000000110e1e7b8: je     0x0000000110e1ea3a
  0x0000000110e1e7be: mov    0x118(%r15),%r11
  0x0000000110e1e7c5: mov    %r11,%r10
  0x0000000110e1e7c8: add    $0x10,%r10
  0x0000000110e1e7cc: cmp    0x128(%r15),%r10
  0x0000000110e1e7d3: jae    0x0000000110e1ea98  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110e1e7d9: mov    %r10,0x118(%r15)
  0x0000000110e1e7e0: prefetchnta 0xc0(%r10)
  0x0000000110e1e7e8: mov    $0x34bd8,%r10d     ;   {metadata('java/util/Optional')}
  0x0000000110e1e7ee: movabs $0x800000000,%r12
  0x0000000110e1e7f8: add    %r12,%r10
  0x0000000110e1e7fb: xor    %r12,%r12
  0x0000000110e1e7fe: mov    0xb8(%r10),%r10
  0x0000000110e1e805: mov    %r10,(%r11)
  0x0000000110e1e808: movl   $0x34bd8,0x8(%r11)  ;   {metadata('java/util/Optional')}
  0x0000000110e1e810: mov    0x8(%rsp),%r10
  0x0000000110e1e815: shr    $0x3,%r10
  0x0000000110e1e819: mov    %r10d,0xc(%r11)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110e1e81d: mov    %r11,0x10(%rsp)
  0x0000000110e1e822: mov    0x8(%rsp),%r10
  0x0000000110e1e827: xor    %r11,%r10
  0x0000000110e1e82a: shr    $0x14,%r10
  0x0000000110e1e82e: test   %r10,%r10
  0x0000000110e1e831: je     0x0000000110e1e886
  0x0000000110e1e833: shr    $0x9,%r11
  0x0000000110e1e837: movabs $0x110569000,%rdi
  0x0000000110e1e841: add    %r11,%rdi
  0x0000000110e1e844: cmpb   $0x20,(%rdi)
  0x0000000110e1e847: je     0x0000000110e1e886
  0x0000000110e1e849: mov    0x70(%r15),%r10
  0x0000000110e1e84d: mov    0x80(%r15),%r11
  0x0000000110e1e854: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1e85a: cmpb   $0x0,(%rdi)
  0x0000000110e1e85d: je     0x0000000110e1e886
  0x0000000110e1e85f: movb   $0x0,(%rdi)
  0x0000000110e1e862: test   %r10,%r10
  0x0000000110e1e865: jne    0x0000000110e1e879
  0x0000000110e1e867: mov    %r15,%rsi
  0x0000000110e1e86a: movabs $0x107aec8ce,%r10
  0x0000000110e1e874: callq  *%r10
  0x0000000110e1e877: jmp    0x0000000110e1e886
  0x0000000110e1e879: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e1e87e: add    $0xfffffffffffffff8,%r10
  0x0000000110e1e882: mov    %r10,0x70(%r15)    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::get$Lambda@5
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                ; - java.util.function.Predicate::negate@1 (line 80)
                                                ; - java.util.function.Predicate::not@6 (line 138)
                                                ; - FunctionalZipCode::isZipCodeValid@9 (line 62)

  0x0000000110e1e886: mov    0x10(%rsp),%r10
  0x0000000110e1e88b: mov    0xc(%r10),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e88f: test   %r10d,%r10d
  0x0000000110e1e892: je     0x0000000110e1e940  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e898: mov    $0x65040,%r8d      ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110e1e89e: movabs $0x800000000,%r11
  0x0000000110e1e8a8: add    %r8,%r11
  0x0000000110e1e8ab: mov    0x20(%r11),%r11
  0x0000000110e1e8af: movabs $0x80005f3b8,%rax  ;   {metadata('java/util/function/Predicate')}
  0x0000000110e1e8b9: cmp    %rax,%r11
  0x0000000110e1e8bc: jne    0x0000000110e1e9cf  ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8c2: mov    0x8(%r12,%r10,8),%r11d
  0x0000000110e1e8c7: cmp    $0x1808,%r11d      ;   {metadata('java/lang/String')}
  0x0000000110e1e8ce: jne    0x0000000110e1ead6
  0x0000000110e1e8d4: lea    (%r12,%r10,8),%r11  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8d8: mov    0xc(%r11),%r9d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8dc: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ; implicit exception: dispatches to 0x0000000110e1eb26
  0x0000000110e1e8e1: movsbl 0x14(%r11),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8e6: sar    %cl,%ebp           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8e8: test   %ebp,%ebp
  0x0000000110e1e8ea: je     0x0000000110e1eab4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1e8f0: mov    0x8(%r12,%r10,8),%r8d
  0x0000000110e1e8f5: cmp    $0x1808,%r8d       ;   {metadata('java/lang/String')}
  0x0000000110e1e8fc: jne    0x0000000110e1eafe
  0x0000000110e1e902: lea    (%r12,%r10,8),%r11  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110e1e906: mov    0xc(%r11),%r8d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110e1e90a: mov    0xc(%r12,%r8,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ; implicit exception: dispatches to 0x0000000110e1eb32
  0x0000000110e1e90f: movsbl 0x14(%r11),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110e1e914: sar    %cl,%r9d
  0x0000000110e1e917: cmp    $0x5,%r9d
  0x0000000110e1e91b: jne    0x0000000110e1ea4e  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@34 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110e1e921: mov    %r10,%rdx
  0x0000000110e1e924: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110e1e928: movabs $0x70e723f00,%rsi  ;   {oop(a 'FunctionalZipCode$$Lambda$4'{0x000000070e723f00})}
  0x0000000110e1e932: nop
  0x0000000110e1e933: callq  0x0000000110d8ff00  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)
                                                ;   {optimized virtual_call}
  0x0000000110e1e938: test   %eax,%eax
  0x0000000110e1e93a: je     0x0000000110e1ea26  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get$Lambda@6
                                                ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                                                ; - FunctionalZipCode::isZipCodeValid@33 (line 64)

  0x0000000110e1e940: mov    0x10(%rsp),%r10
  0x0000000110e1e945: mov    0xc(%r10),%r10d
  0x0000000110e1e949: test   %r10d,%r10d
  0x0000000110e1e94c: jne    0x0000000110e1e9a9  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::or@9 (line 314)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1e94e: mov    (%rsp),%r10
  0x0000000110e1e952: mov    0xc(%r10),%r10d
  0x0000000110e1e956: test   %r10d,%r10d
  0x0000000110e1e959: je     0x0000000110e1eac2  ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1e95f: mov    0x8(%rsp),%r10
  0x0000000110e1e964: test   %r10,%r10
  0x0000000110e1e967: je     0x0000000110e1ea75  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@4 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1e96d: mov    %r10,%rcx
  0x0000000110e1e970: movabs $0x70e727118,%rdx  ;   {oop("{}"{0x000000070e727118})}
  0x0000000110e1e97a: movabs $0x70e727100,%rsi  ;   {oop("invalid zip code: {}"{0x000000070e727100})}
  0x0000000110e1e984: data16 xchg %ax,%ax
  0x0000000110e1e987: callq  0x0000000110d8ff00  ; ImmutableOopMap{}
                                                ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=1}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ;   {optimized virtual_call}
  0x0000000110e1e98c: movabs $0x70e725a20,%r10  ;   {oop(a 'java/lang/Class'{0x000000070e725a20} = 'Logger')}
  0x0000000110e1e996: incl   0x70(%r10)         ;*putstatic errors {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@22 (line 8)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1e99a: movabs $0x70e704130,%r10  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1e9a4: mov    %r10,0x10(%rsp)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::<init>@9 (line 107)
                                                ; - java.util.Optional::of@5 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110e1e9a9: mov    0x10(%rsp),%r10
  0x0000000110e1e9ae: mov    0xc(%r10),%r10d
  0x0000000110e1e9b2: shl    $0x3,%r10
  0x0000000110e1e9b6: test   %r10,%r10
  0x0000000110e1e9b9: setne  %al
  0x0000000110e1e9bc: movzbl %al,%eax           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@12 (line 159)
                                                ; - FunctionalZipCode::isZipCodeValid@41 (line 69)

  0x0000000110e1e9bf: add    $0x30,%rsp
  0x0000000110e1e9c3: pop    %rbp
  0x0000000110e1e9c4: mov    0x108(%r15),%r10
  0x0000000110e1e9cb: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1e9ce: retq   
  0x0000000110e1e9cf: movabs $0x800065040,%rsi  ;   {metadata('FunctionalZipCode$$Lambda$1')}
  0x0000000110e1e9d9: push   %rax
  0x0000000110e1e9da: mov    %rax,%rax
  0x0000000110e1e9dd: mov    0x28(%rsi),%rdi
  0x0000000110e1e9e1: mov    (%rdi),%ecx
  0x0000000110e1e9e3: add    $0x8,%rdi
  0x0000000110e1e9e7: test   %rax,%rax
  0x0000000110e1e9ea: repnz scas %es:(%rdi),%rax
  0x0000000110e1e9ed: pop    %rax
  0x0000000110e1e9ee: jne    0x0000000110e1e9f8
  0x0000000110e1e9f4: mov    %rax,0x20(%rsi)
  0x0000000110e1e9f8: je     0x0000000110e1e8c2
  0x0000000110e1e9fe: mov    $0xffffffdf,%esi
  0x0000000110e1ea03: mov    (%rsp),%rbp
  0x0000000110e1ea07: rex.W pushq 0x8(%rsp)
  0x0000000110e1ea0c: rex.W popq (%rsp)
  0x0000000110e1ea10: rex.W pushq 0x10(%rsp)
  0x0000000110e1ea15: rex.W popq 0x8(%rsp)
  0x0000000110e1ea1a: mov    %r10d,0x10(%rsp)
  0x0000000110e1ea1f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }
                                                ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1ea24: ud2                       ;*invokespecial lambda$negate$1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1ea26: movabs $0x70e704130,%r10  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1ea30: mov    %r10,0x10(%rsp)
  0x0000000110e1ea35: jmpq   0x0000000110e1e940
  0x0000000110e1ea3a: movabs $0x70e704130,%r10  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1ea44: mov    %r10,0x10(%rsp)
  0x0000000110e1ea49: jmpq   0x0000000110e1e886
  0x0000000110e1ea4e: movabs $0x70e704130,%r10  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1ea58: mov    0xc(%r10),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::isPresent@1 (line 159)
                                                ; - java.util.Optional::filter@6 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110e1ea5c: test   %r10d,%r10d
  0x0000000110e1ea5f: je     0x0000000110e1ea84  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@9 (line 220)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110e1ea61: movabs $0x70e704130,%r11  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1ea6b: mov    %r11,0x10(%rsp)
  0x0000000110e1ea70: jmpq   0x0000000110e1e921
  0x0000000110e1ea75: movabs $0x70e707070,%rcx  ;   {oop("null"{0x000000070e707070})}
  0x0000000110e1ea7f: jmpq   0x0000000110e1e970
  0x0000000110e1ea84: movabs $0x70e704130,%r10  ;   {oop(a 'java/util/Optional'{0x000000070e704130})}
  0x0000000110e1ea8e: mov    %r10,0x10(%rsp)
  0x0000000110e1ea93: jmpq   0x0000000110e1e940
  0x0000000110e1ea98: movabs $0x800034bd8,%rsi  ;   {metadata('java/util/Optional')}
  0x0000000110e1eaa2: mov    (%rsp),%rbp
  0x0000000110e1eaa6: nop
  0x0000000110e1eaa7: callq  0x0000000110dc6380  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000110e1eaac: mov    %rax,%r11
  0x0000000110e1eaaf: jmpq   0x0000000110e1e810
  0x0000000110e1eab4: mov    $0xffffff4d,%esi
  0x0000000110e1eab9: xchg   %ax,%ax
  0x0000000110e1eabb: callq  0x0000000110d91900  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1eac0: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Strings::isNullOrEmpty@8 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1eac2: mov    $0xfffffff6,%esi
  0x0000000110e1eac7: mov    0x8(%rsp),%rbp
  0x0000000110e1eacc: data16 xchg %ax,%ax
  0x0000000110e1eacf: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1ead4: ud2                       ;*invokevirtual error {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1ead6: mov    $0xffffffde,%esi
  0x0000000110e1eadb: mov    (%rsp),%rbp
  0x0000000110e1eadf: rex.W pushq 0x8(%rsp)
  0x0000000110e1eae4: rex.W popq (%rsp)
  0x0000000110e1eae8: rex.W pushq 0x10(%rsp)
  0x0000000110e1eaed: rex.W popq 0x8(%rsp)
  0x0000000110e1eaf2: mov    %r10d,0x10(%rsp)
  0x0000000110e1eaf7: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1eafc: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@1
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1eafe: mov    $0xffffffde,%esi
  0x0000000110e1eb03: mov    (%rsp),%rbp
  0x0000000110e1eb07: rex.W pushq 0x8(%rsp)
  0x0000000110e1eb0c: rex.W popq (%rsp)
  0x0000000110e1eb10: rex.W pushq 0x10(%rsp)
  0x0000000110e1eb15: rex.W popq 0x8(%rsp)
  0x0000000110e1eb1a: mov    %r10d,0x10(%rsp)
  0x0000000110e1eb1f: callq  0x0000000110d91900  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1eb24: ud2                       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@1
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)

  0x0000000110e1eb26: mov    $0xfffffff6,%esi
  0x0000000110e1eb2b: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1eb30: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - Strings::isNullOrEmpty@5 (line 3)
                                                ; - FunctionalZipCode$$Lambda$1/0x0000000800065040::test@4
                                                ; - java.util.function.Predicate::lambda$negate$1@2 (line 80)
                                                ; - java.util.function.Predicate$$Lambda$2/0x0000000800066440::test@5
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@12 (line 62)

  0x0000000110e1eb32: mov    $0xfffffff6,%esi
  0x0000000110e1eb37: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$0@1 (line 63)
                                                ; - FunctionalZipCode$$Lambda$3/0x0000000800067040::test@4
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1eb3c: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110e1eb3e: mov    %rax,%rsi
  0x0000000110e1eb41: jmp    0x0000000110e1eb4b  ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::filter@19 (line 223)
                                                ; - FunctionalZipCode::isZipCodeValid@28 (line 64)

  0x0000000110e1eb43: mov    %rax,%rsi
  0x0000000110e1eb46: jmp    0x0000000110e1eb4b  ;*invokevirtual replace {reexecute=0 rethrow=0 return_oop=0}
                                                ; - Logger::error@13 (line 5)
                                                ; - FunctionalZipCode::lambda$isZipCodeValid$2@7 (line 66)
                                                ; - FunctionalZipCode$$Lambda$8/0x0000000800070440::get@8
                                                ; - java.util.Optional::or@15 (line 318)
                                                ; - FunctionalZipCode::isZipCodeValid@38 (line 65)

  0x0000000110e1eb48: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Optional::of@0 (line 120)
                                                ; - java.util.Optional::ofNullable@11 (line 133)
                                                ; - FunctionalZipCode::isZipCodeValid@1 (line 61)

  0x0000000110e1eb4b: add    $0x30,%rsp
  0x0000000110e1eb4f: pop    %rbp
  0x0000000110e1eb50: jmpq   0x0000000110dc8700  ;*invokevirtual filter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - FunctionalZipCode::isZipCodeValid@20 (line 63)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000110e1eb55: hlt    
  0x0000000110e1eb56: hlt    
  0x0000000110e1eb57: hlt    
  0x0000000110e1eb58: hlt    
  0x0000000110e1eb59: hlt    
  0x0000000110e1eb5a: hlt    
  0x0000000110e1eb5b: hlt    
  0x0000000110e1eb5c: hlt    
  0x0000000110e1eb5d: hlt    
  0x0000000110e1eb5e: hlt    
  0x0000000110e1eb5f: hlt    
[Stub Code]
  0x0000000110e1eb60: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000110e1eb6a: jmpq   0x0000000110e1eb6a  ;   {runtime_call}
  0x0000000110e1eb6f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110e1eb79: jmpq   0x0000000110e1eb79  ;   {runtime_call}
[Exception Handler]
  0x0000000110e1eb7e: jmpq   0x0000000110dc6680  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000110e1eb83: callq  0x0000000110e1eb88
  0x0000000110e1eb88: subq   $0x5,(%rsp)
  0x0000000110e1eb8d: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1eb92: hlt    
  0x0000000110e1eb93: hlt    
  0x0000000110e1eb94: hlt    
  0x0000000110e1eb95: hlt    
  0x0000000110e1eb96: hlt    
  0x0000000110e1eb97: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }pc offsets: 440 
ImmutableOopMap{}pc offsets: 524 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }pc offsets: 676 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop }pc offsets: 812 
ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }pc offsets: 832 
ImmutableOopMap{rbp=Oop }pc offsets: 852 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }pc offsets: 892 932 
ImmutableOopMap{}pc offsets: 944 956 Compiled method (c2)   25480  184             java.util.ArrayList$Itr::<init> (26 bytes)
 total in heap  [0x0000000110e1c990,0x0000000110e1cdc0] = 1072
 relocation     [0x0000000110e1cb08,0x0000000110e1cb18] = 16
 main code      [0x0000000110e1cb20,0x0000000110e1cc80] = 352
 stub code      [0x0000000110e1cc80,0x0000000110e1cc98] = 24
 metadata       [0x0000000110e1cc98,0x0000000110e1cca8] = 16
 scopes data    [0x0000000110e1cca8,0x0000000110e1ccd8] = 48
 scopes pcs     [0x0000000110e1ccd8,0x0000000110e1cdb8] = 224
 dependencies   [0x0000000110e1cdb8,0x0000000110e1cdc0] = 8
----------------------------------------------------------------------
java/util/ArrayList$Itr.<init>(Ljava/util/ArrayList;)V  [0x0000000110e1cb20, 0x0000000110e1cc98]  376 bytes
[Entry Point]
[Constants]
  # {method} {0x000000011f0066d8} '<init>' '(Ljava/util/ArrayList;)V' in 'java/util/ArrayList$Itr'
  # this:     rsi:rsi   = 'java/util/ArrayList$Itr'
  # parm0:    rdx:rdx   = 'java/util/ArrayList'
  #           [sp+0x20]  (sp of caller)
  0x0000000110e1cb20: mov    0x8(%rsi),%r10d
  0x0000000110e1cb24: movabs $0x800000000,%r12
  0x0000000110e1cb2e: add    %r12,%r10
  0x0000000110e1cb31: xor    %r12,%r12
  0x0000000110e1cb34: cmp    %r10,%rax
  0x0000000110e1cb37: jne    0x0000000110d8fc80  ;   {runtime_call ic_miss_stub}
  0x0000000110e1cb3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110e1cb40: mov    %eax,-0x14000(%rsp)
  0x0000000110e1cb47: push   %rbp
  0x0000000110e1cb48: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ArrayList$Itr::<init>@-1 (line 988)

  0x0000000110e1cb4c: mov    %rdx,%rbx
  0x0000000110e1cb4f: cmpb   $0x0,0x30(%r15)
  0x0000000110e1cb54: jne    0x0000000110e1cc1c
  0x0000000110e1cb5a: mov    %rsi,%rbp
  0x0000000110e1cb5d: mov    %rbp,%r10
  0x0000000110e1cb60: mov    %rbx,%r8
  0x0000000110e1cb63: shr    $0x3,%r8
  0x0000000110e1cb67: mov    %r8d,0x18(%rbp)
  0x0000000110e1cb6b: mov    %rbx,%r11
  0x0000000110e1cb6e: xor    %r10,%r11
  0x0000000110e1cb71: shr    $0x14,%r11
  0x0000000110e1cb75: test   %r11,%r11
  0x0000000110e1cb78: je     0x0000000110e1cbf8
  0x0000000110e1cb7a: test   %rbx,%rbx
  0x0000000110e1cb7d: je     0x0000000110e1cc52
  0x0000000110e1cb83: shr    $0x9,%r10
  0x0000000110e1cb87: movabs $0x110569000,%rdi
  0x0000000110e1cb91: add    %r10,%rdi
  0x0000000110e1cb94: cmpb   $0x20,(%rdi)
  0x0000000110e1cb97: je     0x0000000110e1cbef
  0x0000000110e1cb99: mov    0x70(%r15),%r10
  0x0000000110e1cb9d: mov    0x80(%r15),%r11
  0x0000000110e1cba4: lock addl $0x0,-0x40(%rsp)
  0x0000000110e1cbaa: cmpb   $0x0,(%rdi)
  0x0000000110e1cbad: je     0x0000000110e1cbd6
  0x0000000110e1cbaf: movb   $0x0,(%rdi)
  0x0000000110e1cbb2: test   %r10,%r10
  0x0000000110e1cbb5: je     0x0000000110e1cbc6
  0x0000000110e1cbb7: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000110e1cbbc: add    $0xfffffffffffffff8,%r10
  0x0000000110e1cbc0: mov    %r10,0x70(%r15)
  0x0000000110e1cbc4: jmp    0x0000000110e1cbd6
  0x0000000110e1cbc6: mov    %r15,%rsi
  0x0000000110e1cbc9: movabs $0x107aec8ce,%r10
  0x0000000110e1cbd3: callq  *%r10              ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@2 (line 988)

  0x0000000110e1cbd6: movl   $0xffffffff,0x10(%rbp)  ;*putfield lastRet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@11 (line 984)

  0x0000000110e1cbdd: mov    0x18(%rbp),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@16 (line 985)

  0x0000000110e1cbe1: test   %r10d,%r10d
  0x0000000110e1cbe4: je     0x0000000110e1cc59  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@19 (line 985)

  0x0000000110e1cbe6: mov    %r10,%rbx
  0x0000000110e1cbe9: shl    $0x3,%rbx          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@16 (line 985)

  0x0000000110e1cbed: jmp    0x0000000110e1cc04
  0x0000000110e1cbef: movl   $0xffffffff,0x10(%rbp)
  0x0000000110e1cbf6: jmp    0x0000000110e1cc04
  0x0000000110e1cbf8: movl   $0xffffffff,0x10(%rbp)  ;*putfield lastRet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@11 (line 984)

  0x0000000110e1cbff: test   %rbx,%rbx
  0x0000000110e1cc02: je     0x0000000110e1cc59  ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@16 (line 985)

  0x0000000110e1cc04: mov    0xc(%rbx),%r10d
  0x0000000110e1cc08: mov    %r10d,0x14(%rbp)
  0x0000000110e1cc0c: add    $0x10,%rsp
  0x0000000110e1cc10: pop    %rbp
  0x0000000110e1cc11: mov    0x108(%r15),%r10
  0x0000000110e1cc18: test   %eax,(%r10)        ;   {poll_return}
  0x0000000110e1cc1b: retq   
  0x0000000110e1cc1c: mov    %rsi,%rbp
  0x0000000110e1cc1f: mov    0x18(%rsi),%r10d
  0x0000000110e1cc23: test   %r10d,%r10d
  0x0000000110e1cc26: je     0x0000000110e1cb5d
  0x0000000110e1cc2c: mov    0x38(%r15),%r11
  0x0000000110e1cc30: mov    %r10,%rdi
  0x0000000110e1cc33: shl    $0x3,%rdi
  0x0000000110e1cc37: test   %r11,%r11
  0x0000000110e1cc3a: je     0x0000000110e1cc66
  0x0000000110e1cc3c: mov    0x48(%r15),%r10
  0x0000000110e1cc40: mov    %rdi,-0x8(%r10,%r11,1)
  0x0000000110e1cc45: add    $0xfffffffffffffff8,%r11
  0x0000000110e1cc49: mov    %r11,0x38(%r15)    ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@2 (line 988)

  0x0000000110e1cc4d: jmpq   0x0000000110e1cb5d
  0x0000000110e1cc52: movl   $0xffffffff,0x10(%rbp)  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@19 (line 985)

  0x0000000110e1cc59: mov    $0xfffffff6,%esi
  0x0000000110e1cc5e: nop
  0x0000000110e1cc5f: callq  0x0000000110d91900  ; ImmutableOopMap{}
                                                ;*getfield modCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@19 (line 985)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000110e1cc64: ud2    
  0x0000000110e1cc66: mov    %r15,%rsi
  0x0000000110e1cc69: movabs $0x107aec8aa,%r10
  0x0000000110e1cc73: callq  *%r10
  0x0000000110e1cc76: jmpq   0x0000000110e1cb5d  ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList$Itr::<init>@16 (line 985)

  0x0000000110e1cc7b: hlt    
  0x0000000110e1cc7c: hlt    
  0x0000000110e1cc7d: hlt    
  0x0000000110e1cc7e: hlt    
  0x0000000110e1cc7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110e1cc80: jmpq   0x0000000110dc6680  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110e1cc85: callq  0x0000000110e1cc8a
  0x0000000110e1cc8a: subq   $0x5,(%rsp)
  0x0000000110e1cc8f: jmpq   0x0000000110d91520  ;   {runtime_call DeoptimizationBlob}
  0x0000000110e1cc94: hlt    
  0x0000000110e1cc95: hlt    
  0x0000000110e1cc96: hlt    
  0x0000000110e1cc97: hlt    

ImmutableOopMap{}pc offsets: 324 Test phase
Time elapsed: 2.508 ms valid codes = 6000

